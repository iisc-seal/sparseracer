TranslationUnitDecl 0x62ea340 <<invalid sloc>>
|-TypedefDecl 0x62ea880 <<invalid sloc>> __int128_t '__int128'
|-TypedefDecl 0x62ea8e0 <<invalid sloc>> __uint128_t 'unsigned __int128'
|-TypedefDecl 0x62eaca0 <<invalid sloc>> __builtin_va_list '__va_list_tag [1]'
|-NamespaceDecl 0x62eacf0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:178:1, line:186:1> std
| |-TypedefDecl 0x62ead60 <line:180:3, col:26> size_t 'unsigned long'
| `-TypedefDecl 0x62eadc0 <line:181:3, col:28> ptrdiff_t 'long'
|-NamespaceDecl 0x62eaec0 prev 0x62eacf0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/functexcept.h:42:1, line:104:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x62eaf20 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-FunctionDecl 0x6369710 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/functexcept.h:47:3, line:48:59> __throw_bad_exception 'void (void) __attribute__((noreturn))'
| |-FunctionDecl 0x6369840 <line:51:3, line:52:55> __throw_bad_alloc 'void (void) __attribute__((noreturn))'
| |-FunctionDecl 0x6369970 <line:55:3, line:56:54> __throw_bad_cast 'void (void) __attribute__((noreturn))'
| |-FunctionDecl 0x6369aa0 <line:58:3, line:59:56> __throw_bad_typeid 'void (void) __attribute__((noreturn))'
| |-FunctionDecl 0x6369c80 <line:62:3, line:63:64> __throw_logic_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x6369b80 <col:23, col:33> 'const char *'
| |-FunctionDecl 0x6369dc0 <line:65:3, line:66:65> __throw_domain_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x6369d40 <col:24, col:34> 'const char *'
| |-FunctionDecl 0x6369f00 <line:68:3, line:69:69> __throw_invalid_argument 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x6369e80 <col:28, col:38> 'const char *'
| |-FunctionDecl 0x636a040 <line:71:3, line:72:65> __throw_length_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x6369fc0 <col:24, col:34> 'const char *'
| |-FunctionDecl 0x636a180 <line:74:3, line:75:65> __throw_out_of_range 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636a100 <col:24, col:34> 'const char *'
| |-FunctionDecl 0x636a2c0 <line:77:3, line:78:66> __throw_runtime_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636a240 <col:25, col:35> 'const char *'
| |-FunctionDecl 0x636a400 <line:80:3, line:81:64> __throw_range_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636a380 <col:23, col:33> 'const char *'
| |-FunctionDecl 0x636a540 <line:83:3, line:84:67> __throw_overflow_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636a4c0 <col:26, col:36> 'const char *'
| |-FunctionDecl 0x636ab30 <line:86:3, line:87:68> __throw_underflow_error 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636a600 <col:27, col:37> 'const char *'
| |-FunctionDecl 0x636ac70 <line:90:3, line:91:64> __throw_ios_failure 'void (const char *) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636abf0 <col:23, col:33> 'const char *'
| |-FunctionDecl 0x636ae30 <line:93:3, line:94:57> __throw_system_error 'void (int) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636ad30 <col:24> 'int'
| |-FunctionDecl 0x636af70 <line:96:3, line:97:57> __throw_future_error 'void (int) __attribute__((noreturn))'
| | `-ParmVarDecl 0x636aef0 <col:24> 'int'
| `-FunctionDecl 0x636b040 <line:100:3, line:101:59> __throw_bad_function_call 'void (void) __attribute__((noreturn))'
|-NamespaceDecl 0x636b110 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:68:1, line:76:1> __gnu_cxx
| |-VisibilityAttr 0x636b170 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| `-ClassTemplateDecl 0x636b3a0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:72:3, line:73:11> __normal_iterator
|   |-TemplateTypeParmDecl 0x636b1b0 <line:72:12, col:21> typename _Iterator
|   |-TemplateTypeParmDecl 0x636b250 <col:32, col:41> typename _Container
|   |-CXXRecordDecl 0x636b310 <line:73:5, col:11> class __normal_iterator
|   |-ClassTemplateSpecializationDecl 0x65211a0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:707:3, line:792:5> class __normal_iterator
|   | |-TemplateArgument type 'long long *'
|   | |-TemplateArgument type 'class std::vector<long long, class std::allocator<long long> >'
|   `-ClassTemplateSpecializationDecl 0x6521430 <line:707:3, line:792:5> class __normal_iterator
|     |-TemplateArgument type 'const long long *'
|     |-TemplateArgument type 'class std::vector<long long, class std::allocator<long long> >'
|-NamespaceDecl 0x636b610 prev 0x62eaec0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:78:1, line:422:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x636b670 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-CXXRecordDecl 0x636b6b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:82:3, col:24> struct __true_type definition
| | `-CXXRecordDecl 0x636b7c0 <col:3, col:10> struct __true_type
| |-CXXRecordDecl 0x636b850 <line:83:3, col:25> struct __false_type definition
| | `-CXXRecordDecl 0x636b960 <col:3, col:10> struct __false_type
| |-ClassTemplateDecl 0x6374640 <line:85:3, line:87:36> __truth_type
| | |-NonTypeTemplateParmDecl 0x636ba00 <line:85:12> '_Bool'
| | |-CXXRecordDecl 0x636ba70 <line:86:5, line:87:36> struct __truth_type definition
| | | |-CXXRecordDecl 0x63748e0 <line:86:5, col:12> struct __truth_type
| | | `-TypedefDecl 0x6374980 <line:87:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecialization 0x63749f0 '__truth_type'
| |-ClassTemplateSpecializationDecl 0x63749f0 <line:89:3, line:91:35> struct __truth_type definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x6374c10 <line:90:5, col:12> struct __truth_type
| | `-TypedefDecl 0x6374cb0 <line:91:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x6374e90 <line:95:3, line:100:5> __traitor
| | |-TemplateTypeParmDecl 0x6374d00 <line:95:12, col:18> class _Sp
| | |-TemplateTypeParmDecl 0x6374d70 <col:23, col:29> class _Tp
| | |-CXXRecordDecl 0x6374e00 <line:96:5, line:100:5> struct __traitor definition
| | | |-CXXRecordDecl 0x6375130 <line:96:5, col:12> struct __traitor
| | | |-EnumDecl 0x63751c0 <line:98:7, col:65>
| | | | `-EnumConstantDecl 0x6375440 <col:14, col:63> __value 'enum std::__traitor::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |   `-BinaryOperator 0x6375410 <col:24, col:63> '_Bool' '||'
| | | |     |-CXXUnresolvedConstructExpr 0x6375310 <col:24, col:41> '_Bool'
| | | |     | `-DependentScopeDeclRefExpr 0x63752d0 <col:29, col:34> '<dependent type>' lvalue
| | | |     `-CXXUnresolvedConstructExpr 0x63753e0 <col:46, col:63> '_Bool'
| | | |       `-DependentScopeDeclRefExpr 0x63753a0 <col:51, col:56> '<dependent type>' lvalue
| | | `-TypedefDecl 0x6377d10 <line:99:7, col:54> __type 'typename __truth_type<__value>::__type'
| | |-ClassTemplateSpecializationDecl 0x652cc50 <line:95:3, line:100:5> struct __traitor definition
| | | |-TemplateArgument type 'struct std::__is_arithmetic<int>'
| | | |-TemplateArgument type 'struct std::__is_pointer<int>'
| | | |-CXXRecordDecl 0x652ce70 prev 0x652cc50 <line:96:5, col:12> struct __traitor
| | | |-EnumDecl 0x652cf00 <line:98:7>
| | | | `-EnumConstantDecl 0x652e170 <col:14, col:63> __value 'enum std::__traitor<struct std::__is_arithmetic<int>, struct std::__is_pointer<int> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |   `-ImplicitCastExpr 0x652e1c0 <col:24, col:63> 'unsigned int' <IntegralCast>
| | | |     `-BinaryOperator 0x652e140 <col:24, col:63> '_Bool' '||'
| | | |       |-CXXFunctionalCastExpr 0x652dda8 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
| | | |       | `-ImplicitCastExpr 0x652dd90 <col:29, col:34> '_Bool' <IntegralToBoolean>
| | | |       |   `-DeclRefExpr 0x652dd58 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>' EnumConstant 0x652da90 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |       `-CXXFunctionalCastExpr 0x652e118 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
| | | |         `-ImplicitCastExpr 0x652e100 <col:51, col:56> '_Bool' <IntegralToBoolean>
| | | |           `-DeclRefExpr 0x652e0c8 <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>' EnumConstant 0x652e010 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>'
| | | `-TypedefDecl 0x652e310 <line:99:7, col:54> __type 'typename __truth_type<__value>::__type':'struct std::__true_type'
| | |-ClassTemplateSpecializationDecl 0x652d2d0 <line:95:3, line:100:5> struct __traitor definition
| | | |-TemplateArgument type 'struct std::__is_integer<int>'
| | | |-TemplateArgument type 'struct std::__is_floating<int>'
| | | |-CXXRecordDecl 0x652d4f0 prev 0x652d2d0 <line:96:5, col:12> struct __traitor
| | | |-EnumDecl 0x652d580 <line:98:7>
| | | | `-EnumConstantDecl 0x652da90 <col:14, col:63> __value 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |   `-ImplicitCastExpr 0x652dae0 <col:24, col:63> 'unsigned int' <IntegralCast>
| | | |     `-BinaryOperator 0x652da60 <col:24, col:63> '_Bool' '||'
| | | |       |-CXXFunctionalCastExpr 0x652d6f0 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
| | | |       | `-ImplicitCastExpr 0x652d6d8 <col:29, col:34> '_Bool' <IntegralToBoolean>
| | | |       |   `-DeclRefExpr 0x652d6a0 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:215:7>' EnumConstant 0x6383720 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:215:7>'
| | | |       `-CXXFunctionalCastExpr 0x652da38 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
| | | |         `-ImplicitCastExpr 0x652da20 <col:51, col:56> '_Bool' <IntegralToBoolean>
| | | |           `-DeclRefExpr 0x652d9e8 <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>' EnumConstant 0x652d930 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>'
| | | `-TypedefDecl 0x652dc50 <line:99:7, col:54> __type 'typename __truth_type<__value>::__type':'struct std::__true_type'
| | |-ClassTemplateSpecializationDecl 0x6536450 <line:95:3, line:100:5> struct __traitor definition
| | | |-TemplateArgument type 'struct std::__is_arithmetic<long long>'
| | | |-TemplateArgument type 'struct std::__is_pointer<long long>'
| | | |-CXXRecordDecl 0x6536670 prev 0x6536450 <line:96:5, col:12> struct __traitor
| | | |-EnumDecl 0x6536700 <line:98:7>
| | | | `-EnumConstantDecl 0x6537950 <col:14, col:63> __value 'enum std::__traitor<struct std::__is_arithmetic<long long>, struct std::__is_pointer<long long> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |   `-ImplicitCastExpr 0x65379a0 <col:24, col:63> 'unsigned int' <IntegralCast>
| | | |     `-BinaryOperator 0x6537920 <col:24, col:63> '_Bool' '||'
| | | |       |-CXXFunctionalCastExpr 0x6537588 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
| | | |       | `-ImplicitCastExpr 0x6537570 <col:29, col:34> '_Bool' <IntegralToBoolean>
| | | |       |   `-DeclRefExpr 0x6537538 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<long long>, struct std::__is_floating<long long> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>' EnumConstant 0x6537290 '__value' 'enum std::__traitor<struct std::__is_integer<long long>, struct std::__is_floating<long long> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| | | |       `-CXXFunctionalCastExpr 0x65378f8 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
| | | |         `-ImplicitCastExpr 0x65378e0 <col:51, col:56> '_Bool' <IntegralToBoolean>
| | | |           `-DeclRefExpr 0x65378a8 <col:51, col:56> 'enum std::__is_pointer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>' EnumConstant 0x65377f0 '__value' 'enum std::__is_pointer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>'
| | | `-TypedefDecl 0x6537af0 <line:99:7, col:54> __type 'typename __truth_type<__value>::__type':'struct std::__true_type'
| | `-ClassTemplateSpecializationDecl 0x6536ad0 <line:95:3, line:100:5> struct __traitor definition
| |   |-TemplateArgument type 'struct std::__is_integer<long long>'
| |   |-TemplateArgument type 'struct std::__is_floating<long long>'
| |   |-CXXRecordDecl 0x6536cf0 prev 0x6536ad0 <line:96:5, col:12> struct __traitor
| |   |-EnumDecl 0x6536d80 <line:98:7>
| |   | `-EnumConstantDecl 0x6537290 <col:14, col:63> __value 'enum std::__traitor<struct std::__is_integer<long long>, struct std::__is_floating<long long> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:98:7>'
| |   |   `-ImplicitCastExpr 0x65372e0 <col:24, col:63> 'unsigned int' <IntegralCast>
| |   |     `-BinaryOperator 0x6537260 <col:24, col:63> '_Bool' '||'
| |   |       |-CXXFunctionalCastExpr 0x6536ef0 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
| |   |       | `-ImplicitCastExpr 0x6536ed8 <col:29, col:34> '_Bool' <IntegralToBoolean>
| |   |       |   `-DeclRefExpr 0x6536ea0 <col:29, col:34> 'enum std::__is_integer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:243:7>' EnumConstant 0x63873e0 '__value' 'enum std::__is_integer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:243:7>'
| |   |       `-CXXFunctionalCastExpr 0x6537238 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
| |   |         `-ImplicitCastExpr 0x6537220 <col:51, col:56> '_Bool' <IntegralToBoolean>
| |   |           `-DeclRefExpr 0x65371e8 <col:51, col:56> 'enum std::__is_floating<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>' EnumConstant 0x6537130 '__value' 'enum std::__is_floating<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>'
| |   `-TypedefDecl 0x6537430 <line:99:7, col:54> __type 'typename __truth_type<__value>::__type':'struct std::__true_type'
| |-ClassTemplateDecl 0x6377ef0 <line:103:3, line:108:5> __are_same
| | |-TemplateTypeParmDecl 0x6377d60 <line:103:12> typename
| | |-TemplateTypeParmDecl 0x6377dd0 <col:22> typename
| | `-CXXRecordDecl 0x6377e60 <line:104:5, line:108:5> struct __are_same definition
| |   |-CXXRecordDecl 0x6378190 <line:104:5, col:12> struct __are_same
| |   |-EnumDecl 0x6378220 <line:106:7, col:26>
| |   | `-EnumConstantDecl 0x63782f0 <col:14, col:24> __value 'enum std::__are_same::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:106:7>'
| |   |   `-IntegerLiteral 0x63782d0 <col:24> 'int' 0
| |   `-TypedefDecl 0x6378350 <line:107:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplatePartialSpecializationDecl 0x6378570 <line:110:3, line:115:5> struct __are_same definition
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x63783a0 <line:110:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63787d0 <line:111:5, col:12> struct __are_same
| | |-EnumDecl 0x6378860 <line:113:7, col:26>
| | | `-EnumConstantDecl 0x6378930 <col:14, col:24> __value 'enum std::__are_same<type-parameter-0-0, type-parameter-0-0>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:113:7>'
| | |   `-IntegerLiteral 0x6378910 <col:24> 'int' 1
| | `-TypedefDecl 0x6378990 <line:114:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x6378af0 <line:118:3, line:123:5> __is_void
| | |-TemplateTypeParmDecl 0x63789e0 <line:118:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6378a60 <line:119:5, line:123:5> struct __is_void definition
| | | |-CXXRecordDecl 0x637aa40 <line:119:5, col:12> struct __is_void
| | | |-EnumDecl 0x637aad0 <line:121:7, col:26>
| | | | `-EnumConstantDecl 0x637aba0 <col:14, col:24> __value 'enum std::__is_void::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:121:7>'
| | | |   `-IntegerLiteral 0x637ab80 <col:24> 'int' 0
| | | `-TypedefDecl 0x637ac00 <line:122:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecialization 0x637ac70 '__is_void'
| |-ClassTemplateSpecializationDecl 0x637ac70 <line:125:3, line:130:5> struct __is_void definition
| | |-TemplateArgument type 'void'
| | |-CXXRecordDecl 0x637ae90 <line:126:5, col:12> struct __is_void
| | |-EnumDecl 0x637af20 <line:128:7, col:26>
| | | `-EnumConstantDecl 0x637aff0 <col:14, col:24> __value 'enum std::__is_void<void>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:128:7>'
| | |   `-ImplicitCastExpr 0x637b040 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x637afd0 <col:24> 'int' 1
| | `-TypedefDecl 0x637b070 <line:129:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x637b1d0 <line:135:3, line:140:5> __is_integer
| | |-TemplateTypeParmDecl 0x637b0c0 <line:135:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x637b140 <line:136:5, line:140:5> struct __is_integer definition
| | | |-CXXRecordDecl 0x637b450 <line:136:5, col:12> struct __is_integer
| | | |-EnumDecl 0x637b4e0 <line:138:7, col:26>
| | | | `-EnumConstantDecl 0x637b5b0 <col:14, col:24> __value 'enum std::__is_integer::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:138:7>'
| | | |   `-IntegerLiteral 0x637b590 <col:24> 'int' 0
| | | `-TypedefDecl 0x637b610 <line:139:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecialization 0x637b680 '__is_integer'
| | |-ClassTemplateSpecialization 0x637d9d0 '__is_integer'
| | |-ClassTemplateSpecialization 0x637de40 '__is_integer'
| | |-ClassTemplateSpecialization 0x637e2b0 '__is_integer'
| | |-ClassTemplateSpecialization 0x6380b10 '__is_integer'
| | |-ClassTemplateSpecialization 0x6380f80 '__is_integer'
| | |-ClassTemplateSpecialization 0x63813f0 '__is_integer'
| | |-ClassTemplateSpecialization 0x6381860 '__is_integer'
| | |-ClassTemplateSpecialization 0x6383810 '__is_integer'
| | |-ClassTemplateSpecialization 0x6383c80 '__is_integer'
| | |-ClassTemplateSpecialization 0x63840f0 '__is_integer'
| | |-ClassTemplateSpecialization 0x6387060 '__is_integer'
| | |-ClassTemplateSpecialization 0x63874d0 '__is_integer'
| | |-ClassTemplateSpecializationDecl 0x63a86d0 <line:135:3, line:140:5> struct __is_integer definition
| | | |-TemplateArgument type 'long double'
| | | |-CXXRecordDecl 0x63a88e0 prev 0x63a86d0 <line:136:5, col:12> struct __is_integer
| | | |-EnumDecl 0x63a8970 <line:138:7>
| | | | `-EnumConstantDecl 0x63a8a30 <col:14, col:24> __value 'enum std::__is_integer<long double>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:138:7>'
| | | |   `-ImplicitCastExpr 0x63a8a80 <col:24> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x637b590 <col:24> 'int' 0
| | | `-TypedefDecl 0x63a8aa0 <line:139:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecializationDecl 0x63a8ec0 <line:135:3, line:140:5> struct __is_integer definition
| | | |-TemplateArgument type 'double'
| | | |-CXXRecordDecl 0x63a90d0 prev 0x63a8ec0 <line:136:5, col:12> struct __is_integer
| | | |-EnumDecl 0x63a9160 <line:138:7>
| | | | `-EnumConstantDecl 0x63a9220 <col:14, col:24> __value 'enum std::__is_integer<double>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:138:7>'
| | | |   `-ImplicitCastExpr 0x63a9270 <col:24> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x637b590 <col:24> 'int' 0
| | | `-TypedefDecl 0x63a9290 <line:139:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecializationDecl 0x63aa020 <line:135:3, line:140:5> struct __is_integer definition
| |   |-TemplateArgument type 'float'
| |   |-CXXRecordDecl 0x63aa230 prev 0x63aa020 <line:136:5, col:12> struct __is_integer
| |   |-EnumDecl 0x63aa2c0 <line:138:7>
| |   | `-EnumConstantDecl 0x63aa380 <col:14, col:24> __value 'enum std::__is_integer<float>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:138:7>'
| |   |   `-ImplicitCastExpr 0x63aa3d0 <col:24> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x637b590 <col:24> 'int' 0
| |   `-TypedefDecl 0x63aa3f0 <line:139:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplateSpecializationDecl 0x637b680 <line:145:3, line:150:5> struct __is_integer definition
| | |-TemplateArgument type '_Bool'
| | |-CXXRecordDecl 0x637d780 <line:146:5, col:12> struct __is_integer
| | |-EnumDecl 0x637d810 <line:148:7, col:26>
| | | `-EnumConstantDecl 0x637d8e0 <col:14, col:24> __value 'enum std::__is_integer<_Bool>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:148:7>'
| | |   `-ImplicitCastExpr 0x637d930 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x637d8c0 <col:24> 'int' 1
| | `-TypedefDecl 0x637d960 <line:149:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x637d9d0 <line:152:3, line:157:5> struct __is_integer definition
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x637dbf0 <line:153:5, col:12> struct __is_integer
| | |-EnumDecl 0x637dc80 <line:155:7, col:26>
| | | `-EnumConstantDecl 0x637dd50 <col:14, col:24> __value 'enum std::__is_integer<char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:155:7>'
| | |   `-ImplicitCastExpr 0x637dda0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x637dd30 <col:24> 'int' 1
| | `-TypedefDecl 0x637ddd0 <line:156:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x637de40 <line:159:3, line:164:5> struct __is_integer definition
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0x637e060 <line:160:5, col:12> struct __is_integer
| | |-EnumDecl 0x637e0f0 <line:162:7, col:26>
| | | `-EnumConstantDecl 0x637e1c0 <col:14, col:24> __value 'enum std::__is_integer<signed char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:162:7>'
| | |   `-ImplicitCastExpr 0x637e210 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x637e1a0 <col:24> 'int' 1
| | `-TypedefDecl 0x637e240 <line:163:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x637e2b0 <line:166:3, line:171:5> struct __is_integer definition
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0x637e4d0 <line:167:5, col:12> struct __is_integer
| | |-EnumDecl 0x637e560 <line:169:7, col:26>
| | | `-EnumConstantDecl 0x637e630 <col:14, col:24> __value 'enum std::__is_integer<unsigned char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:169:7>'
| | |   `-ImplicitCastExpr 0x637e680 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x637e610 <col:24> 'int' 1
| | `-TypedefDecl 0x637e6b0 <line:170:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6380b10 <line:174:3, line:179:5> struct __is_integer definition
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0x6380d30 <line:175:5, col:12> struct __is_integer
| | |-EnumDecl 0x6380dc0 <line:177:7, col:26>
| | | `-EnumConstantDecl 0x6380e90 <col:14, col:24> __value 'enum std::__is_integer<wchar_t>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:177:7>'
| | |   `-ImplicitCastExpr 0x6380ee0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6380e70 <col:24> 'int' 1
| | `-TypedefDecl 0x6380f10 <line:178:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6380f80 <line:198:3, line:203:5> struct __is_integer definition
| | |-TemplateArgument type 'short'
| | |-CXXRecordDecl 0x63811a0 <line:199:5, col:12> struct __is_integer
| | |-EnumDecl 0x6381230 <line:201:7, col:26>
| | | `-EnumConstantDecl 0x6381300 <col:14, col:24> __value 'enum std::__is_integer<short>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:201:7>'
| | |   `-ImplicitCastExpr 0x6381350 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x63812e0 <col:24> 'int' 1
| | `-TypedefDecl 0x6381380 <line:202:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x63813f0 <line:205:3, line:210:5> struct __is_integer definition
| | |-TemplateArgument type 'unsigned short'
| | |-CXXRecordDecl 0x6381610 <line:206:5, col:12> struct __is_integer
| | |-EnumDecl 0x63816a0 <line:208:7, col:26>
| | | `-EnumConstantDecl 0x6381770 <col:14, col:24> __value 'enum std::__is_integer<unsigned short>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:208:7>'
| | |   `-ImplicitCastExpr 0x63817c0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6381750 <col:24> 'int' 1
| | `-TypedefDecl 0x63817f0 <line:209:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6381860 <line:212:3, line:217:5> struct __is_integer definition
| | |-TemplateArgument type 'int'
| | |-CXXRecordDecl 0x63835c0 <line:213:5, col:12> struct __is_integer
| | |-EnumDecl 0x6383650 <line:215:7, col:26>
| | | `-EnumConstantDecl 0x6383720 <col:14, col:24> __value 'enum std::__is_integer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:215:7>'
| | |   `-ImplicitCastExpr 0x6383770 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6383700 <col:24> 'int' 1
| | `-TypedefDecl 0x63837a0 <line:216:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6383810 <line:219:3, line:224:5> struct __is_integer definition
| | |-TemplateArgument type 'unsigned int'
| | |-CXXRecordDecl 0x6383a30 <line:220:5, col:12> struct __is_integer
| | |-EnumDecl 0x6383ac0 <line:222:7, col:26>
| | | `-EnumConstantDecl 0x6383b90 <col:14, col:24> __value 'enum std::__is_integer<unsigned int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:222:7>'
| | |   `-ImplicitCastExpr 0x6383be0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6383b70 <col:24> 'int' 1
| | `-TypedefDecl 0x6383c10 <line:223:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6383c80 <line:226:3, line:231:5> struct __is_integer definition
| | |-TemplateArgument type 'long'
| | |-CXXRecordDecl 0x6383ea0 <line:227:5, col:12> struct __is_integer
| | |-EnumDecl 0x6383f30 <line:229:7, col:26>
| | | `-EnumConstantDecl 0x6384000 <col:14, col:24> __value 'enum std::__is_integer<long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:229:7>'
| | |   `-ImplicitCastExpr 0x6384050 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6383fe0 <col:24> 'int' 1
| | `-TypedefDecl 0x6384080 <line:230:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x63840f0 <line:233:3, line:238:5> struct __is_integer definition
| | |-TemplateArgument type 'unsigned long'
| | |-CXXRecordDecl 0x6384310 <line:234:5, col:12> struct __is_integer
| | |-EnumDecl 0x63843a0 <line:236:7, col:26>
| | | `-EnumConstantDecl 0x6384470 <col:14, col:24> __value 'enum std::__is_integer<unsigned long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:236:7>'
| | |   `-ImplicitCastExpr 0x63844c0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6384450 <col:24> 'int' 1
| | `-TypedefDecl 0x63844f0 <line:237:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6387060 <line:240:3, line:245:5> struct __is_integer definition
| | |-TemplateArgument type 'long long'
| | |-CXXRecordDecl 0x6387280 <line:241:5, col:12> struct __is_integer
| | |-EnumDecl 0x6387310 <line:243:7, col:26>
| | | `-EnumConstantDecl 0x63873e0 <col:14, col:24> __value 'enum std::__is_integer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:243:7>'
| | |   `-ImplicitCastExpr 0x6387430 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x63873c0 <col:24> 'int' 1
| | `-TypedefDecl 0x6387460 <line:244:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x63874d0 <line:247:3, line:252:5> struct __is_integer definition
| | |-TemplateArgument type 'unsigned long long'
| | |-CXXRecordDecl 0x63876f0 <line:248:5, col:12> struct __is_integer
| | |-EnumDecl 0x6387780 <line:250:7, col:26>
| | | `-EnumConstantDecl 0x6387850 <col:14, col:24> __value 'enum std::__is_integer<unsigned long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:250:7>'
| | |   `-ImplicitCastExpr 0x63878a0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6387830 <col:24> 'int' 1
| | `-TypedefDecl 0x63878d0 <line:251:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x6387a30 <line:257:3, line:262:5> __is_floating
| | |-TemplateTypeParmDecl 0x6387920 <line:257:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63879a0 <line:258:5, line:262:5> struct __is_floating definition
| | | |-CXXRecordDecl 0x6387cb0 <line:258:5, col:12> struct __is_floating
| | | |-EnumDecl 0x6387d40 <line:260:7, col:26>
| | | | `-EnumConstantDecl 0x6387e10 <col:14, col:24> __value 'enum std::__is_floating::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>'
| | | |   `-IntegerLiteral 0x6387df0 <col:24> 'int' 0
| | | `-TypedefDecl 0x6387e70 <line:261:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecialization 0x6387ee0 '__is_floating'
| | |-ClassTemplateSpecialization 0x638a030 '__is_floating'
| | |-ClassTemplateSpecialization 0x638a4a0 '__is_floating'
| | |-ClassTemplateSpecializationDecl 0x652d150 <line:257:3, line:262:5> struct __is_floating definition
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x652d7e0 prev 0x652d150 <line:258:5, col:12> struct __is_floating
| | | |-EnumDecl 0x652d870 <line:260:7>
| | | | `-EnumConstantDecl 0x652d930 <col:14, col:24> __value 'enum std::__is_floating<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>'
| | | |   `-ImplicitCastExpr 0x652d980 <col:24> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x6387df0 <col:24> 'int' 0
| | | `-TypedefDecl 0x652d9a0 <line:261:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecializationDecl 0x6536950 <line:257:3, line:262:5> struct __is_floating definition
| |   |-TemplateArgument type 'long long'
| |   |-CXXRecordDecl 0x6536fe0 prev 0x6536950 <line:258:5, col:12> struct __is_floating
| |   |-EnumDecl 0x6537070 <line:260:7>
| |   | `-EnumConstantDecl 0x6537130 <col:14, col:24> __value 'enum std::__is_floating<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:260:7>'
| |   |   `-ImplicitCastExpr 0x6537180 <col:24> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x6387df0 <col:24> 'int' 0
| |   `-TypedefDecl 0x65371a0 <line:261:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplateSpecializationDecl 0x6387ee0 <line:265:3, line:270:5> struct __is_floating definition
| | |-TemplateArgument type 'float'
| | |-CXXRecordDecl 0x6389de0 <line:266:5, col:12> struct __is_floating
| | |-EnumDecl 0x6389e70 <line:268:7, col:26>
| | | `-EnumConstantDecl 0x6389f40 <col:14, col:24> __value 'enum std::__is_floating<float>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:268:7>'
| | |   `-ImplicitCastExpr 0x6389f90 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6389f20 <col:24> 'int' 1
| | `-TypedefDecl 0x6389fc0 <line:269:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x638a030 <line:272:3, line:277:5> struct __is_floating definition
| | |-TemplateArgument type 'double'
| | |-CXXRecordDecl 0x638a250 <line:273:5, col:12> struct __is_floating
| | |-EnumDecl 0x638a2e0 <line:275:7, col:26>
| | | `-EnumConstantDecl 0x638a3b0 <col:14, col:24> __value 'enum std::__is_floating<double>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:275:7>'
| | |   `-ImplicitCastExpr 0x638a400 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x638a390 <col:24> 'int' 1
| | `-TypedefDecl 0x638a430 <line:276:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x638a4a0 <line:279:3, line:284:5> struct __is_floating definition
| | |-TemplateArgument type 'long double'
| | |-CXXRecordDecl 0x638a6c0 <line:280:5, col:12> struct __is_floating
| | |-EnumDecl 0x638a750 <line:282:7, col:26>
| | | `-EnumConstantDecl 0x638a820 <col:14, col:24> __value 'enum std::__is_floating<long double>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:282:7>'
| | |   `-ImplicitCastExpr 0x638a870 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x638a800 <col:24> 'int' 1
| | `-TypedefDecl 0x638a8a0 <line:283:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x638aa00 <line:289:3, line:294:5> __is_pointer
| | |-TemplateTypeParmDecl 0x638a8f0 <line:289:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x638a970 <line:290:5, line:294:5> struct __is_pointer definition
| | | |-CXXRecordDecl 0x638cbc0 <line:290:5, col:12> struct __is_pointer
| | | |-EnumDecl 0x638cc50 <line:292:7, col:26>
| | | | `-EnumConstantDecl 0x638cd20 <col:14, col:24> __value 'enum std::__is_pointer::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>'
| | | |   `-IntegerLiteral 0x638cd00 <col:24> 'int' 0
| | | `-TypedefDecl 0x638cd80 <line:293:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecializationDecl 0x652cad0 <line:289:3, line:294:5> struct __is_pointer definition
| | | |-TemplateArgument type 'int'
| | | |-CXXRecordDecl 0x652dec0 prev 0x652cad0 <line:290:5, col:12> struct __is_pointer
| | | |-EnumDecl 0x652df50 <line:292:7>
| | | | `-EnumConstantDecl 0x652e010 <col:14, col:24> __value 'enum std::__is_pointer<int>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>'
| | | |   `-ImplicitCastExpr 0x652e060 <col:24> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x638cd00 <col:24> 'int' 0
| | | `-TypedefDecl 0x652e080 <line:293:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecializationDecl 0x65362d0 <line:289:3, line:294:5> struct __is_pointer definition
| |   |-TemplateArgument type 'long long'
| |   |-CXXRecordDecl 0x65376a0 prev 0x65362d0 <line:290:5, col:12> struct __is_pointer
| |   |-EnumDecl 0x6537730 <line:292:7>
| |   | `-EnumConstantDecl 0x65377f0 <col:14, col:24> __value 'enum std::__is_pointer<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:292:7>'
| |   |   `-ImplicitCastExpr 0x6537840 <col:24> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x638cd00 <col:24> 'int' 0
| |   `-TypedefDecl 0x6537860 <line:293:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplatePartialSpecializationDecl 0x638cfa0 <line:296:3, line:301:5> struct __is_pointer definition
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x638cdd0 <line:296:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x638d1b0 <line:297:5, col:12> struct __is_pointer
| | |-EnumDecl 0x638d240 <line:299:7, col:26>
| | | `-EnumConstantDecl 0x638d310 <col:14, col:24> __value 'enum std::__is_pointer<type-parameter-0-0 *>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:299:7>'
| | |   `-IntegerLiteral 0x638d2f0 <col:24> 'int' 1
| | `-TypedefDecl 0x638d370 <line:300:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x638d4d0 <line:306:3, line:311:5> __is_normal_iterator
| | |-TemplateTypeParmDecl 0x638d3c0 <line:306:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x638d440 <line:307:5, line:311:5> struct __is_normal_iterator definition
| | | |-CXXRecordDecl 0x638d750 <line:307:5, col:12> struct __is_normal_iterator
| | | |-EnumDecl 0x638d7e0 <line:309:7, col:26>
| | | | `-EnumConstantDecl 0x638d8b0 <col:14, col:24> __value 'enum std::__is_normal_iterator::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:309:7>'
| | | |   `-IntegerLiteral 0x638d890 <col:24> 'int' 0
| | | `-TypedefDecl 0x638d910 <line:310:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecializationDecl 0x652b610 <line:306:3, line:311:5> struct __is_normal_iterator definition
| | | |-TemplateArgument type 'unsigned long *'
| | | |-CXXRecordDecl 0x652b840 prev 0x652b610 <line:307:5, col:12> struct __is_normal_iterator
| | | |-EnumDecl 0x652b8d0 <line:309:7>
| | | | `-EnumConstantDecl 0x652b990 <col:14, col:24> __value 'enum std::__is_normal_iterator<unsigned long *>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:309:7>'
| | | |   `-ImplicitCastExpr 0x652b9e0 <col:24> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x638d890 <col:24> 'int' 0
| | | `-TypedefDecl 0x652ba00 <line:310:7, col:28> __type 'struct std::__false_type'
| | `-ClassTemplateSpecializationDecl 0x6534f90 <line:306:3, line:311:5> struct __is_normal_iterator definition
| |   |-TemplateArgument type 'long long *'
| |   |-CXXRecordDecl 0x65351c0 prev 0x6534f90 <line:307:5, col:12> struct __is_normal_iterator
| |   |-EnumDecl 0x6535250 <line:309:7>
| |   | `-EnumConstantDecl 0x6535310 <col:14, col:24> __value 'enum std::__is_normal_iterator<long long *>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:309:7>'
| |   |   `-ImplicitCastExpr 0x6535360 <col:24> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x638d890 <col:24> 'int' 0
| |   `-TypedefDecl 0x6535380 <line:310:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplatePartialSpecializationDecl 0x638fdb0 <line:313:3, line:319:5> struct __is_normal_iterator definition
| | |-TemplateArgument type '__normal_iterator<type-parameter-0-0, type-parameter-0-1>'
| | |-TemplateTypeParmDecl 0x638d960 <line:313:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x638d9d0 <col:32, col:41> typename _Container
| | |-CXXRecordDecl 0x638ffc0 <line:314:5, col:12> struct __is_normal_iterator
| | |-EnumDecl 0x6390050 <line:317:7, col:26>
| | | `-EnumConstantDecl 0x6390120 <col:14, col:24> __value 'enum std::__is_normal_iterator<__normal_iterator<type-parameter-0-0, type-parameter-0-1> >::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:317:7>'
| | |   `-IntegerLiteral 0x6390100 <col:24> 'int' 1
| | `-TypedefDecl 0x6390180 <line:318:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x63902e0 <line:324:3, line:327:7> __is_arithmetic
| | |-TemplateTypeParmDecl 0x63901d0 <line:324:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6390250 <line:325:5, line:327:7> struct __is_arithmetic definition
| | | |-public '__traitor<__is_integer<_Tp>, __is_floating<_Tp> >'
| | | `-CXXRecordDecl 0x6390920 <line:325:5, col:12> struct __is_arithmetic
| | |-ClassTemplateSpecializationDecl 0x652c940 <line:324:3, line:327:7> struct __is_arithmetic definition
| | | |-public '__traitor<__is_integer<int>, __is_floating<int> >':'struct std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >'
| | | |-TemplateArgument type 'int'
| | | `-CXXRecordDecl 0x652dcd0 prev 0x652c940 <line:325:5, col:12> struct __is_arithmetic
| | `-ClassTemplateSpecializationDecl 0x6536140 <line:324:3, line:327:7> struct __is_arithmetic definition
| |   |-public '__traitor<__is_integer<long long>, __is_floating<long long> >':'struct std::__traitor<struct std::__is_integer<long long>, struct std::__is_floating<long long> >'
| |   |-TemplateArgument type 'long long'
| |   `-CXXRecordDecl 0x65374b0 prev 0x6536140 <line:325:5, col:12> struct __is_arithmetic
| |-ClassTemplateDecl 0x6390ac0 <line:332:3, line:335:7> __is_fundamental
| | |-TemplateTypeParmDecl 0x63909b0 <line:332:12, col:21> typename _Tp
| | `-CXXRecordDecl 0x6390a30 <line:333:5, line:335:7> struct __is_fundamental definition
| |   |-public '__traitor<__is_void<_Tp>, __is_arithmetic<_Tp> >'
| |   `-CXXRecordDecl 0x6392780 <line:333:5, col:12> struct __is_fundamental
| |-ClassTemplateDecl 0x6392920 <line:340:3, line:343:7> __is_scalar
| | |-TemplateTypeParmDecl 0x6392810 <line:340:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6392890 <line:341:5, line:343:7> struct __is_scalar definition
| | | |-public '__traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >'
| | | `-CXXRecordDecl 0x6392f60 <line:341:5, col:12> struct __is_scalar
| | |-ClassTemplateSpecializationDecl 0x652c700 <line:340:3, line:343:7> struct __is_scalar definition
| | | |-public '__traitor<__is_arithmetic<int>, __is_pointer<int> >':'struct std::__traitor<struct std::__is_arithmetic<int>, struct std::__is_pointer<int> >'
| | | |-TemplateArgument type 'int'
| | | `-CXXRecordDecl 0x652e390 prev 0x652c700 <line:341:5, col:12> struct __is_scalar
| | `-ClassTemplateSpecializationDecl 0x6535f00 <line:340:3, line:343:7> struct __is_scalar definition
| |   |-public '__traitor<__is_arithmetic<long long>, __is_pointer<long long> >':'struct std::__traitor<struct std::__is_arithmetic<long long>, struct std::__is_pointer<long long> >'
| |   |-TemplateArgument type 'long long'
| |   `-CXXRecordDecl 0x6537b70 prev 0x6535f00 <line:341:5, col:12> struct __is_scalar
| |-ClassTemplateDecl 0x6393100 <line:348:3, line:353:5> __is_char
| | |-TemplateTypeParmDecl 0x6392ff0 <line:348:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6393070 <line:349:5, line:353:5> struct __is_char definition
| | | |-CXXRecordDecl 0x6393cd0 <line:349:5, col:12> struct __is_char
| | | |-EnumDecl 0x6393d60 <line:351:7, col:26>
| | | | `-EnumConstantDecl 0x6393e30 <col:14, col:24> __value 'enum std::__is_char::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:351:7>'
| | | |   `-IntegerLiteral 0x6393e10 <col:24> 'int' 0
| | | `-TypedefDecl 0x6393e90 <line:352:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecialization 0x6393f00 '__is_char'
| | `-ClassTemplateSpecialization 0x6394370 '__is_char'
| |-ClassTemplateSpecializationDecl 0x6393f00 <line:355:3, line:360:5> struct __is_char definition
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x6394120 <line:356:5, col:12> struct __is_char
| | |-EnumDecl 0x63941b0 <line:358:7, col:26>
| | | `-EnumConstantDecl 0x6394280 <col:14, col:24> __value 'enum std::__is_char<char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:358:7>'
| | |   `-ImplicitCastExpr 0x63942d0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6394260 <col:24> 'int' 1
| | `-TypedefDecl 0x6394300 <line:359:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6394370 <line:363:3, line:368:5> struct __is_char definition
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0x6394590 <line:364:5, col:12> struct __is_char
| | |-EnumDecl 0x6394620 <line:366:7, col:26>
| | | `-EnumConstantDecl 0x63946f0 <col:14, col:24> __value 'enum std::__is_char<wchar_t>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:366:7>'
| | |   `-ImplicitCastExpr 0x6394740 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x63946d0 <col:24> 'int' 1
| | `-TypedefDecl 0x6394770 <line:367:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateDecl 0x63948d0 <line:371:3, line:376:5> __is_byte
| | |-TemplateTypeParmDecl 0x63947c0 <line:371:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6394840 <line:372:5, line:376:5> struct __is_byte definition
| | | |-CXXRecordDecl 0x63968f0 <line:372:5, col:12> struct __is_byte
| | | |-EnumDecl 0x6396980 <line:374:7, col:26>
| | | | `-EnumConstantDecl 0x6396a50 <col:14, col:24> __value 'enum std::__is_byte::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:374:7>'
| | | |   `-IntegerLiteral 0x6396a30 <col:24> 'int' 0
| | | `-TypedefDecl 0x6396ab0 <line:375:7, col:28> __type 'struct std::__false_type'
| | |-ClassTemplateSpecialization 0x6396b20 '__is_byte'
| | |-ClassTemplateSpecialization 0x6396f90 '__is_byte'
| | |-ClassTemplateSpecialization 0x6397400 '__is_byte'
| | `-ClassTemplateSpecializationDecl 0x653b060 <line:371:3, line:376:5> struct __is_byte definition
| |   |-TemplateArgument type 'long long'
| |   |-CXXRecordDecl 0x653b260 prev 0x653b060 <line:372:5, col:12> struct __is_byte
| |   |-EnumDecl 0x653b2f0 <line:374:7>
| |   | `-EnumConstantDecl 0x653b3b0 <col:14, col:24> __value 'enum std::__is_byte<long long>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:374:7>'
| |   |   `-ImplicitCastExpr 0x653b400 <col:24> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x6396a30 <col:24> 'int' 0
| |   `-TypedefDecl 0x653b420 <line:375:7, col:28> __type 'struct std::__false_type'
| |-ClassTemplateSpecializationDecl 0x6396b20 <line:378:3, line:383:5> struct __is_byte definition
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x6396d40 <line:379:5, col:12> struct __is_byte
| | |-EnumDecl 0x6396dd0 <line:381:7, col:26>
| | | `-EnumConstantDecl 0x6396ea0 <col:14, col:24> __value 'enum std::__is_byte<char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:381:7>'
| | |   `-ImplicitCastExpr 0x6396ef0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6396e80 <col:24> 'int' 1
| | `-TypedefDecl 0x6396f20 <line:382:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6396f90 <line:385:3, line:390:5> struct __is_byte definition
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0x63971b0 <line:386:5, col:12> struct __is_byte
| | |-EnumDecl 0x6397240 <line:388:7, col:26>
| | | `-EnumConstantDecl 0x6397310 <col:14, col:24> __value 'enum std::__is_byte<signed char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:388:7>'
| | |   `-ImplicitCastExpr 0x6397360 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x63972f0 <col:24> 'int' 1
| | `-TypedefDecl 0x6397390 <line:389:7, col:27> __type 'struct std::__true_type'
| |-ClassTemplateSpecializationDecl 0x6397400 <line:392:3, line:397:5> struct __is_byte definition
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0x6397620 <line:393:5, col:12> struct __is_byte
| | |-EnumDecl 0x63976b0 <line:395:7, col:26>
| | | `-EnumConstantDecl 0x6397780 <col:14, col:24> __value 'enum std::__is_byte<unsigned char>::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:395:7>'
| | |   `-ImplicitCastExpr 0x63977d0 <col:24> 'unsigned int' <IntegralCast>
| | |     `-IntegerLiteral 0x6397760 <col:24> 'int' 1
| | `-TypedefDecl 0x6397800 <line:396:7, col:27> __type 'struct std::__true_type'
| `-ClassTemplateDecl 0x6399d40 <line:402:3, line:407:5> __is_move_iterator
|   |-TemplateTypeParmDecl 0x6397850 <line:402:12, col:21> typename _Tp
|   `-CXXRecordDecl 0x6399cb0 <line:403:5, line:407:5> struct __is_move_iterator definition
|     |-CXXRecordDecl 0x6399fc0 <line:403:5, col:12> struct __is_move_iterator
|     |-EnumDecl 0x639a050 <line:405:7, col:26>
|     | `-EnumConstantDecl 0x639a120 <col:14, col:24> __value 'enum std::__is_move_iterator::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/cpp_type_traits.h:405:7>'
|     |   `-IntegerLiteral 0x639a100 <col:24> 'int' 0
|     `-TypedefDecl 0x639a180 <line:406:7, col:28> __type 'struct std::__false_type'
|-NamespaceDecl 0x639a200 prev 0x636b110 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/type_traits.h:37:1, line:211:1> __gnu_cxx
| |-original Namespace 0x636b110 '__gnu_cxx'
| |-VisibilityAttr 0x639a260 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x639a430 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/type_traits.h:42:3, line:44:7> __enable_if
| | |-NonTypeTemplateParmDecl 0x639a2b0 <line:42:12> '_Bool'
| | |-TemplateTypeParmDecl 0x639a310 <col:18> typename
| | |-CXXRecordDecl 0x639a3a0 <line:43:5, line:44:7> struct __enable_if definition
| | | `-CXXRecordDecl 0x639a6f0 <line:43:5, col:12> struct __enable_if
| | |-ClassTemplateSpecializationDecl 0x652e490 <line:42:3, line:44:7> struct __enable_if definition
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'void'
| | | `-CXXRecordDecl 0x652e710 prev 0x652e490 <line:43:5, col:12> struct __enable_if
| | |-ClassTemplateSpecializationDecl 0x652e9c0 <line:46:3, line:48:27> struct __enable_if definition
| | | |-TemplateArgument integral 1
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x652ec90 prev 0x652e9c0 <line:47:5, col:12> struct __enable_if
| | | `-TypedefDecl 0x652ed30 <line:48:7, col:19> __type 'void':'void'
| | |-ClassTemplateSpecializationDecl 0x6537cb0 <line:42:3, line:44:7> struct __enable_if definition
| | | |-TemplateArgument integral 0
| | | |-TemplateArgument type 'long long *'
| | | `-CXXRecordDecl 0x653a470 prev 0x6537cb0 <line:43:5, col:12> struct __enable_if
| | `-ClassTemplateSpecializationDecl 0x653a790 <line:46:3, line:48:27> struct __enable_if definition
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument type 'long long *'
| |   |-CXXRecordDecl 0x653aa70 prev 0x653a790 <line:47:5, col:12> struct __enable_if
| |   `-TypedefDecl 0x653ab10 <line:48:7, col:19> __type 'long long *':'long long *'
| |-ClassTemplatePartialSpecializationDecl 0x639a960 <line:46:3, line:48:27> struct __enable_if definition
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateTypeParmDecl 0x639a780 <line:46:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x639abc0 <line:47:5, col:12> struct __enable_if
| | `-TypedefDecl 0x639f7b0 <line:48:7, col:19> __type '_Tp'
| |-ClassTemplateDecl 0x639fa30 <line:52:3, line:54:31> __conditional_type
| | |-NonTypeTemplateParmDecl 0x639f810 <line:52:12, col:17> '_Bool' _Cond
| | |-TemplateTypeParmDecl 0x639f870 <col:24, col:33> typename _Iftrue
| | |-TemplateTypeParmDecl 0x639f8e0 <col:42, col:51> typename _Iffalse
| | |-CXXRecordDecl 0x639f9a0 <line:53:5, line:54:31> struct __conditional_type definition
| | | |-CXXRecordDecl 0x639fd30 <line:53:5, col:12> struct __conditional_type
| | | `-TypedefDecl 0x639fdd0 <line:54:7, col:23> __type '_Iftrue'
| | `-ClassTemplateSpecializationDecl 0x64e0ef0 <line:52:3, line:54:31> struct __conditional_type definition
| |   |-TemplateArgument integral 1
| |   |-TemplateArgument type 'struct __gnu_cxx::__numeric_traits_integer<long>'
| |   |-TemplateArgument type 'struct __gnu_cxx::__numeric_traits_floating<long>'
| |   |-CXXRecordDecl 0x64e11b0 prev 0x64e0ef0 <line:53:5, col:12> struct __conditional_type
| |   `-TypedefDecl 0x64e1280 <line:54:7, col:23> __type 'struct __gnu_cxx::__numeric_traits_integer<long>':'struct __gnu_cxx::__numeric_traits_integer<long>'
| |-ClassTemplatePartialSpecializationDecl 0x63a00f0 <line:56:3, line:58:32> struct __conditional_type definition
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateTypeParmDecl 0x639fe20 <line:56:12, col:21> typename _Iftrue
| | |-TemplateTypeParmDecl 0x639fe90 <col:30, col:39> typename _Iffalse
| | |-CXXRecordDecl 0x63a0390 <line:57:5, col:12> struct __conditional_type
| | `-TypedefDecl 0x63a0430 <line:58:7, col:24> __type '_Iffalse'
| |-ClassTemplateDecl 0x63a0590 <line:62:3, line:70:5> __add_unsigned
| | |-TemplateTypeParmDecl 0x63a0480 <line:62:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63a0500 <line:63:5, line:70:5> struct __add_unsigned definition
| | | |-CXXRecordDecl 0x63a2080 <line:63:5, col:12> struct __add_unsigned
| | | |-AccessSpecDecl 0x63a2110 <line:65:5, col:12> private
| | | |-TypedefDecl 0x63a24d0 <line:66:7, col:65> __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
| | | |-AccessSpecDecl 0x63a2520 <line:68:5, col:11> public
| | | `-TypedefDecl 0x63a2660 <line:69:7, col:42> __type 'typename __if_type::__type'
| | |-ClassTemplateSpecialization 0x63a26d0 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a2a00 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a2d30 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a3560 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a3890 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a3bc0 '__add_unsigned'
| | |-ClassTemplateSpecialization 0x63a3ef0 '__add_unsigned'
| | `-ClassTemplateSpecialization 0x63a40d0 '__add_unsigned'
| |-ClassTemplateSpecializationDecl 0x63a26d0 <line:72:3, line:74:37> struct __add_unsigned definition
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x63a28f0 <line:73:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a2990 <line:74:7, col:29> __type 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x63a2a00 <line:76:3, line:78:37> struct __add_unsigned definition
| | |-TemplateArgument type 'signed char'
| | |-CXXRecordDecl 0x63a2c20 <line:77:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a2cc0 <line:78:7, col:29> __type 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x63a2d30 <line:80:3, line:82:38> struct __add_unsigned definition
| | |-TemplateArgument type 'short'
| | |-CXXRecordDecl 0x63a2f50 <line:81:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a34f0 <line:82:7, col:30> __type 'unsigned short'
| |-ClassTemplateSpecializationDecl 0x63a3560 <line:84:3, line:86:36> struct __add_unsigned definition
| | |-TemplateArgument type 'int'
| | |-CXXRecordDecl 0x63a3780 <line:85:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a3820 <line:86:7, col:28> __type 'unsigned int'
| |-ClassTemplateSpecializationDecl 0x63a3890 <line:88:3, line:90:37> struct __add_unsigned definition
| | |-TemplateArgument type 'long'
| | |-CXXRecordDecl 0x63a3ab0 <line:89:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a3b50 <line:90:7, col:29> __type 'unsigned long'
| |-ClassTemplateSpecializationDecl 0x63a3bc0 <line:92:3, line:94:42> struct __add_unsigned definition
| | |-TemplateArgument type 'long long'
| | |-CXXRecordDecl 0x63a3de0 <line:93:5, col:12> struct __add_unsigned
| | `-TypedefDecl 0x63a3e80 <line:94:7, col:34> __type 'unsigned long long'
| |-ClassTemplateSpecializationDecl 0x63a3ef0 <line:97:3, line:98:31> struct __add_unsigned
| | |-TemplateArgument type '_Bool'
| |-ClassTemplateSpecializationDecl 0x63a40d0 <line:100:3, line:101:34> struct __add_unsigned
| | |-TemplateArgument type 'wchar_t'
| |-ClassTemplateDecl 0x63a43a0 <line:105:3, line:113:5> __remove_unsigned
| | |-TemplateTypeParmDecl 0x63a4290 <line:105:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63a4310 <line:106:5, line:113:5> struct __remove_unsigned definition
| | | |-CXXRecordDecl 0x63a4720 <line:106:5, col:12> struct __remove_unsigned
| | | |-AccessSpecDecl 0x63a47b0 <line:108:5, col:12> private
| | | |-TypedefDecl 0x63a4ad0 <line:109:7, col:65> __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
| | | |-AccessSpecDecl 0x63a4b20 <line:111:5, col:11> public
| | | `-TypedefDecl 0x63a4c10 <line:112:7, col:42> __type 'typename __if_type::__type'
| | |-ClassTemplateSpecialization 0x63a4c80 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a4fb0 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a52e0 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a6000 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a6330 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a6660 '__remove_unsigned'
| | |-ClassTemplateSpecialization 0x63a6990 '__remove_unsigned'
| | `-ClassTemplateSpecialization 0x63a6b70 '__remove_unsigned'
| |-ClassTemplateSpecializationDecl 0x63a4c80 <line:115:3, line:117:35> struct __remove_unsigned definition
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x63a4ea0 <line:116:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a4f40 <line:117:7, col:27> __type 'signed char'
| |-ClassTemplateSpecializationDecl 0x63a4fb0 <line:119:3, line:121:35> struct __remove_unsigned definition
| | |-TemplateArgument type 'unsigned char'
| | |-CXXRecordDecl 0x63a51d0 <line:120:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a5270 <line:121:7, col:27> __type 'signed char'
| |-ClassTemplateSpecializationDecl 0x63a52e0 <line:123:3, line:125:29> struct __remove_unsigned definition
| | |-TemplateArgument type 'unsigned short'
| | |-CXXRecordDecl 0x63a5ef0 <line:124:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a5f90 <line:125:7, col:21> __type 'short'
| |-ClassTemplateSpecializationDecl 0x63a6000 <line:127:3, line:129:27> struct __remove_unsigned definition
| | |-TemplateArgument type 'unsigned int'
| | |-CXXRecordDecl 0x63a6220 <line:128:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a62c0 <line:129:7, col:19> __type 'int'
| |-ClassTemplateSpecializationDecl 0x63a6330 <line:131:3, line:133:28> struct __remove_unsigned definition
| | |-TemplateArgument type 'unsigned long'
| | |-CXXRecordDecl 0x63a6550 <line:132:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a65f0 <line:133:7, col:20> __type 'long'
| |-ClassTemplateSpecializationDecl 0x63a6660 <line:135:3, line:137:33> struct __remove_unsigned definition
| | |-TemplateArgument type 'unsigned long long'
| | |-CXXRecordDecl 0x63a6880 <line:136:5, col:12> struct __remove_unsigned
| | `-TypedefDecl 0x63a6920 <line:137:7, col:25> __type 'long long'
| |-ClassTemplateSpecializationDecl 0x63a6990 <line:140:3, line:141:34> struct __remove_unsigned
| | |-TemplateArgument type '_Bool'
| |-ClassTemplateSpecializationDecl 0x63a6b70 <line:143:3, line:144:37> struct __remove_unsigned
| | |-TemplateArgument type 'wchar_t'
| |-FunctionTemplateDecl 0x63a7160 <line:148:3, line:151:26> __is_null_pointer
| | |-TemplateTypeParmDecl 0x63a6d30 <line:148:12, col:21> typename _Type
| | |-FunctionDecl 0x63a70c0 <line:149:5, line:151:26> __is_null_pointer '_Bool (_Type *)' inline
| | | |-ParmVarDecl 0x63a6df0 <line:150:23, col:30> __ptr '_Type *'
| | | `-CompoundStmt 0x63a7240 <line:151:5, col:26>
| | |   `-ReturnStmt 0x63a7220 <col:7, col:23>
| | |     `-BinaryOperator 0x63a71f8 <col:14, col:23> '<dependent type>' '=='
| | |       |-DeclRefExpr 0x63a71b0 <col:14> '_Type *' lvalue ParmVar 0x63a6df0 '__ptr' '_Type *'
| | |       `-IntegerLiteral 0x63a71d8 <col:23> 'int' 0
| |-FunctionTemplateDecl 0x63a7490 <line:153:3, line:156:21> __is_null_pointer
| | |-TemplateTypeParmDecl 0x63a7260 <line:153:12, col:21> typename _Type
| | |-FunctionDecl 0x63a73f0 <line:154:5, line:156:21> __is_null_pointer '_Bool (_Type)' inline
| | | |-ParmVarDecl 0x63a72f0 <line:155:23> '_Type'
| | | `-CompoundStmt 0x63a7518 <line:156:5, col:21>
| | |   `-ReturnStmt 0x63a74f8 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x63a74e0 <col:14> '_Bool' false
| |-ClassTemplateDecl 0x63a7840 <line:160:3, line:162:30> __promote
| | |-TemplateTypeParmDecl 0x63a7540 <line:160:12, col:21> typename _Tp
| | |-NonTypeTemplateParmDecl 0x63a7730 <col:26, col:57> '_Bool'
| | | |-DependentScopeDeclRefExpr 0x63a76d8 <col:33, col:57> '<dependent type>' lvalue
| | |-CXXRecordDecl 0x63a77b0 <line:161:5, line:162:30> struct __promote definition
| | | |-CXXRecordDecl 0x63a7b00 <line:161:5, col:12> struct __promote
| | | `-TypedefDecl 0x63a7ba0 <line:162:7, col:22> __type 'double'
| | |-ClassTemplateSpecialization 0x63a8b40 '__promote'
| | |-ClassTemplateSpecialization 0x63a9330 '__promote'
| | `-ClassTemplateSpecialization 0x63aa490 '__promote'
| |-ClassTemplatePartialSpecializationDecl 0x63a7dd0 <line:167:3, line:169:7> struct __promote definition
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x63a7bf0 <line:167:12, col:21> typename _Tp
| | `-CXXRecordDecl 0x63a85e0 <line:168:5, col:12> struct __promote
| |-ClassTemplateSpecializationDecl 0x63a8b40 <line:171:3, line:173:35> struct __promote definition
| | |-TemplateArgument type 'long double'
| | |-TemplateArgument integral 0
| | |-CXXRecordDecl 0x63a8d70 <line:172:5, col:12> struct __promote
| | `-TypedefDecl 0x63a8e10 <line:173:7, col:27> __type 'long double'
| |-ClassTemplateSpecializationDecl 0x63a9330 <line:175:3, line:177:30> struct __promote definition
| | |-TemplateArgument type 'double'
| | |-TemplateArgument integral 0
| | |-CXXRecordDecl 0x63a9ed0 <line:176:5, col:12> struct __promote
| | `-TypedefDecl 0x63a9f70 <line:177:7, col:22> __type 'double'
| |-ClassTemplateSpecializationDecl 0x63aa490 <line:179:3, line:181:29> struct __promote definition
| | |-TemplateArgument type 'float'
| | |-TemplateArgument integral 0
| | |-CXXRecordDecl 0x63aa6c0 <line:180:5, col:12> struct __promote
| | `-TypedefDecl 0x63aa760 <line:181:7, col:21> __type 'float'
| |-ClassTemplateDecl 0x63ab810 <line:183:3, line:189:5> __promote_2
| | |-TemplateTypeParmDecl 0x63aa7b0 <line:183:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x63aa820 <col:26, col:35> typename _Up
| | |-TemplateTypeParmDecl 0x63aac30 <line:184:12, col:53> typename _Tp2 'typename __promote<_Tp>::__type'
| | |-TemplateTypeParmDecl 0x63ab6b0 <line:185:12, col:53> typename _Up2 'typename __promote<_Up>::__type'
| | `-CXXRecordDecl 0x63ab780 <line:186:5, line:189:5> struct __promote_2 definition
| |   |-CXXRecordDecl 0x63abb10 <line:186:5, col:12> struct __promote_2
| |   `-TypedefDecl 0x63abca0 <line:188:7, col:43> __type 'typeof (_Tp2() + _Up2())'
| |-ClassTemplateDecl 0x63acf00 <line:191:3, line:198:5> __promote_3
| | |-TemplateTypeParmDecl 0x63abcf0 <line:191:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x63abd60 <col:26, col:35> typename _Up
| | |-TemplateTypeParmDecl 0x63abdd0 <col:40, col:49> typename _Vp
| | |-TemplateTypeParmDecl 0x63ac110 <line:192:12, col:53> typename _Tp2 'typename __promote<_Tp>::__type'
| | |-TemplateTypeParmDecl 0x63ac450 <line:193:12, col:53> typename _Up2 'typename __promote<_Up>::__type'
| | |-TemplateTypeParmDecl 0x63acd90 <line:194:12, col:53> typename _Vp2 'typename __promote<_Vp>::__type'
| | `-CXXRecordDecl 0x63ace70 <line:195:5, line:198:5> struct __promote_3 definition
| |   |-CXXRecordDecl 0x63ad260 <line:195:5, col:12> struct __promote_3
| |   `-TypedefDecl 0x63ad450 <line:197:7, col:52> __type 'typeof (_Tp2() + _Up2() + _Vp2())'
| `-ClassTemplateDecl 0x63aeb10 <line:200:3, line:208:5> __promote_4
|   |-TemplateTypeParmDecl 0x63ad4a0 <line:200:12, col:21> typename _Tp
|   |-TemplateTypeParmDecl 0x63ad510 <col:26, col:35> typename _Up
|   |-TemplateTypeParmDecl 0x63ad580 <col:40, col:49> typename _Vp
|   |-TemplateTypeParmDecl 0x63ad5f0 <col:54, col:63> typename _Wp
|   |-TemplateTypeParmDecl 0x63ade70 <line:201:12, col:53> typename _Tp2 'typename __promote<_Tp>::__type'
|   |-TemplateTypeParmDecl 0x63ae1b0 <line:202:12, col:53> typename _Up2 'typename __promote<_Up>::__type'
|   |-TemplateTypeParmDecl 0x63ae4f0 <line:203:12, col:53> typename _Vp2 'typename __promote<_Vp>::__type'
|   |-TemplateTypeParmDecl 0x63ae990 <line:204:12, col:53> typename _Wp2 'typename __promote<_Wp>::__type'
|   `-CXXRecordDecl 0x63aea80 <line:205:5, line:208:5> struct __promote_4 definition
|     |-CXXRecordDecl 0x63af3a0 <line:205:5, col:12> struct __promote_4
|     `-TypedefDecl 0x63af5f0 <line:207:7, col:61> __type 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())'
|-NamespaceDecl 0x63af670 prev 0x639a200 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:37:1, line:131:1> __gnu_cxx
| |-original Namespace 0x636b110 '__gnu_cxx'
| |-VisibilityAttr 0x63af6d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x63af820 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:54:3, line:65:5> __numeric_traits_integer
| | |-TemplateTypeParmDecl 0x63af710 <line:54:12, col:21> typename _Value
| | |-CXXRecordDecl 0x63af790 <line:55:5, line:65:5> struct __numeric_traits_integer definition
| | | |-CXXRecordDecl 0x63afaa0 <line:55:5, col:12> struct __numeric_traits_integer
| | | |-VarDecl 0x63afb40 <line:58:7, line:48:68> __min 'const _Value' static
| | | | `-ParenExpr 0x63affd8 <col:3, col:68> '<dependent type>'
| | | |   `-ConditionalOperator 0x63affa8 <line:43:31, line:48:67> '<dependent type>'
| | | |     |-ParenExpr 0x63afca8 <line:43:31, col:45> '<dependent type>'
| | | |     | `-BinaryOperator 0x63afc80 <col:32, col:44> '<dependent type>' '<'
| | | |     |   |-CStyleCastExpr 0x63afc38 <col:32, col:40> '_Value' <Dependent>
| | | |     |   | `-ParenExpr 0x63afc18 <col:37, col:40> 'int'
| | | |     |   |   `-UnaryOperator 0x63afbb8 <col:38, col:39> 'int' prefix '-'
| | | |     |   |     `-IntegerLiteral 0x63afb98 <col:39> 'int' 1
| | | |     |   `-IntegerLiteral 0x63afc60 <col:44> 'int' 0
| | | |     |-BinaryOperator 0x63aff28 <line:48:28, line:45:54> '<dependent type>' '<<'
| | | |     | |-CStyleCastExpr 0x63afcf8 <line:48:28, col:33> '_Value' <Dependent>
| | | |     | | `-IntegerLiteral 0x63afcc8 <col:33> 'int' 1
| | | |     | `-ParenExpr 0x63aff08 <line:45:3, col:54> '<dependent type>'
| | | |     |   `-BinaryOperator 0x63afee0 <col:4, line:43:45> '<dependent type>' '-'
| | | |     |     |-BinaryOperator 0x63afd88 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| | | |     |     | |-UnaryExprOrTypeTraitExpr 0x63afd30 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof '_Value'
| | | |     |     | `-ImplicitCastExpr 0x63afd70 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| | | |     |     |   `-IntegerLiteral 0x63afd50 <col:22> 'int' 8
| | | |     |     `-ParenExpr 0x63afec0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> '<dependent type>'
| | | |     |       `-BinaryOperator 0x63afe98 <col:32, col:44> '<dependent type>' '<'
| | | |     |         |-CStyleCastExpr 0x63afe50 <col:32, col:40> '_Value' <Dependent>
| | | |     |         | `-ParenExpr 0x63afe30 <col:37, col:40> 'int'
| | | |     |         |   `-UnaryOperator 0x63afdd0 <col:38, col:39> 'int' prefix '-'
| | | |     |         |     `-IntegerLiteral 0x63afdb0 <col:39> 'int' 1
| | | |     |         `-IntegerLiteral 0x63afe78 <col:44> 'int' 0
| | | |     `-CStyleCastExpr 0x63aff80 <line:48:62, col:67> '_Value' <Dependent>
| | | |       `-IntegerLiteral 0x63aff50 <col:67> 'int' 0
| | | |-VarDecl 0x63b0010 <line:59:7, line:52:72> __max 'const _Value' static
| | | | `-ParenExpr 0x63b4948 <line:51:3, line:52:72> '<dependent type>'
| | | |   `-ConditionalOperator 0x63b4918 <line:43:31, line:52:71> '<dependent type>'
| | | |     |-ParenExpr 0x63b0178 <line:43:31, col:45> '<dependent type>'
| | | |     | `-BinaryOperator 0x63b0150 <col:32, col:44> '<dependent type>' '<'
| | | |     |   |-CStyleCastExpr 0x63b0108 <col:32, col:40> '_Value' <Dependent>
| | | |     |   | `-ParenExpr 0x63b00e8 <col:37, col:40> 'int'
| | | |     |   |   `-UnaryOperator 0x63b0088 <col:38, col:39> 'int' prefix '-'
| | | |     |   |     `-IntegerLiteral 0x63b0068 <col:39> 'int' 1
| | | |     |   `-IntegerLiteral 0x63b0130 <col:44> 'int' 0
| | | |     |-ParenExpr 0x63b4880 <line:52:4, col:61> '<dependent type>'
| | | |     | `-BinaryOperator 0x63b4858 <col:5, col:60> '<dependent type>' '+'
| | | |     |   |-ParenExpr 0x63b4818 <col:5, col:56> '<dependent type>'
| | | |     |   | `-BinaryOperator 0x63b47f0 <col:6, col:55> '<dependent type>' '<<'
| | | |     |   |   |-ParenExpr 0x63b47b0 <col:6, col:50> '<dependent type>'
| | | |     |   |   | `-BinaryOperator 0x63b4788 <col:7, col:49> '<dependent type>' '-'
| | | |     |   |   |   |-ParenExpr 0x63b4748 <col:7, col:45> '<dependent type>'
| | | |     |   |   |   | `-BinaryOperator 0x63b4720 <col:8, col:44> '<dependent type>' '<<'
| | | |     |   |   |   |   |-CStyleCastExpr 0x63b01c8 <col:8, col:13> '_Value' <Dependent>
| | | |     |   |   |   |   | `-IntegerLiteral 0x63b0198 <col:13> 'int' 1
| | | |     |   |   |   |   `-ParenExpr 0x63b4700 <col:18, col:44> '<dependent type>'
| | | |     |   |   |   |     `-BinaryOperator 0x63b46d8 <line:45:3, line:52:43> '<dependent type>' '-'
| | | |     |   |   |   |       |-ParenExpr 0x63b4698 <line:45:3, col:54> '<dependent type>'
| | | |     |   |   |   |       | `-BinaryOperator 0x63b4670 <col:4, line:43:45> '<dependent type>' '-'
| | | |     |   |   |   |       |   |-BinaryOperator 0x63b0258 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| | | |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0x63b0200 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof '_Value'
| | | |     |   |   |   |       |   | `-ImplicitCastExpr 0x63b0240 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| | | |     |   |   |   |       |   |   `-IntegerLiteral 0x63b0220 <col:22> 'int' 8
| | | |     |   |   |   |       |   `-ParenExpr 0x63b4650 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> '<dependent type>'
| | | |     |   |   |   |       |     `-BinaryOperator 0x63b4628 <col:32, col:44> '<dependent type>' '<'
| | | |     |   |   |   |       |       |-CStyleCastExpr 0x63b45e0 <col:32, col:40> '_Value' <Dependent>
| | | |     |   |   |   |       |       | `-ParenExpr 0x63b45c0 <col:37, col:40> 'int'
| | | |     |   |   |   |       |       |   `-UnaryOperator 0x63b02a0 <col:38, col:39> 'int' prefix '-'
| | | |     |   |   |   |       |       |     `-IntegerLiteral 0x63b0280 <col:39> 'int' 1
| | | |     |   |   |   |       |       `-IntegerLiteral 0x63b4608 <col:44> 'int' 0
| | | |     |   |   |   |       `-IntegerLiteral 0x63b46b8 <line:52:43> 'int' 1
| | | |     |   |   |   `-IntegerLiteral 0x63b4768 <col:49> 'int' 1
| | | |     |   |   `-IntegerLiteral 0x63b47d0 <col:55> 'int' 1
| | | |     |   `-IntegerLiteral 0x63b4838 <col:60> 'int' 1
| | | |     `-UnaryOperator 0x63b48f8 <col:65, col:71> '<dependent type>' prefix '~'
| | | |       `-CStyleCastExpr 0x63b48d0 <col:66, col:71> '_Value' <Dependent>
| | | |         `-IntegerLiteral 0x63b48a0 <col:71> 'int' 0
| | | |-VarDecl 0x63b4980 <line:63:7, line:43:45> __is_signed 'const _Bool' static
| | | | `-ParenExpr 0x63b4ae8 <col:31, col:45> '<dependent type>'
| | | |   `-BinaryOperator 0x63b4ac0 <col:32, col:44> '<dependent type>' '<'
| | | |     |-CStyleCastExpr 0x63b4a78 <col:32, col:40> '_Value' <Dependent>
| | | |     | `-ParenExpr 0x63b4a58 <col:37, col:40> 'int'
| | | |     |   `-UnaryOperator 0x63b49f8 <col:38, col:39> 'int' prefix '-'
| | | |     |     `-IntegerLiteral 0x63b49d8 <col:39> 'int' 1
| | | |     `-IntegerLiteral 0x63b4aa0 <col:44> 'int' 0
| | | `-VarDecl 0x63b4b20 <line:64:7, line:45:54> __digits 'const int' static
| | |   `-ParenExpr 0x63b4d60 <col:3, col:54> '<dependent type>'
| | |     `-BinaryOperator 0x63b4d38 <col:4, line:43:45> '<dependent type>' '-'
| | |       |-BinaryOperator 0x63b4be0 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| | |       | |-UnaryExprOrTypeTraitExpr 0x63b4b88 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof '_Value'
| | |       | `-ImplicitCastExpr 0x63b4bc8 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| | |       |   `-IntegerLiteral 0x63b4ba8 <col:22> 'int' 8
| | |       `-ParenExpr 0x63b4d18 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> '<dependent type>'
| | |         `-BinaryOperator 0x63b4cf0 <col:32, col:44> '<dependent type>' '<'
| | |           |-CStyleCastExpr 0x63b4ca8 <col:32, col:40> '_Value' <Dependent>
| | |           | `-ParenExpr 0x63b4c88 <col:37, col:40> 'int'
| | |           |   `-UnaryOperator 0x63b4c28 <col:38, col:39> 'int' prefix '-'
| | |           |     `-IntegerLiteral 0x63b4c08 <col:39> 'int' 1
| | |           `-IntegerLiteral 0x63b4cd0 <col:44> 'int' 0
| | `-ClassTemplateSpecializationDecl 0x64e0bd0 <line:54:3, line:65:5> struct __numeric_traits_integer definition
| |   |-TemplateArgument type 'long'
| |   |-CXXRecordDecl 0x64e13a0 prev 0x64e0bd0 <line:55:5, col:12> struct __numeric_traits_integer
| |   |-VarDecl 0x64e1470 <line:58:7, line:48:68> __min 'const long':'const long' static
| |   | `-ParenExpr 0x64e1808 <col:3, col:68> 'long':'long'
| |   |   `-ConditionalOperator 0x64e17d8 <line:43:31, line:48:67> 'long':'long'
| |   |     |-ParenExpr 0x64e1570 <line:43:31, col:45> '_Bool'
| |   |     | `-BinaryOperator 0x64e1548 <col:32, col:44> '_Bool' '<'
| |   |     |   |-CStyleCastExpr 0x64e1508 <col:32, col:40> 'long':'long' <NoOp>
| |   |     |   | `-ImplicitCastExpr 0x64e14f0 <col:37, col:40> 'long':'long' <IntegralCast>
| |   |     |   |   `-ParenExpr 0x63afc18 <col:37, col:40> 'int'
| |   |     |   |     `-UnaryOperator 0x63afbb8 <col:38, col:39> 'int' prefix '-'
| |   |     |   |       `-IntegerLiteral 0x63afb98 <col:39> 'int' 1
| |   |     |   `-ImplicitCastExpr 0x64e1530 <col:44> 'long' <IntegralCast>
| |   |     |     `-IntegerLiteral 0x63afc60 <col:44> 'int' 0
| |   |     |-BinaryOperator 0x64e1760 <line:48:28, line:45:54> 'long':'long' '<<'
| |   |     | |-CStyleCastExpr 0x64e15b8 <line:48:28, col:33> 'long':'long' <NoOp>
| |   |     | | `-ImplicitCastExpr 0x64e15a0 <col:33> 'long':'long' <IntegralCast>
| |   |     | |   `-IntegerLiteral 0x63afcc8 <col:33> 'int' 1
| |   |     | `-ParenExpr 0x64e1740 <line:45:3, col:54> 'unsigned long'
| |   |     |   `-BinaryOperator 0x64e1718 <col:4, line:43:45> 'unsigned long' '-'
| |   |     |     |-BinaryOperator 0x64e1628 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| |   |     |     | |-UnaryExprOrTypeTraitExpr 0x64e15f0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof 'long':'long'
| |   |     |     | `-ImplicitCastExpr 0x64e1610 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |   |     |     |   `-IntegerLiteral 0x63afd50 <col:22> 'int' 8
| |   |     |     `-ImplicitCastExpr 0x64e1700 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> 'unsigned long' <IntegralCast>
| |   |     |       `-ParenExpr 0x64e16e0 <col:31, col:45> '_Bool'
| |   |     |         `-BinaryOperator 0x64e16b8 <col:32, col:44> '_Bool' '<'
| |   |     |           |-CStyleCastExpr 0x64e1678 <col:32, col:40> 'long':'long' <NoOp>
| |   |     |           | `-ImplicitCastExpr 0x64e1660 <col:37, col:40> 'long':'long' <IntegralCast>
| |   |     |           |   `-ParenExpr 0x63afe30 <col:37, col:40> 'int'
| |   |     |           |     `-UnaryOperator 0x63afdd0 <col:38, col:39> 'int' prefix '-'
| |   |     |           |       `-IntegerLiteral 0x63afdb0 <col:39> 'int' 1
| |   |     |           `-ImplicitCastExpr 0x64e16a0 <col:44> 'long' <IntegralCast>
| |   |     |             `-IntegerLiteral 0x63afe78 <col:44> 'int' 0
| |   |     `-CStyleCastExpr 0x64e17b0 <line:48:62, col:67> 'long':'long' <NoOp>
| |   |       `-ImplicitCastExpr 0x64e1798 <col:67> 'long':'long' <IntegralCast>
| |   |         `-IntegerLiteral 0x63aff50 <col:67> 'int' 0
| |   |-VarDecl 0x64e1890 <line:59:7, line:52:72> __max 'const long':'const long' static
| |   | `-ParenExpr 0x64e2858 <line:51:3, line:52:72> 'long'
| |   |   `-ConditionalOperator 0x64e2828 <line:43:31, line:52:71> 'long'
| |   |     |-ParenExpr 0x64e1990 <line:43:31, col:45> '_Bool'
| |   |     | `-BinaryOperator 0x64e1968 <col:32, col:44> '_Bool' '<'
| |   |     |   |-CStyleCastExpr 0x64e1928 <col:32, col:40> 'long':'long' <NoOp>
| |   |     |   | `-ImplicitCastExpr 0x64e1910 <col:37, col:40> 'long':'long' <IntegralCast>
| |   |     |   |   `-ParenExpr 0x63b00e8 <col:37, col:40> 'int'
| |   |     |   |     `-UnaryOperator 0x63b0088 <col:38, col:39> 'int' prefix '-'
| |   |     |   |       `-IntegerLiteral 0x63b0068 <col:39> 'int' 1
| |   |     |   `-ImplicitCastExpr 0x64e1950 <col:44> 'long' <IntegralCast>
| |   |     |     `-IntegerLiteral 0x63b0130 <col:44> 'int' 0
| |   |     |-ParenExpr 0x64e2798 <line:52:4, col:61> 'long'
| |   |     | `-BinaryOperator 0x64e2770 <col:5, col:60> 'long' '+'
| |   |     |   |-ParenExpr 0x64e2738 <col:5, col:56> 'long'
| |   |     |   | `-BinaryOperator 0x64e2710 <col:6, col:55> 'long' '<<'
| |   |     |   |   |-ParenExpr 0x64e1c68 <col:6, col:50> 'long'
| |   |     |   |   | `-BinaryOperator 0x64e1c40 <col:7, col:49> 'long' '-'
| |   |     |   |   |   |-ParenExpr 0x64e1c08 <col:7, col:45> 'long':'long'
| |   |     |   |   |   | `-BinaryOperator 0x64e1be0 <col:8, col:44> 'long':'long' '<<'
| |   |     |   |   |   |   |-CStyleCastExpr 0x64e19d8 <col:8, col:13> 'long':'long' <NoOp>
| |   |     |   |   |   |   | `-ImplicitCastExpr 0x64e19c0 <col:13> 'long':'long' <IntegralCast>
| |   |     |   |   |   |   |   `-IntegerLiteral 0x63b0198 <col:13> 'int' 1
| |   |     |   |   |   |   `-ParenExpr 0x64e1bc0 <col:18, col:44> 'unsigned long'
| |   |     |   |   |   |     `-BinaryOperator 0x64e1b98 <line:45:3, line:52:43> 'unsigned long' '-'
| |   |     |   |   |   |       |-ParenExpr 0x64e1b60 <line:45:3, col:54> 'unsigned long'
| |   |     |   |   |   |       | `-BinaryOperator 0x64e1b38 <col:4, line:43:45> 'unsigned long' '-'
| |   |     |   |   |   |       |   |-BinaryOperator 0x64e1a48 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| |   |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0x64e1a10 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof 'long':'long'
| |   |     |   |   |   |       |   | `-ImplicitCastExpr 0x64e1a30 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |   |     |   |   |   |       |   |   `-IntegerLiteral 0x63b0220 <col:22> 'int' 8
| |   |     |   |   |   |       |   `-ImplicitCastExpr 0x64e1b20 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> 'unsigned long' <IntegralCast>
| |   |     |   |   |   |       |     `-ParenExpr 0x64e1b00 <col:31, col:45> '_Bool'
| |   |     |   |   |   |       |       `-BinaryOperator 0x64e1ad8 <col:32, col:44> '_Bool' '<'
| |   |     |   |   |   |       |         |-CStyleCastExpr 0x64e1a98 <col:32, col:40> 'long':'long' <NoOp>
| |   |     |   |   |   |       |         | `-ImplicitCastExpr 0x64e1a80 <col:37, col:40> 'long':'long' <IntegralCast>
| |   |     |   |   |   |       |         |   `-ParenExpr 0x63b45c0 <col:37, col:40> 'int'
| |   |     |   |   |   |       |         |     `-UnaryOperator 0x63b02a0 <col:38, col:39> 'int' prefix '-'
| |   |     |   |   |   |       |         |       `-IntegerLiteral 0x63b0280 <col:39> 'int' 1
| |   |     |   |   |   |       |         `-ImplicitCastExpr 0x64e1ac0 <col:44> 'long' <IntegralCast>
| |   |     |   |   |   |       |           `-IntegerLiteral 0x63b4608 <col:44> 'int' 0
| |   |     |   |   |   |       `-ImplicitCastExpr 0x64e1b80 <line:52:43> 'unsigned long' <IntegralCast>
| |   |     |   |   |   |         `-IntegerLiteral 0x63b46b8 <col:43> 'int' 1
| |   |     |   |   |   `-ImplicitCastExpr 0x64e1c28 <col:49> 'long' <IntegralCast>
| |   |     |   |   |     `-IntegerLiteral 0x63b4768 <col:49> 'int' 1
| |   |     |   |   `-IntegerLiteral 0x63b47d0 <col:55> 'int' 1
| |   |     |   `-ImplicitCastExpr 0x64e2758 <col:60> 'long' <IntegralCast>
| |   |     |     `-IntegerLiteral 0x63b4838 <col:60> 'int' 1
| |   |     `-UnaryOperator 0x64e2808 <col:65, col:71> 'long':'long' prefix '~'
| |   |       `-CStyleCastExpr 0x64e27e0 <col:66, col:71> 'long':'long' <NoOp>
| |   |         `-ImplicitCastExpr 0x64e27c8 <col:71> 'long':'long' <IntegralCast>
| |   |           `-IntegerLiteral 0x63b48a0 <col:71> 'int' 0
| |   |-VarDecl 0x64e28d0 <line:63:7, line:43:45> __is_signed 'const _Bool' static
| |   | `-ParenExpr 0x64e29d0 <col:31, col:45> '_Bool'
| |   |   `-BinaryOperator 0x64e29a8 <col:32, col:44> '_Bool' '<'
| |   |     |-CStyleCastExpr 0x64e2968 <col:32, col:40> 'long':'long' <NoOp>
| |   |     | `-ImplicitCastExpr 0x64e2950 <col:37, col:40> 'long':'long' <IntegralCast>
| |   |     |   `-ParenExpr 0x63b4a58 <col:37, col:40> 'int'
| |   |     |     `-UnaryOperator 0x63b49f8 <col:38, col:39> 'int' prefix '-'
| |   |     |       `-IntegerLiteral 0x63b49d8 <col:39> 'int' 1
| |   |     `-ImplicitCastExpr 0x64e2990 <col:44> 'long' <IntegralCast>
| |   |       `-IntegerLiteral 0x63b4aa0 <col:44> 'int' 0
| |   `-VarDecl 0x64e2a40 <line:64:7, line:45:54> __digits 'const int' static
| |     `-ImplicitCastExpr 0x64e2c30 <col:3, col:54> 'const int' <IntegralCast>
| |       `-ParenExpr 0x64e2c10 <col:3, col:54> 'unsigned long'
| |         `-BinaryOperator 0x64e2be8 <col:4, line:43:45> 'unsigned long' '-'
| |           |-BinaryOperator 0x64e2af8 <line:45:4, <built-in>:33:22> 'unsigned long' '*'
| |           | |-UnaryExprOrTypeTraitExpr 0x64e2ac0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:45:4, col:14> 'unsigned long' sizeof 'long':'long'
| |           | `-ImplicitCastExpr 0x64e2ae0 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |           |   `-IntegerLiteral 0x63b4ba8 <col:22> 'int' 8
| |           `-ImplicitCastExpr 0x64e2bd0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:43:31, col:45> 'unsigned long' <IntegralCast>
| |             `-ParenExpr 0x64e2bb0 <col:31, col:45> '_Bool'
| |               `-BinaryOperator 0x64e2b88 <col:32, col:44> '_Bool' '<'
| |                 |-CStyleCastExpr 0x64e2b48 <col:32, col:40> 'long':'long' <NoOp>
| |                 | `-ImplicitCastExpr 0x64e2b30 <col:37, col:40> 'long':'long' <IntegralCast>
| |                 |   `-ParenExpr 0x63b4c88 <col:37, col:40> 'int'
| |                 |     `-UnaryOperator 0x63b4c28 <col:38, col:39> 'int' prefix '-'
| |                 |       `-IntegerLiteral 0x63b4c08 <col:39> 'int' 1
| |                 `-ImplicitCastExpr 0x64e2b70 <col:44> 'long' <IntegralCast>
| |                   `-IntegerLiteral 0x63b4cd0 <col:44> 'int' 0
| |-VarDecl 0x63b5030 parent 0x63af790 prev 0x63afb40 <line:67:3, line:68:52> __min 'const _Value'
| |-VarDecl 0x63b5380 parent 0x63af790 prev 0x63b0010 <line:70:3, line:71:52> __max 'const _Value'
| |-VarDecl 0x63b56d0 parent 0x63af790 prev 0x63b4980 <line:73:3, line:74:50> __is_signed 'const _Bool'
| |-VarDecl 0x63b5a00 parent 0x63af790 prev 0x63b4b20 <line:76:3, line:77:49> __digits 'const int'
| |-ClassTemplateDecl 0x63b5bb0 <line:99:3, line:109:5> __numeric_traits_floating
| | |-TemplateTypeParmDecl 0x63b5aa0 <line:99:12, col:21> typename _Value
| | |-CXXRecordDecl 0x63b5b20 <line:100:5, line:109:5> struct __numeric_traits_floating definition
| | | |-CXXRecordDecl 0x63b5e30 <line:100:5, col:12> struct __numeric_traits_floating
| | | |-VarDecl 0x63b5ed0 <line:103:7, line:90:38> __max_digits10 'const int' static
| | | | `-ImplicitCastExpr 0x63b74b0 <line:89:3, line:90:38> 'const int' <IntegralCast>
| | | |   `-ParenExpr 0x63b6598 <line:89:3, line:90:38> 'long'
| | | |     `-BinaryOperator 0x63b6570 <line:89:4, line:90:34> 'long' '+'
| | | |       |-ImplicitCastExpr 0x63b6558 <line:89:4> 'long' <IntegralCast>
| | | |       | `-IntegerLiteral 0x63b5f28 <col:4> 'int' 2
| | | |       `-BinaryOperator 0x63b6530 <line:85:3, line:90:34> 'long' '/'
| | | |         |-BinaryOperator 0x63b64d0 <line:85:3, line:90:27> 'long' '*'
| | | |         | |-ImplicitCastExpr 0x63b64b8 <line:85:3, line:86:60> 'long' <IntegralCast>
| | | |         | | `-ParenExpr 0x63b6478 <line:85:3, line:86:60> 'int'
| | | |         | |   `-ConditionalOperator 0x63b6448 <line:85:4, <built-in>:103:27> 'int'
| | | |         | |     |-DependentScopeDeclRefExpr 0x63b6158 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:85:4, col:33> '<dependent type>' lvalue
| | | |         | |     |-IntegerLiteral 0x63b6198 <<built-in>:77:26> 'int' 24
| | | |         | |     `-ConditionalOperator 0x63b6418 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, <built-in>:103:27> 'int'
| | | |         | |       |-DependentScopeDeclRefExpr 0x63b6398 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, col:36> '<dependent type>' lvalue
| | | |         | |       |-IntegerLiteral 0x63b63d8 <<built-in>:90:26> 'int' 53
| | | |         | |       `-IntegerLiteral 0x63b63f8 <line:103:27> 'int' 64
| | | |         | `-IntegerLiteral 0x63b6498 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:90:27> 'long' 643
| | | |         `-ImplicitCastExpr 0x63b6518 <col:34> 'long' <IntegralCast>
| | | |           `-IntegerLiteral 0x63b64f8 <col:34> 'int' 2136
| | | |-VarDecl 0x63b74e0 <line:106:7, col:39> __is_signed 'const _Bool' static
| | | | `-CXXBoolLiteralExpr 0x63b7538 <col:39> '_Bool' true
| | | |-VarDecl 0x63b7560 <line:107:7, line:86:60> __digits10 'const int' static
| | | | `-ParenExpr 0x63b7a18 <line:85:3, line:86:60> 'int'
| | | |   `-ConditionalOperator 0x63b79e8 <line:85:4, <built-in>:99:22> 'int'
| | | |     |-DependentScopeDeclRefExpr 0x63b7758 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:85:4, col:33> '<dependent type>' lvalue
| | | |     |-IntegerLiteral 0x63b7798 <<built-in>:73:21> 'int' 6
| | | |     `-ConditionalOperator 0x63b79b8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, <built-in>:99:22> 'int'
| | | |       |-DependentScopeDeclRefExpr 0x63b7938 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, col:36> '<dependent type>' lvalue
| | | |       |-IntegerLiteral 0x63b7978 <<built-in>:86:21> 'int' 15
| | | |       `-IntegerLiteral 0x63b7998 <line:99:22> 'int' 18
| | | `-VarDecl 0x63b7a50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:108:7, line:86:60> __max_exponent10 'const int' static
| | |   `-ParenExpr 0x63b7f08 <line:85:3, line:86:60> 'int'
| | |     `-ConditionalOperator 0x63b7ed8 <line:85:4, <built-in>:104:29> 'int'
| | |       |-DependentScopeDeclRefExpr 0x63b7c48 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:85:4, col:33> '<dependent type>' lvalue
| | |       |-IntegerLiteral 0x63b7c88 <<built-in>:78:28> 'int' 38
| | |       `-ConditionalOperator 0x63b7ea8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, <built-in>:104:29> 'int'
| | |         |-DependentScopeDeclRefExpr 0x63b7e28 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:86:6, col:36> '<dependent type>' lvalue
| | |         |-IntegerLiteral 0x63b7e68 <<built-in>:91:28> 'int' 308
| | |         `-IntegerLiteral 0x63b7e88 <line:104:29> 'int' 4932
| | `-ClassTemplateSpecializationDecl 0x64e0d60 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/numeric_traits.h:99:3, line:109:5> struct __numeric_traits_floating
| |   |-TemplateArgument type 'long'
| |-VarDecl 0x63b81c0 parent 0x63b5b20 prev 0x63b5ed0 <line:111:3, line:112:50> __max_digits10 'const int'
| |-VarDecl 0x63b8bf0 parent 0x63b5b20 prev 0x63b74e0 <line:114:3, line:115:51> __is_signed 'const _Bool'
| |-VarDecl 0x63b8f20 parent 0x63b5b20 prev 0x63b7560 <line:117:3, line:118:50> __digits10 'const int'
| |-VarDecl 0x63b9250 parent 0x63b5b20 prev 0x63b7a50 <line:120:3, line:121:50> __max_exponent10 'const int'
| `-ClassTemplateDecl 0x63b9400 <line:123:3, line:128:7> __numeric_traits
|   |-TemplateTypeParmDecl 0x63b92f0 <line:123:12, col:21> typename _Value
|   |-CXXRecordDecl 0x63b9370 <line:124:5, line:128:7> struct __numeric_traits definition
|   | |-public '__conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type'
|   | `-CXXRecordDecl 0x63bbd70 <line:124:5, col:12> struct __numeric_traits
|   `-ClassTemplateSpecializationDecl 0x64e08b0 <line:123:3, line:128:7> struct __numeric_traits definition
|     |-public 'typename __conditional_type<std::__is_integer<long>::__value, __numeric_traits_integer<long>, __numeric_traits_floating<long> >::__type':'struct __gnu_cxx::__numeric_traits_integer<long>'
|     |-TemplateArgument type 'long'
|     `-CXXRecordDecl 0x64e2cd0 prev 0x64e08b0 <line:124:5, col:12> struct __numeric_traits
|-NamespaceDecl 0x63bbe30 prev 0x636b610 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:36:1, line:54:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x63bbe90 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| `-FunctionTemplateDecl 0x63bc190 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:45:3, line:51:5> __addressof
|   |-TemplateTypeParmDecl 0x63bbed0 <line:45:12, col:21> typename _Tp
|   |-FunctionDecl 0x63bc0f0 <line:46:5, line:51:5> __addressof '_Tp *(_Tp &)' inline
|   | |-ParmVarDecl 0x63bbfc0 <line:47:17, col:22> __r '_Tp &'
|   | `-CompoundStmt 0x63bc398 <line:48:5, line:51:5>
|   |   `-ReturnStmt 0x63bc378 <line:49:7, line:50:66>
|   |     `-CXXReinterpretCastExpr 0x63bc348 <line:49:14, line:50:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
|   |       `-UnaryOperator 0x63bc318 <col:3, col:65> 'char *' prefix '&'
|   |         `-CXXConstCastExpr 0x63bc2b8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
|   |           `-CXXReinterpretCastExpr 0x63bc248 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
|   |             `-DeclRefExpr 0x63bc1e0 <col:61> '_Tp' lvalue ParmVar 0x63bbfc0 '__r' '_Tp &'
|-NamespaceDecl 0x63bc3f0 prev 0x63bbe30 <line:149:1, line:196:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x63bc450 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-FunctionTemplateDecl 0x63bc770 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:164:3, line:178:5> swap
| | |-TemplateTypeParmDecl 0x63bc490 <line:164:12, col:21> typename _Tp
| | |-FunctionDecl 0x63bc6d0 <line:165:5, line:178:5> swap 'void (_Tp &, _Tp &)' inline
| | | |-ParmVarDecl 0x63bc550 <line:166:10, col:15> __a '_Tp &'
| | | |-ParmVarDecl 0x63bc5c0 <col:20, col:25> __b '_Tp &'
| | | `-CompoundStmt 0x63bc9c8 <line:171:5, line:178:5>
| | |   |-DeclStmt 0x63bc880 <line:175:7, col:37>
| | |   | `-VarDecl 0x63bc7e0 <col:7, line:145:36> __tmp '_Tp'
| | |   |   `-ParenExpr 0x63bc860 <col:30, col:36> '_Tp' lvalue
| | |   |     `-DeclRefExpr 0x63bc838 <line:175:33> '_Tp' lvalue ParmVar 0x63bc550 '__a' '_Tp &'
| | |   |-BinaryOperator 0x63bc908 <line:176:7, line:145:36> '<dependent type>' '='
| | |   | |-DeclRefExpr 0x63bc898 <line:176:7> '_Tp' lvalue ParmVar 0x63bc550 '__a' '_Tp &'
| | |   | `-ParenExpr 0x63bc8e8 <line:145:30, col:36> '_Tp' lvalue
| | |   |   `-DeclRefExpr 0x63bc8c0 <line:176:27> '_Tp' lvalue ParmVar 0x63bc5c0 '__b' '_Tp &'
| | |   `-BinaryOperator 0x63bc9a0 <line:177:7, line:145:36> '<dependent type>' '='
| | |     |-DeclRefExpr 0x63bc930 <line:177:7> '_Tp' lvalue ParmVar 0x63bc5c0 '__b' '_Tp &'
| | |     `-ParenExpr 0x63bc980 <line:145:30, col:36> '_Tp' lvalue
| | |       `-DeclRefExpr 0x63bc958 <line:177:27> '_Tp' lvalue Var 0x63bc7e0 '__tmp' '_Tp'
| `-FunctionTemplateDecl 0x634ceb0 <line:183:3, line:192:5> swap
|   |-TemplateTypeParmDecl 0x63bca00 <line:183:12, col:21> typename _Tp
|   |-NonTypeTemplateParmDecl 0x63bcaa0 <col:26, col:33> 'size_t':'unsigned long' _Nm
|   |-FunctionDecl 0x634ce10 <line:184:5, line:192:5> swap 'void (_Tp (&)[_Nm], _Tp (&)[_Nm])' inline
|   | |-ParmVarDecl 0x634cbb0 <line:185:10, col:24> __a '_Tp (&)[_Nm]'
|   | |-ParmVarDecl 0x634cd00 <col:27, col:41> __b '_Tp (&)[_Nm]'
|   | `-CompoundStmt 0x634d268 <line:189:5, line:192:5>
|   |   `-ForStmt 0x634d228 <line:190:7, line:191:25>
|   |     |-DeclStmt 0x634cfb0 <line:190:12, col:26>
|   |     | `-VarDecl 0x634cf20 <col:12, col:25> __n 'size_t':'unsigned long'
|   |     |   `-ImplicitCastExpr 0x634cf98 <col:25> 'size_t':'unsigned long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x634cf78 <col:25> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x634d030 <col:28, col:34> '_Bool' '<'
|   |     | |-ImplicitCastExpr 0x634d018 <col:28> 'size_t':'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x634cfc8 <col:28> 'size_t':'unsigned long' lvalue Var 0x634cf20 '__n' 'size_t':'unsigned long'
|   |     | `-DeclRefExpr 0x634cff0 <col:34> 'size_t':'unsigned long' NonTypeTemplateParm 0x63bcaa0 '_Nm' 'size_t':'unsigned long'
|   |     |-UnaryOperator 0x634d080 <col:39, col:41> 'size_t':'unsigned long' lvalue prefix '++'
|   |     | `-DeclRefExpr 0x634d058 <col:41> 'size_t':'unsigned long' lvalue Var 0x634cf20 '__n' 'size_t':'unsigned long'
|   |     `-CallExpr 0x634d1f0 <line:191:2, col:25> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x634d0a0 <col:2> '<overloaded function type>' lvalue (ADL) = 'swap' 0x634ceb0 0x63bc770
|   |       |-ArraySubscriptExpr 0x634d150 <col:7, col:14> '<dependent type>' lvalue
|   |       | |-DeclRefExpr 0x634d100 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x634cbb0 '__a' '_Tp (&)[_Nm]'
|   |       | `-DeclRefExpr 0x634d128 <col:11> 'size_t':'unsigned long' lvalue Var 0x634cf20 '__n' 'size_t':'unsigned long'
|   |       `-ArraySubscriptExpr 0x634d1c8 <col:17, col:24> '<dependent type>' lvalue
|   |         |-DeclRefExpr 0x634d178 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x634cd00 '__b' '_Tp (&)[_Nm]'
|   |         `-DeclRefExpr 0x634d1a0 <col:21> 'size_t':'unsigned long' lvalue Var 0x634cf20 '__n' 'size_t':'unsigned long'
|-NamespaceDecl 0x634d2c0 prev 0x63bc3f0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_pair.h:65:1, line:293:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x634d320 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x634d4f0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_pair.h:95:3, line:209:5> pair
| | |-TemplateTypeParmDecl 0x634d360 <line:95:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x634d3d0 <col:23, col:29> class _T2
| | `-CXXRecordDecl 0x634d460 <line:96:5, line:209:5> struct pair definition
| |   |-CXXRecordDecl 0x634d790 <line:96:5, col:12> struct pair
| |   |-TypedefDecl 0x634d830 <line:98:7, col:19> first_type '_T1'
| |   |-TypedefDecl 0x634d890 <line:99:7, col:19> second_type '_T2'
| |   |-FieldDecl 0x634d8f0 <line:101:7, col:11> first '_T1'
| |   |-FieldDecl 0x634d950 <line:102:7, col:11> second '_T2'
| |   |-CXXConstructorDecl 0x634d9e0 <line:108:26, line:109:29> pair<_T1, _T2> 'void (void)'
| |   | |-CXXCtorInitializer Field 0x634d8f0 'first' '_T1'
| |   | | |-ParenListExpr 0x63c7098 <col:14, col:15> 'NULL TYPE'
| |   | |-CXXCtorInitializer Field 0x634d950 'second' '_T2'
| |   | | |-ParenListExpr 0x63c70e8 <col:24, col:25> 'NULL TYPE'
| |   | `-CompoundStmt 0x63c7148 <col:27, col:29>
| |   |-CXXConstructorDecl 0x63c69f0 <line:112:26, line:113:35> pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
| |   | |-ParmVarDecl 0x63c6810 <line:112:31, col:42> __a 'const _T1 &'
| |   | |-ParmVarDecl 0x63c68e0 <col:47, col:58> __b 'const _T2 &'
| |   | |-CXXCtorInitializer Field 0x634d8f0 'first' '_T1'
| |   | | |-ParenListExpr 0x63c7188 <line:113:14, col:18> 'NULL TYPE'
| |   | | | `-DeclRefExpr 0x63c7160 <col:15> 'const _T1' lvalue ParmVar 0x63c6810 '__a' 'const _T1 &'
| |   | |-CXXCtorInitializer Field 0x634d950 'second' '_T2'
| |   | | |-ParenListExpr 0x63c7210 <col:27, col:31> 'NULL TYPE'
| |   | | | `-DeclRefExpr 0x63c71e8 <col:28> 'const _T2' lvalue ParmVar 0x63c68e0 '__b' 'const _T2 &'
| |   | `-CompoundStmt 0x63c7278 <col:33, col:35>
| |   `-FunctionTemplateDecl 0x63c7020 <line:117:7, line:119:43> pair<_T1, _T2>
| |     |-TemplateTypeParmDecl 0x63c6ac0 <line:117:16, col:22> class _U1
| |     |-TemplateTypeParmDecl 0x63c6b60 <col:27, col:33> class _U2
| |     |-CXXConstructorDecl 0x63c6f60 <line:118:2, line:119:43> pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
| |     | |-ParmVarDecl 0x63c6e60 <line:118:7, col:29> __p 'const pair<_U1, _U2> &'
| |     | |-CXXCtorInitializer Field 0x634d8f0 'first' '_T1'
| |     | | |-ParenListExpr 0x63c7310 <line:119:9, col:19> 'NULL TYPE'
| |     | | | `-CXXDependentScopeMemberExpr 0x63c72b8 <col:10, col:14> '<dependent type>' lvalue
| |     | | |   `-DeclRefExpr 0x63c7290 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x63c6e60 '__p' 'const pair<_U1, _U2> &'
| |     | |-CXXCtorInitializer Field 0x634d950 'second' '_T2'
| |     | | |-ParenListExpr 0x63c73e8 <col:28, col:39> 'NULL TYPE'
| |     | | | `-CXXDependentScopeMemberExpr 0x63c7390 <col:29, col:33> '<dependent type>' lvalue
| |     | | |   `-DeclRefExpr 0x63c7368 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x63c6e60 '__p' 'const pair<_U1, _U2> &'
| |     | `-CompoundStmt 0x63c7458 <col:41, col:43>
| |-FunctionTemplateDecl 0x63c7b70 <line:212:3, line:215:66> operator==
| | |-TemplateTypeParmDecl 0x63c7470 <line:212:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63c74e0 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63c7ad0 <line:213:5, line:215:66> operator== '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63c77b0 <line:214:16, col:38> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63c79c0 <col:43, col:65> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63c7f50 <line:215:5, col:66>
| | |   `-ReturnStmt 0x63c7f30 <col:7, col:58>
| | |     `-BinaryOperator 0x63c7f08 <col:14, col:58> '<dependent type>' '&&'
| | |       |-CXXOperatorCallExpr 0x63c7d20 <col:14, col:31> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x63c7cc8 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70
| | |       | |-CXXDependentScopeMemberExpr 0x63c7bf0 <col:14, col:18> '<dependent type>' lvalue
| | |       | | `-DeclRefExpr 0x63c7bc8 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c77b0 '__x' 'const pair<_T1, _T2> &'
| | |       | `-CXXDependentScopeMemberExpr 0x63c7c70 <col:27, col:31> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63c7c48 <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c79c0 '__y' 'const pair<_T1, _T2> &'
| | |       `-CXXOperatorCallExpr 0x63c7ec0 <col:40, col:58> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x63c7e68 <col:51> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70
| | |         |-CXXDependentScopeMemberExpr 0x63c7d90 <col:40, col:44> '<dependent type>' lvalue
| | |         | `-DeclRefExpr 0x63c7d68 <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c77b0 '__x' 'const pair<_T1, _T2> &'
| | |         `-CXXDependentScopeMemberExpr 0x63c7e10 <col:54, col:58> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63c7de8 <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c79c0 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x63c85a0 <line:218:3, line:222:65> operator<
| | |-TemplateTypeParmDecl 0x63c7f70 <line:218:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63c7fe0 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63c8500 <line:219:5, line:222:65> operator< '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63c8220 <line:220:15, col:37> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63c8430 <col:42, col:64> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63c8bd0 <line:221:5, line:222:65>
| | |   `-ReturnStmt 0x63c8bb0 <line:221:7, line:222:62>
| | |     `-BinaryOperator 0x63c8b88 <line:221:14, line:222:62> '<dependent type>' '||'
| | |       |-CXXOperatorCallExpr 0x63c8750 <line:221:14, col:30> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x63c86f8 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |       | |-CXXDependentScopeMemberExpr 0x63c8648 <col:14, col:18> '<dependent type>' lvalue
| | |       | | `-DeclRefExpr 0x63c85f8 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8220 '__x' 'const pair<_T1, _T2> &'
| | |       | `-CXXDependentScopeMemberExpr 0x63c86a0 <col:26, col:30> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63c8620 <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8430 '__y' 'const pair<_T1, _T2> &'
| | |       `-ParenExpr 0x63c8b68 <line:222:10, col:62> '<dependent type>'
| | |         `-BinaryOperator 0x63c8b40 <col:11, col:56> '<dependent type>' '&&'
| | |           |-UnaryOperator 0x63c8980 <col:11, col:34> '<dependent type>' prefix '!'
| | |           | `-ParenExpr 0x63c8960 <col:12, col:34> '<dependent type>'
| | |           |   `-CXXOperatorCallExpr 0x63c8918 <col:13, col:29> '<dependent type>'
| | |           |     |-UnresolvedLookupExpr 0x63c88c0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |           |     |-CXXDependentScopeMemberExpr 0x63c8810 <col:13, col:17> '<dependent type>' lvalue
| | |           |     | `-DeclRefExpr 0x63c87c0 <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8430 '__y' 'const pair<_T1, _T2> &'
| | |           |     `-CXXDependentScopeMemberExpr 0x63c8868 <col:25, col:29> '<dependent type>' lvalue
| | |           |       `-DeclRefExpr 0x63c87e8 <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8220 '__x' 'const pair<_T1, _T2> &'
| | |           `-CXXOperatorCallExpr 0x63c8af8 <col:39, col:56> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0x63c8aa0 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |             |-CXXDependentScopeMemberExpr 0x63c89f0 <col:39, col:43> '<dependent type>' lvalue
| | |             | `-DeclRefExpr 0x63c89a0 <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8220 '__x' 'const pair<_T1, _T2> &'
| | |             `-CXXDependentScopeMemberExpr 0x63c8a48 <col:52, col:56> '<dependent type>' lvalue
| | |               `-DeclRefExpr 0x63c89c8 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8430 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x63c9220 <line:225:3, line:228:29> operator!=
| | |-TemplateTypeParmDecl 0x63c8bf0 <line:225:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63c8c60 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63c9180 <line:226:5, line:228:29> operator!= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63c8ea0 <line:227:16, col:38> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63c90b0 <col:43, col:65> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63c93c8 <line:228:5, col:29>
| | |   `-ReturnStmt 0x63c93a8 <col:7, col:26>
| | |     `-UnaryOperator 0x63c9388 <col:14, col:26> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63c9368 <col:15, col:26> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63c9320 <col:16, col:23> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63c92c8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70
| | |           |-DeclRefExpr 0x63c9278 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c8ea0 '__x' 'const pair<_T1, _T2> &'
| | |           `-DeclRefExpr 0x63c92a0 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c90b0 '__y' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x63c9a70 <line:231:3, line:234:25> operator>
| | |-TemplateTypeParmDecl 0x63c93f0 <line:231:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63c9460 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63c99d0 <line:232:5, line:234:25> operator> '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63c96a0 <line:233:15, col:37> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63c9900 <col:42, col:64> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63c9bd8 <line:234:5, col:25>
| | |   `-ReturnStmt 0x63c9bb8 <col:7, col:20>
| | |     `-CXXOperatorCallExpr 0x63c9b70 <col:14, col:20> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63c9b18 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |       |-DeclRefExpr 0x63c9ac8 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c9900 '__y' 'const pair<_T1, _T2> &'
| | |       `-DeclRefExpr 0x63c9af0 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c96a0 '__x' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x63ca230 <line:237:3, line:240:28> operator<=
| | |-TemplateTypeParmDecl 0x63c9c00 <line:237:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63c9c70 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63ca190 <line:238:5, line:240:28> operator<= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63c9eb0 <line:239:16, col:38> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63ca0c0 <col:43, col:65> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63ca3d8 <line:240:5, col:28>
| | |   `-ReturnStmt 0x63ca3b8 <col:7, col:25>
| | |     `-UnaryOperator 0x63ca398 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63ca378 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63ca330 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63ca2d8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |           |-DeclRefExpr 0x63ca288 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x63ca0c0 '__y' 'const pair<_T1, _T2> &'
| | |           `-DeclRefExpr 0x63ca2b0 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x63c9eb0 '__x' 'const pair<_T1, _T2> &'
| |-FunctionTemplateDecl 0x63caa80 <line:243:3, line:246:28> operator>=
| | |-TemplateTypeParmDecl 0x63ca400 <line:243:12, col:18> class _T1
| | |-TemplateTypeParmDecl 0x63ca470 <col:23, col:29> class _T2
| | |-FunctionDecl 0x63ca9e0 <line:244:5, line:246:28> operator>= '_Bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
| | | |-ParmVarDecl 0x63ca6b0 <line:245:16, col:38> __x 'const pair<_T1, _T2> &'
| | | |-ParmVarDecl 0x63ca910 <col:43, col:65> __y 'const pair<_T1, _T2> &'
| | | `-CompoundStmt 0x63cac28 <line:246:5, col:28>
| | |   `-ReturnStmt 0x63cac08 <col:7, col:25>
| | |     `-UnaryOperator 0x63cabe8 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63cabc8 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63cab80 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63cab28 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0
| | |           |-DeclRefExpr 0x63caad8 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x63ca6b0 '__x' 'const pair<_T1, _T2> &'
| | |           `-DeclRefExpr 0x63cab00 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x63ca910 '__y' 'const pair<_T1, _T2> &'
| `-FunctionTemplateDecl 0x63cb0f0 <line:284:3, line:287:40> make_pair
|   |-TemplateTypeParmDecl 0x63cac50 <line:284:12, col:18> class _T1
|   |-TemplateTypeParmDecl 0x63cacc0 <col:23, col:29> class _T2
|   |-FunctionDecl 0x63cb050 <line:285:5, line:287:40> make_pair 'pair<_T1, _T2> (_T1, _T2)' inline
|   | |-ParmVarDecl 0x63cae90 <line:286:15, col:19> __x '_T1'
|   | |-ParmVarDecl 0x63caf00 <col:24, col:28> __y '_T2'
|   | `-CompoundStmt 0x63cb368 <line:287:5, col:40>
|   |   `-ReturnStmt 0x63cb348 <col:7, col:37>
|   |     `-CXXUnresolvedConstructExpr 0x63cb310 <col:14, col:37> 'pair<_T1, _T2>'
|   |       |-DeclRefExpr 0x63cb2c0 <col:29> '_T1' lvalue ParmVar 0x63cae90 '__x' '_T1'
|   |       `-DeclRefExpr 0x63cb2e8 <col:34> '_T2' lvalue ParmVar 0x63caf00 '__y' '_T2'
|-NamespaceDecl 0x63cb3c0 prev 0x634d2c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_types.h:70:1, line:233:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x63cb420 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-CXXRecordDecl 0x63cb460 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_types.h:89:3, col:31> struct input_iterator_tag definition
| | `-CXXRecordDecl 0x63cb570 <col:3, col:10> struct input_iterator_tag
| |-CXXRecordDecl 0x63cb600 <line:92:3, col:32> struct output_iterator_tag definition
| | `-CXXRecordDecl 0x63cb710 <col:3, col:10> struct output_iterator_tag
| |-CXXRecordDecl 0x63cd940 <line:95:3, col:61> struct forward_iterator_tag definition
| | |-public 'struct std::input_iterator_tag'
| | `-CXXRecordDecl 0x63cda90 <col:3, col:10> struct forward_iterator_tag
| |-CXXRecordDecl 0x63cdb20 <line:99:3, col:69> struct bidirectional_iterator_tag definition
| | |-public 'struct std::forward_iterator_tag'
| | `-CXXRecordDecl 0x63cdc70 <col:3, col:10> struct bidirectional_iterator_tag
| |-CXXRecordDecl 0x63cdd00 <line:103:3, col:75> struct random_access_iterator_tag definition
| | |-public 'struct std::bidirectional_iterator_tag'
| | `-CXXRecordDecl 0x63cde50 <col:3, col:10> struct random_access_iterator_tag
| |-ClassTemplateDecl 0x63ce2e0 <line:116:3, line:130:5> iterator
| | |-TemplateTypeParmDecl 0x63cdee0 <line:116:12, col:21> typename _Category
| | |-TemplateTypeParmDecl 0x63cdf50 <col:32, col:41> typename _Tp
| | |-TemplateTypeParmDecl 0x63cdff0 <col:46, col:67> typename _Distance 'ptrdiff_t':'long'
| | |-TemplateTypeParmDecl 0x63ce0d0 <line:117:12, col:35> typename _Pointer '_Tp *'
| | |-TemplateTypeParmDecl 0x63ce1b0 <col:38, col:63> typename _Reference '_Tp &'
| | |-CXXRecordDecl 0x63ce250 <line:118:5, line:130:5> struct iterator definition
| | | |-CXXRecordDecl 0x63ce620 <line:118:5, col:12> struct iterator
| | | |-TypedefDecl 0x63ce6c0 <line:121:7, col:26> iterator_category '_Category'
| | | |-TypedefDecl 0x63ce720 <line:123:7, col:26> value_type '_Tp'
| | | |-TypedefDecl 0x63ce780 <line:125:7, col:26> difference_type '_Distance'
| | | |-TypedefDecl 0x63ce7e0 <line:127:7, col:26> pointer '_Pointer'
| | | `-TypedefDecl 0x63ce840 <line:129:7, col:26> reference '_Reference'
| | |-ClassTemplateSpecializationDecl 0x63ed5a0 <line:116:3, line:130:5> struct iterator definition
| | | |-TemplateArgument type 'struct std::output_iterator_tag'
| | | |-TemplateArgument type 'void'
| | | |-TemplateArgument type 'void'
| | | |-TemplateArgument type 'void'
| | | |-TemplateArgument type 'void'
| | | |-CXXRecordDecl 0x63ed8a0 prev 0x63ed5a0 <line:118:5, col:12> struct iterator
| | | |-TypedefDecl 0x63ed970 <line:121:7, col:26> iterator_category 'struct std::output_iterator_tag':'struct std::output_iterator_tag'
| | | |-TypedefDecl 0x63eda00 <line:123:7, col:26> value_type 'void':'void'
| | | |-TypedefDecl 0x63eda90 <line:125:7, col:26> difference_type 'void':'void'
| | | |-TypedefDecl 0x63edb20 <line:127:7, col:26> pointer 'void':'void'
| | | `-TypedefDecl 0x63edbb0 <line:129:7, col:26> reference 'void':'void'
| | |-ClassTemplateSpecializationDecl 0x64b0400 <line:116:3, line:130:5> struct iterator definition
| | | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | | |-TemplateArgument type '_Bool'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument type '_Bool *'
| | | |-TemplateArgument type '_Bool &'
| | | |-CXXRecordDecl 0x64b06b0 prev 0x64b0400 <line:118:5, col:12> struct iterator
| | | |-TypedefDecl 0x64b0780 <line:121:7, col:26> iterator_category 'struct std::random_access_iterator_tag':'struct std::random_access_iterator_tag'
| | | |-TypedefDecl 0x64b07e0 <line:123:7, col:26> value_type '_Bool':'_Bool'
| | | |-TypedefDecl 0x64b0870 <line:125:7, col:26> difference_type 'long':'long'
| | | |-TypedefDecl 0x64b0900 <line:127:7, col:26> pointer '_Bool *':'_Bool *'
| | | |-TypedefDecl 0x64b0990 <line:129:7, col:26> reference '_Bool &':'_Bool &'
| | | |-CXXConstructorDecl 0x64b1b00 <line:118:12> iterator 'void (void)' inline noexcept-unevaluated 0x64b1b00
| | | | `-CompoundStmt 0x64b1dd0 <col:12>
| | | |-CXXConstructorDecl 0x64b1c30 <col:12> iterator 'void (const struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &> &) throw()' inline
| | | | |-ParmVarDecl 0x64b1d70 <col:12> 'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &> &'
| | | | `-CompoundStmt 0x64b6458 <col:12>
| | | `-CXXDestructorDecl 0x64b79e0 <col:12> ~iterator 'void (void) throw()' inline
| | |-ClassTemplateSpecializationDecl 0x64d7820 <line:116:3, line:130:5> struct iterator definition
| | | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | | |-TemplateArgument type '_Bool'
| | | |-TemplateArgument type 'long'
| | | |-TemplateArgument type 'struct std::_Bit_reference *'
| | | |-TemplateArgument type 'struct std::_Bit_reference'
| | | |-CXXRecordDecl 0x64d7b20 prev 0x64d7820 <line:118:5, col:12> struct iterator
| | | |-TypedefDecl 0x64d7bc0 <line:121:7, col:26> iterator_category 'struct std::random_access_iterator_tag':'struct std::random_access_iterator_tag'
| | | |-TypedefDecl 0x64d7c20 <line:123:7, col:26> value_type '_Bool':'_Bool'
| | | |-TypedefDecl 0x64d7c80 <line:125:7, col:26> difference_type 'long':'long'
| | | |-TypedefDecl 0x64d7d10 <line:127:7, col:26> pointer 'struct std::_Bit_reference *':'struct std::_Bit_reference *'
| | | `-TypedefDecl 0x64d7da0 <line:129:7, col:26> reference 'struct std::_Bit_reference':'struct std::_Bit_reference'
| | `-ClassTemplateSpecializationDecl 0x64db8f0 <line:116:3, line:130:5> struct iterator definition
| |   |-TemplateArgument type 'struct std::random_access_iterator_tag'
| |   |-TemplateArgument type '_Bool'
| |   |-TemplateArgument type 'long'
| |   |-TemplateArgument type 'const _Bool *'
| |   |-TemplateArgument type '_Bool'
| |   |-CXXRecordDecl 0x64dbbf0 prev 0x64db8f0 <line:118:5, col:12> struct iterator
| |   |-TypedefDecl 0x64dbc90 <line:121:7, col:26> iterator_category 'struct std::random_access_iterator_tag':'struct std::random_access_iterator_tag'
| |   |-TypedefDecl 0x64dbcf0 <line:123:7, col:26> value_type '_Bool':'_Bool'
| |   |-TypedefDecl 0x64dbd50 <line:125:7, col:26> difference_type 'long':'long'
| |   |-TypedefDecl 0x64dd260 <line:127:7, col:26> pointer 'const _Bool *':'const _Bool *'
| |   `-TypedefDecl 0x64dd2f0 <line:129:7, col:26> reference '_Bool':'_Bool'
| |-ClassTemplateDecl 0x63cf810 <line:162:3, line:170:5> iterator_traits
| | |-TemplateTypeParmDecl 0x63ce890 <line:162:12, col:21> typename _Iterator
| | |-CXXRecordDecl 0x63cf780 <line:163:5, line:170:5> struct iterator_traits definition
| | | |-CXXRecordDecl 0x63cfa90 <line:163:5, col:12> struct iterator_traits
| | | |-TypedefDecl 0x63cfc00 <line:165:7, col:53> iterator_category 'typename _Iterator::iterator_category'
| | | |-TypedefDecl 0x63cfd00 <line:166:7, col:53> value_type 'typename _Iterator::value_type'
| | | |-TypedefDecl 0x63cfe00 <line:167:7, col:53> difference_type 'typename _Iterator::difference_type'
| | | |-TypedefDecl 0x63cff00 <line:168:7, col:53> pointer 'typename _Iterator::pointer'
| | | `-TypedefDecl 0x63d0000 <line:169:7, col:53> reference 'typename _Iterator::reference'
| | |-ClassTemplateSpecializationDecl 0x64d6050 <line:162:3, line:170:5> struct iterator_traits definition
| | | |-TemplateArgument type 'struct std::_Bit_iterator'
| | | |-CXXRecordDecl 0x64d62b0 prev 0x64d6050 <line:163:5, col:12> struct iterator_traits
| | | |-TypedefDecl 0x64d6410 <line:165:7, col:53> iterator_category 'typename struct _Bit_iterator::iterator_category':'struct std::random_access_iterator_tag'
| | | |-TypedefDecl 0x64d64f0 <line:166:7, col:53> value_type 'typename struct _Bit_iterator::value_type':'_Bool'
| | | |-TypedefDecl 0x64d65b0 <line:167:7, col:53> difference_type 'typename struct _Bit_iterator::difference_type':'long'
| | | |-TypedefDecl 0x64d6690 <line:168:7, col:53> pointer 'typename struct _Bit_iterator::pointer':'struct std::_Bit_reference *'
| | | `-TypedefDecl 0x64d6750 <line:169:7, col:53> reference 'typename struct _Bit_iterator::reference':'struct std::_Bit_reference'
| | |-ClassTemplateSpecializationDecl 0x64dacd0 <line:162:3, line:170:5> struct iterator_traits definition
| | | |-TemplateArgument type 'struct std::_Bit_const_iterator'
| | | |-CXXRecordDecl 0x64daf30 prev 0x64dacd0 <line:163:5, col:12> struct iterator_traits
| | | |-TypedefDecl 0x64db070 <line:165:7, col:53> iterator_category 'typename struct _Bit_const_iterator::iterator_category':'struct std::random_access_iterator_tag'
| | | |-TypedefDecl 0x64db130 <line:166:7, col:53> value_type 'typename struct _Bit_const_iterator::value_type':'_Bool'
| | | |-TypedefDecl 0x64db1f0 <line:167:7, col:53> difference_type 'typename struct _Bit_const_iterator::difference_type':'long'
| | | |-TypedefDecl 0x64db2d0 <line:168:7, col:53> pointer 'typename struct _Bit_const_iterator::pointer':'const _Bool *'
| | | `-TypedefDecl 0x64db3b0 <line:169:7, col:53> reference 'typename struct _Bit_const_iterator::reference':'_Bool'
| | `-ClassTemplateSpecializationDecl 0x6533610 <line:174:3, line:182:5> struct iterator_traits definition
| |   |-TemplateArgument type 'long long *'
| |   |-CXXRecordDecl 0x6533910 prev 0x6533610 <line:175:5, col:12> struct iterator_traits
| |   |-TypedefDecl 0x65339a0 <line:177:7, col:42> iterator_category 'struct std::random_access_iterator_tag'
| |   |-TypedefDecl 0x6533a00 <line:178:7, col:43> value_type 'long long':'long long'
| |   |-TypedefDecl 0x6533a50 <line:179:7, col:43> difference_type 'ptrdiff_t':'long'
| |   |-TypedefDecl 0x6533ab0 <line:180:7, col:43> pointer 'long long *'
| |   `-TypedefDecl 0x6533b40 <line:181:7, col:43> reference 'long long &'
| |-ClassTemplatePartialSpecializationDecl 0x63d01f0 <line:174:3, line:182:5> struct iterator_traits definition
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x63d0050 <line:174:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63d0400 <line:175:5, col:12> struct iterator_traits
| | |-TypedefDecl 0x63d04a0 <line:177:7, col:42> iterator_category 'struct std::random_access_iterator_tag'
| | |-TypedefDecl 0x63d0500 <line:178:7, col:43> value_type '_Tp'
| | |-TypedefDecl 0x63d0560 <line:179:7, col:43> difference_type 'ptrdiff_t':'long'
| | |-TypedefDecl 0x63d05c0 <line:180:7, col:43> pointer '_Tp *'
| | `-TypedefDecl 0x63d0650 <line:181:7, col:43> reference '_Tp &'
| |-ClassTemplatePartialSpecializationDecl 0x63d14f0 <line:185:3, line:193:5> struct iterator_traits definition
| | |-TemplateArgument type 'const type-parameter-0-0 *'
| | |-TemplateTypeParmDecl 0x63d06a0 <line:185:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x63d1700 <line:186:5, col:12> struct iterator_traits
| | |-TypedefDecl 0x63d17a0 <line:188:7, col:42> iterator_category 'struct std::random_access_iterator_tag'
| | |-TypedefDecl 0x63d1800 <line:189:7, col:43> value_type '_Tp'
| | |-TypedefDecl 0x63d1860 <line:190:7, col:43> difference_type 'ptrdiff_t':'long'
| | |-TypedefDecl 0x63d18c0 <line:191:7, col:43> pointer 'const _Tp *'
| | `-TypedefDecl 0x63d1950 <line:192:7, col:43> reference 'const _Tp &'
| |-FunctionTemplateDecl 0x63d1da0 <line:199:3, line:202:68> __iterator_category
| | |-TemplateTypeParmDecl 0x63d19a0 <line:199:12, col:21> typename _Iter
| | |-FunctionDecl 0x63d1d00 <line:200:5, line:202:68> __iterator_category 'typename iterator_traits<_Iter>::iterator_category (const _Iter &)' inline
| | | |-ParmVarDecl 0x63d1bf0 <line:201:25, col:36> 'const _Iter &'
| | | `-CompoundStmt 0x63d1fa8 <line:202:5, col:68>
| | |   `-ReturnStmt 0x63d1f88 <col:7, col:65>
| | |     `-CXXUnresolvedConstructExpr 0x63d1f60 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category'
| |-ClassTemplateDecl 0x63d2160 <line:208:3, line:214:5> _Iter_base
| | |-TemplateTypeParmDecl 0x63d1fd0 <line:208:12, col:21> typename _Iterator
| | |-NonTypeTemplateParmDecl 0x63d2050 <col:32, col:37> '_Bool' _HasBase
| | |-CXXRecordDecl 0x63d20d0 <line:209:5, line:214:5> struct _Iter_base definition
| | | |-CXXRecordDecl 0x63d2c70 <line:209:5, col:12> struct _Iter_base
| | | |-TypedefDecl 0x63d2d10 <line:211:7, col:25> iterator_type '_Iterator'
| | | `-CXXMethodDecl 0x63d2e90 <line:212:7, line:213:22> _S_base 'iterator_type (_Iterator)' static
| | |   |-ParmVarDecl 0x63d2d90 <line:212:36, col:46> __it '_Iterator'
| | |   `-CompoundStmt 0x63d2fb0 <line:213:7, col:22>
| | |     `-ReturnStmt 0x63d2f90 <col:9, col:16>
| | |       `-DeclRefExpr 0x63d2f68 <col:16> '_Iterator' lvalue ParmVar 0x63d2d90 '__it' '_Iterator'
| | |-ClassTemplateSpecializationDecl 0x652baa0 <line:208:3, line:214:5> struct _Iter_base definition
| | | |-TemplateArgument type 'unsigned long *'
| | | |-TemplateArgument integral 0
| | | |-CXXRecordDecl 0x652bd60 prev 0x652baa0 <line:209:5, col:12> struct _Iter_base
| | | |-TypedefDecl 0x652be30 <line:211:7, col:25> iterator_type 'unsigned long *':'unsigned long *'
| | | `-CXXMethodDecl 0x652bfb0 <line:212:7, line:213:22> _S_base 'iterator_type (unsigned long *)' static
| | |   |-ParmVarDecl 0x652beb0 <line:212:36, col:46> __it 'unsigned long *':'unsigned long *'
| | |   `-CompoundStmt 0x652f4b8 <line:213:7, col:22>
| | |     `-ReturnStmt 0x652f498 <col:9, col:16>
| | |       `-ImplicitCastExpr 0x652f480 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
| | |         `-DeclRefExpr 0x652f458 <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652beb0 '__it' 'unsigned long *':'unsigned long *'
| | `-ClassTemplateSpecializationDecl 0x6535420 <line:208:3, line:214:5> struct _Iter_base definition
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument integral 0
| |   |-CXXRecordDecl 0x6535670 prev 0x6535420 <line:209:5, col:12> struct _Iter_base
| |   |-TypedefDecl 0x6535740 <line:211:7, col:25> iterator_type 'long long *':'long long *'
| |   `-CXXMethodDecl 0x65358c0 <line:212:7, line:213:22> _S_base 'iterator_type (long long *)' static
| |     |-ParmVarDecl 0x65357c0 <line:212:36, col:46> __it 'long long *':'long long *'
| |     `-CompoundStmt 0x653b958 <line:213:7, col:22>
| |       `-ReturnStmt 0x653b938 <col:9, col:16>
| |         `-ImplicitCastExpr 0x653b920 <col:16> 'long long *':'long long *' <LValueToRValue>
| |           `-DeclRefExpr 0x653b8f8 <col:16> 'long long *':'long long *' lvalue ParmVar 0x65357c0 '__it' 'long long *':'long long *'
| `-ClassTemplatePartialSpecializationDecl 0x63d31b0 <line:216:3, line:222:5> struct _Iter_base definition
|   |-TemplateArgument type 'type-parameter-0-0'
|   |-TemplateArgument integral 1
|   |-TemplateTypeParmDecl 0x63d2fd0 <line:216:12, col:21> typename _Iterator
|   |-CXXRecordDecl 0x63d3410 <line:217:5, col:12> struct _Iter_base
|   |-TypedefDecl 0x63d3570 <line:219:7, col:49> iterator_type 'typename _Iterator::iterator_type'
|   `-CXXMethodDecl 0x63d36f0 <line:220:7, line:221:29> _S_base 'iterator_type (_Iterator)' static
|     |-ParmVarDecl 0x63d35f0 <line:220:36, col:46> __it '_Iterator'
|     `-CompoundStmt 0x63d3890 <line:221:7, col:29>
|       `-ReturnStmt 0x63d3870 <col:9, col:26>
|         `-CallExpr 0x63d3848 <col:16, col:26> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x63d37f0 <col:16, col:21> '<dependent type>' lvalue
|             `-DeclRefExpr 0x63d37c8 <col:16> '_Iterator' lvalue ParmVar 0x63d35f0 '__it' '_Iterator'
|-NamespaceDecl 0x63d38b0 prev 0x63cb3c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/debug/debug.h:46:1, line:49:1> std
| |-original Namespace 0x62eacf0 'std'
| `-NamespaceDecl 0x63d3910 <line:48:3, col:23> __debug
|-NamespaceDecl 0x63d3970 <line:54:1, line:57:1> __gnu_debug
| `-UsingDirectiveDecl 0x63d39f0 <line:56:3, col:24> Namespace 0x63d3910 '__debug'
|-NamespaceDecl 0x63d3a70 prev 0x63d38b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_funcs.h:67:1, line:203:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x63d3ad0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-FunctionTemplateDecl 0x63dae70 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator_base_funcs.h:71:3, line:86:5> __distance
| | |-TemplateTypeParmDecl 0x63d3b10 <line:71:12, col:21> typename _InputIterator
| | |-FunctionDecl 0x63dadd0 <line:72:5, line:86:5> __distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, struct std::input_iterator_tag)' inline
| | | |-ParmVarDecl 0x63dabb0 <line:73:16, col:31> __first '_InputIterator'
| | | |-ParmVarDecl 0x63dac20 <col:40, col:55> __last '_InputIterator'
| | | |-ParmVarDecl 0x63dac90 <line:74:16> 'struct std::input_iterator_tag'
| | | `-CompoundStmt 0x63db2e8 <line:75:5, line:86:5>
| | |   |-DeclStmt 0x63db0b8 <line:79:7, col:72>
| | |   | `-VarDecl 0x63db040 <col:7, col:71> __n 'typename iterator_traits<_InputIterator>::difference_type'
| | |   |   `-IntegerLiteral 0x63db098 <col:71> 'int' 0
| | |   |-WhileStmt 0x63db278 <line:80:7, line:84:2>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x63db178 <line:80:14, col:25> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x63db120 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220
| | |   | | |-DeclRefExpr 0x63db0d0 <col:14> '_InputIterator' lvalue ParmVar 0x63dabb0 '__first' '_InputIterator'
| | |   | | `-DeclRefExpr 0x63db0f8 <col:25> '_InputIterator' lvalue ParmVar 0x63dac20 '__last' '_InputIterator'
| | |   | `-CompoundStmt 0x63db250 <line:81:2, line:84:2>
| | |   |   |-UnaryOperator 0x63db1e8 <line:82:4, col:6> '<dependent type>' prefix '++'
| | |   |   | `-DeclRefExpr 0x63db1c0 <col:6> '_InputIterator' lvalue ParmVar 0x63dabb0 '__first' '_InputIterator'
| | |   |   `-UnaryOperator 0x63db230 <line:83:4, col:6> '<dependent type>' prefix '++'
| | |   |     `-DeclRefExpr 0x63db208 <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x63db040 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
| | |   `-ReturnStmt 0x63db2c8 <line:85:7, col:14>
| | |     `-DeclRefExpr 0x63db2a0 <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x63db040 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
| |-FunctionTemplateDecl 0x63db7c0 <line:88:3, line:97:5> __distance
| | |-TemplateTypeParmDecl 0x63db320 <line:88:12, col:21> typename _RandomAccessIterator
| | |-FunctionDecl 0x63db720 <line:89:5, line:97:5> __distance 'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, struct std::random_access_iterator_tag)' inline
| | | |-ParmVarDecl 0x63db500 <line:90:16, col:38> __first '_RandomAccessIterator'
| | | |-ParmVarDecl 0x63db570 <col:47, col:69> __last '_RandomAccessIterator'
| | | |-ParmVarDecl 0x63db5e0 <line:91:16> 'struct std::random_access_iterator_tag'
| | | `-CompoundStmt 0x63db8b8 <line:92:5, line:97:5>
| | |   `-ReturnStmt 0x63db898 <line:96:7, col:23>
| | |     `-BinaryOperator 0x63db870 <col:14, col:23> '<dependent type>' '-'
| | |       |-DeclRefExpr 0x63db820 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x63db570 '__last' '_RandomAccessIterator'
| | |       `-DeclRefExpr 0x63db848 <col:23> '_RandomAccessIterator' lvalue ParmVar 0x63db500 '__first' '_RandomAccessIterator'
| |-FunctionTemplateDecl 0x63dbd20 <line:112:3, line:119:5> distance
| | |-TemplateTypeParmDecl 0x63db8e0 <line:112:12, col:21> typename _InputIterator
| | |-FunctionDecl 0x63dbc80 <line:113:5, line:119:5> distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)' inline
| | | |-ParmVarDecl 0x63dbaf0 <line:114:14, col:29> __first '_InputIterator'
| | | |-ParmVarDecl 0x63dbb60 <col:38, col:53> __last '_InputIterator'
| | | `-CompoundStmt 0x63dbf90 <line:115:5, line:119:5>
| | |   `-ReturnStmt 0x63dbf70 <line:117:7, line:118:42>
| | |     `-CallExpr 0x63dbf30 <line:117:14, line:118:42> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63dbdb0 <line:117:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__distance' 0x63dae70 0x63db7c0
| | |       |-DeclRefExpr 0x63dbe10 <col:30> '_InputIterator' lvalue ParmVar 0x63dbaf0 '__first' '_InputIterator'
| | |       |-DeclRefExpr 0x63dbe38 <col:39> '_InputIterator' lvalue ParmVar 0x63dbb60 '__last' '_InputIterator'
| | |       `-CallExpr 0x63dbf00 <line:118:9, col:41> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x63dbe80 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x63d1da0
| | |         `-DeclRefExpr 0x63dbed8 <col:34> '_InputIterator' lvalue ParmVar 0x63dbaf0 '__first' '_InputIterator'
| |-FunctionTemplateDecl 0x63dc3a0 <line:121:3, line:130:5> __advance
| | |-TemplateTypeParmDecl 0x63dbfb0 <line:121:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x63dc020 <col:37, col:46> typename _Distance
| | |-FunctionDecl 0x63dc300 <line:122:5, line:130:5> __advance 'void (_InputIterator &, _Distance, struct std::input_iterator_tag)' inline
| | | |-ParmVarDecl 0x63dc0f0 <line:123:15, col:31> __i '_InputIterator &'
| | | |-ParmVarDecl 0x63dc160 <col:36, col:46> __n '_Distance'
| | | |-ParmVarDecl 0x63dc1d0 <col:51> 'struct std::input_iterator_tag'
| | | `-CompoundStmt 0x63dc4e8 <line:124:5, line:130:5>
| | |   |-NullStmt 0x63dc400 <line:127:38>
| | |   `-WhileStmt 0x63dc4c0 <line:128:7, line:129:4>
| | |     |-<<<NULL>>>
| | |     |-UnaryOperator 0x63dc458 <line:128:14, col:17> '<dependent type>' postfix '--'
| | |     | `-DeclRefExpr 0x63dc410 <col:14> '_Distance' lvalue ParmVar 0x63dc160 '__n' '_Distance'
| | |     `-UnaryOperator 0x63dc4a0 <line:129:2, col:4> '<dependent type>' prefix '++'
| | |       `-DeclRefExpr 0x63dc478 <col:4> '_InputIterator' lvalue ParmVar 0x63dc0f0 '__i' '_InputIterator &'
| |-FunctionTemplateDecl 0x63dc900 <line:132:3, line:146:5> __advance
| | |-TemplateTypeParmDecl 0x63dc510 <line:132:12, col:21> typename _BidirectionalIterator
| | |-TemplateTypeParmDecl 0x63dc580 <col:45, col:54> typename _Distance
| | |-FunctionDecl 0x63dc860 <line:133:5, line:146:5> __advance 'void (_BidirectionalIterator &, _Distance, struct std::bidirectional_iterator_tag)' inline
| | | |-ParmVarDecl 0x63dc650 <line:134:15, col:39> __i '_BidirectionalIterator &'
| | | |-ParmVarDecl 0x63dc6c0 <col:44, col:54> __n '_Distance'
| | | |-ParmVarDecl 0x63dc730 <line:135:8> 'struct std::bidirectional_iterator_tag'
| | | `-CompoundStmt 0x63dce08 <line:136:5, line:146:5>
| | |   `-IfStmt 0x63dcdd8 <line:140:7, line:145:6>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x63dca00 <line:140:11, col:17> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x63dc9a8 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70
| | |     | |-DeclRefExpr 0x63dc960 <col:11> '_Distance' lvalue ParmVar 0x63dc6c0 '__n' '_Distance'
| | |     | `-IntegerLiteral 0x63dc988 <col:17> 'int' 0
| | |     |-WhileStmt 0x63dccd8 <line:141:9, line:142:6>
| | |     | |-<<<NULL>>>
| | |     | |-UnaryOperator 0x63dcc70 <line:141:16, col:19> '<dependent type>' postfix '--'
| | |     | | `-DeclRefExpr 0x63dca48 <col:16> '_Distance' lvalue ParmVar 0x63dc6c0 '__n' '_Distance'
| | |     | `-UnaryOperator 0x63dccb8 <line:142:4, col:6> '<dependent type>' prefix '++'
| | |     |   `-DeclRefExpr 0x63dcc90 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x63dc650 '__i' '_BidirectionalIterator &'
| | |     `-WhileStmt 0x63dcdb0 <line:144:9, line:145:6>
| | |       |-<<<NULL>>>
| | |       |-UnaryOperator 0x63dcd48 <line:144:16, col:19> '<dependent type>' postfix '++'
| | |       | `-DeclRefExpr 0x63dcd00 <col:16> '_Distance' lvalue ParmVar 0x63dc6c0 '__n' '_Distance'
| | |       `-UnaryOperator 0x63dcd90 <line:145:4, col:6> '<dependent type>' prefix '--'
| | |         `-DeclRefExpr 0x63dcd68 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x63dc650 '__i' '_BidirectionalIterator &'
| |-FunctionTemplateDecl 0x63dd220 <line:148:3, line:157:5> __advance
| | |-TemplateTypeParmDecl 0x63dce30 <line:148:12, col:21> typename _RandomAccessIterator
| | |-TemplateTypeParmDecl 0x63dcea0 <col:44, col:53> typename _Distance
| | |-FunctionDecl 0x63dd180 <line:149:5, line:157:5> __advance 'void (_RandomAccessIterator &, _Distance, struct std::random_access_iterator_tag)' inline
| | | |-ParmVarDecl 0x63dcf70 <line:150:15, col:38> __i '_RandomAccessIterator &'
| | | |-ParmVarDecl 0x63dcfe0 <col:43, col:53> __n '_Distance'
| | | |-ParmVarDecl 0x63dd050 <line:151:15> 'struct std::random_access_iterator_tag'
| | | `-CompoundStmt 0x63dd308 <line:152:5, line:157:5>
| | |   `-CompoundAssignOperator 0x63dd2d0 <line:156:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |     |-DeclRefExpr 0x63dd280 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x63dcf70 '__i' '_RandomAccessIterator &'
| | |     `-DeclRefExpr 0x63dd2a8 <col:14> '_Distance' lvalue ParmVar 0x63dcfe0 '__n' '_Distance'
| `-FunctionTemplateDecl 0x63dd690 <line:171:3, line:178:5> advance
|   |-TemplateTypeParmDecl 0x63dd330 <line:171:12, col:21> typename _InputIterator
|   |-TemplateTypeParmDecl 0x63dd3a0 <col:37, col:46> typename _Distance
|   |-FunctionDecl 0x63dd5f0 <line:172:5, line:178:5> advance 'void (_InputIterator &, _Distance)' inline
|   | |-ParmVarDecl 0x63dd470 <line:173:13, col:29> __i '_InputIterator &'
|   | |-ParmVarDecl 0x63dd4e0 <col:34, col:44> __n '_Distance'
|   | `-CompoundStmt 0x63ddae0 <line:174:5, line:178:5>
|   |   |-DeclStmt 0x63dd8e0 <line:176:7, col:74>
|   |   | `-VarDecl 0x63dd860 <col:7, col:71> __d 'typename iterator_traits<_InputIterator>::difference_type'
|   |   |   `-DeclRefExpr 0x63dd8b8 <col:71> '_Distance' lvalue ParmVar 0x63dd4e0 '__n' '_Distance'
|   |   `-CallExpr 0x63ddaa0 <line:177:7, col:61> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x63dd918 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__advance' 0x63dc3a0 0x63dc900 0x63dd220
|   |     |-DeclRefExpr 0x63dd980 <col:22> '_InputIterator' lvalue ParmVar 0x63dd470 '__i' '_InputIterator &'
|   |     |-DeclRefExpr 0x63dd9a8 <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x63dd860 '__d' 'typename iterator_traits<_InputIterator>::difference_type'
|   |     `-CallExpr 0x63dda70 <col:32, col:60> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x63dd9f0 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x63d1da0
|   |       `-DeclRefExpr 0x63dda48 <col:57> '_InputIterator' lvalue ParmVar 0x63dd470 '__i' '_InputIterator &'
|-NamespaceDecl 0x63ddb40 prev 0x63d3a70 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:67:1, line:692:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x63ddba0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x63de0b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:95:3, line:277:5> reverse_iterator
| | |-TemplateTypeParmDecl 0x63ddbe0 <line:95:12, col:21> typename _Iterator
| | |-CXXRecordDecl 0x63de020 <line:96:5, line:277:5> class reverse_iterator definition
| | | |-public 'iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference>'
| | | |-CXXRecordDecl 0x63dedc0 <line:96:5, col:11> class reverse_iterator
| | | |-AccessSpecDecl 0x63dee50 <line:103:5, col:14> protected
| | | |-FieldDecl 0x63dee90 <line:104:7, col:17> current '_Iterator'
| | | |-TypedefDecl 0x63e0800 <line:106:7, col:43> __traits_type 'iterator_traits<_Iterator>'
| | | |-AccessSpecDecl 0x63e0850 <line:108:5, col:11> public
| | | |-TypedefDecl 0x63e0890 <line:109:7, col:29> iterator_type '_Iterator'
| | | |-TypedefDecl 0x63e09a0 <line:110:7, col:55> difference_type 'typename __traits_type::difference_type'
| | | |-TypedefDecl 0x63e0a70 <line:111:7, col:48> pointer 'typename __traits_type::pointer'
| | | |-TypedefDecl 0x63e0b40 <line:112:7, col:50> reference 'typename __traits_type::reference'
| | | |-CXXConstructorDecl 0x63e0bd0 <line:120:7, col:40> reverse_iterator<_Iterator> 'void (void)'
| | | | |-CXXCtorInitializer Field 0x63dee90 'current' '_Iterator'
| | | | | |-ParenListExpr 0x63e34a8 <col:35, col:36> 'NULL TYPE'
| | | | `-CompoundStmt 0x63e3500 <col:38, col:40>
| | | |-CXXConstructorDecl 0x63e0dc0 <line:125:7, line:126:60> reverse_iterator<_Iterator> 'void (iterator_type)'
| | | | |-ParmVarDecl 0x63e0cc0 <col:24, col:38> __x 'iterator_type':'_Iterator'
| | | | |-CXXCtorInitializer Field 0x63dee90 'current' '_Iterator'
| | | | | |-ParenListExpr 0x63e3540 <col:52, col:56> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x63e3518 <col:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x63e0cc0 '__x' 'iterator_type':'_Iterator'
| | | | `-CompoundStmt 0x63e35a0 <col:58, col:60>
| | | |-CXXConstructorDecl 0x63e0f80 <line:131:7, line:132:32> reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iterator> &)'
| | | | |-ParmVarDecl 0x63e0ec0 <line:131:24, col:48> __x 'const reverse_iterator<_Iterator> &'
| | | | |-CXXCtorInitializer Field 0x63dee90 'current' '_Iterator'
| | | | | |-ParenListExpr 0x63e3638 <line:132:16, col:28> 'NULL TYPE'
| | | | | | `-CXXDependentScopeMemberExpr 0x63e35e0 <col:17, col:21> '<dependent type>' lvalue
| | | | | |   `-DeclRefExpr 0x63e35b8 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e0ec0 '__x' 'const reverse_iterator<_Iterator> &'
| | | | `-CompoundStmt 0x63e36a0 <col:30, col:32>
| | | |-FunctionTemplateDecl 0x63e1440 <line:138:7, line:140:26> reverse_iterator<_Iterator>
| | | | |-TemplateTypeParmDecl 0x63e1040 <line:138:16, col:25> typename _Iter
| | | | |-CXXConstructorDecl 0x63e1380 <line:139:9, line:140:26> reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iter> &)'
| | | | | |-ParmVarDecl 0x63e1280 <line:139:26, col:57> __x 'const reverse_iterator<_Iter> &'
| | | | | |-CXXCtorInitializer Field 0x63dee90 'current' '_Iterator'
| | | | | | |-ParenListExpr 0x63e50e8 <line:140:11, col:22> 'NULL TYPE'
| | | | | | | `-CallExpr 0x63e50c0 <col:12, col:21> '<dependent type>'
| | | | | | |   `-CXXDependentScopeMemberExpr 0x63e36e0 <col:12, col:16> '<dependent type>' lvalue
| | | | | | |     `-DeclRefExpr 0x63e36b8 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x63e1280 '__x' 'const reverse_iterator<_Iter> &'
| | | | | `-CompoundStmt 0x63e5150 <col:24, col:26>
| | | |-CXXMethodDecl 0x63e1510 <line:145:7, line:147:25> base 'iterator_type (void) const'
| | | | `-CompoundStmt 0x63e5200 <col:7, col:25>
| | | |   `-ReturnStmt 0x63e51e0 <col:9, col:16>
| | | |     `-MemberExpr 0x63e51b0 <col:16> 'const _Iterator' lvalue ->current 0x63dee90
| | | |       `-CXXThisExpr 0x63e5198 <col:16> 'const reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x63e1650 <line:159:7, line:164:7> operator* 'reference (void) const'
| | | | `-CompoundStmt 0x63e5370 <line:161:7, line:164:7>
| | | |   |-DeclStmt 0x63e52d0 <line:162:2, col:27>
| | | |   | `-VarDecl 0x63e5230 <col:2, col:20> __tmp '_Iterator'
| | | |   |   `-MemberExpr 0x63e52a0 <col:20> 'const _Iterator' lvalue ->current 0x63dee90
| | | |   |     `-CXXThisExpr 0x63e5288 <col:20> 'const reverse_iterator<_Iterator> *' this
| | | |   `-ReturnStmt 0x63e5350 <line:163:2, col:12>
| | | |     `-UnaryOperator 0x63e5330 <col:9, col:12> '<dependent type>' prefix '*'
| | | |       `-UnaryOperator 0x63e5310 <col:10, col:12> '<dependent type>' prefix '--'
| | | |         `-DeclRefExpr 0x63e52e8 <col:12> '_Iterator' lvalue Var 0x63e5230 '__tmp' '_Iterator'
| | | |-CXXMethodDecl 0x63e2760 <line:171:7, line:173:32> operator-> 'pointer (void) const'
| | | | `-CompoundStmt 0x63e5468 <col:7, col:32>
| | | |   `-ReturnStmt 0x63e5448 <col:9, col:29>
| | | |     `-UnaryOperator 0x63e5428 <col:16, col:29> '<dependent type>' prefix '&'
| | | |       `-ParenExpr 0x63e5408 <col:17, col:29> '<dependent type>'
| | | |         `-CallExpr 0x63e53e0 <col:18, col:28> '<dependent type>'
| | | |           `-MemberExpr 0x63e53b0 <col:18, col:26> '<bound member function type>' ->operator* 0x63e1650
| | | |             `-CXXThisExpr 0x63e5398 <col:18> 'const reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x63e2880 <line:180:7, line:185:7> operator++ 'reverse_iterator<_Iterator> &(void)'
| | | | `-CompoundStmt 0x63e5548 <line:182:7, line:185:7>
| | | |   |-UnaryOperator 0x63e54d0 <line:183:2, col:4> '<dependent type>' prefix '--'
| | | |   | `-MemberExpr 0x63e54a0 <col:4> '_Iterator' lvalue ->current 0x63dee90
| | | |   |   `-CXXThisExpr 0x63e5488 <col:4> 'reverse_iterator<_Iterator> *' this
| | | |   `-ReturnStmt 0x63e5528 <line:184:2, col:10>
| | | |     `-UnaryOperator 0x63e5508 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63e54f0 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x63e29f0 <line:192:7, line:198:7> operator++ 'reverse_iterator<_Iterator> (int)'
| | | | |-ParmVarDecl 0x63e2930 <line:193:18> 'int'
| | | | `-CompoundStmt 0x63e56d8 <line:194:7, line:198:7>
| | | |   |-DeclStmt 0x63e5610 <line:195:2, col:32>
| | | |   | `-VarDecl 0x63e5580 <col:2, col:28> __tmp 'reverse_iterator<_Iterator>'
| | | |   |   `-UnaryOperator 0x63e55f0 <col:27, col:28> '<dependent type>' prefix '*'
| | | |   |     `-CXXThisExpr 0x63e55d8 <col:28> 'reverse_iterator<_Iterator> *' this
| | | |   |-UnaryOperator 0x63e5670 <line:196:2, col:4> '<dependent type>' prefix '--'
| | | |   | `-MemberExpr 0x63e5640 <col:4> '_Iterator' lvalue ->current 0x63dee90
| | | |   |   `-CXXThisExpr 0x63e5628 <col:4> 'reverse_iterator<_Iterator> *' this
| | | |   `-ReturnStmt 0x63e56b8 <line:197:2, col:9>
| | | |     `-DeclRefExpr 0x63e5690 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x63e5580 '__tmp' 'reverse_iterator<_Iterator>'
| | | |-CXXMethodDecl 0x63e2ac0 <line:205:7, line:210:7> operator-- 'reverse_iterator<_Iterator> &(void)'
| | | | `-CompoundStmt 0x63e57c8 <line:207:7, line:210:7>
| | | |   |-UnaryOperator 0x63e5750 <line:208:2, col:4> '<dependent type>' prefix '++'
| | | |   | `-MemberExpr 0x63e5720 <col:4> '_Iterator' lvalue ->current 0x63dee90
| | | |   |   `-CXXThisExpr 0x63e5708 <col:4> 'reverse_iterator<_Iterator> *' this
| | | |   `-ReturnStmt 0x63e57a8 <line:209:2, col:10>
| | | |     `-UnaryOperator 0x63e5788 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63e5770 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x63e2bf0 <line:217:7, line:223:7> operator-- 'reverse_iterator<_Iterator> (int)'
| | | | |-ParmVarDecl 0x63e2b70 <line:218:18> 'int'
| | | | `-CompoundStmt 0x63e5958 <line:219:7, line:223:7>
| | | |   |-DeclStmt 0x63e5890 <line:220:2, col:32>
| | | |   | `-VarDecl 0x63e5800 <col:2, col:28> __tmp 'reverse_iterator<_Iterator>'
| | | |   |   `-UnaryOperator 0x63e5870 <col:27, col:28> '<dependent type>' prefix '*'
| | | |   |     `-CXXThisExpr 0x63e5858 <col:28> 'reverse_iterator<_Iterator> *' this
| | | |   |-UnaryOperator 0x63e58f0 <line:221:2, col:4> '<dependent type>' prefix '++'
| | | |   | `-MemberExpr 0x63e58c0 <col:4> '_Iterator' lvalue ->current 0x63dee90
| | | |   |   `-CXXThisExpr 0x63e58a8 <col:4> 'reverse_iterator<_Iterator> *' this
| | | |   `-ReturnStmt 0x63e5938 <line:222:2, col:9>
| | | |     `-DeclRefExpr 0x63e5910 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x63e5800 '__tmp' 'reverse_iterator<_Iterator>'
| | | |-CXXMethodDecl 0x63e2dd0 <line:230:7, line:232:49> operator+ 'reverse_iterator<_Iterator> (difference_type) const'
| | | | |-ParmVarDecl 0x63e2cd0 <line:231:17, col:33> __n 'difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x63e5a80 <line:232:7, col:49>
| | | |   `-ReturnStmt 0x63e5a60 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x63e5a30 <col:16, col:46> 'reverse_iterator<_Iterator>'
| | | |       `-BinaryOperator 0x63e5a08 <col:33, col:43> '<dependent type>' '-'
| | | |         |-MemberExpr 0x63e59b0 <col:33> 'const _Iterator' lvalue ->current 0x63dee90
| | | |         | `-CXXThisExpr 0x63e5998 <col:33> 'const reverse_iterator<_Iterator> *' this
| | | |         `-DeclRefExpr 0x63e59e0 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x63e2cd0 '__n' 'difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x63e2f90 <line:240:7, line:245:7> operator+= 'reverse_iterator<_Iterator> &(difference_type)'
| | | | |-ParmVarDecl 0x63e2e90 <line:241:18, col:34> __n 'difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x63e5ba0 <line:242:7, line:245:7>
| | | |   |-CompoundAssignOperator 0x63e5b10 <line:243:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x63e5ab8 <col:2> '_Iterator' lvalue ->current 0x63dee90
| | | |   | | `-CXXThisExpr 0x63e5aa0 <col:2> 'reverse_iterator<_Iterator> *' this
| | | |   | `-DeclRefExpr 0x63e5ae8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x63e2e90 '__n' 'difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x63e5b80 <line:244:2, col:10>
| | | |     `-UnaryOperator 0x63e5b60 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63e5b48 <col:10> 'reverse_iterator<_Iterator> *' this
| | | |-CXXMethodDecl 0x63e30d0 <line:252:7, line:254:49> operator- 'reverse_iterator<_Iterator> (difference_type) const'
| | | | |-ParmVarDecl 0x63e3050 <line:253:17, col:33> __n 'difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x63e5cc0 <line:254:7, col:49>
| | | |   `-ReturnStmt 0x63e5ca0 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x63e5c70 <col:16, col:46> 'reverse_iterator<_Iterator>'
| | | |       `-BinaryOperator 0x63e5c48 <col:33, col:43> '<dependent type>' '+'
| | | |         |-MemberExpr 0x63e5bf0 <col:33> 'const _Iterator' lvalue ->current 0x63dee90
| | | |         | `-CXXThisExpr 0x63e5bd8 <col:33> 'const reverse_iterator<_Iterator> *' this
| | | |         `-DeclRefExpr 0x63e5c20 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x63e3050 '__n' 'difference_type':'typename __traits_type::difference_type'
| | | |-CXXMethodDecl 0x63e3210 <line:262:7, line:267:7> operator-= 'reverse_iterator<_Iterator> &(difference_type)'
| | | | |-ParmVarDecl 0x63e3190 <line:263:18, col:34> __n 'difference_type':'typename __traits_type::difference_type'
| | | | `-CompoundStmt 0x63e5de0 <line:264:7, line:267:7>
| | | |   |-CompoundAssignOperator 0x63e5d50 <line:265:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x63e5cf8 <col:2> '_Iterator' lvalue ->current 0x63dee90
| | | |   | | `-CXXThisExpr 0x63e5ce0 <col:2> 'reverse_iterator<_Iterator> *' this
| | | |   | `-DeclRefExpr 0x63e5d28 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x63e3190 '__n' 'difference_type':'typename __traits_type::difference_type'
| | | |   `-ReturnStmt 0x63e5dc0 <line:266:2, col:10>
| | | |     `-UnaryOperator 0x63e5da0 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63e5d88 <col:10> 'reverse_iterator<_Iterator> *' this
| | | `-CXXMethodDecl 0x63e33d0 <line:274:7, line:276:32> operator[] 'reference (difference_type) const'
| | |   |-ParmVarDecl 0x63e32d0 <line:275:18, col:34> __n 'difference_type':'typename __traits_type::difference_type'
| | |   `-CompoundStmt 0x63e5ef0 <line:276:7, col:32>
| | |     `-ReturnStmt 0x63e5ed0 <col:9, col:29>
| | |       `-UnaryOperator 0x63e5eb0 <col:16, col:29> '<dependent type>' prefix '*'
| | |         `-ParenExpr 0x63e5e90 <col:17, col:29> '<dependent type>'
| | |           `-BinaryOperator 0x63e5e68 <col:18, col:26> '<dependent type>' '+'
| | |             |-UnaryOperator 0x63e5e20 <col:18, col:19> '<dependent type>' prefix '*'
| | |             | `-CXXThisExpr 0x63e5e08 <col:19> 'const reverse_iterator<_Iterator> *' this
| | |             `-DeclRefExpr 0x63e5e40 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x63e32d0 '__n' 'difference_type':'typename __traits_type::difference_type'
| | |-ClassTemplateSpecializationDecl 0x64c13c0 <line:95:3, line:277:5> class reverse_iterator definition
| | | |-public 'iterator<typename iterator_traits<struct _Bit_const_iterator>::iterator_category, typename iterator_traits<struct _Bit_const_iterator>::value_type, typename iterator_traits<struct _Bit_const_iterator>::difference_type, typename iterator_traits<struct _Bit_const_iterator>::pointer, typename iterator_traits<struct _Bit_const_iterator>::reference>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, const _Bool *, _Bool>'
| | | |-TemplateArgument type 'struct std::_Bit_const_iterator'
| | | |-CXXRecordDecl 0x64dd370 prev 0x64c13c0 <line:96:5, col:11> class reverse_iterator
| | | |-AccessSpecDecl 0x64dd400 <line:103:5, col:14> protected
| | | |-FieldDecl 0x64dd440 <line:104:7, col:17> current 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator'
| | | |-TypedefDecl 0x64dd520 <line:106:7, col:43> __traits_type 'iterator_traits<struct std::_Bit_const_iterator>':'struct std::iterator_traits<struct std::_Bit_const_iterator>'
| | | |-AccessSpecDecl 0x64dd570 <line:108:5, col:11> public
| | | |-TypedefDecl 0x64dd5b0 <line:109:7, col:29> iterator_type 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator'
| | | |-TypedefDecl 0x64dd6b0 <line:110:7, col:55> difference_type 'typename __traits_type::difference_type':'long'
| | | |-TypedefDecl 0x64dd770 <line:111:7, col:48> pointer 'typename __traits_type::pointer':'const _Bool *'
| | | |-TypedefDecl 0x64dd830 <line:112:7, col:50> reference 'typename __traits_type::reference':'_Bool'
| | | |-CXXConstructorDecl 0x64dd8c0 <line:120:7> reverse_iterator 'void (void)'
| | | |-CXXConstructorDecl 0x64ddae0 <line:125:7, line:126:7> reverse_iterator 'void (iterator_type)'
| | | | `-ParmVarDecl 0x64dd9c0 <col:24, col:38> __x 'iterator_type':'struct std::_Bit_const_iterator'
| | | |-CXXConstructorDecl 0x64ddce0 <line:131:7> reverse_iterator 'void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)'
| | | | `-ParmVarDecl 0x64ddc00 <col:24, col:48> __x 'const class std::reverse_iterator<struct std::_Bit_const_iterator> &'
| | | |-FunctionTemplateDecl 0x64de0f0 <line:138:7, line:139:9> reverse_iterator
| | | | |-TemplateTypeParmDecl 0x64dddc0 <line:138:16, col:25> typename _Iter
| | | | |-CXXConstructorDecl 0x64de030 <line:139:9> reverse_iterator 'void (const reverse_iterator<_Iter> &)'
| | | | | `-ParmVarDecl 0x64ddf50 <col:26, col:57> __x 'const reverse_iterator<_Iter> &'
| | | | `-CXXConstructorDecl 0x64dff50 <col:9> reverse_iterator 'void (const reverse_iterator<struct std::_Bit_const_iterator> &)'
| | | |   |-TemplateArgument type 'struct std::_Bit_const_iterator'
| | | |   `-ParmVarDecl 0x64dfe90 <col:26, col:57> __x 'const reverse_iterator<struct std::_Bit_const_iterator> &'
| | | |-CXXMethodDecl 0x64de220 <line:145:7, line:147:25> base 'iterator_type (void) const'
| | | |-CXXMethodDecl 0x64de340 <line:159:7, line:164:7> operator* 'reference (void) const'
| | | |-CXXMethodDecl 0x64de490 <line:171:7, line:173:32> operator-> 'pointer (void) const'
| | | |-CXXMethodDecl 0x64de5c0 <line:180:7, line:185:7> operator++ 'class std::reverse_iterator<struct std::_Bit_const_iterator> &(void)'
| | | |-CXXMethodDecl 0x64de730 <line:192:7, line:198:7> operator++ 'class std::reverse_iterator<struct std::_Bit_const_iterator> (int)'
| | | | `-ParmVarDecl 0x64de670 <line:193:18> 'int'
| | | |-CXXMethodDecl 0x64de810 <line:205:7, line:210:7> operator-- 'class std::reverse_iterator<struct std::_Bit_const_iterator> &(void)'
| | | |-CXXMethodDecl 0x64de940 <line:217:7, line:223:7> operator-- 'class std::reverse_iterator<struct std::_Bit_const_iterator> (int)'
| | | | `-ParmVarDecl 0x64de8c0 <line:218:18> 'int'
| | | |-CXXMethodDecl 0x64deb30 <line:230:7, line:232:49> operator+ 'class std::reverse_iterator<struct std::_Bit_const_iterator> (difference_type) const'
| | | | `-ParmVarDecl 0x64dea30 <line:231:17, col:33> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64ded00 <line:240:7, line:245:7> operator+= 'class std::reverse_iterator<struct std::_Bit_const_iterator> &(difference_type)'
| | | | `-ParmVarDecl 0x64dec00 <line:241:18, col:34> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64dee50 <line:252:7, line:254:49> operator- 'class std::reverse_iterator<struct std::_Bit_const_iterator> (difference_type) const'
| | | | `-ParmVarDecl 0x64dedd0 <line:253:17, col:33> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64defa0 <line:262:7, line:267:7> operator-= 'class std::reverse_iterator<struct std::_Bit_const_iterator> &(difference_type)'
| | | | `-ParmVarDecl 0x64def20 <line:263:18, col:34> __n 'difference_type':'long'
| | | `-CXXMethodDecl 0x64df130 <line:274:7, line:276:32> operator[] 'reference (difference_type) const'
| | |   `-ParmVarDecl 0x64df070 <line:275:18, col:34> __n 'difference_type':'long'
| | |-ClassTemplateSpecializationDecl 0x64c1660 <line:95:3, line:277:5> class reverse_iterator definition
| | | |-public 'iterator<typename iterator_traits<struct _Bit_iterator>::iterator_category, typename iterator_traits<struct _Bit_iterator>::value_type, typename iterator_traits<struct _Bit_iterator>::difference_type, typename iterator_traits<struct _Bit_iterator>::pointer, typename iterator_traits<struct _Bit_iterator>::reference>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, struct std::_Bit_reference *, struct std::_Bit_reference>'
| | | |-TemplateArgument type 'struct std::_Bit_iterator'
| | | |-CXXRecordDecl 0x64d7e20 prev 0x64c1660 <line:96:5, col:11> class reverse_iterator
| | | |-AccessSpecDecl 0x64d7eb0 <line:103:5, col:14> protected
| | | |-FieldDecl 0x64d7ef0 <line:104:7, col:17> current 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
| | | |-TypedefDecl 0x64d7fd0 <line:106:7, col:43> __traits_type 'iterator_traits<struct std::_Bit_iterator>':'struct std::iterator_traits<struct std::_Bit_iterator>'
| | | |-AccessSpecDecl 0x64d8020 <line:108:5, col:11> public
| | | |-TypedefDecl 0x64d8060 <line:109:7, col:29> iterator_type 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
| | | |-TypedefDecl 0x64d8160 <line:110:7, col:55> difference_type 'typename __traits_type::difference_type':'long'
| | | |-TypedefDecl 0x64d8220 <line:111:7, col:48> pointer 'typename __traits_type::pointer':'struct std::_Bit_reference *'
| | | |-TypedefDecl 0x64d82e0 <line:112:7, col:50> reference 'typename __traits_type::reference':'struct std::_Bit_reference'
| | | |-CXXConstructorDecl 0x64d8370 <line:120:7> reverse_iterator 'void (void)'
| | | |-CXXConstructorDecl 0x64d8550 <line:125:7, line:126:7> reverse_iterator 'void (iterator_type)'
| | | | `-ParmVarDecl 0x64d8470 <col:24, col:38> __x 'iterator_type':'struct std::_Bit_iterator'
| | | |-CXXConstructorDecl 0x64d8750 <line:131:7> reverse_iterator 'void (const class std::reverse_iterator<struct std::_Bit_iterator> &)'
| | | | `-ParmVarDecl 0x64d8670 <col:24, col:48> __x 'const class std::reverse_iterator<struct std::_Bit_iterator> &'
| | | |-FunctionTemplateDecl 0x64d8ba0 <line:138:7, line:139:9> reverse_iterator
| | | | |-TemplateTypeParmDecl 0x64d8830 <line:138:16, col:25> typename _Iter
| | | | |-CXXConstructorDecl 0x64d8ae0 <line:139:9> reverse_iterator 'void (const reverse_iterator<_Iter> &)'
| | | | | `-ParmVarDecl 0x64d89c0 <col:26, col:57> __x 'const reverse_iterator<_Iter> &'
| | | | `-CXXConstructorDecl 0x64daa30 <col:9> reverse_iterator 'void (const reverse_iterator<struct std::_Bit_iterator> &)'
| | | |   |-TemplateArgument type 'struct std::_Bit_iterator'
| | | |   `-ParmVarDecl 0x64da970 <col:26, col:57> __x 'const reverse_iterator<struct std::_Bit_iterator> &'
| | | |-CXXMethodDecl 0x64d8d00 <line:145:7, line:147:25> base 'iterator_type (void) const'
| | | |-CXXMethodDecl 0x64d8e20 <line:159:7, line:164:7> operator* 'reference (void) const'
| | | |-CXXMethodDecl 0x64d8f70 <line:171:7, line:173:32> operator-> 'pointer (void) const'
| | | |-CXXMethodDecl 0x64d90a0 <line:180:7, line:185:7> operator++ 'class std::reverse_iterator<struct std::_Bit_iterator> &(void)'
| | | |-CXXMethodDecl 0x64d9210 <line:192:7, line:198:7> operator++ 'class std::reverse_iterator<struct std::_Bit_iterator> (int)'
| | | | `-ParmVarDecl 0x64d9150 <line:193:18> 'int'
| | | |-CXXMethodDecl 0x64d92f0 <line:205:7, line:210:7> operator-- 'class std::reverse_iterator<struct std::_Bit_iterator> &(void)'
| | | |-CXXMethodDecl 0x64d9eb0 <line:217:7, line:223:7> operator-- 'class std::reverse_iterator<struct std::_Bit_iterator> (int)'
| | | | `-ParmVarDecl 0x64d9e30 <line:218:18> 'int'
| | | |-CXXMethodDecl 0x64da0a0 <line:230:7, line:232:49> operator+ 'class std::reverse_iterator<struct std::_Bit_iterator> (difference_type) const'
| | | | `-ParmVarDecl 0x64d9fa0 <line:231:17, col:33> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64da270 <line:240:7, line:245:7> operator+= 'class std::reverse_iterator<struct std::_Bit_iterator> &(difference_type)'
| | | | `-ParmVarDecl 0x64da170 <line:241:18, col:34> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64da3c0 <line:252:7, line:254:49> operator- 'class std::reverse_iterator<struct std::_Bit_iterator> (difference_type) const'
| | | | `-ParmVarDecl 0x64da340 <line:253:17, col:33> __n 'difference_type':'long'
| | | |-CXXMethodDecl 0x64da510 <line:262:7, line:267:7> operator-= 'class std::reverse_iterator<struct std::_Bit_iterator> &(difference_type)'
| | | | `-ParmVarDecl 0x64da490 <line:263:18, col:34> __n 'difference_type':'long'
| | | `-CXXMethodDecl 0x64da6a0 <line:274:7, line:276:32> operator[] 'reference (difference_type) const'
| | |   `-ParmVarDecl 0x64da5e0 <line:275:18, col:34> __n 'difference_type':'long'
| | |-ClassTemplateSpecializationDecl 0x65216b0 <line:95:3, line:277:5> class reverse_iterator
| | | |-TemplateArgument type 'class __gnu_cxx::__normal_iterator<const long long *, class std::vector<long long, class std::allocator<long long> > >'
| | `-ClassTemplateSpecializationDecl 0x65218f0 <line:95:3, line:277:5> class reverse_iterator
| |   |-TemplateArgument type 'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |-FunctionTemplateDecl 0x63e4340 <line:289:3, line:293:40> operator==
| | |-TemplateTypeParmDecl 0x63e5f10 <line:289:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e42a0 <line:290:5, line:293:40> operator== '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e3ff0 <line:291:16, col:51> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e4190 <line:292:9, col:44> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e45b0 <line:293:5, col:40>
| | |   `-ReturnStmt 0x63e4590 <col:7, col:37>
| | |     `-CXXOperatorCallExpr 0x63e4548 <col:14, col:37> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63e44e8 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63e4340 0x63c7b70
| | |       |-CallExpr 0x63e4418 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63e43c0 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63e4398 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e3ff0 '__x' 'const reverse_iterator<_Iterator> &'
| | |       `-CallExpr 0x63e44c0 <col:28, col:37> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63e4468 <col:28, col:32> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63e4440 <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e4190 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e4aa0 <line:295:3, line:299:39> operator<
| | |-TemplateTypeParmDecl 0x63e45d0 <line:295:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e4a00 <line:296:5, line:299:39> operator< '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e4790 <line:297:15, col:50> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e4930 <line:298:8, col:43> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e4d10 <line:299:5, col:39>
| | |   `-ReturnStmt 0x63e4cf0 <col:7, col:36>
| | |     `-CXXOperatorCallExpr 0x63e4ca8 <col:14, col:36> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63e4c48 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63e4aa0 0x63c85a0
| | |       |-CallExpr 0x63e4b78 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63e4b20 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63e4af8 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e4930 '__y' 'const reverse_iterator<_Iterator> &'
| | |       `-CallExpr 0x63e4c20 <col:27, col:36> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63e4bc8 <col:27, col:31> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63e4ba0 <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e4790 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e71b0 <line:301:3, line:305:29> operator!=
| | |-TemplateTypeParmDecl 0x63e4d30 <line:301:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e7110 <line:302:5, line:305:29> operator!= '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e4ef0 <line:303:16, col:51> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e7040 <line:304:9, col:44> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e7360 <line:305:5, col:29>
| | |   `-ReturnStmt 0x63e7340 <col:7, col:26>
| | |     `-UnaryOperator 0x63e7320 <col:14, col:26> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63e7300 <col:15, col:26> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63e72b8 <col:16, col:23> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63e7258 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63e4340 0x63c7b70
| | |           |-DeclRefExpr 0x63e7208 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e4ef0 '__x' 'const reverse_iterator<_Iterator> &'
| | |           `-DeclRefExpr 0x63e7230 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e7040 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e7850 <line:307:3, line:311:25> operator>
| | |-TemplateTypeParmDecl 0x63e7380 <line:307:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e77b0 <line:308:5, line:311:25> operator> '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e7540 <line:309:15, col:50> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e76e0 <line:310:8, col:43> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e79c0 <line:311:5, col:25>
| | |   `-ReturnStmt 0x63e79a0 <col:7, col:20>
| | |     `-CXXOperatorCallExpr 0x63e7958 <col:14, col:20> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63e78f8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63e4aa0 0x63c85a0
| | |       |-DeclRefExpr 0x63e78a8 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e76e0 '__y' 'const reverse_iterator<_Iterator> &'
| | |       `-DeclRefExpr 0x63e78d0 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e7540 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e7eb0 <line:313:3, line:317:28> operator<=
| | |-TemplateTypeParmDecl 0x63e79e0 <line:313:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e7e10 <line:314:5, line:317:28> operator<= '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e7ba0 <line:315:16, col:51> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e7d40 <line:316:9, col:44> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e8088 <line:317:5, col:28>
| | |   `-ReturnStmt 0x63e8068 <col:7, col:25>
| | |     `-UnaryOperator 0x63e8048 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63e8028 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63e7fe0 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63e7f80 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63e4aa0 0x63c85a0
| | |           |-DeclRefExpr 0x63e7f30 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e7d40 '__y' 'const reverse_iterator<_Iterator> &'
| | |           `-DeclRefExpr 0x63e7f58 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e7ba0 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e8580 <line:319:3, line:323:28> operator>=
| | |-TemplateTypeParmDecl 0x63e80b0 <line:319:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e84e0 <line:320:5, line:323:28> operator>= '_Bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e8270 <line:321:16, col:51> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e8410 <line:322:9, col:44> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e8730 <line:323:5, col:28>
| | |   `-ReturnStmt 0x63e8710 <col:7, col:25>
| | |     `-UnaryOperator 0x63e86f0 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63e86d0 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63e8688 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63e8628 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63e4aa0 0x63c85a0
| | |           |-DeclRefExpr 0x63e85d8 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e8270 '__x' 'const reverse_iterator<_Iterator> &'
| | |           `-DeclRefExpr 0x63e8600 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e8410 '__y' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e8e00 <line:325:3, line:329:39> operator-
| | |-TemplateTypeParmDecl 0x63e8750 <line:325:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e8d60 <line:326:5, line:329:39> operator- 'typename reverse_iterator<_Iterator>::difference_type (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e8aa0 <line:327:15, col:50> __x 'const reverse_iterator<_Iterator> &'
| | | |-ParmVarDecl 0x63e8c40 <line:328:8, col:43> __y 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e9098 <line:329:5, col:39>
| | |   `-ReturnStmt 0x63e9078 <col:7, col:36>
| | |     `-CXXOperatorCallExpr 0x63e9030 <col:14, col:36> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63e8fd8 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00
| | |       |-CallExpr 0x63e8ed8 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63e8e80 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63e8e58 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e8c40 '__y' 'const reverse_iterator<_Iterator> &'
| | |       `-CallExpr 0x63e8fb0 <col:27, col:36> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63e8f58 <col:27, col:31> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63e8f30 <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e8aa0 '__x' 'const reverse_iterator<_Iterator> &'
| |-FunctionTemplateDecl 0x63e9700 <line:331:3, line:335:61> operator+
| | |-TemplateTypeParmDecl 0x63e90c0 <line:331:12, col:21> typename _Iterator
| | |-FunctionDecl 0x63e9660 <line:332:5, line:335:61> operator+ 'reverse_iterator<_Iterator> (typename reverse_iterator<_Iterator>::difference_type, const reverse_iterator<_Iterator> &)' inline
| | | |-ParmVarDecl 0x63e9390 <line:333:15, col:69> __n 'typename reverse_iterator<_Iterator>::difference_type'
| | | |-ParmVarDecl 0x63e9530 <line:334:8, col:43> __x 'const reverse_iterator<_Iterator> &'
| | | `-CompoundStmt 0x63e9a28 <line:335:5, col:61>
| | |   `-ReturnStmt 0x63e9a08 <col:7, col:58>
| | |     `-CXXUnresolvedConstructExpr 0x63e99d8 <col:14, col:58> 'reverse_iterator<_Iterator>'
| | |       `-CXXOperatorCallExpr 0x63e9990 <col:42, col:55> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x63e9938 <col:53> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00
| | |         |-CallExpr 0x63e98e8 <col:42, col:51> '<dependent type>'
| | |         | `-CXXDependentScopeMemberExpr 0x63e9890 <col:42, col:46> '<dependent type>' lvalue
| | |         |   `-DeclRefExpr 0x63e9868 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x63e9530 '__x' 'const reverse_iterator<_Iterator> &'
| | |         `-DeclRefExpr 0x63e9910 <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x63e9390 '__n' 'typename reverse_iterator<_Iterator>::difference_type'
| |-FunctionTemplateDecl 0x63ea090 <line:339:3, line:343:40> operator==
| | |-TemplateTypeParmDecl 0x63e9a50 <line:339:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63e9ac0 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63e9ff0 <line:340:5, line:343:40> operator== '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63e9c90 <line:341:16, col:52> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63e9eb0 <line:342:9, col:45> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63ea308 <line:343:5, col:40>
| | |   `-ReturnStmt 0x63ea2e8 <col:7, col:37>
| | |     `-CXXOperatorCallExpr 0x63ea2a0 <col:14, col:37> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63ea238 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63ea090 0x63e4340 0x63c7b70
| | |       |-CallExpr 0x63ea168 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63ea110 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63ea0e8 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63e9c90 '__x' 'const reverse_iterator<_IteratorL> &'
| | |       `-CallExpr 0x63ea210 <col:28, col:37> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63ea1b8 <col:28, col:32> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63ea190 <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63e9eb0 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x63ea880 <line:345:3, line:349:39> operator<
| | |-TemplateTypeParmDecl 0x63ea330 <line:345:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63ea3a0 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63ea7e0 <line:346:5, line:349:39> operator< '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63ea570 <line:347:15, col:51> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63ea710 <line:348:8, col:44> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63eaaf8 <line:349:5, col:39>
| | |   `-ReturnStmt 0x63eaad8 <col:7, col:36>
| | |     `-CXXOperatorCallExpr 0x63eaa90 <col:14, col:36> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63eaa28 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63ea880 0x63e4aa0 0x63c85a0
| | |       |-CallExpr 0x63ea958 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63ea900 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63ea8d8 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63ea710 '__y' 'const reverse_iterator<_IteratorR> &'
| | |       `-CallExpr 0x63eaa00 <col:27, col:36> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63ea9a8 <col:27, col:31> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63ea980 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63ea570 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x63eb0c0 <line:351:3, line:355:29> operator!=
| | |-TemplateTypeParmDecl 0x63eab20 <line:351:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63eab90 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63eb020 <line:352:5, line:355:29> operator!= '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63ead60 <line:353:16, col:52> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63eaf50 <line:354:9, col:45> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63eb278 <line:355:5, col:29>
| | |   `-ReturnStmt 0x63eb258 <col:7, col:26>
| | |     `-UnaryOperator 0x63eb238 <col:14, col:26> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63eb218 <col:15, col:26> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63eb1d0 <col:16, col:23> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63eb168 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63ea090 0x63e4340 0x63c7b70
| | |           |-DeclRefExpr 0x63eb118 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63ead60 '__x' 'const reverse_iterator<_IteratorL> &'
| | |           `-DeclRefExpr 0x63eb140 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63eaf50 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x63eb7f0 <line:357:3, line:361:25> operator>
| | |-TemplateTypeParmDecl 0x63eb2a0 <line:357:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63eb310 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63eb750 <line:358:5, line:361:25> operator> '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63eb4e0 <line:359:15, col:51> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63eb680 <line:360:8, col:44> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63eb968 <line:361:5, col:25>
| | |   `-ReturnStmt 0x63eb948 <col:7, col:20>
| | |     `-CXXOperatorCallExpr 0x63eb900 <col:14, col:20> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63eb898 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63ea880 0x63e4aa0 0x63c85a0
| | |       |-DeclRefExpr 0x63eb848 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63eb680 '__y' 'const reverse_iterator<_IteratorR> &'
| | |       `-DeclRefExpr 0x63eb870 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63eb4e0 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x63ebee0 <line:363:3, line:367:28> operator<=
| | |-TemplateTypeParmDecl 0x63eb990 <line:363:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63eba00 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63ebe40 <line:364:5, line:367:28> operator<= '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63ebbd0 <line:365:16, col:52> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63ebd70 <line:366:9, col:45> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63ec0c0 <line:367:5, col:28>
| | |   `-ReturnStmt 0x63ec0a0 <col:7, col:25>
| | |     `-UnaryOperator 0x63ec080 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63ec060 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63ec018 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63ebfb0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63ea880 0x63e4aa0 0x63c85a0
| | |           |-DeclRefExpr 0x63ebf60 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63ebd70 '__y' 'const reverse_iterator<_IteratorR> &'
| | |           `-DeclRefExpr 0x63ebf88 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63ebbd0 '__x' 'const reverse_iterator<_IteratorL> &'
| |-FunctionTemplateDecl 0x63ec630 <line:369:3, line:373:28> operator>=
| | |-TemplateTypeParmDecl 0x63ec0e0 <line:369:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63ec150 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63ec590 <line:370:5, line:373:28> operator>= '_Bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63ec320 <line:371:16, col:52> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63ec4c0 <line:372:9, col:45> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63ec7e8 <line:373:5, col:28>
| | |   `-ReturnStmt 0x63ec7c8 <col:7, col:25>
| | |     `-UnaryOperator 0x63ec7a8 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x63ec788 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x63ec740 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x63ec6d8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63ea880 0x63e4aa0 0x63c85a0
| | |           |-DeclRefExpr 0x63ec688 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63ec320 '__x' 'const reverse_iterator<_IteratorL> &'
| | |           `-DeclRefExpr 0x63ec6b0 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63ec4c0 '__y' 'const reverse_iterator<_IteratorR> &'
| |-FunctionTemplateDecl 0x63ecf00 <line:375:3, line:387:39> operator-
| | |-TemplateTypeParmDecl 0x63ec810 <line:375:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63ec880 <col:33, col:42> typename _IteratorR
| | |-FunctionDecl 0x63ece60 <line:383:5, line:387:39> operator- 'typename reverse_iterator<_IteratorL>::difference_type (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
| | | |-ParmVarDecl 0x63ecba0 <line:384:15, col:51> __x 'const reverse_iterator<_IteratorL> &'
| | | |-ParmVarDecl 0x63ecd40 <line:385:8, col:44> __y 'const reverse_iterator<_IteratorR> &'
| | | `-CompoundStmt 0x63ed198 <line:387:5, col:39>
| | |   `-ReturnStmt 0x63ed178 <col:7, col:36>
| | |     `-CXXOperatorCallExpr 0x63ed130 <col:14, col:36> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63ed0d0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63ecf00 0x63e8e00
| | |       |-CallExpr 0x63ed000 <col:14, col:23> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63ecfa8 <col:14, col:18> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63ecf80 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x63ecd40 '__y' 'const reverse_iterator<_IteratorR> &'
| | |       `-CallExpr 0x63ed0a8 <col:27, col:36> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63ed050 <col:27, col:31> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63ed028 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x63ecba0 '__x' 'const reverse_iterator<_IteratorL> &'
| |-ClassTemplateDecl 0x63ed2d0 <line:401:3, line:464:5> back_insert_iterator
| | |-TemplateTypeParmDecl 0x63ed1c0 <line:401:12, col:21> typename _Container
| | `-CXXRecordDecl 0x63ed240 <line:402:5, line:464:5> class back_insert_iterator definition
| |   |-public 'iterator<struct std::output_iterator_tag, void, void, void, void>':'struct std::iterator<struct std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x63edc30 <line:402:5, col:11> class back_insert_iterator
| |   |-AccessSpecDecl 0x63edcc0 <line:405:5, col:14> protected
| |   |-FieldDecl 0x63edd30 <line:406:7, col:19> container '_Container *'
| |   |-AccessSpecDecl 0x63edd80 <line:408:5, col:11> public
| |   |-TypedefDecl 0x63eddc0 <line:410:7, col:35> container_type '_Container'
| |   |-CXXConstructorDecl 0x63edfb0 <line:413:7, line:414:65> back_insert_iterator<_Container> 'void (_Container &)'
| |   | |-ParmVarDecl 0x63ede50 <col:28, col:40> __x '_Container &'
| |   | |-CXXCtorInitializer Field 0x63edd30 'container' '_Container *'
| |   | | |-ParenListExpr 0x63ee6c0 <col:56, col:61> 'NULL TYPE'
| |   | | | `-UnaryOperator 0x63ee6a0 <col:57, col:58> '<dependent type>' prefix '&'
| |   | | |   `-DeclRefExpr 0x63ee678 <col:58> '_Container' lvalue ParmVar 0x63ede50 '__x' '_Container &'
| |   | `-CompoundStmt 0x63ee720 <col:63, col:65>
| |   |-CXXMethodDecl 0x63ee270 <line:428:7, line:433:7> operator= 'back_insert_iterator<_Container> &(typename _Container::const_reference)'
| |   | |-ParmVarDecl 0x63ee140 <line:429:17, col:54> __value 'typename _Container::const_reference'
| |   | `-CompoundStmt 0x63ee888 <line:430:7, line:433:7>
| |   |   |-CallExpr 0x63ee800 <line:431:2, col:30> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x63ee780 <col:2, col:13> '<dependent type>' lvalue
| |   |   | | `-MemberExpr 0x63ee750 <col:2> '_Container *' lvalue ->container 0x63edd30
| |   |   | |   `-CXXThisExpr 0x63ee738 <col:2> 'back_insert_iterator<_Container> *' this
| |   |   | `-DeclRefExpr 0x63ee7d8 <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x63ee140 '__value' 'typename _Container::const_reference'
| |   |   `-ReturnStmt 0x63ee868 <line:432:2, col:10>
| |   |     `-UnaryOperator 0x63ee848 <col:9, col:10> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63ee830 <col:10> 'back_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63ee370 <line:451:7, line:453:23> operator* 'back_insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63ee908 <col:7, col:23>
| |   |   `-ReturnStmt 0x63ee8e8 <col:9, col:17>
| |   |     `-UnaryOperator 0x63ee8c8 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63ee8b0 <col:17> 'back_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63ee430 <line:456:7, line:458:23> operator++ 'back_insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63ee980 <col:7, col:23>
| |   |   `-ReturnStmt 0x63ee960 <col:9, col:17>
| |   |     `-UnaryOperator 0x63ee940 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63ee928 <col:17> 'back_insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x63ee5a0 <line:461:7, line:463:23> operator++ 'back_insert_iterator<_Container> (int)'
| |     |-ParmVarDecl 0x63ee4e0 <line:462:18> 'int'
| |     `-CompoundStmt 0x63ee9f8 <line:463:7, col:23>
| |       `-ReturnStmt 0x63ee9d8 <col:9, col:17>
| |         `-UnaryOperator 0x63ee9b8 <col:16, col:17> '<dependent type>' prefix '*'
| |           `-CXXThisExpr 0x63ee9a0 <col:17> 'back_insert_iterator<_Container> *' this
| |-FunctionTemplateDecl 0x63eed80 <line:477:3, line:480:53> back_inserter
| | |-TemplateTypeParmDecl 0x63eea20 <line:477:12, col:21> typename _Container
| | |-FunctionDecl 0x63eece0 <line:478:5, line:480:53> back_inserter 'back_insert_iterator<_Container> (_Container &)' inline
| | | |-ParmVarDecl 0x63eebc0 <line:479:19, col:31> __x '_Container &'
| | | `-CompoundStmt 0x63eef50 <line:480:5, col:53>
| | |   `-ReturnStmt 0x63eef30 <col:7, col:50>
| | |     `-CXXUnresolvedConstructExpr 0x63eef00 <col:14, col:50> 'back_insert_iterator<_Container>'
| | |       `-DeclRefExpr 0x63eeed8 <col:47> '_Container' lvalue ParmVar 0x63eebc0 '__x' '_Container &'
| |-ClassTemplateDecl 0x63ef0a0 <line:492:3, line:554:5> front_insert_iterator
| | |-TemplateTypeParmDecl 0x63eef90 <line:492:12, col:21> typename _Container
| | `-CXXRecordDecl 0x63ef010 <line:493:5, line:554:5> class front_insert_iterator definition
| |   |-public 'iterator<struct std::output_iterator_tag, void, void, void, void>':'struct std::iterator<struct std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x63ef4e0 <line:493:5, col:11> class front_insert_iterator
| |   |-AccessSpecDecl 0x63ef570 <line:496:5, col:14> protected
| |   |-FieldDecl 0x63ef5e0 <line:497:7, col:19> container '_Container *'
| |   |-AccessSpecDecl 0x63ef630 <line:499:5, col:11> public
| |   |-TypedefDecl 0x63ef670 <line:501:7, col:35> container_type '_Container'
| |   |-CXXConstructorDecl 0x63ef7e0 <line:504:7, col:75> front_insert_iterator<_Container> 'void (_Container &)'
| |   | |-ParmVarDecl 0x63ef700 <col:38, col:50> __x '_Container &'
| |   | |-CXXCtorInitializer Field 0x63ef5e0 'container' '_Container *'
| |   | | |-ParenListExpr 0x63efec0 <col:66, col:71> 'NULL TYPE'
| |   | | | `-UnaryOperator 0x63efea0 <col:67, col:68> '<dependent type>' prefix '&'
| |   | | |   `-DeclRefExpr 0x63efe78 <col:68> '_Container' lvalue ParmVar 0x63ef700 '__x' '_Container &'
| |   | `-CompoundStmt 0x63eff20 <col:73, col:75>
| |   |-CXXMethodDecl 0x63efa70 <line:518:7, line:523:7> operator= 'front_insert_iterator<_Container> &(typename _Container::const_reference)'
| |   | |-ParmVarDecl 0x63ef940 <line:519:17, col:54> __value 'typename _Container::const_reference'
| |   | `-CompoundStmt 0x63f04b8 <line:520:7, line:523:7>
| |   |   |-CallExpr 0x63f0430 <line:521:2, col:31> '<dependent type>'
| |   |   | |-CXXDependentScopeMemberExpr 0x63f03b0 <col:2, col:13> '<dependent type>' lvalue
| |   |   | | `-MemberExpr 0x63eff50 <col:2> '_Container *' lvalue ->container 0x63ef5e0
| |   |   | |   `-CXXThisExpr 0x63eff38 <col:2> 'front_insert_iterator<_Container> *' this
| |   |   | `-DeclRefExpr 0x63f0408 <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x63ef940 '__value' 'typename _Container::const_reference'
| |   |   `-ReturnStmt 0x63f0498 <line:522:2, col:10>
| |   |     `-UnaryOperator 0x63f0478 <col:9, col:10> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63f0460 <col:10> 'front_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63efb70 <line:541:7, line:543:23> operator* 'front_insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63f0538 <col:7, col:23>
| |   |   `-ReturnStmt 0x63f0518 <col:9, col:17>
| |   |     `-UnaryOperator 0x63f04f8 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63f04e0 <col:17> 'front_insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63efc30 <line:546:7, line:548:23> operator++ 'front_insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63f05b0 <col:7, col:23>
| |   |   `-ReturnStmt 0x63f0590 <col:9, col:17>
| |   |     `-UnaryOperator 0x63f0570 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63f0558 <col:17> 'front_insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x63efda0 <line:551:7, line:553:23> operator++ 'front_insert_iterator<_Container> (int)'
| |     |-ParmVarDecl 0x63efce0 <line:552:18> 'int'
| |     `-CompoundStmt 0x63f0628 <line:553:7, col:23>
| |       `-ReturnStmt 0x63f0608 <col:9, col:17>
| |         `-UnaryOperator 0x63f05e8 <col:16, col:17> '<dependent type>' prefix '*'
| |           `-CXXThisExpr 0x63f05d0 <col:17> 'front_insert_iterator<_Container> *' this
| |-FunctionTemplateDecl 0x63f09b0 <line:567:3, line:570:54> front_inserter
| | |-TemplateTypeParmDecl 0x63f0650 <line:567:12, col:21> typename _Container
| | |-FunctionDecl 0x63f0910 <line:568:5, line:570:54> front_inserter 'front_insert_iterator<_Container> (_Container &)' inline
| | | |-ParmVarDecl 0x63f07f0 <line:569:20, col:32> __x '_Container &'
| | | `-CompoundStmt 0x63f0b80 <line:570:5, col:54>
| | |   `-ReturnStmt 0x63f0b60 <col:7, col:51>
| | |     `-CXXUnresolvedConstructExpr 0x63f0b30 <col:14, col:51> 'front_insert_iterator<_Container>'
| | |       `-DeclRefExpr 0x63f0b08 <col:48> '_Container' lvalue ParmVar 0x63f07f0 '__x' '_Container &'
| |-ClassTemplateDecl 0x63f0cb0 <line:586:3, line:668:5> insert_iterator
| | |-TemplateTypeParmDecl 0x63f0ba0 <line:586:12, col:21> typename _Container
| | `-CXXRecordDecl 0x63f0c20 <line:587:5, line:668:5> class insert_iterator definition
| |   |-public 'iterator<struct std::output_iterator_tag, void, void, void, void>':'struct std::iterator<struct std::output_iterator_tag, void, void, void, void>'
| |   |-CXXRecordDecl 0x63f10f0 <line:587:5, col:11> class insert_iterator
| |   |-AccessSpecDecl 0x63f1180 <line:590:5, col:14> protected
| |   |-FieldDecl 0x63f11f0 <line:591:7, col:19> container '_Container *'
| |   |-FieldDecl 0x63f1310 <line:592:7, col:37> iter 'typename _Container::iterator'
| |   |-AccessSpecDecl 0x63f1360 <line:594:5, col:11> public
| |   |-TypedefDecl 0x63ba3d0 <line:596:7, col:35> container_type '_Container'
| |   |-CXXConstructorDecl 0x63ba640 <line:602:7, line:603:37> insert_iterator<_Container> 'void (_Container &, typename _Container::iterator)'
| |   | |-ParmVarDecl 0x63ba460 <line:602:23, col:35> __x '_Container &'
| |   | |-ParmVarDecl 0x63ba510 <col:40, col:70> __i 'typename _Container::iterator'
| |   | |-CXXCtorInitializer Field 0x63f11f0 'container' '_Container *'
| |   | | |-ParenListExpr 0x63bad10 <line:603:18, col:23> 'NULL TYPE'
| |   | | | `-UnaryOperator 0x63bacf0 <col:19, col:20> '<dependent type>' prefix '&'
| |   | | |   `-DeclRefExpr 0x63bacc8 <col:20> '_Container' lvalue ParmVar 0x63ba460 '__x' '_Container &'
| |   | |-CXXCtorInitializer Field 0x63f1310 'iter' 'typename _Container::iterator'
| |   | | |-ParenListExpr 0x63bad90 <col:30, col:34> 'NULL TYPE'
| |   | | | `-DeclRefExpr 0x63bad68 <col:31> 'typename _Container::iterator' lvalue ParmVar 0x63ba510 '__i' 'typename _Container::iterator'
| |   | `-CompoundStmt 0x63badf8 <col:36, col:37>
| |   |-CXXMethodDecl 0x63ba8c0 <line:629:7, line:635:7> operator= 'insert_iterator<_Container> &(typename _Container::const_reference)'
| |   | |-ParmVarDecl 0x63ba790 <line:630:17, col:54> __value 'typename _Container::const_reference'
| |   | `-CompoundStmt 0x63bb088 <line:631:7, line:635:7>
| |   |   |-BinaryOperator 0x63bafa0 <line:632:2, col:40> '<dependent type>' '='
| |   |   | |-MemberExpr 0x63bae28 <col:2> 'typename _Container::iterator' lvalue ->iter 0x63f1310
| |   |   | | `-CXXThisExpr 0x63bae10 <col:2> 'insert_iterator<_Container> *' this
| |   |   | `-CallExpr 0x63baf68 <col:9, col:40> '<dependent type>'
| |   |   |   |-CXXDependentScopeMemberExpr 0x63baea0 <col:9, col:20> '<dependent type>' lvalue
| |   |   |   | `-MemberExpr 0x63bae70 <col:9> '_Container *' lvalue ->container 0x63f11f0
| |   |   |   |   `-CXXThisExpr 0x63bae58 <col:9> 'insert_iterator<_Container> *' this
| |   |   |   |-MemberExpr 0x63baf10 <col:27> 'typename _Container::iterator' lvalue ->iter 0x63f1310
| |   |   |   | `-CXXThisExpr 0x63baef8 <col:27> 'insert_iterator<_Container> *' this
| |   |   |   `-DeclRefExpr 0x63baf40 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x63ba790 '__value' 'typename _Container::const_reference'
| |   |   |-UnaryOperator 0x63bb010 <line:633:2, col:4> '<dependent type>' prefix '++'
| |   |   | `-MemberExpr 0x63bafe0 <col:4> 'typename _Container::iterator' lvalue ->iter 0x63f1310
| |   |   |   `-CXXThisExpr 0x63bafc8 <col:4> 'insert_iterator<_Container> *' this
| |   |   `-ReturnStmt 0x63bb068 <line:634:2, col:10>
| |   |     `-UnaryOperator 0x63bb048 <col:9, col:10> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63bb030 <col:10> 'insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63ba9c0 <line:655:7, line:657:23> operator* 'insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63bb110 <col:7, col:23>
| |   |   `-ReturnStmt 0x63bb0f0 <col:9, col:17>
| |   |     `-UnaryOperator 0x63bb0d0 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63bb0b8 <col:17> 'insert_iterator<_Container> *' this
| |   |-CXXMethodDecl 0x63baa80 <line:660:7, line:662:23> operator++ 'insert_iterator<_Container> &(void)'
| |   | `-CompoundStmt 0x63bb188 <col:7, col:23>
| |   |   `-ReturnStmt 0x63bb168 <col:9, col:17>
| |   |     `-UnaryOperator 0x63bb148 <col:16, col:17> '<dependent type>' prefix '*'
| |   |       `-CXXThisExpr 0x63bb130 <col:17> 'insert_iterator<_Container> *' this
| |   `-CXXMethodDecl 0x63babf0 <line:665:7, line:667:23> operator++ 'insert_iterator<_Container> &(int)'
| |     |-ParmVarDecl 0x63bab30 <line:666:18> 'int'
| |     `-CompoundStmt 0x63bb200 <line:667:7, col:23>
| |       `-ReturnStmt 0x63bb1e0 <col:9, col:17>
| |         `-UnaryOperator 0x63bb1c0 <col:16, col:17> '<dependent type>' prefix '*'
| |           `-CXXThisExpr 0x63bb1a8 <col:17> 'insert_iterator<_Container> *' this
| `-FunctionTemplateDecl 0x63f56c0 <line:681:3, line:687:5> inserter
|   |-TemplateTypeParmDecl 0x63bb220 <line:681:12, col:21> typename _Container
|   |-TemplateTypeParmDecl 0x63bb290 <col:33, col:42> typename _Iterator
|   |-FunctionDecl 0x63f5620 <line:682:5, line:687:5> inserter 'insert_iterator<_Container> (_Container &, _Iterator)' inline
|   | |-ParmVarDecl 0x63f5480 <line:683:14, col:26> __x '_Container &'
|   | |-ParmVarDecl 0x63f54f0 <col:31, col:41> __i '_Iterator'
|   | `-CompoundStmt 0x63f59a0 <line:684:5, line:687:5>
|   |   `-ReturnStmt 0x63f5980 <line:685:7, line:686:41>
|   |     `-CXXUnresolvedConstructExpr 0x63f5948 <line:685:14, line:686:41> 'insert_iterator<_Container>'
|   |       |-DeclRefExpr 0x63f5828 <line:685:42> '_Container' lvalue ParmVar 0x63f5480 '__x' '_Container &'
|   |       `-CXXUnresolvedConstructExpr 0x63f5918 <line:686:7, col:40> 'typename _Container::iterator'
|   |         `-DeclRefExpr 0x63f58f0 <col:37> '_Iterator' lvalue ParmVar 0x63f54f0 '__i' '_Iterator'
|-NamespaceDecl 0x63f59f0 prev 0x63af670 <line:694:1, line:907:1> __gnu_cxx
| |-original Namespace 0x636b110 '__gnu_cxx'
| |-VisibilityAttr 0x63f5a50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-UsingDecl 0x63f5ab0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:705:3, col:14> std::iterator_traits
| |-UsingShadowDecl 0x63f5b00 <col:14> ClassTemplate 0x63cf810 'iterator_traits'
| |-UsingDecl 0x63f5b50 <line:706:3, col:14> std::iterator
| |-UsingShadowDecl 0x63f5ba0 <col:14> ClassTemplate 0x63ce2e0 'iterator'
| |-ClassTemplateDecl 0x63f5d70 prev 0x636b3a0 <line:707:3, line:792:5> __normal_iterator
| | |-TemplateTypeParmDecl 0x63f5be0 <line:707:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x63f5c50 <col:32, col:41> typename _Container
| | |-CXXRecordDecl 0x63f5ce0 prev 0x636b310 <line:708:5, line:792:5> class __normal_iterator definition
| | | |-CXXRecordDecl 0x63f5e20 <line:708:5, col:11> class __normal_iterator
| | | |-AccessSpecDecl 0x63f5eb0 <line:710:5, col:14> protected
| | | |-FieldDecl 0x63f5ef0 <line:711:7, col:17> _M_current '_Iterator'
| | | |-TypedefDecl 0x63f6050 <line:713:7, col:43> __traits_type 'iterator_traits<_Iterator>'
| | | |-AccessSpecDecl 0x63f60a0 <line:715:5, col:11> public
| | | |-TypedefDecl 0x63f60e0 <line:716:7, col:29> iterator_type '_Iterator'
| | | |-TypedefDecl 0x63f61f0 <line:717:7, col:57> iterator_category 'typename __traits_type::iterator_category'
| | | |-TypedefDecl 0x63f62c0 <line:718:7, col:52> value_type 'typename __traits_type::value_type'
| | | |-TypedefDecl 0x63f63d0 <line:719:7, col:56> difference_type 'typename __traits_type::difference_type'
| | | |-TypedefDecl 0x63f64a0 <line:720:7, col:50> reference 'typename __traits_type::reference'
| | | |-TypedefDecl 0x63f6570 <line:721:7, col:50> pointer 'typename __traits_type::pointer'
| | | |-CXXConstructorDecl 0x63f6600 <line:723:26, col:74> __normal_iterator<_Iterator, _Container> 'void (void)'
| | | | |-CXXCtorInitializer Field 0x63f5ef0 '_M_current' '_Iterator'
| | | | | |-ParenListExpr 0x63faaf8 <col:58, col:70> 'NULL TYPE'
| | | | | | `-CXXUnresolvedConstructExpr 0x63faad0 <col:59, col:69> '_Iterator'
| | | | `-CompoundStmt 0x63fab60 <col:72, col:74>
| | | |-CXXConstructorDecl 0x63f6800 <line:725:7, line:726:67> __normal_iterator<_Iterator, _Container> 'void (const _Iterator &)'
| | | | |-ParmVarDecl 0x63f6700 <col:25, col:42> __i 'const _Iterator &'
| | | | |-CXXCtorInitializer Field 0x63f5ef0 '_M_current' '_Iterator'
| | | | | |-ParenListExpr 0x63faba0 <col:59, col:63> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x63fab78 <col:60> 'const _Iterator' lvalue ParmVar 0x63f6700 '__i' 'const _Iterator &'
| | | | `-CompoundStmt 0x63fac00 <col:65, col:67>
| | | |-FunctionTemplateDecl 0x63f72e0 <line:729:7, line:734:36> __normal_iterator<_Iterator, _Container>
| | | | |-TemplateTypeParmDecl 0x63f68c0 <line:729:16, col:25> typename _Iter
| | | | |-CXXConstructorDecl 0x63f7220 <line:730:9, line:734:36> __normal_iterator<_Iterator, _Container> 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &)'
| | | | | |-ParmVarDecl 0x63f7120 <line:730:27, line:733:31> __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
| | | | | |-CXXCtorInitializer Field 0x63f5ef0 '_M_current' '_Iterator'
| | | | | | |-ParenListExpr 0x63facc0 <line:734:21, col:32> 'NULL TYPE'
| | | | | | | `-CallExpr 0x63fac98 <col:22, col:31> '<dependent type>'
| | | | | | |   `-CXXDependentScopeMemberExpr 0x63fac40 <col:22, col:26> '<dependent type>' lvalue
| | | | | | |     `-DeclRefExpr 0x63fac18 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x63f7120 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
| | | | | `-CompoundStmt 0x63fad20 <col:34, col:36>
| | | |-CXXMethodDecl 0x63f83f0 <line:737:7, line:739:29> operator* 'reference (void) const'
| | | | `-CompoundStmt 0x63fadf0 <col:7, col:29>
| | | |   `-ReturnStmt 0x63fadd0 <col:9, col:17>
| | | |     `-UnaryOperator 0x63fadb0 <col:16, col:17> '<dependent type>' prefix '*'
| | | |       `-MemberExpr 0x63fad80 <col:17> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | | |         `-CXXThisExpr 0x63fad68 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8500 <line:741:7, line:743:28> operator-> 'pointer (void) const'
| | | | `-CompoundStmt 0x63fae78 <col:7, col:28>
| | | |   `-ReturnStmt 0x63fae58 <col:9, col:16>
| | | |     `-MemberExpr 0x63fae28 <col:16> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | | |       `-CXXThisExpr 0x63fae10 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8620 <line:745:7, line:750:7> operator++ '__normal_iterator<_Iterator, _Container> &(void)'
| | | | `-CompoundStmt 0x63faf58 <line:747:7, line:750:7>
| | | |   |-UnaryOperator 0x63faee0 <line:748:2, col:4> '<dependent type>' prefix '++'
| | | |   | `-MemberExpr 0x63faeb0 <col:4> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |   |   `-CXXThisExpr 0x63fae98 <col:4> '__normal_iterator<_Iterator, _Container> *' this
| | | |   `-ReturnStmt 0x63faf38 <line:749:2, col:10>
| | | |     `-UnaryOperator 0x63faf18 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63faf00 <col:10> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8790 <line:752:7, line:754:49> operator++ '__normal_iterator<_Iterator, _Container> (int)'
| | | | |-ParmVarDecl 0x63f86d0 <line:753:18> 'int'
| | | | `-CompoundStmt 0x63fb068 <line:754:7, col:49>
| | | |   `-ReturnStmt 0x63fb048 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x63fb018 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
| | | |       `-UnaryOperator 0x63faff8 <col:34, col:44> '<dependent type>' postfix '++'
| | | |         `-MemberExpr 0x63fafa8 <col:34> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |           `-CXXThisExpr 0x63faf90 <col:34> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8860 <line:757:7, line:762:7> operator-- '__normal_iterator<_Iterator, _Container> &(void)'
| | | | `-CompoundStmt 0x63fb148 <line:759:7, line:762:7>
| | | |   |-UnaryOperator 0x63fb0d0 <line:760:2, col:4> '<dependent type>' prefix '--'
| | | |   | `-MemberExpr 0x63fb0a0 <col:4> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |   |   `-CXXThisExpr 0x63fb088 <col:4> '__normal_iterator<_Iterator, _Container> *' this
| | | |   `-ReturnStmt 0x63fb128 <line:761:2, col:10>
| | | |     `-UnaryOperator 0x63fb108 <col:9, col:10> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63fb0f0 <col:10> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8990 <line:764:7, line:766:49> operator-- '__normal_iterator<_Iterator, _Container> (int)'
| | | | |-ParmVarDecl 0x63f8910 <line:765:18> 'int'
| | | | `-CompoundStmt 0x63fb258 <line:766:7, col:49>
| | | |   `-ReturnStmt 0x63fb238 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x63fb208 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
| | | |       `-UnaryOperator 0x63fb1e8 <col:34, col:44> '<dependent type>' postfix '--'
| | | |         `-MemberExpr 0x63fb198 <col:34> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |           `-CXXThisExpr 0x63fb180 <col:34> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8bd0 <line:769:7, line:771:33> operator[] 'reference (const difference_type &) const'
| | | | |-ParmVarDecl 0x63f8ad0 <line:770:18, col:41> __n 'const difference_type &'
| | | | `-CompoundStmt 0x63fb330 <line:771:7, col:33>
| | | |   `-ReturnStmt 0x63fb310 <col:9, col:30>
| | | |     `-ArraySubscriptExpr 0x63fb2e8 <col:16, col:30> '<dependent type>' lvalue
| | | |       |-MemberExpr 0x63fb290 <col:16> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | | |       | `-CXXThisExpr 0x63fb278 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this
| | | |       `-DeclRefExpr 0x63fb2c0 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x63f8ad0 '__n' 'const difference_type &'
| | | |-CXXMethodDecl 0x63f8d90 <line:773:7, line:775:42> operator+= '__normal_iterator<_Iterator, _Container> &(const difference_type &)'
| | | | |-ParmVarDecl 0x63f8c90 <line:774:18, col:41> __n 'const difference_type &'
| | | | `-CompoundStmt 0x63fb450 <line:775:7, col:42>
| | | |   |-CompoundAssignOperator 0x63fb3c0 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x63fb368 <col:9> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |   | | `-CXXThisExpr 0x63fb350 <col:9> '__normal_iterator<_Iterator, _Container> *' this
| | | |   | `-DeclRefExpr 0x63fb398 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x63f8c90 '__n' 'const difference_type &'
| | | |   `-ReturnStmt 0x63fb430 <col:28, col:36>
| | | |     `-UnaryOperator 0x63fb410 <col:35, col:36> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63fb3f8 <col:36> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f8f50 <line:777:7, line:779:53> operator+ '__normal_iterator<_Iterator, _Container> (const difference_type &) const'
| | | | |-ParmVarDecl 0x63f8e50 <line:778:17, col:40> __n 'const difference_type &'
| | | | `-CompoundStmt 0x63fb570 <line:779:7, col:53>
| | | |   `-ReturnStmt 0x63fb550 <col:9, col:50>
| | | |     `-CXXUnresolvedConstructExpr 0x63fb520 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
| | | |       `-BinaryOperator 0x63fb4f8 <col:34, col:47> '<dependent type>' '+'
| | | |         |-MemberExpr 0x63fb4a0 <col:34> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | | |         | `-CXXThisExpr 0x63fb488 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this
| | | |         `-DeclRefExpr 0x63fb4d0 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x63f8e50 '__n' 'const difference_type &'
| | | |-CXXMethodDecl 0x63f9090 <line:781:7, line:783:42> operator-= '__normal_iterator<_Iterator, _Container> &(const difference_type &)'
| | | | |-ParmVarDecl 0x63f9010 <line:782:18, col:41> __n 'const difference_type &'
| | | | `-CompoundStmt 0x63fb690 <line:783:7, col:42>
| | | |   |-CompoundAssignOperator 0x63fb600 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |   | |-MemberExpr 0x63fb5a8 <col:9> '_Iterator' lvalue ->_M_current 0x63f5ef0
| | | |   | | `-CXXThisExpr 0x63fb590 <col:9> '__normal_iterator<_Iterator, _Container> *' this
| | | |   | `-DeclRefExpr 0x63fb5d8 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x63f9010 '__n' 'const difference_type &'
| | | |   `-ReturnStmt 0x63fb670 <col:28, col:36>
| | | |     `-UnaryOperator 0x63fb650 <col:35, col:36> '<dependent type>' prefix '*'
| | | |       `-CXXThisExpr 0x63fb638 <col:36> '__normal_iterator<_Iterator, _Container> *' this
| | | |-CXXMethodDecl 0x63f91d0 <line:785:7, line:787:53> operator- '__normal_iterator<_Iterator, _Container> (const difference_type &) const'
| | | | |-ParmVarDecl 0x63f9150 <line:786:17, col:40> __n 'const difference_type &'
| | | | `-CompoundStmt 0x63fb7b0 <line:787:7, col:53>
| | | |   `-ReturnStmt 0x63fb790 <col:9, col:50>
| | | |     `-CXXUnresolvedConstructExpr 0x63fb760 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
| | | |       `-BinaryOperator 0x63fb738 <col:34, col:47> '<dependent type>' '-'
| | | |         |-MemberExpr 0x63fb6e0 <col:34> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | | |         | `-CXXThisExpr 0x63fb6c8 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this
| | | |         `-DeclRefExpr 0x63fb710 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x63f9150 '__n' 'const difference_type &'
| | | `-CXXMethodDecl 0x63f9300 <line:789:7, line:791:28> base 'const _Iterator &(void) const'
| | |   `-CompoundStmt 0x63fb838 <col:7, col:28>
| | |     `-ReturnStmt 0x63fb818 <col:9, col:16>
| | |       `-MemberExpr 0x63fb7e8 <col:16> 'const _Iterator' lvalue ->_M_current 0x63f5ef0
| | |         `-CXXThisExpr 0x63fb7d0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this
| | |-ClassTemplateSpecialization 0x65211a0 '__normal_iterator'
| | `-ClassTemplateSpecialization 0x6521430 '__normal_iterator'
| |-FunctionTemplateDecl 0x63f9da0 <line:803:3, line:807:44> operator==
| | |-TemplateTypeParmDecl 0x63fb860 <line:803:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63fb8d0 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x63fb940 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x63f9d00 <line:804:5, line:807:44> operator== '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x63f9950 <line:805:16, col:65> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x63f9bf0 <line:806:9, col:58> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x63fa008 <line:807:5, col:44>
| | |   `-ReturnStmt 0x63f9fe8 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x63f9fa0 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63f9f48 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63f9da0
| | |       |-CallExpr 0x63f9e78 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63f9e20 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63f9df8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x63f9950 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x63f9f20 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63f9ec8 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63f9ea0 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x63f9bf0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x63fa6d0 <line:809:3, line:813:44> operator==
| | |-TemplateTypeParmDecl 0x63fa030 <line:809:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x63fa0a0 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x63fa630 <line:810:5, line:813:44> operator== '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x63fa310 <line:811:16, col:64> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x63fa520 <line:812:9, col:57> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x63fc060 <line:813:5, col:44>
| | |   `-ReturnStmt 0x63fc040 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x63fbff8 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fbf98 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63fa6d0 0x63f9da0
| | |       |-CallExpr 0x63fa7a8 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63fa750 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63fa728 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fa310 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x63fbf70 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fbf18 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fbef0 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fa520 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x63fc720 <line:815:3, line:819:44> operator!=
| | |-TemplateTypeParmDecl 0x63fc080 <line:815:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63fc0f0 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x63fc160 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x63fc680 <line:816:5, line:819:44> operator!= '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x63fc3a0 <line:817:16, col:65> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x63fc5b0 <line:818:9, col:58> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x63fc988 <line:819:5, col:44>
| | |   `-ReturnStmt 0x63fc968 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x63fc920 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fc8c8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63fc720
| | |       |-CallExpr 0x63fc7f8 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63fc7a0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63fc778 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x63fc3a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x63fc8a0 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fc848 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fc820 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x63fc5b0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x63fd010 <line:821:3, line:825:44> operator!=
| | |-TemplateTypeParmDecl 0x63fc9b0 <line:821:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x63fca20 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x63fcf70 <line:822:5, line:825:44> operator!= '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x63fcc60 <line:823:16, col:64> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x63fce70 <line:824:9, col:57> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x63fd280 <line:825:5, col:44>
| | |   `-ReturnStmt 0x63fd260 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x63fd218 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fd1b8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63fd010 0x63fc720
| | |       |-CallExpr 0x63fd0e8 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63fd090 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63fd068 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fcc60 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x63fd190 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fd138 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fd110 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fce70 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x63fd940 <line:828:3, line:832:43> operator<
| | |-TemplateTypeParmDecl 0x63fd2a0 <line:828:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63fd310 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x63fd380 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x63fd8a0 <line:829:5, line:832:43> operator< '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x63fd5c0 <line:830:15, col:64> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x63fd7d0 <line:831:8, col:57> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x63fdba8 <line:832:5, col:43>
| | |   `-ReturnStmt 0x63fdb88 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x63fdb40 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fdae8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63fd940
| | |       |-CallExpr 0x63fda18 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63fd9c0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63fd998 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x63fd5c0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x63fdac0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fda68 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fda40 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x63fd7d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x63fe220 <line:834:3, line:838:43> operator<
| | |-TemplateTypeParmDecl 0x63fdbd0 <line:834:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x63fdc40 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x63fe180 <line:835:5, line:838:43> operator< '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x63fde80 <line:836:15, col:63> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x63fe0b0 <line:837:8, col:56> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x63fe490 <line:838:5, col:43>
| | |   `-ReturnStmt 0x63fe470 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x63fe428 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fe3c8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63fe220 0x63fd940
| | |       |-CallExpr 0x63fe2f8 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63fe2a0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63fe278 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fde80 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x63fe3a0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fe348 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fe320 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63fe0b0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x63feb50 <line:840:3, line:844:43> operator>
| | |-TemplateTypeParmDecl 0x63fe4b0 <line:840:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63fe520 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x63fe590 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x63feab0 <line:841:5, line:844:43> operator> '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x63fe7d0 <line:842:15, col:64> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x63fe9e0 <line:843:8, col:57> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x63fedb8 <line:844:5, col:43>
| | |   `-ReturnStmt 0x63fed98 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x63fed50 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fecf8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63feb50
| | |       |-CallExpr 0x63fec28 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63febd0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63feba8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x63fe7d0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x63fecd0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63fec78 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63fec50 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x63fe9e0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x63ff430 <line:846:3, line:850:43> operator>
| | |-TemplateTypeParmDecl 0x63fede0 <line:846:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x63fee50 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x63ff390 <line:847:5, line:850:43> operator> '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x63ff0b0 <line:848:15, col:63> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x63ff2c0 <line:849:8, col:56> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x63ff6a0 <line:850:5, col:43>
| | |   `-ReturnStmt 0x63ff680 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x63ff638 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63ff5d8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63ff430 0x63feb50
| | |       |-CallExpr 0x63ff508 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63ff4b0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63ff488 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63ff0b0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x63ff5b0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63ff558 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63ff530 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x63ff2c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x63ffd60 <line:852:3, line:856:44> operator<=
| | |-TemplateTypeParmDecl 0x63ff6c0 <line:852:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x63ff730 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x63ff7a0 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x63ffcc0 <line:853:5, line:856:44> operator<= '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x63ff9e0 <line:854:16, col:65> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x63ffbf0 <line:855:9, col:58> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x63ffff0 <line:856:5, col:44>
| | |   `-ReturnStmt 0x63fffd0 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x63fff88 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x63fff30 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x63ffd60
| | |       |-CallExpr 0x63ffe38 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x63ffde0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x63ffdb8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x63ff9e0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x63ffee0 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x63ffe88 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x63ffe60 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x63ffbf0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x6400640 <line:858:3, line:862:44> operator<=
| | |-TemplateTypeParmDecl 0x6400010 <line:858:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x6400080 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x64005a0 <line:859:5, line:862:44> operator<= '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x64002c0 <line:860:16, col:64> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x64004d0 <line:861:9, col:57> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x64008b0 <line:862:5, col:44>
| | |   `-ReturnStmt 0x6400890 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x6400848 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x64007e8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x6400640 0x63ffd60
| | |       |-CallExpr 0x6400718 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x64006c0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x6400698 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x64002c0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x64007c0 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x6400768 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x6400740 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x64004d0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x6400fe0 <line:864:3, line:868:44> operator>=
| | |-TemplateTypeParmDecl 0x64008d0 <line:864:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x6400940 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x64009b0 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x6400f40 <line:865:5, line:868:44> operator>= '_Bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x6400bf0 <line:866:16, col:65> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x6400e00 <line:867:9, col:58> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x6401248 <line:868:5, col:44>
| | |   `-ReturnStmt 0x6401228 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x64011e0 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6401188 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x6400fe0
| | |       |-CallExpr 0x64010b8 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x6401060 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x6401038 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x6400bf0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x6401160 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x6401108 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x64010e0 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x6400e00 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x64018a0 <line:870:3, line:874:44> operator>=
| | |-TemplateTypeParmDecl 0x6401270 <line:870:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x64012e0 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x6401800 <line:871:5, line:874:44> operator>= '_Bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x6401520 <line:872:16, col:64> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x6401730 <line:873:9, col:57> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x6401b10 <line:874:5, col:44>
| | |   `-ReturnStmt 0x6401af0 <col:7, col:41>
| | |     `-CXXOperatorCallExpr 0x6401aa8 <col:14, col:41> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6401a48 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x64018a0 0x6400fe0
| | |       |-CallExpr 0x6401978 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x6401920 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x64018f8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x6401520 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x6401a20 <col:30, col:41> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x64019c8 <col:30, col:36> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x64019a0 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x6401730 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| |-FunctionTemplateDecl 0x6402450 <line:880:3, line:892:43> operator-
| | |-TemplateTypeParmDecl 0x6401b30 <line:880:12, col:21> typename _IteratorL
| | |-TemplateTypeParmDecl 0x6401ba0 <col:33, col:42> typename _IteratorR
| | |-TemplateTypeParmDecl 0x6401c10 <col:54, col:63> typename _Container
| | |-FunctionDecl 0x64023b0 <line:888:5, line:892:43> operator- 'typename __normal_iterator<_IteratorL, _Container>::difference_type (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &)' inline
| | | |-ParmVarDecl 0x6402080 <line:889:15, col:64> __lhs 'const __normal_iterator<_IteratorL, _Container> &'
| | | |-ParmVarDecl 0x6402290 <line:890:8, col:57> __rhs 'const __normal_iterator<_IteratorR, _Container> &'
| | | `-CompoundStmt 0x64026b8 <line:892:5, col:43>
| | |   `-ReturnStmt 0x6402698 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x6402650 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x64025f8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x6402450
| | |       |-CallExpr 0x6402528 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x64024d0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x64024a8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x6402080 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
| | |       `-CallExpr 0x64025d0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x6402578 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x6402550 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x6402290 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
| |-FunctionTemplateDecl 0x6402f60 <line:894:3, line:898:43> operator-
| | |-TemplateTypeParmDecl 0x64026e0 <line:894:12, col:21> typename _Iterator
| | |-TemplateTypeParmDecl 0x6402750 <col:32, col:41> typename _Container
| | |-FunctionDecl 0x6402ea0 <line:895:5, line:898:43> operator- 'typename __normal_iterator<_Iterator, _Container>::difference_type (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &)' inline
| | | |-ParmVarDecl 0x6402b70 <line:896:15, col:63> __lhs 'const __normal_iterator<_Iterator, _Container> &'
| | | |-ParmVarDecl 0x6402d80 <line:897:8, col:56> __rhs 'const __normal_iterator<_Iterator, _Container> &'
| | | `-CompoundStmt 0x64031d0 <line:898:5, col:43>
| | |   `-ReturnStmt 0x64031b0 <col:7, col:40>
| | |     `-CXXOperatorCallExpr 0x6403168 <col:14, col:40> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6403108 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x6402f60 0x6402450
| | |       |-CallExpr 0x6403038 <col:14, col:25> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x6402fe0 <col:14, col:20> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x6402fb8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x6402b70 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
| | |       `-CallExpr 0x64030e0 <col:29, col:40> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x6403088 <col:29, col:35> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x6403060 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x6402d80 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
| `-FunctionTemplateDecl 0x64039e0 <line:900:3, line:904:74> operator+
|   |-TemplateTypeParmDecl 0x64031f0 <line:900:12, col:21> typename _Iterator
|   |-TemplateTypeParmDecl 0x6403260 <col:32, col:41> typename _Container
|   |-FunctionDecl 0x6403940 <line:901:5, line:904:74> operator+ '__normal_iterator<_Iterator, _Container> (typename __normal_iterator<_Iterator, _Container>::difference_type, const __normal_iterator<_Iterator, _Container> &)' inline
|   | |-ParmVarDecl 0x64035e0 <line:902:15, line:903:8> __n 'typename __normal_iterator<_Iterator, _Container>::difference_type'
|   | |-ParmVarDecl 0x64037f0 <col:13, col:61> __i 'const __normal_iterator<_Iterator, _Container> &'
|   | `-CompoundStmt 0x6403d70 <line:904:5, col:74>
|   |   `-ReturnStmt 0x6403d50 <col:7, col:71>
|   |     `-CXXUnresolvedConstructExpr 0x6403d20 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
|   |       `-CXXOperatorCallExpr 0x6403cd8 <col:55, col:68> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x6403c80 <col:66> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x64039e0
|   |         |-CallExpr 0x6403c30 <col:55, col:64> '<dependent type>'
|   |         | `-CXXDependentScopeMemberExpr 0x6403bd8 <col:55, col:59> '<dependent type>' lvalue
|   |         |   `-DeclRefExpr 0x6403bb0 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x64037f0 '__i' 'const __normal_iterator<_Iterator, _Container> &'
|   |         `-DeclRefExpr 0x6403c58 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x64035e0 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type'
|-NamespaceDecl 0x6403dc0 prev 0x63ddb40 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:72:1, line:1215:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x6403e20 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x6404000 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:80:3, line:93:5> __iter_swap
| | |-NonTypeTemplateParmDecl 0x6403e70 <line:80:12, col:17> '_Bool' _BoolType
| | |-CXXRecordDecl 0x6403f70 <line:81:5, line:93:5> struct __iter_swap definition
| | | |-CXXRecordDecl 0x64042a0 <line:81:5, col:12> struct __iter_swap
| | | `-FunctionTemplateDecl 0x6404660 <line:83:7, line:92:2> iter_swap
| | |   |-TemplateTypeParmDecl 0x6404330 <line:83:16, col:25> typename _ForwardIterator1
| | |   |-TemplateTypeParmDecl 0x64043a0 <col:44, col:53> typename _ForwardIterator2
| | |   |-CXXMethodDecl 0x64045c0 <line:84:9, line:92:2> iter_swap 'void (_ForwardIterator1, _ForwardIterator2)' static
| | |   | |-ParmVarDecl 0x6404440 <line:85:19, col:37> __a '_ForwardIterator1'
| | |   | |-ParmVarDecl 0x64044b0 <col:42, col:60> __b '_ForwardIterator2'
| | |   | `-CompoundStmt 0x6404be8 <line:86:9, line:92:2>
| | |   |   |-DeclStmt 0x6404938 <line:87:11, line:88:24>
| | |   |   | `-TypedefDecl 0x64048f0 <line:87:11, line:88:13> _ValueType1 'typename iterator_traits<_ForwardIterator1>::value_type'
| | |   |   |-DeclStmt 0x6404a40 <line:89:11, col:50>
| | |   |   | `-VarDecl 0x6404980 <col:11, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:36> __tmp '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'
| | |   |   |   `-ParenExpr 0x6404a20 <col:30, col:36> '<dependent type>'
| | |   |   |     `-UnaryOperator 0x6404a00 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
| | |   |   |       `-DeclRefExpr 0x64049d8 <col:46> '_ForwardIterator1' lvalue ParmVar 0x6404440 '__a' '_ForwardIterator1'
| | |   |   |-BinaryOperator 0x6404b08 <line:90:11, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:36> '<dependent type>' '='
| | |   |   | |-UnaryOperator 0x6404a80 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
| | |   |   | | `-DeclRefExpr 0x6404a58 <col:12> '_ForwardIterator1' lvalue ParmVar 0x6404440 '__a' '_ForwardIterator1'
| | |   |   | `-ParenExpr 0x6404ae8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:30, col:36> '<dependent type>'
| | |   |   |   `-UnaryOperator 0x6404ac8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
| | |   |   |     `-DeclRefExpr 0x6404aa0 <col:33> '_ForwardIterator2' lvalue ParmVar 0x64044b0 '__b' '_ForwardIterator2'
| | |   |   `-BinaryOperator 0x6404bc0 <line:91:11, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:36> '<dependent type>' '='
| | |   |     |-UnaryOperator 0x6404b58 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
| | |   |     | `-DeclRefExpr 0x6404b30 <col:12> '_ForwardIterator2' lvalue ParmVar 0x64044b0 '__b' '_ForwardIterator2'
| | |   |     `-ParenExpr 0x6404ba0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
| | |   |       `-DeclRefExpr 0x6404b78 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x6404980 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'
| | `-ClassTemplateSpecialization 0x6404c50 '__iter_swap'
| |-ClassTemplateSpecializationDecl 0x6404c50 <line:95:3, line:104:5> struct __iter_swap definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x6404e70 <line:96:5, col:12> struct __iter_swap
| | `-FunctionTemplateDecl 0x6405270 <line:98:7, line:103:9> iter_swap
| |   |-TemplateTypeParmDecl 0x6404f00 <line:98:16, col:25> typename _ForwardIterator1
| |   |-TemplateTypeParmDecl 0x6404fb0 <col:44, col:53> typename _ForwardIterator2
| |   |-CXXMethodDecl 0x64051d0 <line:99:9, line:103:9> iter_swap 'void (_ForwardIterator1, _ForwardIterator2)' static
| |   | |-ParmVarDecl 0x6405050 <line:100:19, col:37> __a '_ForwardIterator1'
| |   | |-ParmVarDecl 0x64050c0 <col:42, col:60> __b '_ForwardIterator2'
| |   | `-CompoundStmt 0x6405420 <line:101:9, line:103:9>
| |   |   `-CallExpr 0x64053e8 <line:102:11, col:26> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x64052f8 <col:11> '<overloaded function type>' lvalue (ADL) = 'swap' 0x63bc770 0x634ceb0
| |   |     |-UnaryOperator 0x6405380 <col:16, col:17> '<dependent type>' prefix '*'
| |   |     | `-DeclRefExpr 0x6405358 <col:17> '_ForwardIterator1' lvalue ParmVar 0x6405050 '__a' '_ForwardIterator1'
| |   |     `-UnaryOperator 0x64053c8 <col:22, col:23> '<dependent type>' prefix '*'
| |   |       `-DeclRefExpr 0x64053a0 <col:23> '_ForwardIterator2' lvalue ParmVar 0x64050c0 '__b' '_ForwardIterator2'
| |-FunctionTemplateDecl 0x6405730 <line:117:3, line:149:5> iter_swap
| | |-TemplateTypeParmDecl 0x6405440 <line:117:12, col:21> typename _ForwardIterator1
| | |-TemplateTypeParmDecl 0x64054b0 <col:40, col:49> typename _ForwardIterator2
| | |-FunctionDecl 0x6405690 <line:118:5, line:149:5> iter_swap 'void (_ForwardIterator1, _ForwardIterator2)' inline
| | | |-ParmVarDecl 0x6405550 <line:119:15, col:33> __a '_ForwardIterator1'
| | | |-ParmVarDecl 0x64055c0 <col:38, col:56> __b '_ForwardIterator2'
| | | `-CompoundStmt 0x6407a90 <line:120:5, line:149:5>
| | |   |-DeclStmt 0x6405948 <line:128:7, line:129:13>
| | |   | `-TypedefDecl 0x6405900 <line:128:7, line:129:2> _ValueType1 'typename iterator_traits<_ForwardIterator1>::value_type'
| | |   |-DeclStmt 0x6405ba8 <line:130:7, line:131:13>
| | |   | `-TypedefDecl 0x6405b60 <line:130:7, line:131:2> _ValueType2 'typename iterator_traits<_ForwardIterator2>::value_type'
| | |   |-DeclStmt 0x6405d78 <line:138:7, line:139:17>
| | |   | `-TypedefDecl 0x6405d30 <line:138:7, line:139:2> _ReferenceType1 'typename iterator_traits<_ForwardIterator1>::reference'
| | |   |-DeclStmt 0x6406fe8 <line:140:7, line:141:17>
| | |   | `-TypedefDecl 0x6406fa0 <line:140:7, line:141:2> _ReferenceType2 'typename iterator_traits<_ForwardIterator2>::reference'
| | |   `-CallExpr 0x6407a58 <line:142:7, line:145:20> '<dependent type>'
| | |     |-DependentScopeDeclRefExpr 0x64079c8 <line:142:7, line:145:2> '<dependent type>' lvalue
| | |     |-DeclRefExpr 0x6407a08 <col:12> '_ForwardIterator1' lvalue ParmVar 0x6405550 '__a' '_ForwardIterator1'
| | |     `-DeclRefExpr 0x6407a30 <col:17> '_ForwardIterator2' lvalue ParmVar 0x64055c0 '__b' '_ForwardIterator2'
| |-FunctionTemplateDecl 0x6407e90 <line:163:3, line:178:5> swap_ranges
| | |-TemplateTypeParmDecl 0x6407ad0 <line:163:12, col:21> typename _ForwardIterator1
| | |-TemplateTypeParmDecl 0x6407b40 <col:40, col:49> typename _ForwardIterator2
| | |-FunctionDecl 0x6407df0 <line:164:5, line:178:5> swap_ranges '_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)'
| | | |-ParmVarDecl 0x6407be0 <line:165:17, col:35> __first1 '_ForwardIterator1'
| | | |-ParmVarDecl 0x6407c50 <col:45, col:63> __last1 '_ForwardIterator1'
| | | |-ParmVarDecl 0x6407cc0 <line:166:3, col:21> __first2 '_ForwardIterator2'
| | | `-CompoundStmt 0x64092b0 <line:167:5, line:178:5>
| | |   |-NullStmt 0x6407ef0 <line:173:56>
| | |   |-ForStmt 0x6409228 <line:175:7, line:176:35>
| | |   | |-<<<NULL>>>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6409028 <line:175:14, col:26> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6408fc0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   | | |-DeclRefExpr 0x6407f00 <col:14> '_ForwardIterator1' lvalue ParmVar 0x6407be0 '__first1' '_ForwardIterator1'
| | |   | | `-DeclRefExpr 0x6407f28 <col:26> '_ForwardIterator1' lvalue ParmVar 0x6407c50 '__last1' '_ForwardIterator1'
| | |   | |-BinaryOperator 0x6409100 <col:35, col:49> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6409098 <col:35, col:37> '<dependent type>' prefix '++'
| | |   | | | `-DeclRefExpr 0x6409070 <col:37> '_ForwardIterator1' lvalue ParmVar 0x6407be0 '__first1' '_ForwardIterator1'
| | |   | | `-UnaryOperator 0x64090e0 <col:47, col:49> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x64090b8 <col:49> '_ForwardIterator2' lvalue ParmVar 0x6407cc0 '__first2' '_ForwardIterator2'
| | |   | `-CallExpr 0x64091f0 <line:176:2, col:35> '<dependent type>'
| | |   |   |-UnresolvedLookupExpr 0x6409148 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = 'iter_swap' 0x6405730
| | |   |   |-DeclRefExpr 0x64091a0 <col:17> '_ForwardIterator1' lvalue ParmVar 0x6407be0 '__first1' '_ForwardIterator1'
| | |   |   `-DeclRefExpr 0x64091c8 <col:27> '_ForwardIterator2' lvalue ParmVar 0x6407cc0 '__first2' '_ForwardIterator2'
| | |   `-ReturnStmt 0x6409290 <line:177:7, col:14>
| | |     `-DeclRefExpr 0x6409268 <col:14> '_ForwardIterator2' lvalue ParmVar 0x6407cc0 '__first2' '_ForwardIterator2'
| |-FunctionTemplateDecl 0x64095c0 <line:191:3, line:201:5> min
| | |-TemplateTypeParmDecl 0x64092e0 <line:191:12, col:21> typename _Tp
| | |-FunctionDecl 0x6409520 <line:192:5, line:201:5> min 'const _Tp &(const _Tp &, const _Tp &)' inline
| | | |-ParmVarDecl 0x64093a0 <line:193:9, col:20> __a 'const _Tp &'
| | | |-ParmVarDecl 0x6409410 <col:25, col:36> __b 'const _Tp &'
| | | `-CompoundStmt 0x64097d8 <line:194:5, line:201:5>
| | |   |-IfStmt 0x6409760 <line:198:7, line:199:9>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x64096d0 <line:198:11, col:17> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6409668 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | |   | | |-DeclRefExpr 0x6409618 <col:11> 'const _Tp' lvalue ParmVar 0x6409410 '__b' 'const _Tp &'
| | |   | | `-DeclRefExpr 0x6409640 <col:17> 'const _Tp' lvalue ParmVar 0x64093a0 '__a' 'const _Tp &'
| | |   | |-ReturnStmt 0x6409740 <line:199:2, col:9>
| | |   | | `-DeclRefExpr 0x6409718 <col:9> 'const _Tp' lvalue ParmVar 0x6409410 '__b' 'const _Tp &'
| | |   | `-<<<NULL>>>
| | |   `-ReturnStmt 0x64097b8 <line:200:7, col:14>
| | |     `-DeclRefExpr 0x6409790 <col:14> 'const _Tp' lvalue ParmVar 0x64093a0 '__a' 'const _Tp &'
| | `-FunctionDecl 0x642f190 <line:192:5, line:201:5> min 'const unsigned long &(const unsigned long &, const unsigned long &)' inline
| |   |-TemplateArgument type 'unsigned long'
| |   |-ParmVarDecl 0x642f010 <line:193:9, col:20> __a 'const unsigned long &'
| |   `-ParmVarDecl 0x642f080 <col:25, col:36> __b 'const unsigned long &'
| |-FunctionTemplateDecl 0x6409aa0 <line:214:3, line:224:5> max
| | |-TemplateTypeParmDecl 0x6409800 <line:214:12, col:21> typename _Tp
| | |-FunctionDecl 0x6409a00 <line:215:5, line:224:5> max 'const _Tp &(const _Tp &, const _Tp &)' inline
| | | |-ParmVarDecl 0x64098c0 <line:216:9, col:20> __a 'const _Tp &'
| | | |-ParmVarDecl 0x6409930 <col:25, col:36> __b 'const _Tp &'
| | | `-CompoundStmt 0x6409cb8 <line:217:5, line:224:5>
| | |   |-IfStmt 0x6409c40 <line:221:7, line:222:9>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6409bb0 <line:221:11, col:17> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6409b48 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | |   | | |-DeclRefExpr 0x6409af8 <col:11> 'const _Tp' lvalue ParmVar 0x64098c0 '__a' 'const _Tp &'
| | |   | | `-DeclRefExpr 0x6409b20 <col:17> 'const _Tp' lvalue ParmVar 0x6409930 '__b' 'const _Tp &'
| | |   | |-ReturnStmt 0x6409c20 <line:222:2, col:9>
| | |   | | `-DeclRefExpr 0x6409bf8 <col:9> 'const _Tp' lvalue ParmVar 0x6409930 '__b' 'const _Tp &'
| | |   | `-<<<NULL>>>
| | |   `-ReturnStmt 0x6409c98 <line:223:7, col:14>
| | |     `-DeclRefExpr 0x6409c70 <col:14> 'const _Tp' lvalue ParmVar 0x64098c0 '__a' 'const _Tp &'
| |-FunctionTemplateDecl 0x640a0f0 <line:237:3, line:245:5> min
| | |-TemplateTypeParmDecl 0x6409ce0 <line:237:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x6409d50 <col:26, col:35> typename _Compare
| | |-FunctionDecl 0x640a050 <line:238:5, line:245:5> min 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
| | | |-ParmVarDecl 0x6409e20 <line:239:9, col:20> __a 'const _Tp &'
| | | |-ParmVarDecl 0x6409e90 <col:25, col:36> __b 'const _Tp &'
| | | |-ParmVarDecl 0x6409f00 <col:41, col:50> __comp '_Compare'
| | | `-CompoundStmt 0x640a2c0 <line:240:5, line:245:5>
| | |   |-IfStmt 0x640a248 <line:242:7, line:243:9>
| | |   | |-<<<NULL>>>
| | |   | |-CallExpr 0x640a1c8 <line:242:11, col:26> '<dependent type>'
| | |   | | |-DeclRefExpr 0x640a150 <col:11> '_Compare' lvalue ParmVar 0x6409f00 '__comp' '_Compare'
| | |   | | |-DeclRefExpr 0x640a178 <col:18> 'const _Tp' lvalue ParmVar 0x6409e90 '__b' 'const _Tp &'
| | |   | | `-DeclRefExpr 0x640a1a0 <col:23> 'const _Tp' lvalue ParmVar 0x6409e20 '__a' 'const _Tp &'
| | |   | |-ReturnStmt 0x640a228 <line:243:2, col:9>
| | |   | | `-DeclRefExpr 0x640a200 <col:9> 'const _Tp' lvalue ParmVar 0x6409e90 '__b' 'const _Tp &'
| | |   | `-<<<NULL>>>
| | |   `-ReturnStmt 0x640a2a0 <line:244:7, col:14>
| | |     `-DeclRefExpr 0x640a278 <col:14> 'const _Tp' lvalue ParmVar 0x6409e20 '__a' 'const _Tp &'
| |-FunctionTemplateDecl 0x640a690 <line:258:3, line:266:5> max
| | |-TemplateTypeParmDecl 0x640a2f0 <line:258:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x640a360 <col:26, col:35> typename _Compare
| | |-FunctionDecl 0x640a5f0 <line:259:5, line:266:5> max 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
| | | |-ParmVarDecl 0x640a430 <line:260:9, col:20> __a 'const _Tp &'
| | | |-ParmVarDecl 0x640a4a0 <col:25, col:36> __b 'const _Tp &'
| | | |-ParmVarDecl 0x640a510 <col:41, col:50> __comp '_Compare'
| | | `-CompoundStmt 0x640a860 <line:261:5, line:266:5>
| | |   |-IfStmt 0x640a7e8 <line:263:7, line:264:9>
| | |   | |-<<<NULL>>>
| | |   | |-CallExpr 0x640a768 <line:263:11, col:26> '<dependent type>'
| | |   | | |-DeclRefExpr 0x640a6f0 <col:11> '_Compare' lvalue ParmVar 0x640a510 '__comp' '_Compare'
| | |   | | |-DeclRefExpr 0x640a718 <col:18> 'const _Tp' lvalue ParmVar 0x640a430 '__a' 'const _Tp &'
| | |   | | `-DeclRefExpr 0x640a740 <col:23> 'const _Tp' lvalue ParmVar 0x640a4a0 '__b' 'const _Tp &'
| | |   | |-ReturnStmt 0x640a7c8 <line:264:2, col:9>
| | |   | | `-DeclRefExpr 0x640a7a0 <col:9> 'const _Tp' lvalue ParmVar 0x640a4a0 '__b' 'const _Tp &'
| | |   | `-<<<NULL>>>
| | |   `-ReturnStmt 0x640a840 <line:265:7, col:14>
| | |     `-DeclRefExpr 0x640a818 <col:14> 'const _Tp' lvalue ParmVar 0x640a430 '__a' 'const _Tp &'
| |-ClassTemplateDecl 0x640a9a0 <line:270:3, line:273:7> _Niter_base
| | |-TemplateTypeParmDecl 0x640a890 <line:270:12, col:21> typename _Iterator
| | |-CXXRecordDecl 0x640a910 <line:271:5, line:273:7> struct _Niter_base definition
| | | |-public '_Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>'
| | | `-CXXRecordDecl 0x640afe0 <line:271:5, col:12> struct _Niter_base
| | |-ClassTemplateSpecializationDecl 0x652b3c0 <line:270:3, line:273:7> struct _Niter_base definition
| | | |-public '_Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value>':'struct std::_Iter_base<unsigned long *, false>'
| | | |-TemplateArgument type 'unsigned long *'
| | | `-CXXRecordDecl 0x652c0a0 prev 0x652b3c0 <line:271:5, col:12> struct _Niter_base
| | `-ClassTemplateSpecializationDecl 0x6534d40 <line:270:3, line:273:7> struct _Niter_base definition
| |   |-public '_Iter_base<long long *, __is_normal_iterator<long long *>::__value>':'struct std::_Iter_base<long long *, false>'
| |   |-TemplateArgument type 'long long *'
| |   `-CXXRecordDecl 0x65359b0 prev 0x6534d40 <line:271:5, col:12> struct _Niter_base
| |-FunctionTemplateDecl 0x640b440 <line:275:3, line:278:58> __niter_base
| | |-TemplateTypeParmDecl 0x640b070 <line:275:12, col:21> typename _Iterator
| | |-FunctionDecl 0x640b3a0 <line:276:5, line:278:58> __niter_base 'typename _Niter_base<_Iterator>::iterator_type (_Iterator)' inline
| | | |-ParmVarDecl 0x640b290 <line:277:18, col:28> __it '_Iterator'
| | | `-CompoundStmt 0x640b690 <line:278:5, col:58>
| | |   `-ReturnStmt 0x640b670 <col:7, col:55>
| | |     `-CallExpr 0x640b640 <col:14, col:55> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x640b5d8 <col:14, col:43> '<dependent type>' lvalue
| | |       `-DeclRefExpr 0x640b618 <col:51> '_Iterator' lvalue ParmVar 0x640b290 '__it' '_Iterator'
| | |-FunctionDecl 0x652c240 <line:276:5, line:278:58> __niter_base 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' inline
| | | |-TemplateArgument type 'unsigned long *'
| | | |-ParmVarDecl 0x652c170 <line:277:18, col:28> __it 'unsigned long *':'unsigned long *'
| | | `-CompoundStmt 0x652f438 <line:278:5, col:58>
| | |   `-ReturnStmt 0x652f418 <col:7, col:55>
| | |     `-CallExpr 0x652f3d0 <col:14, col:55> 'iterator_type':'unsigned long *'
| | |       |-ImplicitCastExpr 0x652f3b8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x652f328 <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0x652bfb0 '_S_base' 'iterator_type (unsigned long *)'
| | |       `-ImplicitCastExpr 0x652f400 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
| | |         `-DeclRefExpr 0x652f360 <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652c170 '__it' 'unsigned long *':'unsigned long *'
| | `-FunctionDecl 0x6535b50 <line:276:5, line:278:58> __niter_base 'typename _Niter_base<long long *>::iterator_type (long long *)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-ParmVarDecl 0x6535a80 <line:277:18, col:28> __it 'long long *':'long long *'
| |   `-CompoundStmt 0x653b8d8 <line:278:5, col:58>
| |     `-ReturnStmt 0x653b8b8 <col:7, col:55>
| |       `-CallExpr 0x653b870 <col:14, col:55> 'iterator_type':'long long *'
| |         |-ImplicitCastExpr 0x653b858 <col:14, col:43> 'iterator_type (*)(long long *)' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x653b7c8 <col:14, col:43> 'iterator_type (long long *)' lvalue CXXMethod 0x65358c0 '_S_base' 'iterator_type (long long *)'
| |         `-ImplicitCastExpr 0x653b8a0 <col:51> 'long long *':'long long *' <LValueToRValue>
| |           `-DeclRefExpr 0x653b800 <col:51> 'long long *':'long long *' lvalue ParmVar 0x6535a80 '__it' 'long long *':'long long *'
| |-ClassTemplateDecl 0x640b7c0 <line:281:3, line:284:7> _Miter_base
| | |-TemplateTypeParmDecl 0x640b6b0 <line:281:12, col:21> typename _Iterator
| | `-CXXRecordDecl 0x640b730 <line:282:5, line:284:7> struct _Miter_base definition
| |   |-public '_Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>'
| |   `-CXXRecordDecl 0x640bd80 <line:282:5, col:12> struct _Miter_base
| |-FunctionTemplateDecl 0x640ca30 <line:286:3, line:289:58> __miter_base
| | |-TemplateTypeParmDecl 0x640be10 <line:286:12, col:21> typename _Iterator
| | |-FunctionDecl 0x640c990 <line:287:5, line:289:58> __miter_base 'typename _Miter_base<_Iterator>::iterator_type (_Iterator)' inline
| | | |-ParmVarDecl 0x640c880 <line:288:18, col:28> __it '_Iterator'
| | | `-CompoundStmt 0x640cc80 <line:289:5, col:58>
| | |   `-ReturnStmt 0x640cc60 <col:7, col:55>
| | |     `-CallExpr 0x640cc30 <col:14, col:55> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x640cbc8 <col:14, col:43> '<dependent type>' lvalue
| | |       `-DeclRefExpr 0x640cc08 <col:51> '_Iterator' lvalue ParmVar 0x640c880 '__it' '_Iterator'
| |-ClassTemplateDecl 0x640cea0 <line:297:3, line:308:5> __copy_move
| | |-NonTypeTemplateParmDecl 0x640ccb0 <line:297:12> '_Bool'
| | |-NonTypeTemplateParmDecl 0x640cd20 <col:18> '_Bool'
| | |-TemplateTypeParmDecl 0x640cd80 <col:24> typename
| | |-CXXRecordDecl 0x640ce10 <line:298:5, line:308:5> struct __copy_move definition
| | | |-CXXRecordDecl 0x640d1d0 <line:298:5, col:12> struct __copy_move
| | | `-FunctionTemplateDecl 0x640d620 <line:300:7, line:307:2> __copy_m
| | |   |-TemplateTypeParmDecl 0x640d260 <line:300:16, col:25> typename _II
| | |   |-TemplateTypeParmDecl 0x640d2d0 <col:30, col:39> typename _OI
| | |   |-CXXMethodDecl 0x640d580 <line:301:9, line:307:2> __copy_m '_OI (_II, _II, _OI)' static
| | |   | |-ParmVarDecl 0x640d370 <line:302:18, col:22> __first '_II'
| | |   | |-ParmVarDecl 0x640d3e0 <col:31, col:35> __last '_II'
| | |   | |-ParmVarDecl 0x640d450 <col:43, col:47> __result '_OI'
| | |   | `-CompoundStmt 0x640dfa0 <line:303:9, line:307:2>
| | |   |   |-ForStmt 0x640df18 <line:304:4, line:305:19>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-CXXOperatorCallExpr 0x640d760 <line:304:11, col:22> '<dependent type>'
| | |   |   | | |-UnresolvedLookupExpr 0x640d6f8 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   |   | | |-DeclRefExpr 0x640d6a8 <col:11> '_II' lvalue ParmVar 0x640d370 '__first' '_II'
| | |   |   | | `-DeclRefExpr 0x640d6d0 <col:22> '_II' lvalue ParmVar 0x640d3e0 '__last' '_II'
| | |   |   | |-BinaryOperator 0x640de38 <col:30, col:44> '<dependent type>' ','
| | |   |   | | |-UnaryOperator 0x640d7d0 <col:30, col:32> '<dependent type>' prefix '++'
| | |   |   | | | `-DeclRefExpr 0x640d7a8 <col:32> '_OI' lvalue ParmVar 0x640d450 '__result' '_OI'
| | |   |   | | `-UnaryOperator 0x640de18 <col:42, col:44> '<dependent type>' prefix '++'
| | |   |   | |   `-DeclRefExpr 0x640ddf0 <col:44> '_II' lvalue ParmVar 0x640d370 '__first' '_II'
| | |   |   | `-BinaryOperator 0x640def0 <line:305:6, col:19> '<dependent type>' '='
| | |   |   |   |-UnaryOperator 0x640de88 <col:6, col:7> '<dependent type>' prefix '*'
| | |   |   |   | `-DeclRefExpr 0x640de60 <col:7> '_OI' lvalue ParmVar 0x640d450 '__result' '_OI'
| | |   |   |   `-UnaryOperator 0x640ded0 <col:18, col:19> '<dependent type>' prefix '*'
| | |   |   |     `-DeclRefExpr 0x640dea8 <col:19> '_II' lvalue ParmVar 0x640d370 '__first' '_II'
| | |   |   `-ReturnStmt 0x640df80 <line:306:4, col:11>
| | |   |     `-DeclRefExpr 0x640df58 <col:11> '_OI' lvalue ParmVar 0x640d450 '__result' '_OI'
| | `-ClassTemplateSpecialization 0x640e020 '__copy_move'
| |-ClassTemplateSpecializationDecl 0x640e020 <line:325:3, line:341:5> struct __copy_move definition
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x640e2d0 <line:326:5, col:12> struct __copy_move
| | |-FunctionTemplateDecl 0x640e6d0 <line:328:7, line:340:2> __copy_m
| | | |-TemplateTypeParmDecl 0x640e360 <line:328:16, col:25> typename _II
| | | |-TemplateTypeParmDecl 0x640e3d0 <col:30, col:39> typename _OI
| | | |-CXXMethodDecl 0x640e630 <line:329:9, line:340:2> __copy_m '_OI (_II, _II, _OI)' static
| | | | |-ParmVarDecl 0x640e470 <line:330:18, col:22> __first '_II'
| | | | |-ParmVarDecl 0x640e4e0 <col:31, col:35> __last '_II'
| | | | |-ParmVarDecl 0x640e550 <col:43, col:47> __result '_OI'
| | | | `-CompoundStmt 0x640f780 <line:331:9, line:340:2>
| | | |   |-DeclStmt 0x640e918 <line:332:4, col:68>
| | | |   | `-TypedefDecl 0x640e8d0 <col:4, col:59> _Distance 'typename iterator_traits<_II>::difference_type'
| | | |   |-ForStmt 0x640f6f8 <line:333:4, line:338:6>
| | | |   | |-DeclStmt 0x640eab0 <line:333:8, col:40>
| | | |   | | `-VarDecl 0x640e960 <col:8, col:33> __n '_Distance':'typename iterator_traits<_II>::difference_type'
| | | |   | |   `-CXXOperatorCallExpr 0x640ea68 <col:24, col:33> '<dependent type>'
| | | |   | |     |-UnresolvedLookupExpr 0x640ea08 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |   | |     |-DeclRefExpr 0x640e9b8 <col:24> '_II' lvalue ParmVar 0x640e4e0 '__last' '_II'
| | | |   | |     `-DeclRefExpr 0x640e9e0 <col:33> '_II' lvalue ParmVar 0x640e470 '__first' '_II'
| | | |   | |-<<<NULL>>>
| | | |   | |-CXXOperatorCallExpr 0x640eb78 <col:42, col:48> '<dependent type>'
| | | |   | | |-UnresolvedLookupExpr 0x640eb10 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | | |   | | |-DeclRefExpr 0x640eac8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x640e960 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| | | |   | | `-IntegerLiteral 0x640eaf0 <col:48> 'int' 0
| | | |   | |-UnaryOperator 0x640ebe8 <col:51, col:53> '<dependent type>' prefix '--'
| | | |   | | `-DeclRefExpr 0x640ebc0 <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x640e960 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
| | | |   | `-CompoundStmt 0x640f6c8 <line:334:6, line:338:6>
| | | |   |   |-BinaryOperator 0x640f610 <line:335:8, col:21> '<dependent type>' '='
| | | |   |   | |-UnaryOperator 0x640ec30 <col:8, col:9> '<dependent type>' prefix '*'
| | | |   |   | | `-DeclRefExpr 0x640ec08 <col:9> '_OI' lvalue ParmVar 0x640e550 '__result' '_OI'
| | | |   |   | `-UnaryOperator 0x640ec78 <col:20, col:21> '<dependent type>' prefix '*'
| | | |   |   |   `-DeclRefExpr 0x640ec50 <col:21> '_II' lvalue ParmVar 0x640e470 '__first' '_II'
| | | |   |   |-UnaryOperator 0x640f660 <line:336:8, col:10> '<dependent type>' prefix '++'
| | | |   |   | `-DeclRefExpr 0x640f638 <col:10> '_II' lvalue ParmVar 0x640e470 '__first' '_II'
| | | |   |   `-UnaryOperator 0x640f6a8 <line:337:8, col:10> '<dependent type>' prefix '++'
| | | |   |     `-DeclRefExpr 0x640f680 <col:10> '_OI' lvalue ParmVar 0x640e550 '__result' '_OI'
| | | |   `-ReturnStmt 0x640f760 <line:339:4, col:11>
| | | |     `-DeclRefExpr 0x640f738 <col:11> '_OI' lvalue ParmVar 0x640e550 '__result' '_OI'
| | `-CXXMethodDecl 0x640ed00 <line:326:12, <invalid sloc>> operator= 'struct std::__copy_move<false, false, struct std::random_access_iterator_tag> &(const struct std::__copy_move<false, false, struct std::random_access_iterator_tag> &)' inline noexcept-unevaluated 0x640ed00
| |   `-ParmVarDecl 0x640f5b0 <col:12> 'const struct std::__copy_move<false, false, struct std::random_access_iterator_tag> &'
| |-ClassTemplatePartialSpecializationDecl 0x640fa20 <line:363:3, line:375:5> struct __copy_move definition
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x640f830 <line:364:24> '_Bool' NonTypeTemplateParm 0x640f7c0 '_IsMove' '_Bool'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-NonTypeTemplateParmDecl 0x640f7c0 <line:363:12, col:17> '_Bool' _IsMove
| | |-CXXRecordDecl 0x640fcc0 <line:364:5, col:12> struct __copy_move
| | `-FunctionTemplateDecl 0x6410150 <line:366:7, line:374:2> __copy_m
| |   |-TemplateTypeParmDecl 0x640fd50 <line:366:16, col:25> typename _Tp
| |   |-CXXMethodDecl 0x64100b0 <line:367:9, line:374:2> __copy_m '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
| |   | |-ParmVarDecl 0x640fe40 <line:368:18, col:29> __first 'const _Tp *'
| |   | |-ParmVarDecl 0x640feb0 <col:38, col:49> __last 'const _Tp *'
| |   | |-ParmVarDecl 0x640ff80 <col:57, col:62> __result '_Tp *'
| |   | `-CompoundStmt 0x6410da8 <line:369:9, line:374:2>
| |   |   |-DeclStmt 0x6410340 <line:370:4, col:43>
| |   |   | `-VarDecl 0x64101f0 <col:4, col:36> _Num 'const ptrdiff_t':'const long'
| |   |   |   `-CXXOperatorCallExpr 0x64102f8 <col:27, col:36> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x6410298 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |   |     |-DeclRefExpr 0x6410248 <col:27> 'const _Tp *' lvalue ParmVar 0x640feb0 '__last' 'const _Tp *'
| |   |   |     `-DeclRefExpr 0x6410270 <col:36> 'const _Tp *' lvalue ParmVar 0x640fe40 '__first' 'const _Tp *'
| |   |   |-IfStmt 0x6410c68 <line:371:4, line:372:61>
| |   |   | |-<<<NULL>>>
| |   |   | |-ImplicitCastExpr 0x6410398 <line:371:8> '_Bool' <IntegralToBoolean>
| |   |   | | `-ImplicitCastExpr 0x6410380 <col:8> 'ptrdiff_t':'long' <LValueToRValue>
| |   |   | |   `-DeclRefExpr 0x6410358 <col:8> 'const ptrdiff_t':'const long' lvalue Var 0x64101f0 '_Num' 'const ptrdiff_t':'const long'
| |   |   | |-CallExpr 0x6410c28 <line:372:6, col:61> '<dependent type>'
| |   |   | | |-DeclRefExpr 0x6410b00 <col:6> '<builtin fn type>' Function 0x6410480 '__builtin_memmove' 'void *(void *, const void *, unsigned long)'
| |   |   | | |-DeclRefExpr 0x6410b28 <col:24> '_Tp *' lvalue ParmVar 0x640ff80 '__result' '_Tp *'
| |   |   | | |-DeclRefExpr 0x6410b50 <col:34> 'const _Tp *' lvalue ParmVar 0x640fe40 '__first' 'const _Tp *'
| |   |   | | `-BinaryOperator 0x6410c00 <col:43, col:57> 'unsigned long' '*'
| |   |   | |   |-UnaryExprOrTypeTraitExpr 0x6410b88 <col:43, col:53> 'unsigned long' sizeof '_Tp'
| |   |   | |   `-ImplicitCastExpr 0x6410be8 <col:57> 'unsigned long' <IntegralCast>
| |   |   | |     `-ImplicitCastExpr 0x6410bd0 <col:57> 'ptrdiff_t':'long' <LValueToRValue>
| |   |   | |       `-DeclRefExpr 0x6410ba8 <col:57> 'const ptrdiff_t':'const long' lvalue Var 0x64101f0 '_Num' 'const ptrdiff_t':'const long'
| |   |   | `-<<<NULL>>>
| |   |   `-ReturnStmt 0x6410d88 <line:373:4, col:22>
| |   |     `-CXXOperatorCallExpr 0x6410d40 <col:11, col:22> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x6410ce8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| |   |       |-DeclRefExpr 0x6410c98 <col:11> '_Tp *' lvalue ParmVar 0x640ff80 '__result' '_Tp *'
| |   |       `-DeclRefExpr 0x6410cc0 <col:22> 'const ptrdiff_t':'const long' lvalue Var 0x64101f0 '_Num' 'const ptrdiff_t':'const long'
| |-FunctionTemplateDecl 0x6411210 <line:377:3, line:391:5> __copy_move_a
| | |-NonTypeTemplateParmDecl 0x6410df0 <line:377:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x6410e50 <col:26, col:35> typename _II
| | |-TemplateTypeParmDecl 0x6410ec0 <col:40, col:49> typename _OI
| | |-FunctionDecl 0x6411170 <line:378:5, line:391:5> __copy_move_a '_OI (_II, _II, _OI)' inline
| | | |-ParmVarDecl 0x6410f60 <line:379:19, col:23> __first '_II'
| | | |-ParmVarDecl 0x6410fd0 <col:32, col:36> __last '_II'
| | | |-ParmVarDecl 0x6411040 <col:44, col:48> __result '_OI'
| | | `-CompoundStmt 0x64123b0 <line:380:5, line:391:5>
| | |   |-DeclStmt 0x6411428 <line:381:7, col:68>
| | |   | `-TypedefDecl 0x64113e0 <col:7, col:57> _ValueTypeI 'typename iterator_traits<_II>::value_type'
| | |   |-DeclStmt 0x6411688 <line:382:7, col:68>
| | |   | `-TypedefDecl 0x6411640 <col:7, col:57> _ValueTypeO 'typename iterator_traits<_OI>::value_type'
| | |   |-DeclStmt 0x6411888 <line:383:7, col:73>
| | |   | `-TypedefDecl 0x6411840 <col:7, col:64> _Category 'typename iterator_traits<_II>::iterator_category'
| | |   |-DeclStmt 0x6411fa0 <line:384:7, line:387:58>
| | |   | `-VarDecl 0x64118b0 <line:384:7, line:387:57> __simple 'const _Bool'
| | |   |   `-ParenExpr 0x6411f80 <line:384:29, line:387:57> '<dependent type>'
| | |   |     `-BinaryOperator 0x6411f58 <line:384:30, line:387:50> '<dependent type>' '&&'
| | |   |       |-BinaryOperator 0x6411d08 <line:384:30, line:386:45> '<dependent type>' '&&'
| | |   |       | |-BinaryOperator 0x6411b38 <line:384:30, line:385:45> '<dependent type>' '&&'
| | |   |       | | |-TypeTraitExpr 0x6411940 <line:384:30, col:54> '_Bool'
| | |   |       | | `-DependentScopeDeclRefExpr 0x6411af8 <line:385:26, col:45> '<dependent type>' lvalue
| | |   |       | `-DependentScopeDeclRefExpr 0x6411cc8 <line:386:26, col:45> '<dependent type>' lvalue
| | |   |       `-DependentScopeDeclRefExpr 0x6411f18 <line:387:12, col:50> '<dependent type>' lvalue
| | |   `-ReturnStmt 0x6412390 <line:389:7, line:390:70>
| | |     `-CallExpr 0x6412350 <line:389:14, line:390:70> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x6412298 <line:389:14, line:390:36> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x64122d8 <col:45> '_II' lvalue ParmVar 0x6410f60 '__first' '_II'
| | |       |-DeclRefExpr 0x6412300 <col:54> '_II' lvalue ParmVar 0x6410fd0 '__last' '_II'
| | |       `-DeclRefExpr 0x6412328 <col:62> '_OI' lvalue ParmVar 0x6411040 '__result' '_OI'
| |-ClassTemplateDecl 0x6412500 <line:395:3, line:396:12> char_traits
| | |-TemplateTypeParmDecl 0x64123f0 <line:395:12, col:21> typename _CharT
| | `-CXXRecordDecl 0x6412470 <line:396:5, col:12> struct char_traits
| |-ClassTemplateDecl 0x64128b0 <line:398:3, line:399:11> istreambuf_iterator
| | |-TemplateTypeParmDecl 0x6412720 <line:398:12, col:21> typename _CharT
| | |-TemplateTypeParmDecl 0x6412790 <col:29, col:38> typename _Traits
| | `-CXXRecordDecl 0x6412820 <line:399:5, col:11> class istreambuf_iterator
| |-ClassTemplateDecl 0x6412d30 <line:401:3, line:402:11> ostreambuf_iterator
| | |-TemplateTypeParmDecl 0x6412ba0 <line:401:12, col:21> typename _CharT
| | |-TemplateTypeParmDecl 0x6412c10 <col:29, col:38> typename _Traits
| | `-CXXRecordDecl 0x6412ca0 <line:402:5, col:11> class ostreambuf_iterator
| |-FunctionTemplateDecl 0x6414590 <line:404:3, line:408:55> __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x6412f80 <line:404:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x6412fe0 <col:26, col:35> typename _CharT
| | |-FunctionDecl 0x64144f0 <line:405:5, line:408:55> __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
| | | |-ParmVarDecl 0x6413810 <line:407:20, col:26> '_CharT *'
| | | |-ParmVarDecl 0x6413880 <col:29, col:35> '_CharT *'
| | | `-ParmVarDecl 0x64143b0 <line:408:6, col:54> 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
| |-FunctionTemplateDecl 0x6415210 <line:410:3, line:414:55> __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x6414600 <line:410:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x6414660 <col:26, col:35> typename _CharT
| | |-FunctionDecl 0x6415140 <line:411:5, line:414:55> __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
| | | |-ParmVarDecl 0x6414cc0 <line:413:20, col:32> 'const _CharT *'
| | | |-ParmVarDecl 0x6414d30 <col:35, col:47> 'const _CharT *'
| | | `-ParmVarDecl 0x6415000 <line:414:6, col:54> 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
| |-FunctionTemplateDecl 0x6415f40 <line:416:3, line:420:64> __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x6415280 <line:416:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x64152e0 <col:26, col:35> typename _CharT
| | |-FunctionDecl 0x6415ea0 <line:417:5, line:420:64> __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *)'
| | | |-ParmVarDecl 0x6415a20 <line:419:20, col:68> 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
| | | |-ParmVarDecl 0x6415cf0 <line:420:6, col:54> 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
| | | `-ParmVarDecl 0x6415d60 <col:57, col:63> '_CharT *'
| |-FunctionTemplateDecl 0x64163a0 <line:422:3, line:429:5> __copy_move_a2
| | |-NonTypeTemplateParmDecl 0x6415fb0 <line:422:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x6416010 <col:26, col:35> typename _II
| | |-TemplateTypeParmDecl 0x6416080 <col:40, col:49> typename _OI
| | |-FunctionDecl 0x6416300 <line:423:5, line:429:5> __copy_move_a2 '_OI (_II, _II, _OI)' inline
| | | |-ParmVarDecl 0x6416120 <line:424:20, col:24> __first '_II'
| | | |-ParmVarDecl 0x6416190 <col:33, col:37> __last '_II'
| | | |-ParmVarDecl 0x6416220 <col:45, col:49> __result '_OI'
| | | `-CompoundStmt 0x6416810 <line:425:5, line:429:5>
| | |   `-ReturnStmt 0x64167f0 <line:426:7, line:428:39>
| | |     `-CXXUnresolvedConstructExpr 0x64167c0 <line:426:14, line:428:39> '_OI'
| | |       `-CallExpr 0x6416780 <line:426:18, line:428:38> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6416470 <line:426:18, col:44> '<dependent type>' lvalue (no ADL) = '__copy_move_a' 0x6411210
| | |         |-CallExpr 0x64165b0 <col:46, col:71> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6416530 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         | `-DeclRefExpr 0x6416588 <col:64> '_II' lvalue ParmVar 0x6416120 '__first' '_II'
| | |         |-CallExpr 0x6416680 <line:427:11, col:35> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6416600 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         | `-DeclRefExpr 0x6416658 <col:29> '_II' lvalue ParmVar 0x6416190 '__last' '_II'
| | |         `-CallExpr 0x6416750 <line:428:11, col:37> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x64166d0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |           `-DeclRefExpr 0x6416728 <col:29> '_OI' lvalue ParmVar 0x6416220 '__result' '_OI'
| |-FunctionTemplateDecl 0x6416ba0 <line:448:3, line:461:5> copy
| | |-TemplateTypeParmDecl 0x6416830 <line:448:12, col:21> typename _II
| | |-TemplateTypeParmDecl 0x64168a0 <col:26, col:35> typename _OI
| | |-FunctionDecl 0x6416b00 <line:449:5, line:461:5> copy '_OI (_II, _II, _OI)' inline
| | | |-ParmVarDecl 0x6416940 <line:450:10, col:14> __first '_II'
| | | |-ParmVarDecl 0x64169b0 <col:23, col:27> __last '_II'
| | | |-ParmVarDecl 0x6416a20 <col:35, col:39> __result '_OI'
| | | `-CompoundStmt 0x64170e0 <line:451:5, line:461:5>
| | |   |-NullStmt 0x6416c00 <line:456:54>
| | |   `-ReturnStmt 0x64170c0 <line:458:7, line:460:18>
| | |     `-ParenExpr 0x64170a0 <line:458:14, line:460:18> '<dependent type>'
| | |       `-CallExpr 0x6417060 <line:458:15, line:460:17> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6416de0 <line:458:15, col:67> '<dependent type>' lvalue (no ADL) = '__copy_move_a2' 0x6414590 0x6415210 0x6415f40 0x64163a0
| | |         |-CallExpr 0x6416f38 <line:459:9, col:34> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6416eb8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x640ca30
| | |         | `-DeclRefExpr 0x6416f10 <col:27> '_II' lvalue ParmVar 0x6416940 '__first' '_II'
| | |         |-CallExpr 0x6417008 <col:37, col:61> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6416f88 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x640ca30
| | |         | `-DeclRefExpr 0x6416fe0 <col:55> '_II' lvalue ParmVar 0x64169b0 '__last' '_II'
| | |         `-DeclRefExpr 0x6417038 <line:460:9> '_OI' lvalue ParmVar 0x6416a20 '__result' '_OI'
| | |-FunctionDecl 0x64ea850 <line:449:5, line:461:5> copy 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' inline
| | | |-TemplateArgument type 'unsigned long *'
| | | |-TemplateArgument type 'unsigned long *'
| | | |-ParmVarDecl 0x64ea640 <line:450:10, col:14> __first 'unsigned long *':'unsigned long *'
| | | |-ParmVarDecl 0x64ea6b0 <col:23, col:27> __last 'unsigned long *':'unsigned long *'
| | | `-ParmVarDecl 0x64ea720 <col:35, col:39> __result 'unsigned long *':'unsigned long *'
| | `-FunctionDecl 0x64eaff0 <line:449:5, line:461:5> copy 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' inline
| |   |-TemplateArgument type 'struct std::_Bit_const_iterator'
| |   |-TemplateArgument type 'struct std::_Bit_iterator'
| |   |-ParmVarDecl 0x64eae30 <line:450:10, col:14> __first 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator'
| |   |-ParmVarDecl 0x64eaea0 <col:23, col:27> __last 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator'
| |   `-ParmVarDecl 0x64eaf10 <col:35, col:39> __result 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
| |-ClassTemplateDecl 0x6417350 <line:500:3, line:511:5> __copy_move_backward
| | |-NonTypeTemplateParmDecl 0x6417120 <line:500:12> '_Bool'
| | |-NonTypeTemplateParmDecl 0x6417190 <col:18> '_Bool'
| | |-TemplateTypeParmDecl 0x6417230 <col:24> typename
| | |-CXXRecordDecl 0x64172c0 <line:501:5, line:511:5> struct __copy_move_backward definition
| | | |-CXXRecordDecl 0x6417680 <line:501:5, col:12> struct __copy_move_backward
| | | `-FunctionTemplateDecl 0x6417a80 <line:503:7, line:510:2> __copy_move_b
| | |   |-TemplateTypeParmDecl 0x6417710 <line:503:16, col:25> typename _BI1
| | |   |-TemplateTypeParmDecl 0x6417780 <col:31, col:40> typename _BI2
| | |   |-CXXMethodDecl 0x64179e0 <line:504:9, line:510:2> __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| | |   | |-ParmVarDecl 0x6417820 <line:505:23, col:28> __first '_BI1'
| | |   | |-ParmVarDecl 0x6417890 <col:37, col:42> __last '_BI1'
| | |   | |-ParmVarDecl 0x6417900 <col:50, col:55> __result '_BI2'
| | |   | `-CompoundStmt 0x6417d70 <line:506:9, line:510:2>
| | |   |   |-WhileStmt 0x6417d00 <line:507:4, line:508:23>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-CXXOperatorCallExpr 0x6417bc0 <line:507:11, col:22> '<dependent type>'
| | |   |   | | |-UnresolvedLookupExpr 0x6417b58 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   |   | | |-DeclRefExpr 0x6417b08 <col:11> '_BI1' lvalue ParmVar 0x6417820 '__first' '_BI1'
| | |   |   | | `-DeclRefExpr 0x6417b30 <col:22> '_BI1' lvalue ParmVar 0x6417890 '__last' '_BI1'
| | |   |   | `-BinaryOperator 0x6417cd8 <line:508:6, col:23> '<dependent type>' '='
| | |   |   |   |-UnaryOperator 0x6417c50 <col:6, col:9> '<dependent type>' prefix '*'
| | |   |   |   | `-UnaryOperator 0x6417c30 <col:7, col:9> '<dependent type>' prefix '--'
| | |   |   |   |   `-DeclRefExpr 0x6417c08 <col:9> '_BI2' lvalue ParmVar 0x6417900 '__result' '_BI2'
| | |   |   |   `-UnaryOperator 0x6417cb8 <col:20, col:23> '<dependent type>' prefix '*'
| | |   |   |     `-UnaryOperator 0x6417c98 <col:21, col:23> '<dependent type>' prefix '--'
| | |   |   |       `-DeclRefExpr 0x6417c70 <col:23> '_BI1' lvalue ParmVar 0x6417890 '__last' '_BI1'
| | |   |   `-ReturnStmt 0x6417d50 <line:509:4, col:11>
| | |   |     `-DeclRefExpr 0x6417d28 <col:11> '_BI2' lvalue ParmVar 0x6417900 '__result' '_BI2'
| | `-ClassTemplateSpecialization 0x6417df0 '__copy_move_backward'
| |-ClassTemplateSpecializationDecl 0x6417df0 <line:528:3, line:540:5> struct __copy_move_backward definition
| | |-TemplateArgument integral 0
| | |-TemplateArgument integral 0
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x64180a0 <line:529:5, col:12> struct __copy_move_backward
| | |-FunctionTemplateDecl 0x64188f0 <line:531:7, line:539:2> __copy_move_b
| | | |-TemplateTypeParmDecl 0x6418130 <line:531:16, col:25> typename _BI1
| | | |-TemplateTypeParmDecl 0x64181a0 <col:31, col:40> typename _BI2
| | | |-CXXMethodDecl 0x6418850 <line:532:9, line:539:2> __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| | | | |-ParmVarDecl 0x6418690 <line:533:23, col:28> __first '_BI1'
| | | | |-ParmVarDecl 0x6418700 <col:37, col:42> __last '_BI1'
| | | | |-ParmVarDecl 0x6418770 <col:50, col:55> __result '_BI2'
| | | | `-CompoundStmt 0x6419148 <line:534:9, line:539:2>
| | | |   |-DeclStmt 0x6418b48 <line:535:4, col:55>
| | | |   | `-VarDecl 0x6418af0 <col:4, col:52> __n 'typename iterator_traits<_BI1>::difference_type'
| | | |   |-ForStmt 0x64190c0 <line:536:4, line:537:23>
| | | |   | |-BinaryOperator 0x6418e60 <line:536:9, col:24> '<dependent type>' '='
| | | |   | | |-DeclRefExpr 0x6418b60 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x6418af0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| | | |   | | `-CXXOperatorCallExpr 0x6418c38 <col:15, col:24> '<dependent type>'
| | | |   | |   |-UnresolvedLookupExpr 0x6418bd8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |   | |   |-DeclRefExpr 0x6418b88 <col:15> '_BI1' lvalue ParmVar 0x6418700 '__last' '_BI1'
| | | |   | |   `-DeclRefExpr 0x6418bb0 <col:24> '_BI1' lvalue ParmVar 0x6418690 '__first' '_BI1'
| | | |   | |-<<<NULL>>>
| | | |   | |-CXXOperatorCallExpr 0x6418f38 <col:33, col:39> '<dependent type>'
| | | |   | | |-UnresolvedLookupExpr 0x6418ed0 <col:37> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | | |   | | |-DeclRefExpr 0x6418e88 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x6418af0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| | | |   | | `-IntegerLiteral 0x6418eb0 <col:39> 'int' 0
| | | |   | |-UnaryOperator 0x6418fa8 <col:42, col:44> '<dependent type>' prefix '--'
| | | |   | | `-DeclRefExpr 0x6418f80 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x6418af0 '__n' 'typename iterator_traits<_BI1>::difference_type'
| | | |   | `-BinaryOperator 0x6419098 <line:537:6, col:23> '<dependent type>' '='
| | | |   |   |-UnaryOperator 0x6419010 <col:6, col:9> '<dependent type>' prefix '*'
| | | |   |   | `-UnaryOperator 0x6418ff0 <col:7, col:9> '<dependent type>' prefix '--'
| | | |   |   |   `-DeclRefExpr 0x6418fc8 <col:9> '_BI2' lvalue ParmVar 0x6418770 '__result' '_BI2'
| | | |   |   `-UnaryOperator 0x6419078 <col:20, col:23> '<dependent type>' prefix '*'
| | | |   |     `-UnaryOperator 0x6419058 <col:21, col:23> '<dependent type>' prefix '--'
| | | |   |       `-DeclRefExpr 0x6419030 <col:23> '_BI1' lvalue ParmVar 0x6418700 '__last' '_BI1'
| | | |   `-ReturnStmt 0x6419128 <line:538:4, col:11>
| | | |     `-DeclRefExpr 0x6419100 <col:11> '_BI2' lvalue ParmVar 0x6418770 '__result' '_BI2'
| | `-CXXMethodDecl 0x6418ce0 <line:529:12, <invalid sloc>> operator= 'struct std::__copy_move_backward<false, false, struct std::random_access_iterator_tag> &(const struct std::__copy_move_backward<false, false, struct std::random_access_iterator_tag> &)' inline noexcept-unevaluated 0x6418ce0
| |   `-ParmVarDecl 0x6418e00 <col:12> 'const struct std::__copy_move_backward<false, false, struct std::random_access_iterator_tag> &'
| |-ClassTemplatePartialSpecializationDecl 0x64193f0 <line:558:3, line:570:5> struct __copy_move_backward definition
| | |-TemplateArgument expr
| | | `-DeclRefExpr 0x6419200 <line:559:33> '_Bool' NonTypeTemplateParm 0x6419190 '_IsMove' '_Bool'
| | |-TemplateArgument integral 1
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-NonTypeTemplateParmDecl 0x6419190 <line:558:12, col:17> '_Bool' _IsMove
| | |-CXXRecordDecl 0x641a2a0 <line:559:5, col:12> struct __copy_move_backward
| | `-FunctionTemplateDecl 0x641a680 <line:561:7, line:569:2> __copy_move_b
| |   |-TemplateTypeParmDecl 0x641a330 <line:561:16, col:25> typename _Tp
| |   |-CXXMethodDecl 0x641a5e0 <line:562:9, line:569:2> __copy_move_b '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
| |   | |-ParmVarDecl 0x641a3f0 <line:563:23, col:34> __first 'const _Tp *'
| |   | |-ParmVarDecl 0x641a460 <col:43, col:54> __last 'const _Tp *'
| |   | |-ParmVarDecl 0x641a500 <col:62, col:67> __result '_Tp *'
| |   | `-CompoundStmt 0x641ac60 <line:564:9, line:569:2>
| |   |   |-DeclStmt 0x641a870 <line:565:4, col:43>
| |   |   | `-VarDecl 0x641a720 <col:4, col:36> _Num 'const ptrdiff_t':'const long'
| |   |   |   `-CXXOperatorCallExpr 0x641a828 <col:27, col:36> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x641a7c8 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |   |     |-DeclRefExpr 0x641a778 <col:27> 'const _Tp *' lvalue ParmVar 0x641a460 '__last' 'const _Tp *'
| |   |   |     `-DeclRefExpr 0x641a7a0 <col:36> 'const _Tp *' lvalue ParmVar 0x641a3f0 '__first' 'const _Tp *'
| |   |   |-IfStmt 0x641ab18 <line:566:4, line:567:68>
| |   |   | |-<<<NULL>>>
| |   |   | |-ImplicitCastExpr 0x641a8c8 <line:566:8> '_Bool' <IntegralToBoolean>
| |   |   | | `-ImplicitCastExpr 0x641a8b0 <col:8> 'ptrdiff_t':'long' <LValueToRValue>
| |   |   | |   `-DeclRefExpr 0x641a888 <col:8> 'const ptrdiff_t':'const long' lvalue Var 0x641a720 '_Num' 'const ptrdiff_t':'const long'
| |   |   | |-CallExpr 0x641aad8 <line:567:6, col:68> '<dependent type>'
| |   |   | | |-DeclRefExpr 0x641a8e0 <col:6> '<builtin fn type>' Function 0x6410480 '__builtin_memmove' 'void *(void *, const void *, unsigned long)'
| |   |   | | |-CXXOperatorCallExpr 0x641a9b8 <col:24, col:35> '<dependent type>'
| |   |   | | | |-UnresolvedLookupExpr 0x641a958 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |   | | | |-DeclRefExpr 0x641a908 <col:24> '_Tp *' lvalue ParmVar 0x641a500 '__result' '_Tp *'
| |   |   | | | `-DeclRefExpr 0x641a930 <col:35> 'const ptrdiff_t':'const long' lvalue Var 0x641a720 '_Num' 'const ptrdiff_t':'const long'
| |   |   | | |-DeclRefExpr 0x641aa00 <col:41> 'const _Tp *' lvalue ParmVar 0x641a3f0 '__first' 'const _Tp *'
| |   |   | | `-BinaryOperator 0x641aab0 <col:50, col:64> 'unsigned long' '*'
| |   |   | |   |-UnaryExprOrTypeTraitExpr 0x641aa38 <col:50, col:60> 'unsigned long' sizeof '_Tp'
| |   |   | |   `-ImplicitCastExpr 0x641aa98 <col:64> 'unsigned long' <IntegralCast>
| |   |   | |     `-ImplicitCastExpr 0x641aa80 <col:64> 'ptrdiff_t':'long' <LValueToRValue>
| |   |   | |       `-DeclRefExpr 0x641aa58 <col:64> 'const ptrdiff_t':'const long' lvalue Var 0x641a720 '_Num' 'const ptrdiff_t':'const long'
| |   |   | `-<<<NULL>>>
| |   |   `-ReturnStmt 0x641ac40 <line:568:4, col:22>
| |   |     `-CXXOperatorCallExpr 0x641abf8 <col:11, col:22> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x641ab98 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |       |-DeclRefExpr 0x641ab48 <col:11> '_Tp *' lvalue ParmVar 0x641a500 '__result' '_Tp *'
| |   |       `-DeclRefExpr 0x641ab70 <col:22> 'const ptrdiff_t':'const long' lvalue Var 0x641a720 '_Num' 'const ptrdiff_t':'const long'
| |-FunctionTemplateDecl 0x641b070 <line:572:3, line:588:5> __copy_move_backward_a
| | |-NonTypeTemplateParmDecl 0x641aca0 <line:572:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x641ad00 <col:26, col:35> typename _BI1
| | |-TemplateTypeParmDecl 0x641ad70 <col:41, col:50> typename _BI2
| | |-FunctionDecl 0x641afd0 <line:573:5, line:588:5> __copy_move_backward_a '_BI2 (_BI1, _BI1, _BI2)' inline
| | | |-ParmVarDecl 0x641ae10 <line:574:28, col:33> __first '_BI1'
| | | |-ParmVarDecl 0x641ae80 <col:42, col:47> __last '_BI1'
| | | |-ParmVarDecl 0x641aef0 <col:55, col:60> __result '_BI2'
| | | `-CompoundStmt 0x641c050 <line:575:5, line:588:5>
| | |   |-DeclStmt 0x641b2b8 <line:576:7, col:69>
| | |   | `-TypedefDecl 0x641b270 <col:7, col:58> _ValueType1 'typename iterator_traits<_BI1>::value_type'
| | |   |-DeclStmt 0x641b488 <line:577:7, col:69>
| | |   | `-TypedefDecl 0x641b440 <col:7, col:58> _ValueType2 'typename iterator_traits<_BI2>::value_type'
| | |   |-DeclStmt 0x641b658 <line:578:7, col:74>
| | |   | `-TypedefDecl 0x641b610 <col:7, col:65> _Category 'typename iterator_traits<_BI1>::iterator_category'
| | |   |-DeclStmt 0x641bc40 <line:579:7, line:582:58>
| | |   | `-VarDecl 0x641b680 <line:579:7, line:582:57> __simple 'const _Bool'
| | |   |   `-ParenExpr 0x641bc20 <line:579:29, line:582:57> '<dependent type>'
| | |   |     `-BinaryOperator 0x641bbf8 <line:579:30, line:582:50> '<dependent type>' '&&'
| | |   |       |-BinaryOperator 0x641ba08 <line:579:30, line:581:46> '<dependent type>' '&&'
| | |   |       | |-BinaryOperator 0x641b888 <line:579:30, line:580:46> '<dependent type>' '&&'
| | |   |       | | |-TypeTraitExpr 0x641b710 <line:579:30, col:54> '_Bool'
| | |   |       | | `-DependentScopeDeclRefExpr 0x641b848 <line:580:26, col:46> '<dependent type>' lvalue
| | |   |       | `-DependentScopeDeclRefExpr 0x641b9c8 <line:581:26, col:46> '<dependent type>' lvalue
| | |   |       `-DependentScopeDeclRefExpr 0x641bbb8 <line:582:12, col:50> '<dependent type>' lvalue
| | |   `-ReturnStmt 0x641c030 <line:584:7, line:587:18>
| | |     `-CallExpr 0x641bff0 <line:584:14, line:587:18> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x641bf38 <line:584:14, line:585:45> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x641bf78 <col:59> '_BI1' lvalue ParmVar 0x641ae10 '__first' '_BI1'
| | |       |-DeclRefExpr 0x641bfa0 <line:586:10> '_BI1' lvalue ParmVar 0x641ae80 '__last' '_BI1'
| | |       `-DeclRefExpr 0x641bfc8 <line:587:10> '_BI2' lvalue ParmVar 0x641aef0 '__result' '_BI2'
| |-FunctionTemplateDecl 0x641c4c0 <line:590:3, line:597:5> __copy_move_backward_a2
| | |-NonTypeTemplateParmDecl 0x641c0a0 <line:590:12, col:17> '_Bool' _IsMove
| | |-TemplateTypeParmDecl 0x641c100 <col:26, col:35> typename _BI1
| | |-TemplateTypeParmDecl 0x641c170 <col:41, col:50> typename _BI2
| | |-FunctionDecl 0x641c420 <line:591:5, line:597:5> __copy_move_backward_a2 '_BI2 (_BI1, _BI1, _BI2)' inline
| | | |-ParmVarDecl 0x641c260 <line:592:29, col:34> __first '_BI1'
| | | |-ParmVarDecl 0x641c2d0 <col:43, col:48> __last '_BI1'
| | | |-ParmVarDecl 0x641c340 <col:56, col:61> __result '_BI2'
| | | `-CompoundStmt 0x641c930 <line:593:5, line:597:5>
| | |   `-ReturnStmt 0x641c910 <line:594:7, line:596:34>
| | |     `-CXXUnresolvedConstructExpr 0x641c8e0 <line:594:14, line:596:34> '_BI2'
| | |       `-CallExpr 0x641c8a0 <line:594:19, line:596:33> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x641c590 <line:594:19, col:54> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a' 0x641b070
| | |         |-CallExpr 0x641c6d0 <line:595:6, col:31> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x641c650 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         | `-DeclRefExpr 0x641c6a8 <col:24> '_BI1' lvalue ParmVar 0x641c260 '__first' '_BI1'
| | |         |-CallExpr 0x641c7a0 <col:34, col:58> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x641c720 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         | `-DeclRefExpr 0x641c778 <col:52> '_BI1' lvalue ParmVar 0x641c2d0 '__last' '_BI1'
| | |         `-CallExpr 0x641c870 <line:596:6, col:32> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x641c7f0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |           `-DeclRefExpr 0x641c848 <col:24> '_BI2' lvalue ParmVar 0x641c340 '__result' '_BI2'
| |-FunctionTemplateDecl 0x641ccc0 <line:617:3, line:632:5> copy_backward
| | |-TemplateTypeParmDecl 0x641c950 <line:617:12, col:21> typename _BI1
| | |-TemplateTypeParmDecl 0x641c9c0 <col:27, col:36> typename _BI2
| | |-FunctionDecl 0x641cc20 <line:618:5, line:632:5> copy_backward '_BI2 (_BI1, _BI1, _BI2)' inline
| | | |-ParmVarDecl 0x641ca60 <line:619:19, col:24> __first '_BI1'
| | | |-ParmVarDecl 0x641cad0 <col:33, col:38> __last '_BI1'
| | | |-ParmVarDecl 0x641cb40 <col:46, col:51> __result '_BI2'
| | | `-CompoundStmt 0x641d1d8 <line:620:5, line:632:5>
| | |   |-NullStmt 0x641cd20 <line:627:54>
| | |   `-ReturnStmt 0x641d1b8 <line:629:7, line:631:18>
| | |     `-ParenExpr 0x641d198 <line:629:14, line:631:18> '<dependent type>'
| | |       `-CallExpr 0x641d158 <line:629:15, line:631:17> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x641cef0 <line:629:15, col:77> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a2' 0x641c4c0
| | |         |-CallExpr 0x641d030 <line:630:9, col:34> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x641cfb0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x640ca30
| | |         | `-DeclRefExpr 0x641d008 <col:27> '_BI1' lvalue ParmVar 0x641ca60 '__first' '_BI1'
| | |         |-CallExpr 0x641d100 <col:37, col:61> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x641d080 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x640ca30
| | |         | `-DeclRefExpr 0x641d0d8 <col:55> '_BI1' lvalue ParmVar 0x641cad0 '__last' '_BI1'
| | |         `-DeclRefExpr 0x641d130 <line:631:9> '_BI2' lvalue ParmVar 0x641cb40 '__result' '_BI2'
| |-FunctionTemplateDecl 0x641da50 <line:675:3, line:683:5> __fill_a
| | |-TemplateTypeParmDecl 0x641d200 <line:675:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x641d2a0 <col:39, col:48> typename _Tp
| | |-FunctionDecl 0x641d9b0 <line:676:5, line:683:5> __fill_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| | | |-ParmVarDecl 0x641d760 <line:678:14, col:31> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x641d7d0 <col:40, col:57> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x641d870 <line:679:8, col:19> __value 'const _Tp &'
| | | `-CompoundStmt 0x641dcd0 <line:680:5, line:683:5>
| | |   `-ForStmt 0x641dc90 <line:681:7, line:682:13>
| | |     |-<<<NULL>>>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x641db68 <line:681:14, col:25> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x641db00 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |     | |-DeclRefExpr 0x641dab0 <col:14> '_ForwardIterator' lvalue ParmVar 0x641d760 '__first' '_ForwardIterator'
| | |     | `-DeclRefExpr 0x641dad8 <col:25> '_ForwardIterator' lvalue ParmVar 0x641d7d0 '__last' '_ForwardIterator'
| | |     |-UnaryOperator 0x641dbd8 <col:33, col:35> '<dependent type>' prefix '++'
| | |     | `-DeclRefExpr 0x641dbb0 <col:35> '_ForwardIterator' lvalue ParmVar 0x641d760 '__first' '_ForwardIterator'
| | |     `-BinaryOperator 0x641dc68 <line:682:2, col:13> '<dependent type>' '='
| | |       |-UnaryOperator 0x641dc20 <col:2, col:3> '<dependent type>' prefix '*'
| | |       | `-DeclRefExpr 0x641dbf8 <col:3> '_ForwardIterator' lvalue ParmVar 0x641d760 '__first' '_ForwardIterator'
| | |       `-DeclRefExpr 0x641dc40 <col:13> 'const _Tp' lvalue ParmVar 0x641d870 '__value' 'const _Tp &'
| |-FunctionTemplateDecl 0x641e500 <line:685:3, line:694:5> __fill_a
| | |-TemplateTypeParmDecl 0x641dcf0 <line:685:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x641dd60 <col:39, col:48> typename _Tp
| | |-FunctionDecl 0x641e460 <line:686:5, line:694:5> __fill_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| | | |-ParmVarDecl 0x641e1b0 <line:688:14, col:31> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x641e280 <col:40, col:57> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x641e320 <line:689:7, col:18> __value 'const _Tp &'
| | | `-CompoundStmt 0x641e828 <line:690:5, line:694:5>
| | |   |-DeclStmt 0x641e5f0 <line:691:7, col:32>
| | |   | `-VarDecl 0x641e570 <col:7, col:25> __tmp 'const _Tp'
| | |   |   `-DeclRefExpr 0x641e5c8 <col:25> 'const _Tp' lvalue ParmVar 0x641e320 '__value' 'const _Tp &'
| | |   `-ForStmt 0x641e7e8 <line:692:7, line:693:13>
| | |     |-<<<NULL>>>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x641e6c0 <line:692:14, col:25> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x641e658 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |     | |-DeclRefExpr 0x641e608 <col:14> '_ForwardIterator' lvalue ParmVar 0x641e1b0 '__first' '_ForwardIterator'
| | |     | `-DeclRefExpr 0x641e630 <col:25> '_ForwardIterator' lvalue ParmVar 0x641e280 '__last' '_ForwardIterator'
| | |     |-UnaryOperator 0x641e730 <col:33, col:35> '<dependent type>' prefix '++'
| | |     | `-DeclRefExpr 0x641e708 <col:35> '_ForwardIterator' lvalue ParmVar 0x641e1b0 '__first' '_ForwardIterator'
| | |     `-BinaryOperator 0x641e7c0 <line:693:2, col:13> '<dependent type>' '='
| | |       |-UnaryOperator 0x641e778 <col:2, col:3> '<dependent type>' prefix '*'
| | |       | `-DeclRefExpr 0x641e750 <col:3> '_ForwardIterator' lvalue ParmVar 0x641e1b0 '__first' '_ForwardIterator'
| | |       `-DeclRefExpr 0x641e798 <col:13> 'const _Tp' lvalue Var 0x641e570 '__tmp' 'const _Tp'
| | `-FunctionDecl 0x652f010 <line:686:5, line:694:5> __fill_a 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' inline
| |   |-TemplateArgument type 'unsigned long *'
| |   |-TemplateArgument type 'int'
| |   |-ParmVarDecl 0x652ee10 <line:688:14, col:31> __first 'unsigned long *':'unsigned long *'
| |   |-ParmVarDecl 0x652ee80 <col:40, col:57> __last 'unsigned long *':'unsigned long *'
| |   |-ParmVarDecl 0x652ef20 <line:689:7, col:18> __value 'const int &'
| |   `-CompoundStmt 0x652f868 <line:690:5, line:694:5>
| |     |-DeclStmt 0x652f5d8 <line:691:7, col:32>
| |     | `-VarDecl 0x652f4f0 <col:7, col:25> __tmp 'const int':'const int'
| |     |   `-ImplicitCastExpr 0x652f570 <col:25> 'int':'int' <LValueToRValue>
| |     |     `-DeclRefExpr 0x652f548 <col:25> 'const int':'const int' lvalue ParmVar 0x652ef20 '__value' 'const int &'
| |     `-ForStmt 0x652f828 <line:692:7, line:693:13>
| |       |-<<<NULL>>>
| |       |-<<<NULL>>>
| |       |-BinaryOperator 0x652f6d8 <line:692:14, col:25> '_Bool' '!='
| |       | |-ImplicitCastExpr 0x652f6a8 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
| |       | | `-DeclRefExpr 0x652f658 <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652ee10 '__first' 'unsigned long *':'unsigned long *'
| |       | `-ImplicitCastExpr 0x652f6c0 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
| |       |   `-DeclRefExpr 0x652f680 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652ee80 '__last' 'unsigned long *':'unsigned long *'
| |       |-UnaryOperator 0x652f728 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
| |       | `-DeclRefExpr 0x652f700 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652ee10 '__first' 'unsigned long *':'unsigned long *'
| |       `-BinaryOperator 0x652f800 <line:693:2, col:13> 'unsigned long' lvalue '='
| |         |-UnaryOperator 0x652f788 <col:2, col:3> 'unsigned long' lvalue prefix '*'
| |         | `-ImplicitCastExpr 0x652f770 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x652f748 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x652ee10 '__first' 'unsigned long *':'unsigned long *'
| |         `-ImplicitCastExpr 0x652f7e8 <col:13> 'unsigned long' <IntegralCast>
| |           `-ImplicitCastExpr 0x652f7d0 <col:13> 'int':'int' <LValueToRValue>
| |             `-DeclRefExpr 0x652f7a8 <col:13> 'const int':'const int' lvalue Var 0x652f4f0 '__tmp' 'const int':'const int'
| |-FunctionTemplateDecl 0x641efd0 <line:697:3, line:705:5> __fill_a
| | |-TemplateTypeParmDecl 0x641e850 <line:697:12, col:21> typename _Tp
| | |-FunctionDecl 0x641ef30 <line:698:5, line:705:5> __fill_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type (_Tp *, _Tp *, const _Tp &)' inline
| | | |-ParmVarDecl 0x641ece0 <line:700:14, col:19> __first '_Tp *'
| | | |-ParmVarDecl 0x641ed50 <col:28, col:33> __last '_Tp *'
| | | |-ParmVarDecl 0x641edf0 <col:41, col:52> __c 'const _Tp &'
| | | `-CompoundStmt 0x641f5f0 <line:701:5, line:705:5>
| | |   |-DeclStmt 0x641f0c0 <line:702:7, col:28>
| | |   | `-VarDecl 0x641f040 <col:7, col:25> __tmp 'const _Tp'
| | |   |   `-DeclRefExpr 0x641f098 <col:25> 'const _Tp' lvalue ParmVar 0x641edf0 '__c' 'const _Tp &'
| | |   `-CallExpr 0x641f5b0 <line:703:7, line:704:26> '<dependent type>'
| | |     |-DeclRefExpr 0x641f400 <line:703:7> '<builtin fn type>' Function 0x641f180 '__builtin_memset' 'void *(void *, int, unsigned long)'
| | |     |-DeclRefExpr 0x641f428 <col:24> '_Tp *' lvalue ParmVar 0x641ece0 '__first' '_Tp *'
| | |     |-CXXStaticCastExpr 0x641f488 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
| | |     | `-DeclRefExpr 0x641f450 <col:60> 'const _Tp' lvalue Var 0x641f040 '__tmp' 'const _Tp'
| | |     `-CXXOperatorCallExpr 0x641f568 <line:704:10, col:19> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x641f508 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | |       |-DeclRefExpr 0x641f4b8 <col:10> '_Tp *' lvalue ParmVar 0x641ed50 '__last' '_Tp *'
| | |       `-DeclRefExpr 0x641f4e0 <col:19> '_Tp *' lvalue ParmVar 0x641ece0 '__first' '_Tp *'
| |-FunctionTemplateDecl 0x641fa10 <line:719:3, line:730:5> fill
| | |-TemplateTypeParmDecl 0x641f620 <line:719:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x641f690 <col:39, col:48> typename _Tp
| | |-FunctionDecl 0x641f970 <line:720:5, line:730:5> fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| | | |-ParmVarDecl 0x641f730 <line:721:10, col:27> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x641f7a0 <col:36, col:53> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x641f840 <col:61, col:72> __value 'const _Tp &'
| | | `-CompoundStmt 0x641fd10 <line:722:5, line:730:5>
| | |   |-NullStmt 0x641fa70 <line:726:54>
| | |   `-CallExpr 0x641fcd0 <line:728:7, line:729:14> '<dependent type>'
| | |     |-UnresolvedLookupExpr 0x641faa0 <line:728:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x641da50 0x641e500 0x641efd0
| | |     |-CallExpr 0x641fba8 <col:21, col:46> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x641fb28 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |     | `-DeclRefExpr 0x641fb80 <col:39> '_ForwardIterator' lvalue ParmVar 0x641f730 '__first' '_ForwardIterator'
| | |     |-CallExpr 0x641fc78 <col:49, col:73> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x641fbf8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |     | `-DeclRefExpr 0x641fc50 <col:67> '_ForwardIterator' lvalue ParmVar 0x641f7a0 '__last' '_ForwardIterator'
| | |     `-DeclRefExpr 0x641fca8 <line:729:7> 'const _Tp' lvalue ParmVar 0x641f840 '__value' 'const _Tp &'
| | |-FunctionDecl 0x64bcce0 <line:720:5, line:730:5> fill 'void (unsigned long *, unsigned long *, const int &)' inline
| | | |-TemplateArgument type 'unsigned long *'
| | | |-TemplateArgument type 'int'
| | | |-ParmVarDecl 0x64bca00 <line:721:10, col:27> __first 'unsigned long *':'unsigned long *'
| | | |-ParmVarDecl 0x64bca70 <col:36, col:53> __last 'unsigned long *':'unsigned long *'
| | | |-ParmVarDecl 0x64bcbb0 <col:61, col:72> __value 'const int &'
| | | `-CompoundStmt 0x652f240 <line:722:5, line:730:5>
| | |   |-NullStmt 0x641fa70 <line:726:54>
| | |   `-CallExpr 0x652f200 <line:728:7, line:729:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
| | |     |-ImplicitCastExpr 0x652f1e8 <line:728:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x652f178 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0x652f010 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x641e500 '__fill_a')
| | |     |-CallExpr 0x652c3f0 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
| | |     | |-ImplicitCastExpr 0x652c3d8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0x652c340 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x652c240 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x640b440 '__niter_base')
| | |     | `-ImplicitCastExpr 0x652c420 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x652b280 <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x64bca00 '__first' 'unsigned long *':'unsigned long *'
| | |     |-CallExpr 0x652c550 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
| | |     | |-ImplicitCastExpr 0x652c538 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0x652c4f8 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x652c240 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x640b440 '__niter_base')
| | |     | `-ImplicitCastExpr 0x652c580 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
| | |     |   `-DeclRefExpr 0x652c490 <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x64bca70 '__last' 'unsigned long *':'unsigned long *'
| | |     `-DeclRefExpr 0x652c598 <line:729:7> 'const int':'const int' lvalue ParmVar 0x64bcbb0 '__value' 'const int &'
| | `-FunctionDecl 0x6512fe0 <line:720:5, line:730:5> fill 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' inline
| |   |-TemplateArgument type 'struct std::_Bit_iterator'
| |   |-TemplateArgument type '_Bool'
| |   |-ParmVarDecl 0x6512dc0 <line:721:10, col:27> __first 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
| |   |-ParmVarDecl 0x6512e30 <col:36, col:53> __last 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
| |   `-ParmVarDecl 0x6512f00 <col:61, col:72> __value 'const _Bool &'
| |-FunctionTemplateDecl 0x6420620 <line:732:3, line:741:5> __fill_n_a
| | |-TemplateTypeParmDecl 0x641fd40 <line:732:12, col:21> typename _OutputIterator
| | |-TemplateTypeParmDecl 0x641fdb0 <col:38, col:47> typename _Size
| | |-TemplateTypeParmDecl 0x641fe20 <col:54, col:63> typename _Tp
| | |-FunctionDecl 0x6420580 <line:733:5, line:741:5> __fill_n_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
| | | |-ParmVarDecl 0x6420300 <line:735:16, col:32> __first '_OutputIterator'
| | | |-ParmVarDecl 0x6420370 <col:41, col:47> __n '_Size'
| | | |-ParmVarDecl 0x6420440 <col:52, col:63> __value 'const _Tp &'
| | | `-CompoundStmt 0x6420b28 <line:736:5, line:741:5>
| | |   |-ForStmt 0x6420aa0 <line:737:7, line:739:13>
| | |   | |-DeclStmt 0x6420840 <line:737:12, col:45>
| | |   | | `-VarDecl 0x64207c0 <col:12, col:42> __niter 'decltype(__n + 0)'
| | |   | |   `-DeclRefExpr 0x6420818 <col:42> '_Size' lvalue ParmVar 0x6420370 '__n' '_Size'
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6420908 <line:738:5, col:15> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x64208a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | |   | | |-DeclRefExpr 0x6420858 <col:5> 'decltype(__n + 0)' lvalue Var 0x64207c0 '__niter' 'decltype(__n + 0)'
| | |   | | `-IntegerLiteral 0x6420880 <col:15> 'int' 0
| | |   | |-BinaryOperator 0x64209e0 <col:18, col:31> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6420978 <col:18, col:20> '<dependent type>' prefix '--'
| | |   | | | `-DeclRefExpr 0x6420950 <col:20> 'decltype(__n + 0)' lvalue Var 0x64207c0 '__niter' 'decltype(__n + 0)'
| | |   | | `-UnaryOperator 0x64209c0 <col:29, col:31> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x6420998 <col:31> '_OutputIterator' lvalue ParmVar 0x6420300 '__first' '_OutputIterator'
| | |   | `-BinaryOperator 0x6420a78 <line:739:2, col:13> '<dependent type>' '='
| | |   |   |-UnaryOperator 0x6420a30 <col:2, col:3> '<dependent type>' prefix '*'
| | |   |   | `-DeclRefExpr 0x6420a08 <col:3> '_OutputIterator' lvalue ParmVar 0x6420300 '__first' '_OutputIterator'
| | |   |   `-DeclRefExpr 0x6420a50 <col:13> 'const _Tp' lvalue ParmVar 0x6420440 '__value' 'const _Tp &'
| | |   `-ReturnStmt 0x6420b08 <line:740:7, col:14>
| | |     `-DeclRefExpr 0x6420ae0 <col:14> '_OutputIterator' lvalue ParmVar 0x6420300 '__first' '_OutputIterator'
| |-FunctionTemplateDecl 0x64213a0 <line:743:3, line:753:5> __fill_n_a
| | |-TemplateTypeParmDecl 0x6420b50 <line:743:12, col:21> typename _OutputIterator
| | |-TemplateTypeParmDecl 0x6420bc0 <col:38, col:47> typename _Size
| | |-TemplateTypeParmDecl 0x6420c30 <col:54, col:63> typename _Tp
| | |-FunctionDecl 0x6421300 <line:744:5, line:753:5> __fill_n_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
| | | |-ParmVarDecl 0x6421080 <line:746:16, col:32> __first '_OutputIterator'
| | | |-ParmVarDecl 0x64210f0 <col:41, col:47> __n '_Size'
| | | |-ParmVarDecl 0x6421190 <col:52, col:63> __value 'const _Tp &'
| | | `-CompoundStmt 0x6421938 <line:747:5, line:753:5>
| | |   |-DeclStmt 0x6421490 <line:748:7, col:32>
| | |   | `-VarDecl 0x6421410 <col:7, col:25> __tmp 'const _Tp'
| | |   |   `-DeclRefExpr 0x6421468 <col:25> 'const _Tp' lvalue ParmVar 0x6421190 '__value' 'const _Tp &'
| | |   |-ForStmt 0x64218b0 <line:749:7, line:751:13>
| | |   | |-DeclStmt 0x6421650 <line:749:12, col:45>
| | |   | | `-VarDecl 0x64215d0 <col:12, col:42> __niter 'decltype(__n + 0)'
| | |   | |   `-DeclRefExpr 0x6421628 <col:42> '_Size' lvalue ParmVar 0x64210f0 '__n' '_Size'
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6421718 <line:750:5, col:15> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x64216b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | |   | | |-DeclRefExpr 0x6421668 <col:5> 'decltype(__n + 0)' lvalue Var 0x64215d0 '__niter' 'decltype(__n + 0)'
| | |   | | `-IntegerLiteral 0x6421690 <col:15> 'int' 0
| | |   | |-BinaryOperator 0x64217f0 <col:18, col:31> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6421788 <col:18, col:20> '<dependent type>' prefix '--'
| | |   | | | `-DeclRefExpr 0x6421760 <col:20> 'decltype(__n + 0)' lvalue Var 0x64215d0 '__niter' 'decltype(__n + 0)'
| | |   | | `-UnaryOperator 0x64217d0 <col:29, col:31> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x64217a8 <col:31> '_OutputIterator' lvalue ParmVar 0x6421080 '__first' '_OutputIterator'
| | |   | `-BinaryOperator 0x6421888 <line:751:2, col:13> '<dependent type>' '='
| | |   |   |-UnaryOperator 0x6421840 <col:2, col:3> '<dependent type>' prefix '*'
| | |   |   | `-DeclRefExpr 0x6421818 <col:3> '_OutputIterator' lvalue ParmVar 0x6421080 '__first' '_OutputIterator'
| | |   |   `-DeclRefExpr 0x6421860 <col:13> 'const _Tp' lvalue Var 0x6421410 '__tmp' 'const _Tp'
| | |   `-ReturnStmt 0x6421918 <line:752:7, col:14>
| | |     `-DeclRefExpr 0x64218f0 <col:14> '_OutputIterator' lvalue ParmVar 0x6421080 '__first' '_OutputIterator'
| | `-FunctionDecl 0x653adf0 <line:744:5, line:753:5> __fill_n_a 'typename __gnu_cxx::__enable_if<__is_scalar<long long>::__value, long long *>::__type (long long *, unsigned long, const long long &)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument type 'long long'
| |   |-ParmVarDecl 0x653abc0 <line:746:16, col:32> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x653ac60 <col:41, col:47> __n 'unsigned long':'unsigned long'
| |   |-ParmVarDecl 0x653ad00 <col:52, col:63> __value 'const long long &'
| |   `-CompoundStmt 0x653bf68 <line:747:5, line:753:5>
| |     |-DeclStmt 0x653ba78 <line:748:7, col:32>
| |     | `-VarDecl 0x653b990 <col:7, col:25> __tmp 'const long long':'const long long'
| |     |   `-ImplicitCastExpr 0x653ba10 <col:25> 'long long':'long long' <LValueToRValue>
| |     |     `-DeclRefExpr 0x653b9e8 <col:25> 'const long long':'const long long' lvalue ParmVar 0x653ad00 '__value' 'const long long &'
| |     |-ForStmt 0x653bec8 <line:749:7, line:751:13>
| |     | |-DeclStmt 0x653bc48 <line:749:12, col:45>
| |     | | `-VarDecl 0x653bbb0 <col:12, col:42> __niter 'decltype(__n + 0)':'unsigned long'
| |     | |   `-ImplicitCastExpr 0x653bc30 <col:42> 'unsigned long':'unsigned long' <LValueToRValue>
| |     | |     `-DeclRefExpr 0x653bc08 <col:42> 'unsigned long':'unsigned long' lvalue ParmVar 0x653ac60 '__n' 'unsigned long':'unsigned long'
| |     | |-<<<NULL>>>
| |     | |-BinaryOperator 0x653bd20 <line:750:5, col:15> '_Bool' '>'
| |     | | |-ImplicitCastExpr 0x653bcf0 <col:5> 'decltype(__n + 0)':'unsigned long' <LValueToRValue>
| |     | | | `-DeclRefExpr 0x653bcc8 <col:5> 'decltype(__n + 0)':'unsigned long' lvalue Var 0x653bbb0 '__niter' 'decltype(__n + 0)':'unsigned long'
| |     | | `-ImplicitCastExpr 0x653bd08 <col:15> 'unsigned long' <IntegralCast>
| |     | |   `-IntegerLiteral 0x6421690 <col:15> 'int' 0
| |     | |-BinaryOperator 0x653bdd8 <col:18, col:31> 'long long *':'long long *' lvalue ','
| |     | | |-UnaryOperator 0x653bd70 <col:18, col:20> 'decltype(__n + 0)':'unsigned long' lvalue prefix '--'
| |     | | | `-DeclRefExpr 0x653bd48 <col:20> 'decltype(__n + 0)':'unsigned long' lvalue Var 0x653bbb0 '__niter' 'decltype(__n + 0)':'unsigned long'
| |     | | `-UnaryOperator 0x653bdb8 <col:29, col:31> 'long long *':'long long *' lvalue prefix '++'
| |     | |   `-DeclRefExpr 0x653bd90 <col:31> 'long long *':'long long *' lvalue ParmVar 0x653abc0 '__first' 'long long *':'long long *'
| |     | `-BinaryOperator 0x653bea0 <line:751:2, col:13> 'long long' lvalue '='
| |     |   |-UnaryOperator 0x653be40 <col:2, col:3> 'long long' lvalue prefix '*'
| |     |   | `-ImplicitCastExpr 0x653be28 <col:3> 'long long *':'long long *' <LValueToRValue>
| |     |   |   `-DeclRefExpr 0x653be00 <col:3> 'long long *':'long long *' lvalue ParmVar 0x653abc0 '__first' 'long long *':'long long *'
| |     |   `-ImplicitCastExpr 0x653be88 <col:13> 'long long':'long long' <LValueToRValue>
| |     |     `-DeclRefExpr 0x653be60 <col:13> 'const long long':'const long long' lvalue Var 0x653b990 '__tmp' 'const long long':'const long long'
| |     `-ReturnStmt 0x653bf48 <line:752:7, col:14>
| |       `-ImplicitCastExpr 0x653bf30 <col:14> 'long long *':'long long *' <LValueToRValue>
| |         `-DeclRefExpr 0x653bf08 <col:14> 'long long *':'long long *' lvalue ParmVar 0x653abc0 '__first' 'long long *':'long long *'
| |-FunctionTemplateDecl 0x64221b0 <line:755:3, line:762:5> __fill_n_a
| | |-TemplateTypeParmDecl 0x6421970 <line:755:12, col:21> typename _Size
| | |-TemplateTypeParmDecl 0x64219e0 <col:28, col:37> typename _Tp
| | |-FunctionDecl 0x6422110 <line:756:5, line:762:5> __fill_n_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type (_Tp *, _Size, const _Tp &)' inline
| | | |-ParmVarDecl 0x6421ec0 <line:758:16, col:21> __first '_Tp *'
| | | |-ParmVarDecl 0x6421f30 <col:30, col:36> __n '_Size'
| | | |-ParmVarDecl 0x6421fd0 <col:41, col:52> __c 'const _Tp &'
| | | `-CompoundStmt 0x6422550 <line:759:5, line:762:5>
| | |   |-CallExpr 0x6422400 <line:760:7, col:48> '<dependent type>'
| | |   | |-UnresolvedLookupExpr 0x6422230 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x641da50 0x641e500 0x641efd0
| | |   | |-DeclRefExpr 0x64222c0 <col:21> '_Tp *' lvalue ParmVar 0x6421ec0 '__first' '_Tp *'
| | |   | |-CXXOperatorCallExpr 0x6422390 <col:30, col:40> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6422338 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | |   | | |-DeclRefExpr 0x64222e8 <col:30> '_Tp *' lvalue ParmVar 0x6421ec0 '__first' '_Tp *'
| | |   | | `-DeclRefExpr 0x6422310 <col:40> '_Size' lvalue ParmVar 0x6421f30 '__n' '_Size'
| | |   | `-DeclRefExpr 0x64223d8 <col:45> 'const _Tp' lvalue ParmVar 0x6421fd0 '__c' 'const _Tp &'
| | |   `-ReturnStmt 0x6422530 <line:761:7, col:24>
| | |     `-CXXOperatorCallExpr 0x64224e8 <col:14, col:24> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6422490 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | |       |-DeclRefExpr 0x6422440 <col:14> '_Tp *' lvalue ParmVar 0x6421ec0 '__first' '_Tp *'
| | |       `-DeclRefExpr 0x6422468 <col:24> '_Size' lvalue ParmVar 0x6421f30 '__n' '_Size'
| |-FunctionTemplateDecl 0x64229e0 <line:779:3, line:787:5> fill_n
| | |-TemplateTypeParmDecl 0x6422580 <line:779:12, col:21> typename _OI
| | |-TemplateTypeParmDecl 0x64225f0 <col:26, col:35> typename _Size
| | |-TemplateTypeParmDecl 0x6422660 <col:42, col:51> typename _Tp
| | |-FunctionDecl 0x6422940 <line:780:5, line:787:5> fill_n '_OI (_OI, _Size, const _Tp &)' inline
| | | |-ParmVarDecl 0x6422700 <line:781:12, col:16> __first '_OI'
| | | |-ParmVarDecl 0x6422770 <col:25, col:31> __n '_Size'
| | | |-ParmVarDecl 0x6422810 <col:36, col:47> __value 'const _Tp &'
| | | `-CompoundStmt 0x6422c88 <line:782:5, line:787:5>
| | |   `-ReturnStmt 0x6422c68 <line:786:7, col:75>
| | |     `-CXXUnresolvedConstructExpr 0x6422c38 <col:14, col:75> '_OI'
| | |       `-CallExpr 0x6422bf8 <col:18, col:74> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6422a70 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '__fill_n_a' 0x6420620 0x64213a0 0x64221b0
| | |         |-CallExpr 0x6422b78 <col:34, col:59> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6422af8 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         | `-DeclRefExpr 0x6422b50 <col:52> '_OI' lvalue ParmVar 0x6422700 '__first' '_OI'
| | |         |-DeclRefExpr 0x6422ba8 <col:62> '_Size' lvalue ParmVar 0x6422770 '__n' '_Size'
| | |         `-DeclRefExpr 0x6422bd0 <col:67> 'const _Tp' lvalue ParmVar 0x6422810 '__value' 'const _Tp &'
| | `-FunctionDecl 0x6534940 <line:780:5, line:787:5> fill_n 'long long *(long long *, unsigned long, const long long &)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument type 'long long'
| |   |-ParmVarDecl 0x65346a0 <line:781:12, col:16> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x6534740 <col:25, col:31> __n 'unsigned long':'unsigned long'
| |   |-ParmVarDecl 0x6534810 <col:36, col:47> __value 'const long long &'
| |   `-CompoundStmt 0x653b6f0 <line:782:5, line:787:5>
| |     `-ReturnStmt 0x653b6d0 <line:786:7, col:75>
| |       `-CXXFunctionalCastExpr 0x653b6a8 <col:14, col:75> 'long long *':'long long *' functional cast to long long * <NoOp>
| |         `-CallExpr 0x653b650 <col:18, col:74> 'typename __gnu_cxx::__enable_if<__is_scalar<long long>::__value, long long *>::__type':'long long *'
| |           |-ImplicitCastExpr 0x653b638 <col:18, col:23> 'typename __gnu_cxx::__enable_if<__is_scalar<long long>::__value, long long *>::__type (*)(long long *, unsigned long, const long long &)' <FunctionToPointerDecay>
| |           | `-DeclRefExpr 0x653b5c8 <col:18, col:23> 'typename __gnu_cxx::__enable_if<__is_scalar<long long>::__value, long long *>::__type (long long *, unsigned long, const long long &)' lvalue Function 0x653adf0 '__fill_n_a' 'typename __gnu_cxx::__enable_if<__is_scalar<long long>::__value, long long *>::__type (long long *, unsigned long, const long long &)' (FunctionTemplate 0x64213a0 '__fill_n_a')
| |           |-CallExpr 0x6535d00 <col:34, col:59> 'typename _Niter_base<long long *>::iterator_type':'long long *'
| |           | |-ImplicitCastExpr 0x6535ce8 <col:34, col:39> 'typename _Niter_base<long long *>::iterator_type (*)(long long *)' <FunctionToPointerDecay>
| |           | | `-DeclRefExpr 0x6535c50 <col:34, col:39> 'typename _Niter_base<long long *>::iterator_type (long long *)' lvalue Function 0x6535b50 '__niter_base' 'typename _Niter_base<long long *>::iterator_type (long long *)' (FunctionTemplate 0x640b440 '__niter_base')
| |           | `-ImplicitCastExpr 0x6535d30 <col:52> 'long long *':'long long *' <LValueToRValue>
| |           |   `-DeclRefExpr 0x6534c90 <col:52> 'long long *':'long long *' lvalue ParmVar 0x65346a0 '__first' 'long long *':'long long *'
| |           |-ImplicitCastExpr 0x653b690 <col:62> 'unsigned long':'unsigned long' <LValueToRValue>
| |           | `-DeclRefExpr 0x6535d48 <col:62> 'unsigned long':'unsigned long' lvalue ParmVar 0x6534740 '__n' 'unsigned long':'unsigned long'
| |           `-DeclRefExpr 0x6535d70 <col:67> 'const long long':'const long long' lvalue ParmVar 0x6534810 '__value' 'const long long &'
| |-ClassTemplateDecl 0x6422dc0 <line:789:3, line:801:5> __equal
| | |-NonTypeTemplateParmDecl 0x6422cc0 <line:789:12, col:17> '_Bool' _BoolType
| | |-CXXRecordDecl 0x6422d30 <line:790:5, line:801:5> struct __equal definition
| | | |-CXXRecordDecl 0x6423060 <line:790:5, col:12> struct __equal
| | | `-FunctionTemplateDecl 0x6423720 <line:792:7, line:800:2> equal
| | |   |-TemplateTypeParmDecl 0x64230f0 <line:792:16, col:25> typename _II1
| | |   |-TemplateTypeParmDecl 0x6423160 <col:31, col:40> typename _II2
| | |   |-CXXMethodDecl 0x6423680 <line:793:9, line:800:2> equal '_Bool (_II1, _II1, _II2)' static
| | |   | |-ParmVarDecl 0x6423200 <line:794:15, col:20> __first1 '_II1'
| | |   | |-ParmVarDecl 0x64234e0 <col:30, col:35> __last1 '_II1'
| | |   | |-ParmVarDecl 0x6423550 <col:44, col:49> __first2 '_II2'
| | |   | `-CompoundStmt 0x6423bc0 <line:795:9, line:800:2>
| | |   |   |-ForStmt 0x6423b48 <line:796:4, line:798:15>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-CXXOperatorCallExpr 0x6423860 <line:796:11, col:23> '<dependent type>'
| | |   |   | | |-UnresolvedLookupExpr 0x64237f8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   |   | | |-DeclRefExpr 0x64237a8 <col:11> '_II1' lvalue ParmVar 0x6423200 '__first1' '_II1'
| | |   |   | | `-DeclRefExpr 0x64237d0 <col:23> '_II1' lvalue ParmVar 0x64234e0 '__last1' '_II1'
| | |   |   | |-BinaryOperator 0x6423938 <col:32, col:46> '<dependent type>' ','
| | |   |   | | |-UnaryOperator 0x64238d0 <col:32, col:34> '<dependent type>' prefix '++'
| | |   |   | | | `-DeclRefExpr 0x64238a8 <col:34> '_II1' lvalue ParmVar 0x6423200 '__first1' '_II1'
| | |   |   | | `-UnaryOperator 0x6423918 <col:44, col:46> '<dependent type>' prefix '++'
| | |   |   | |   `-DeclRefExpr 0x64238f0 <col:46> '_II2' lvalue ParmVar 0x6423550 '__first2' '_II2'
| | |   |   | `-IfStmt 0x6423b18 <line:797:6, line:798:15>
| | |   |   |   |-<<<NULL>>>
| | |   |   |   |-UnaryOperator 0x6423ac0 <line:797:10, col:34> '<dependent type>' prefix '!'
| | |   |   |   | `-ParenExpr 0x6423aa0 <col:11, col:34> '<dependent type>'
| | |   |   |   |   `-CXXOperatorCallExpr 0x6423a58 <col:12, col:26> '<dependent type>'
| | |   |   |   |     |-UnresolvedLookupExpr 0x64239f0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090
| | |   |   |   |     |-UnaryOperator 0x6423988 <col:12, col:13> '<dependent type>' prefix '*'
| | |   |   |   |     | `-DeclRefExpr 0x6423960 <col:13> '_II1' lvalue ParmVar 0x6423200 '__first1' '_II1'
| | |   |   |   |     `-UnaryOperator 0x64239d0 <col:25, col:26> '<dependent type>' prefix '*'
| | |   |   |   |       `-DeclRefExpr 0x64239a8 <col:26> '_II2' lvalue ParmVar 0x6423550 '__first2' '_II2'
| | |   |   |   |-ReturnStmt 0x6423af8 <line:798:8, col:15>
| | |   |   |   | `-CXXBoolLiteralExpr 0x6423ae0 <col:15> '_Bool' false
| | |   |   |   `-<<<NULL>>>
| | |   |   `-ReturnStmt 0x6423ba0 <line:799:4, col:11>
| | |   |     `-CXXBoolLiteralExpr 0x6423b88 <col:11> '_Bool' true
| | `-ClassTemplateSpecialization 0x6423c10 '__equal'
| |-ClassTemplateSpecializationDecl 0x6423c10 <line:803:3, line:813:5> struct __equal definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x6423e30 <line:804:5, col:12> struct __equal
| | `-FunctionTemplateDecl 0x6424230 <line:806:7, line:812:2> equal
| |   |-TemplateTypeParmDecl 0x6423ec0 <line:806:16, col:25> typename _Tp
| |   |-CXXMethodDecl 0x6424190 <line:807:9, line:812:2> equal '_Bool (const _Tp *, const _Tp *, const _Tp *)' static
| |   | |-ParmVarDecl 0x6423f80 <line:808:15, col:26> __first1 'const _Tp *'
| |   | |-ParmVarDecl 0x6423ff0 <col:36, col:47> __last1 'const _Tp *'
| |   | |-ParmVarDecl 0x6424060 <col:56, col:67> __first2 'const _Tp *'
| |   | `-CompoundStmt 0x6425728 <line:809:9, line:812:2>
| |   |   `-ReturnStmt 0x6425708 <line:810:4, line:811:30>
| |   |     `-UnaryOperator 0x64256e8 <line:810:11, line:811:30> '<dependent type>' prefix '!'
| |   |       `-CallExpr 0x64256a8 <line:810:12, line:811:30> '<dependent type>'
| |   |         |-DeclRefExpr 0x64254c0 <line:810:12> '<builtin fn type>' Function 0x6424360 '__builtin_memcmp' 'int (const void *, const void *, unsigned long)'
| |   |         |-DeclRefExpr 0x64254e8 <col:29> 'const _Tp *' lvalue ParmVar 0x6423f80 '__first1' 'const _Tp *'
| |   |         |-DeclRefExpr 0x6425510 <col:39> 'const _Tp *' lvalue ParmVar 0x6424060 '__first2' 'const _Tp *'
| |   |         `-BinaryOperator 0x6425680 <col:49, line:811:29> '<dependent type>' '*'
| |   |           |-UnaryExprOrTypeTraitExpr 0x6425548 <line:810:49, col:59> 'unsigned long' sizeof '_Tp'
| |   |           `-ParenExpr 0x6425660 <line:811:10, col:29> '<dependent type>'
| |   |             `-CXXOperatorCallExpr 0x6425618 <col:11, col:21> '<dependent type>'
| |   |               |-UnresolvedLookupExpr 0x64255b8 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |               |-DeclRefExpr 0x6425568 <col:11> 'const _Tp *' lvalue ParmVar 0x6423ff0 '__last1' 'const _Tp *'
| |   |               `-DeclRefExpr 0x6425590 <col:21> 'const _Tp *' lvalue ParmVar 0x6423f80 '__first1' 'const _Tp *'
| |-FunctionTemplateDecl 0x6425b10 <line:815:3, line:828:5> __equal_aux
| | |-TemplateTypeParmDecl 0x6425750 <line:815:12, col:21> typename _II1
| | |-TemplateTypeParmDecl 0x64257c0 <col:27, col:36> typename _II2
| | |-FunctionDecl 0x6425a70 <line:816:5, line:828:5> __equal_aux '_Bool (_II1, _II1, _II2)' inline
| | | |-ParmVarDecl 0x6425860 <line:817:17, col:22> __first1 '_II1'
| | | |-ParmVarDecl 0x64258d0 <col:32, col:37> __last1 '_II1'
| | | |-ParmVarDecl 0x6425940 <col:46, col:51> __first2 '_II2'
| | | `-CompoundStmt 0x6426b80 <line:818:5, line:828:5>
| | |   |-DeclStmt 0x6425d28 <line:819:7, col:69>
| | |   | `-TypedefDecl 0x6425ce0 <col:7, col:58> _ValueType1 'typename iterator_traits<_II1>::value_type'
| | |   |-DeclStmt 0x6425ef8 <line:820:7, col:69>
| | |   | `-TypedefDecl 0x6425eb0 <col:7, col:58> _ValueType2 'typename iterator_traits<_II2>::value_type'
| | |   |-DeclStmt 0x6426890 <line:821:7, line:825:58>
| | |   | `-VarDecl 0x6425f20 <line:821:7, line:825:57> __simple 'const _Bool'
| | |   |   `-ParenExpr 0x6426870 <line:821:29, line:825:57> '<dependent type>'
| | |   |     `-BinaryOperator 0x6426848 <line:821:30, line:825:50> '<dependent type>' '&&'
| | |   |       |-BinaryOperator 0x6426658 <line:821:30, line:824:46> '<dependent type>' '&&'
| | |   |       | |-BinaryOperator 0x64264d0 <line:821:30, line:823:46> '<dependent type>' '&&'
| | |   |       | | |-ParenExpr 0x6426330 <line:821:30, line:822:47> '<dependent type>'
| | |   |       | | | `-BinaryOperator 0x6426308 <line:821:31, line:822:40> '<dependent type>' '||'
| | |   |       | | |   |-DependentScopeDeclRefExpr 0x6426120 <line:821:31, col:58> '<dependent type>' lvalue
| | |   |       | | |   `-DependentScopeDeclRefExpr 0x64262c8 <line:822:13, col:40> '<dependent type>' lvalue
| | |   |       | | `-DependentScopeDeclRefExpr 0x6426490 <line:823:26, col:46> '<dependent type>' lvalue
| | |   |       | `-DependentScopeDeclRefExpr 0x6426618 <line:824:26, col:46> '<dependent type>' lvalue
| | |   |       `-DependentScopeDeclRefExpr 0x6426808 <line:825:12, col:50> '<dependent type>' lvalue
| | |   `-ReturnStmt 0x6426b60 <line:827:7, col:71>
| | |     `-CallExpr 0x6426b20 <col:14, col:71> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x6426a68 <col:14, col:38> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x6426aa8 <col:44> '_II1' lvalue ParmVar 0x6425860 '__first1' '_II1'
| | |       |-DeclRefExpr 0x6426ad0 <col:54> '_II1' lvalue ParmVar 0x64258d0 '__last1' '_II1'
| | |       `-DeclRefExpr 0x6426af8 <col:63> '_II2' lvalue ParmVar 0x6425940 '__first2' '_II2'
| |-ClassTemplateDecl 0x6426d50 <line:831:3, line:843:5> __lc_rai
| | |-TemplateTypeParmDecl 0x6426bc0 <line:831:12> typename
| | |-TemplateTypeParmDecl 0x6426c30 <col:22> typename
| | |-CXXRecordDecl 0x6426cc0 <line:832:5, line:843:5> struct __lc_rai definition
| | | |-CXXRecordDecl 0x6426ff0 <line:832:5, col:12> struct __lc_rai
| | | |-FunctionTemplateDecl 0x6427510 <line:834:7, line:837:27> __newlast1
| | | | |-TemplateTypeParmDecl 0x6427080 <line:834:16, col:25> typename _II1
| | | | |-TemplateTypeParmDecl 0x64270f0 <col:31, col:40> typename _II2
| | | | |-CXXMethodDecl 0x6427470 <line:835:9, line:837:27> __newlast1 '_II1 (_II1, _II1, _II2, _II2)' static
| | | | | |-ParmVarDecl 0x6427190 <line:836:20> '_II1'
| | | | | |-ParmVarDecl 0x6427200 <col:26, col:31> __last1 '_II1'
| | | | | |-ParmVarDecl 0x6427270 <col:40> '_II2'
| | | | | |-ParmVarDecl 0x64272e0 <col:46> '_II2'
| | | | | `-CompoundStmt 0x6427900 <line:837:9, col:27>
| | | | |   `-ReturnStmt 0x64278e0 <col:11, col:18>
| | | | |     `-DeclRefExpr 0x64278b8 <col:18> '_II1' lvalue ParmVar 0x6427200 '__last1' '_II1'
| | | `-FunctionTemplateDecl 0x6427830 <line:839:7, line:842:37> __cnd2
| | |   |-TemplateTypeParmDecl 0x6427580 <line:839:16, col:25> typename _II
| | |   |-CXXMethodDecl 0x6427790 <line:840:9, line:842:37> __cnd2 '_Bool (_II, _II)' static
| | |   | |-ParmVarDecl 0x6427610 <line:841:16, col:20> __first '_II'
| | |   | |-ParmVarDecl 0x6427680 <col:29, col:33> __last '_II'
| | |   | `-CompoundStmt 0x6427a40 <line:842:9, col:37>
| | |   |   `-ReturnStmt 0x6427a20 <col:11, col:29>
| | |   |     `-CXXOperatorCallExpr 0x64279d8 <col:18, col:29> '<dependent type>'
| | |   |       |-UnresolvedLookupExpr 0x6427970 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   |       |-DeclRefExpr 0x6427920 <col:18> '_II' lvalue ParmVar 0x6427610 '__first' '_II'
| | |   |       `-DeclRefExpr 0x6427948 <col:29> '_II' lvalue ParmVar 0x6427680 '__last' '_II'
| | `-ClassTemplateSpecialization 0x6427a90 '__lc_rai'
| |-ClassTemplateSpecializationDecl 0x6427a90 <line:845:3, line:864:5> struct __lc_rai definition
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-TemplateArgument type 'struct std::random_access_iterator_tag'
| | |-CXXRecordDecl 0x6427cf0 <line:846:5, col:12> struct __lc_rai
| | |-FunctionTemplateDecl 0x64281c0 <line:848:7, line:858:2> __newlast1
| | | |-TemplateTypeParmDecl 0x6427d80 <line:848:16, col:25> typename _RAI1
| | | |-TemplateTypeParmDecl 0x6427df0 <col:32, col:41> typename _RAI2
| | | |-CXXMethodDecl 0x6428120 <line:849:9, line:858:2> __newlast1 '_RAI1 (_RAI1, _RAI1, _RAI2, _RAI2)' static
| | | | |-ParmVarDecl 0x6427e90 <line:850:20, col:26> __first1 '_RAI1'
| | | | |-ParmVarDecl 0x6427f00 <col:36, col:42> __last1 '_RAI1'
| | | | |-ParmVarDecl 0x6427f70 <line:851:6, col:12> __first2 '_RAI2'
| | | | |-ParmVarDecl 0x6427fe0 <col:22, col:28> __last2 '_RAI2'
| | | | `-CompoundStmt 0x6429970 <line:852:9, line:858:2>
| | | |   |-DeclStmt 0x64293e0 <line:853:4, line:854:34>
| | | |   | `-VarDecl 0x6429290 <line:853:4, line:854:26> __diff1 'const typename iterator_traits<_RAI1>::difference_type'
| | | |   |   `-CXXOperatorCallExpr 0x6429398 <col:16, col:26> '<dependent type>'
| | | |   |     |-UnresolvedLookupExpr 0x6429338 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |   |     |-DeclRefExpr 0x64292e8 <col:16> '_RAI1' lvalue ParmVar 0x6427f00 '__last1' '_RAI1'
| | | |   |     `-DeclRefExpr 0x6429310 <col:26> '_RAI1' lvalue ParmVar 0x6427e90 '__first1' '_RAI1'
| | | |   |-DeclStmt 0x64296f0 <line:855:4, line:856:34>
| | | |   | `-VarDecl 0x64295a0 <line:855:4, line:856:26> __diff2 'const typename iterator_traits<_RAI2>::difference_type'
| | | |   |   `-CXXOperatorCallExpr 0x64296a8 <col:16, col:26> '<dependent type>'
| | | |   |     |-UnresolvedLookupExpr 0x6429648 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |   |     |-DeclRefExpr 0x64295f8 <col:16> '_RAI2' lvalue ParmVar 0x6427fe0 '__last2' '_RAI2'
| | | |   |     `-DeclRefExpr 0x6429620 <col:26> '_RAI2' lvalue ParmVar 0x6427f70 '__first2' '_RAI2'
| | | |   `-ReturnStmt 0x6429950 <line:857:4, col:52>
| | | |     `-ConditionalOperator 0x6429920 <col:11, col:52> '<dependent type>'
| | | |       |-CXXOperatorCallExpr 0x64297c0 <col:11, col:21> '<dependent type>'
| | | |       | |-UnresolvedLookupExpr 0x6429758 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | | |       | |-DeclRefExpr 0x6429708 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x64295a0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| | | |       | `-DeclRefExpr 0x6429730 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x6429290 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'
| | | |       |-CXXOperatorCallExpr 0x64298b0 <col:31, col:42> '<dependent type>'
| | | |       | |-UnresolvedLookupExpr 0x6429858 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | |       | |-DeclRefExpr 0x6429808 <col:31> '_RAI1' lvalue ParmVar 0x6427e90 '__first1' '_RAI1'
| | | |       | `-DeclRefExpr 0x6429830 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x64295a0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| | | |       `-DeclRefExpr 0x64298f8 <col:52> '_RAI1' lvalue ParmVar 0x6427f00 '__last1' '_RAI1'
| | `-FunctionTemplateDecl 0x6429090 <line:860:7, line:863:24> __cnd2
| |   |-TemplateTypeParmDecl 0x6428230 <line:860:16, col:25> typename _RAI
| |   |-CXXMethodDecl 0x6428ff0 <line:861:9, line:863:24> __cnd2 '_Bool (_RAI, _RAI)' static
| |   | |-ParmVarDecl 0x64282c0 <line:862:16> '_RAI'
| |   | |-ParmVarDecl 0x6428330 <col:22> '_RAI'
| |   | `-CompoundStmt 0x64299d8 <line:863:9, col:24>
| |   |   `-ReturnStmt 0x64299b8 <col:11, col:18>
| |   |     `-CXXBoolLiteralExpr 0x64299a0 <col:18> '_Bool' true
| |-ClassTemplateDecl 0x6429b10 <line:866:3, line:871:5> __lexicographical_compare
| | |-NonTypeTemplateParmDecl 0x6429a10 <line:866:12, col:17> '_Bool' _BoolType
| | |-CXXRecordDecl 0x6429a80 <line:867:5, line:871:5> struct __lexicographical_compare definition
| | | |-CXXRecordDecl 0x6429db0 <line:867:5, col:12> struct __lexicographical_compare
| | | `-FunctionTemplateDecl 0x642c6d0 <line:869:7, line:870:48> __lc
| | |   |-TemplateTypeParmDecl 0x6429e40 <line:869:16, col:25> typename _II1
| | |   |-TemplateTypeParmDecl 0x6429eb0 <col:31, col:40> typename _II2
| | |   |-CXXMethodDecl 0x642c630 <line:870:9, col:48> __lc '_Bool (_II1, _II1, _II2, _II2)' static
| | |   | |-ParmVarDecl 0x6429f50 <col:26> '_II1'
| | |   | |-ParmVarDecl 0x642c410 <col:32> '_II1'
| | |   | |-ParmVarDecl 0x642c480 <col:38> '_II2'
| | |   | `-ParmVarDecl 0x642c4f0 <col:44> '_II2'
| | `-ClassTemplateSpecialization 0x642e160 '__lexicographical_compare'
| |-FunctionTemplateDecl 0x642cdf0 parent 0x6429a80 prev 0x642c6d0 <line:874:5, line:894:7> __lc
| | |-TemplateTypeParmDecl 0x642c7c0 <line:874:14, col:23> typename _II1
| | |-TemplateTypeParmDecl 0x642c830 <col:29, col:38> typename _II2
| | |-CXXMethodDecl 0x642cd10 parent 0x6429a80 prev 0x642c630 <line:873:3, line:894:7> __lc '_Bool (_II1, _II1, _II2, _II2)'
| | | |-ParmVarDecl 0x642cad0 <line:877:12, col:17> __first1 '_II1'
| | | |-ParmVarDecl 0x642cb40 <col:27, col:32> __last1 '_II1'
| | | |-ParmVarDecl 0x642cbb0 <col:41, col:46> __first2 '_II2'
| | | |-ParmVarDecl 0x642cc20 <col:56, col:61> __last2 '_II2'
| | | `-CompoundStmt 0x642e0f0 <line:878:7, line:894:7>
| | |   |-DeclStmt 0x642d068 <line:879:2, col:70>
| | |   | `-TypedefDecl 0x642d020 <col:2, col:60> _Category1 'typename iterator_traits<_II1>::iterator_category'
| | |   |-DeclStmt 0x642d2c8 <line:880:2, col:70>
| | |   | `-TypedefDecl 0x642d280 <col:2, col:60> _Category2 'typename iterator_traits<_II2>::iterator_category'
| | |   |-DeclStmt 0x642d608 <line:881:2, col:59>
| | |   | `-TypedefDecl 0x642d5c0 <col:2, col:49> __rai_type 'std::__lc_rai<_Category1, _Category2>':'__lc_rai<_Category1, _Category2>'
| | |   |-BinaryOperator 0x642d7e8 <line:883:2, line:884:24> '<dependent type>' '='
| | |   | |-DeclRefExpr 0x642d620 <line:883:2> '_II1' lvalue ParmVar 0x642cb40 '__last1' '_II1'
| | |   | `-CallExpr 0x642d7a0 <col:12, line:884:24> '<dependent type>'
| | |   |   |-DependentScopeDeclRefExpr 0x642d6c0 <line:883:12, col:24> '<dependent type>' lvalue
| | |   |   |-DeclRefExpr 0x642d700 <col:35> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |   |   |-DeclRefExpr 0x642d728 <col:45> '_II1' lvalue ParmVar 0x642cb40 '__last1' '_II1'
| | |   |   |-DeclRefExpr 0x642d750 <line:884:7> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |   |   `-DeclRefExpr 0x642d778 <col:17> '_II2' lvalue ParmVar 0x642cc20 '__last2' '_II2'
| | |   |-ForStmt 0x642de68 <line:885:2, line:892:4>
| | |   | |-<<<NULL>>>
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x642da10 <line:885:9, col:68> '<dependent type>' '&&'
| | |   | | |-CXXOperatorCallExpr 0x642d8c8 <col:9, col:21> '<dependent type>'
| | |   | | | |-UnresolvedLookupExpr 0x642d860 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   | | | |-DeclRefExpr 0x642d810 <col:9> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |   | | | `-DeclRefExpr 0x642d838 <col:21> '_II1' lvalue ParmVar 0x642cb40 '__last1' '_II1'
| | |   | | `-CallExpr 0x642d9d8 <col:32, col:68> '<dependent type>'
| | |   | |   |-DependentScopeDeclRefExpr 0x642d948 <col:32, col:44> '<dependent type>' lvalue
| | |   | |   |-DeclRefExpr 0x642d988 <col:51> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |   | |   `-DeclRefExpr 0x642d9b0 <col:61> '_II2' lvalue ParmVar 0x642cc20 '__last2' '_II2'
| | |   | |-BinaryOperator 0x642dac8 <line:886:7, col:21> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x642da60 <col:7, col:9> '<dependent type>' prefix '++'
| | |   | | | `-DeclRefExpr 0x642da38 <col:9> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |   | | `-UnaryOperator 0x642daa8 <col:19, col:21> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x642da80 <col:21> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |   | `-CompoundStmt 0x642de40 <line:887:4, line:892:4>
| | |   |   |-IfStmt 0x642dc68 <line:888:6, line:889:15>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-CXXOperatorCallExpr 0x642dbe8 <line:888:10, col:23> '<dependent type>'
| | |   |   | | |-UnresolvedLookupExpr 0x642db80 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | |   |   | | |-UnaryOperator 0x642db18 <col:10, col:11> '<dependent type>' prefix '*'
| | |   |   | | | `-DeclRefExpr 0x642daf0 <col:11> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |   |   | | `-UnaryOperator 0x642db60 <col:22, col:23> '<dependent type>' prefix '*'
| | |   |   | |   `-DeclRefExpr 0x642db38 <col:23> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |   |   | |-ReturnStmt 0x642dc48 <line:889:8, col:15>
| | |   |   | | `-CXXBoolLiteralExpr 0x642dc30 <col:15> '_Bool' true
| | |   |   | `-<<<NULL>>>
| | |   |   `-IfStmt 0x642de10 <line:890:6, line:891:15>
| | |   |     |-<<<NULL>>>
| | |   |     |-CXXOperatorCallExpr 0x642dd90 <line:890:10, col:23> '<dependent type>'
| | |   |     | |-UnresolvedLookupExpr 0x642dd28 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | |   |     | |-UnaryOperator 0x642dcc0 <col:10, col:11> '<dependent type>' prefix '*'
| | |   |     | | `-DeclRefExpr 0x642dc98 <col:11> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |   |     | `-UnaryOperator 0x642dd08 <col:22, col:23> '<dependent type>' prefix '*'
| | |   |     |   `-DeclRefExpr 0x642dce0 <col:23> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |   |     |-ReturnStmt 0x642ddf0 <line:891:8, col:15>
| | |   |     | `-CXXBoolLiteralExpr 0x642ddd8 <col:15> '_Bool' false
| | |   |     `-<<<NULL>>>
| | |   `-ReturnStmt 0x642e0d0 <line:893:2, col:44>
| | |     `-BinaryOperator 0x642e0a8 <col:9, col:44> '<dependent type>' '&&'
| | |       |-CXXOperatorCallExpr 0x642df60 <col:9, col:21> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x642def8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090
| | |       | |-DeclRefExpr 0x642dea8 <col:9> '_II1' lvalue ParmVar 0x642cad0 '__first1' '_II1'
| | |       | `-DeclRefExpr 0x642ded0 <col:21> '_II1' lvalue ParmVar 0x642cb40 '__last1' '_II1'
| | |       `-CXXOperatorCallExpr 0x642e060 <col:32, col:44> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x642dff8 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |         |-DeclRefExpr 0x642dfa8 <col:32> '_II2' lvalue ParmVar 0x642cbb0 '__first2' '_II2'
| | |         `-DeclRefExpr 0x642dfd0 <col:44> '_II2' lvalue ParmVar 0x642cc20 '__last2' '_II2'
| |-ClassTemplateSpecializationDecl 0x642e160 <line:896:3, line:910:5> struct __lexicographical_compare definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x642e420 <line:897:5, col:12> struct __lexicographical_compare
| | `-FunctionTemplateDecl 0x642e950 <line:899:7, line:909:2> __lc
| |   |-TemplateTypeParmDecl 0x642e4b0 <line:899:16, col:25> typename _Tp
| |   |-TemplateTypeParmDecl 0x642e520 <col:30, col:39> typename _Up
| |   |-CXXMethodDecl 0x642e8b0 <line:900:9, line:909:2> __lc '_Bool (const _Tp *, const _Tp *, const _Up *, const _Up *)' static
| |   | |-ParmVarDecl 0x642e5f0 <line:901:14, col:25> __first1 'const _Tp *'
| |   | |-ParmVarDecl 0x642e660 <col:35, col:46> __last1 'const _Tp *'
| |   | |-ParmVarDecl 0x642e700 <line:902:7, col:18> __first2 'const _Up *'
| |   | |-ParmVarDecl 0x642e770 <col:28, col:39> __last2 'const _Up *'
| |   | `-CompoundStmt 0x642f610 <line:903:2, line:909:2>
| |   |   |-DeclStmt 0x642eb50 <line:904:4, col:44>
| |   |   | `-VarDecl 0x642ea00 <col:4, col:36> __len1 'const size_t':'const unsigned long'
| |   |   |   `-CXXOperatorCallExpr 0x642eb08 <col:26, col:36> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x642eaa8 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |   |     |-DeclRefExpr 0x642ea58 <col:26> 'const _Tp *' lvalue ParmVar 0x642e660 '__last1' 'const _Tp *'
| |   |   |     `-DeclRefExpr 0x642ea80 <col:36> 'const _Tp *' lvalue ParmVar 0x642e5f0 '__first1' 'const _Tp *'
| |   |   |-DeclStmt 0x642ecd0 <line:905:4, col:44>
| |   |   | `-VarDecl 0x642eb80 <col:4, col:36> __len2 'const size_t':'const unsigned long'
| |   |   |   `-CXXOperatorCallExpr 0x642ec88 <col:26, col:36> '<dependent type>'
| |   |   |     |-UnresolvedLookupExpr 0x642ec28 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| |   |   |     |-DeclRefExpr 0x642ebd8 <col:26> 'const _Up *' lvalue ParmVar 0x642e770 '__last2' 'const _Up *'
| |   |   |     `-DeclRefExpr 0x642ec00 <col:36> 'const _Up *' lvalue ParmVar 0x642e700 '__first2' 'const _Up *'
| |   |   |-DeclStmt 0x642f3c8 <line:906:4, line:907:32>
| |   |   | `-VarDecl 0x642ed00 <line:906:4, line:907:31> __result 'const int'
| |   |   |   `-CallExpr 0x642f388 <line:906:25, line:907:31> '<dependent type>'
| |   |   |     |-DeclRefExpr 0x642ed58 <line:906:25> '<builtin fn type>' Function 0x6424360 '__builtin_memcmp' 'int (const void *, const void *, unsigned long)'
| |   |   |     |-DeclRefExpr 0x642ed80 <col:42> 'const _Tp *' lvalue ParmVar 0x642e5f0 '__first1' 'const _Tp *'
| |   |   |     |-DeclRefExpr 0x642eda8 <col:52> 'const _Up *' lvalue ParmVar 0x642e700 '__first2' 'const _Up *'
| |   |   |     `-CallExpr 0x642f350 <line:907:7, col:30> 'const unsigned long':'const unsigned long' lvalue
| |   |   |       |-ImplicitCastExpr 0x642f338 <col:7, col:12> 'const unsigned long &(*)(const unsigned long &, const unsigned long &)' <FunctionToPointerDecay>
| |   |   |       | `-DeclRefExpr 0x642f2a0 <col:7, col:12> 'const unsigned long &(const unsigned long &, const unsigned long &)' lvalue Function 0x642f190 'min' 'const unsigned long &(const unsigned long &, const unsigned long &)' (FunctionTemplate 0x64095c0 'min')
| |   |   |       |-DeclRefExpr 0x642ee50 <col:16> 'const size_t':'const unsigned long' lvalue Var 0x642ea00 '__len1' 'const size_t':'const unsigned long'
| |   |   |       `-DeclRefExpr 0x642ee78 <col:24> 'const size_t':'const unsigned long' lvalue Var 0x642eb80 '__len2' 'const size_t':'const unsigned long'
| |   |   `-ReturnStmt 0x642f5f0 <line:908:4, col:51>
| |   |     `-ConditionalOperator 0x642f5c0 <col:11, col:51> '_Bool'
| |   |       |-BinaryOperator 0x642f468 <col:11, col:23> '_Bool' '!='
| |   |       | |-ImplicitCastExpr 0x642f450 <col:11> 'int' <LValueToRValue>
| |   |       | | `-DeclRefExpr 0x642f3e0 <col:11> 'const int' lvalue Var 0x642ed00 '__result' 'const int'
| |   |       | `-IntegerLiteral 0x642f430 <col:23> 'int' 0
| |   |       |-BinaryOperator 0x642f4f0 <col:27, col:38> '_Bool' '<'
| |   |       | |-ImplicitCastExpr 0x642f4d8 <col:27> 'int' <LValueToRValue>
| |   |       | | `-DeclRefExpr 0x642f490 <col:27> 'const int' lvalue Var 0x642ed00 '__result' 'const int'
| |   |       | `-IntegerLiteral 0x642f4b8 <col:38> 'int' 0
| |   |       `-BinaryOperator 0x642f598 <col:42, col:51> '_Bool' '<'
| |   |         |-ImplicitCastExpr 0x642f568 <col:42> 'size_t':'unsigned long' <LValueToRValue>
| |   |         | `-DeclRefExpr 0x642f518 <col:42> 'const size_t':'const unsigned long' lvalue Var 0x642ea00 '__len1' 'const size_t':'const unsigned long'
| |   |         `-ImplicitCastExpr 0x642f580 <col:51> 'size_t':'unsigned long' <LValueToRValue>
| |   |           `-DeclRefExpr 0x642f540 <col:51> 'const size_t':'const unsigned long' lvalue Var 0x642eb80 '__len2' 'const size_t':'const unsigned long'
| |-FunctionTemplateDecl 0x642fa90 <line:912:3, line:928:5> __lexicographical_compare_aux
| | |-TemplateTypeParmDecl 0x642f650 <line:912:12, col:21> typename _II1
| | |-TemplateTypeParmDecl 0x642f6c0 <col:27, col:36> typename _II2
| | |-FunctionDecl 0x642f9f0 <line:913:5, line:928:5> __lexicographical_compare_aux '_Bool (_II1, _II1, _II2, _II2)' inline
| | | |-ParmVarDecl 0x642f760 <line:914:35, col:40> __first1 '_II1'
| | | |-ParmVarDecl 0x642f7d0 <col:50, col:55> __last1 '_II1'
| | | |-ParmVarDecl 0x642f840 <line:915:7, col:12> __first2 '_II2'
| | | |-ParmVarDecl 0x642f8b0 <col:22, col:27> __last2 '_II2'
| | | `-CompoundStmt 0x6431d70 <line:916:5, line:928:5>
| | |   |-DeclStmt 0x642fcb8 <line:917:7, col:69>
| | |   | `-TypedefDecl 0x642fc70 <col:7, col:58> _ValueType1 'typename iterator_traits<_II1>::value_type'
| | |   |-DeclStmt 0x642fe88 <line:918:7, col:69>
| | |   | `-TypedefDecl 0x642fe40 <col:7, col:58> _ValueType2 'typename iterator_traits<_II2>::value_type'
| | |   |-DeclStmt 0x6431a50 <line:919:7, line:924:34>
| | |   | `-VarDecl 0x642feb0 <line:919:7, line:924:33> __simple 'const _Bool'
| | |   |   `-ParenExpr 0x6431a30 <line:920:2, line:924:33> '<dependent type>'
| | |   |     `-BinaryOperator 0x6431a08 <line:920:3, line:924:26> '<dependent type>' '&&'
| | |   |       |-BinaryOperator 0x6431888 <line:920:3, line:923:26> '<dependent type>' '&&'
| | |   |       | |-BinaryOperator 0x6431708 <line:920:3, line:922:49> '<dependent type>' '&&'
| | |   |       | | |-BinaryOperator 0x6431508 <line:920:3, line:921:49> '<dependent type>' '&&'
| | |   |       | | | |-BinaryOperator 0x64302b8 <line:920:3, col:62> '<dependent type>' '&&'
| | |   |       | | | | |-DependentScopeDeclRefExpr 0x64300b0 <col:3, col:27> '<dependent type>' lvalue
| | |   |       | | | | `-DependentScopeDeclRefExpr 0x6430278 <col:38, col:62> '<dependent type>' lvalue
| | |   |       | | | `-UnaryOperator 0x64314e8 <line:921:6, col:49> '<dependent type>' prefix '!'
| | |   |       | | |   `-DependentScopeDeclRefExpr 0x64314a8 <col:7, col:49> '<dependent type>' lvalue
| | |   |       | | `-UnaryOperator 0x64316e8 <line:922:6, col:49> '<dependent type>' prefix '!'
| | |   |       | |   `-DependentScopeDeclRefExpr 0x64316a8 <col:7, col:49> '<dependent type>' lvalue
| | |   |       | `-DependentScopeDeclRefExpr 0x6431848 <line:923:6, col:26> '<dependent type>' lvalue
| | |   |       `-DependentScopeDeclRefExpr 0x64319c8 <line:924:6, col:26> '<dependent type>' lvalue
| | |   `-ReturnStmt 0x6431d50 <line:926:7, line:927:29>
| | |     `-CallExpr 0x6431d08 <line:926:14, line:927:29> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x6431c28 <line:926:14, col:56> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x6431c68 <col:61> '_II1' lvalue ParmVar 0x642f760 '__first1' '_II1'
| | |       |-DeclRefExpr 0x6431c90 <col:71> '_II1' lvalue ParmVar 0x642f7d0 '__last1' '_II1'
| | |       |-DeclRefExpr 0x6431cb8 <line:927:12> '_II2' lvalue ParmVar 0x642f840 '__first2' '_II2'
| | |       `-DeclRefExpr 0x6431ce0 <col:22> '_II2' lvalue ParmVar 0x642f8b0 '__last2' '_II2'
| |-FunctionTemplateDecl 0x64321a0 <line:941:3, line:975:5> lower_bound
| | |-TemplateTypeParmDecl 0x6431db0 <line:941:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6431e20 <col:39, col:48> typename _Tp
| | |-FunctionDecl 0x6432100 <line:942:5, line:975:5> lower_bound '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)'
| | | |-ParmVarDecl 0x6431ec0 <line:943:17, col:34> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6431f30 <col:43, col:60> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x6431fd0 <line:944:3, col:14> __val 'const _Tp &'
| | | `-CompoundStmt 0x6432ed8 <line:945:5, line:975:5>
| | |   |-DeclStmt 0x64323b8 <line:950:7, line:951:15>
| | |   | `-TypedefDecl 0x6432370 <line:950:7, line:951:2> _DistanceType 'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |-NullStmt 0x64323d0 <line:956:67>
| | |   |-DeclStmt 0x64325b8 <line:958:7, col:59>
| | |   | `-VarDecl 0x6432460 <col:7, col:58> __len '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |   `-CallExpr 0x6432580 <col:29, col:58> '<dependent type>'
| | |   |     |-UnresolvedLookupExpr 0x64324d8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
| | |   |     |-DeclRefExpr 0x6432530 <col:43> '_ForwardIterator' lvalue ParmVar 0x6431ec0 '__first' '_ForwardIterator'
| | |   |     `-DeclRefExpr 0x6432558 <col:52> '_ForwardIterator' lvalue ParmVar 0x6431f30 '__last' '_ForwardIterator'
| | |   |-WhileStmt 0x6432e68 <line:960:7, line:973:2>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6432680 <line:960:14, col:22> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6432618 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | |   | | |-DeclRefExpr 0x64325d0 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x6432460 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   | | `-IntegerLiteral 0x64325f8 <col:22> 'int' 0
| | |   | `-CompoundStmt 0x6432e30 <line:961:2, line:973:2>
| | |   |   |-DeclStmt 0x64327a8 <line:962:4, col:37>
| | |   |   | `-VarDecl 0x64326e0 <col:4, col:36> __half '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |   |   `-BinaryOperator 0x6432780 <col:27, col:36> '<dependent type>' '>>'
| | |   |   |     |-DeclRefExpr 0x6432738 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x6432460 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |   |     `-IntegerLiteral 0x6432760 <col:36> 'int' 1
| | |   |   |-DeclStmt 0x6432850 <line:963:4, col:39>
| | |   |   | `-VarDecl 0x64327d0 <col:4, col:32> __middle '_ForwardIterator'
| | |   |   |   `-DeclRefExpr 0x6432828 <col:32> '_ForwardIterator' lvalue ParmVar 0x6431ec0 '__first' '_ForwardIterator'
| | |   |   |-CallExpr 0x6432930 <line:964:4, col:33> '<dependent type>'
| | |   |   | |-UnresolvedLookupExpr 0x6432888 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x63dd690
| | |   |   | |-DeclRefExpr 0x64328e0 <col:17> '_ForwardIterator' lvalue Var 0x64327d0 '__middle' '_ForwardIterator'
| | |   |   | `-DeclRefExpr 0x6432908 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x64326e0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |   `-IfStmt 0x6432e00 <line:965:4, line:972:14>
| | |   |     |-<<<NULL>>>
| | |   |     |-CXXOperatorCallExpr 0x6432a40 <line:965:8, col:20> '<dependent type>'
| | |   |     | |-UnresolvedLookupExpr 0x64329d8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | |   |     | |-UnaryOperator 0x6432990 <col:8, col:9> '<dependent type>' prefix '*'
| | |   |     | | `-DeclRefExpr 0x6432968 <col:9> '_ForwardIterator' lvalue Var 0x64327d0 '__middle' '_ForwardIterator'
| | |   |     | `-DeclRefExpr 0x64329b0 <col:20> 'const _Tp' lvalue ParmVar 0x6431fd0 '__val' 'const _Tp &'
| | |   |     |-CompoundStmt 0x6432d58 <line:966:6, line:970:6>
| | |   |     | |-BinaryOperator 0x6432ad8 <line:967:8, col:18> '<dependent type>' '='
| | |   |     | | |-DeclRefExpr 0x6432a88 <col:8> '_ForwardIterator' lvalue ParmVar 0x6431ec0 '__first' '_ForwardIterator'
| | |   |     | | `-DeclRefExpr 0x6432ab0 <col:18> '_ForwardIterator' lvalue Var 0x64327d0 '__middle' '_ForwardIterator'
| | |   |     | |-UnaryOperator 0x6432b28 <line:968:8, col:10> '<dependent type>' prefix '++'
| | |   |     | | `-DeclRefExpr 0x6432b00 <col:10> '_ForwardIterator' lvalue ParmVar 0x6431ec0 '__first' '_ForwardIterator'
| | |   |     | `-BinaryOperator 0x6432d30 <line:969:8, col:33> '<dependent type>' '='
| | |   |     |   |-DeclRefExpr 0x6432b48 <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x6432460 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |     |   `-CXXOperatorCallExpr 0x6432ce8 <col:16, col:33> '<dependent type>'
| | |   |     |     |-UnresolvedLookupExpr 0x6432c88 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | |   |     |     |-CXXOperatorCallExpr 0x6432c20 <col:16, col:24> '<dependent type>'
| | |   |     |     | |-UnresolvedLookupExpr 0x6432bc0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | |   |     |     | |-DeclRefExpr 0x6432b70 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x6432460 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |     |     | `-DeclRefExpr 0x6432b98 <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x64326e0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |     |     `-IntegerLiteral 0x6432c68 <col:33> 'int' 1
| | |   |     `-BinaryOperator 0x6432dd8 <line:972:6, col:14> '<dependent type>' '='
| | |   |       |-DeclRefExpr 0x6432d88 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x6432460 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   |       `-DeclRefExpr 0x6432db0 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x64326e0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
| | |   `-ReturnStmt 0x6432eb8 <line:974:7, col:14>
| | |     `-DeclRefExpr 0x6432e90 <col:14> '_ForwardIterator' lvalue ParmVar 0x6431ec0 '__first' '_ForwardIterator'
| |-FunctionDecl 0x6432ff0 <line:979:3, line:981:66> __lg 'int (int)' inline
| | |-ParmVarDecl 0x6432f30 <line:980:8, col:12> __n 'int'
| | `-CompoundStmt 0x6433518 <line:981:3, col:66>
| |   `-ReturnStmt 0x64334f8 <col:5, col:63>
| |     `-ImplicitCastExpr 0x64334e0 <col:12, col:63> 'int' <IntegralCast>
| |       `-BinaryOperator 0x64334b8 <col:12, col:63> 'unsigned long' '-'
| |         |-BinaryOperator 0x6433160 <col:12, col:42> 'unsigned long' '-'
| |         | |-BinaryOperator 0x6433100 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |         | | |-UnaryExprOrTypeTraitExpr 0x64330a8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:981:12, col:22> 'unsigned long' sizeof 'int'
| |         | | `-ImplicitCastExpr 0x64330e8 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |         | |   `-IntegerLiteral 0x64330c8 <col:22> 'int' 8
| |         | `-ImplicitCastExpr 0x6433148 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:981:42> 'unsigned long' <IntegralCast>
| |         |   `-IntegerLiteral 0x6433128 <col:42> 'int' 1
| |         `-ImplicitCastExpr 0x64334a0 <col:46, col:63> 'unsigned long' <IntegralCast>
| |           `-CallExpr 0x6433410 <col:46, col:63> 'int'
| |             |-ImplicitCastExpr 0x64333f8 <col:46> 'int (*)(unsigned int)' <BuiltinFnToFnPtr>
| |             | `-DeclRefExpr 0x6433378 <col:46> '<builtin fn type>' Function 0x6433220 '__builtin_clz' 'int (unsigned int)'
| |             `-ImplicitCastExpr 0x6433488 <col:60> 'unsigned int' <IntegralCast>
| |               `-ImplicitCastExpr 0x6433470 <col:60> 'int' <LValueToRValue>
| |                 `-DeclRefExpr 0x64333a0 <col:60> 'int' lvalue ParmVar 0x6432f30 '__n' 'int'
| |-FunctionDecl 0x6433610 <line:983:3, line:985:66> __lg 'unsigned int (unsigned int)' inline
| | |-ParmVarDecl 0x6433550 <line:984:8, col:17> __n 'unsigned int'
| | `-CompoundStmt 0x64338d0 <line:985:3, col:66>
| |   `-ReturnStmt 0x64338b0 <col:5, col:63>
| |     `-ImplicitCastExpr 0x6433898 <col:12, col:63> 'unsigned int' <IntegralCast>
| |       `-BinaryOperator 0x6433870 <col:12, col:63> 'unsigned long' '-'
| |         |-BinaryOperator 0x6433780 <col:12, col:42> 'unsigned long' '-'
| |         | |-BinaryOperator 0x6433720 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |         | | |-UnaryExprOrTypeTraitExpr 0x64336c8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:985:12, col:22> 'unsigned long' sizeof 'int'
| |         | | `-ImplicitCastExpr 0x6433708 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |         | |   `-IntegerLiteral 0x64336e8 <col:22> 'int' 8
| |         | `-ImplicitCastExpr 0x6433768 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:985:42> 'unsigned long' <IntegralCast>
| |         |   `-IntegerLiteral 0x6433748 <col:42> 'int' 1
| |         `-ImplicitCastExpr 0x6433858 <col:46, col:63> 'unsigned long' <IntegralCast>
| |           `-CallExpr 0x6433810 <col:46, col:63> 'int'
| |             |-ImplicitCastExpr 0x64337f8 <col:46> 'int (*)(unsigned int)' <BuiltinFnToFnPtr>
| |             | `-DeclRefExpr 0x64337a8 <col:46> '<builtin fn type>' Function 0x6433220 '__builtin_clz' 'int (unsigned int)'
| |             `-ImplicitCastExpr 0x6433840 <col:60> 'unsigned int' <LValueToRValue>
| |               `-DeclRefExpr 0x64337d0 <col:60> 'unsigned int' lvalue ParmVar 0x6433550 '__n' 'unsigned int'
| |-FunctionDecl 0x64339c0 <line:987:3, line:989:67> __lg 'long (long)' inline
| | |-ParmVarDecl 0x6433900 <line:988:8, col:13> __n 'long'
| | `-CompoundStmt 0x6433eb8 <line:989:3, col:67>
| |   `-ReturnStmt 0x6433e98 <col:5, col:64>
| |     `-ImplicitCastExpr 0x6433e80 <col:12, col:64> 'long' <IntegralCast>
| |       `-BinaryOperator 0x6433e58 <col:12, col:64> 'unsigned long' '-'
| |         |-BinaryOperator 0x6433b30 <col:12, col:42> 'unsigned long' '-'
| |         | |-BinaryOperator 0x6433ad0 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |         | | |-UnaryExprOrTypeTraitExpr 0x6433a78 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:989:12, col:23> 'unsigned long' sizeof 'long'
| |         | | `-ImplicitCastExpr 0x6433ab8 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |         | |   `-IntegerLiteral 0x6433a98 <col:22> 'int' 8
| |         | `-ImplicitCastExpr 0x6433b18 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:989:42> 'unsigned long' <IntegralCast>
| |         |   `-IntegerLiteral 0x6433af8 <col:42> 'int' 1
| |         `-ImplicitCastExpr 0x6433e40 <col:46, col:64> 'unsigned long' <IntegralCast>
| |           `-CallExpr 0x6433de0 <col:46, col:64> 'int'
| |             |-ImplicitCastExpr 0x6433dc8 <col:46> 'int (*)(unsigned long)' <BuiltinFnToFnPtr>
| |             | `-DeclRefExpr 0x6433d48 <col:46> '<builtin fn type>' Function 0x6433bf0 '__builtin_clzl' 'int (unsigned long)'
| |             `-ImplicitCastExpr 0x6433e28 <col:61> 'unsigned long' <IntegralCast>
| |               `-ImplicitCastExpr 0x6433e10 <col:61> 'long' <LValueToRValue>
| |                 `-DeclRefExpr 0x6433d70 <col:61> 'long' lvalue ParmVar 0x6433900 '__n' 'long'
| |-FunctionDecl 0x6433fb0 <line:991:3, line:993:67> __lg 'unsigned long (unsigned long)' inline
| | |-ParmVarDecl 0x6433ef0 <line:992:8, col:22> __n 'unsigned long'
| | `-CompoundStmt 0x6434258 <line:993:3, col:67>
| |   `-ReturnStmt 0x6434238 <col:5, col:64>
| |     `-BinaryOperator 0x6434210 <col:12, col:64> 'unsigned long' '-'
| |       |-BinaryOperator 0x6434120 <col:12, col:42> 'unsigned long' '-'
| |       | |-BinaryOperator 0x64340c0 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |       | | |-UnaryExprOrTypeTraitExpr 0x6434068 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:993:12, col:23> 'unsigned long' sizeof 'long'
| |       | | `-ImplicitCastExpr 0x64340a8 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |       | |   `-IntegerLiteral 0x6434088 <col:22> 'int' 8
| |       | `-ImplicitCastExpr 0x6434108 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:993:42> 'unsigned long' <IntegralCast>
| |       |   `-IntegerLiteral 0x64340e8 <col:42> 'int' 1
| |       `-ImplicitCastExpr 0x64341f8 <col:46, col:64> 'unsigned long' <IntegralCast>
| |         `-CallExpr 0x64341b0 <col:46, col:64> 'int'
| |           |-ImplicitCastExpr 0x6434198 <col:46> 'int (*)(unsigned long)' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x6434148 <col:46> '<builtin fn type>' Function 0x6433bf0 '__builtin_clzl' 'int (unsigned long)'
| |           `-ImplicitCastExpr 0x64341e0 <col:61> 'unsigned long' <LValueToRValue>
| |             `-DeclRefExpr 0x6434170 <col:61> 'unsigned long' lvalue ParmVar 0x6433ef0 '__n' 'unsigned long'
| |-FunctionDecl 0x6434350 <line:995:3, line:997:73> __lg 'long long (long long)' inline
| | |-ParmVarDecl 0x6434290 <line:996:8, col:18> __n 'long long'
| | `-CompoundStmt 0x6434868 <line:997:3, col:73>
| |   `-ReturnStmt 0x6434848 <col:5, col:70>
| |     `-ImplicitCastExpr 0x6434830 <col:12, col:70> 'long long' <IntegralCast>
| |       `-BinaryOperator 0x6434808 <col:12, col:70> 'unsigned long' '-'
| |         |-BinaryOperator 0x64344e0 <col:12, col:47> 'unsigned long' '-'
| |         | |-BinaryOperator 0x6434480 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |         | | |-UnaryExprOrTypeTraitExpr 0x6434408 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:997:12, col:28> 'unsigned long' sizeof 'long long'
| |         | | `-ImplicitCastExpr 0x6434448 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |         | |   `-IntegerLiteral 0x6434428 <col:22> 'int' 8
| |         | `-ImplicitCastExpr 0x64344c8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:997:47> 'unsigned long' <IntegralCast>
| |         |   `-IntegerLiteral 0x64344a8 <col:47> 'int' 1
| |         `-ImplicitCastExpr 0x64347f0 <col:51, col:70> 'unsigned long' <IntegralCast>
| |           `-CallExpr 0x6434790 <col:51, col:70> 'int'
| |             |-ImplicitCastExpr 0x6434778 <col:51> 'int (*)(unsigned long long)' <BuiltinFnToFnPtr>
| |             | `-DeclRefExpr 0x64346f8 <col:51> '<builtin fn type>' Function 0x64345a0 '__builtin_clzll' 'int (unsigned long long)'
| |             `-ImplicitCastExpr 0x64347d8 <col:67> 'unsigned long long' <IntegralCast>
| |               `-ImplicitCastExpr 0x64347c0 <col:67> 'long long' <LValueToRValue>
| |                 `-DeclRefExpr 0x6434720 <col:67> 'long long' lvalue ParmVar 0x6434290 '__n' 'long long'
| |-FunctionDecl 0x6434960 <line:999:3, line:1001:73> __lg 'unsigned long long (unsigned long long)' inline
| | |-ParmVarDecl 0x64348a0 <line:1000:8, col:27> __n 'unsigned long long'
| | `-CompoundStmt 0x6434c20 <line:1001:3, col:73>
| |   `-ReturnStmt 0x6434c00 <col:5, col:70>
| |     `-ImplicitCastExpr 0x6434be8 <col:12, col:70> 'unsigned long long' <IntegralCast>
| |       `-BinaryOperator 0x6434bc0 <col:12, col:70> 'unsigned long' '-'
| |         |-BinaryOperator 0x6434ad0 <col:12, col:47> 'unsigned long' '-'
| |         | |-BinaryOperator 0x6434a70 <col:12, <built-in>:33:22> 'unsigned long' '*'
| |         | | |-UnaryExprOrTypeTraitExpr 0x6434a18 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:1001:12, col:28> 'unsigned long' sizeof 'long long'
| |         | | `-ImplicitCastExpr 0x6434a58 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |         | |   `-IntegerLiteral 0x6434a38 <col:22> 'int' 8
| |         | `-ImplicitCastExpr 0x6434ab8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:1001:47> 'unsigned long' <IntegralCast>
| |         |   `-IntegerLiteral 0x6434a98 <col:47> 'int' 1
| |         `-ImplicitCastExpr 0x6434ba8 <col:51, col:70> 'unsigned long' <IntegralCast>
| |           `-CallExpr 0x6434b60 <col:51, col:70> 'int'
| |             |-ImplicitCastExpr 0x6434b48 <col:51> 'int (*)(unsigned long long)' <BuiltinFnToFnPtr>
| |             | `-DeclRefExpr 0x6434af8 <col:51> '<builtin fn type>' Function 0x64345a0 '__builtin_clzll' 'int (unsigned long long)'
| |             `-ImplicitCastExpr 0x6434b90 <col:67> 'unsigned long long' <LValueToRValue>
| |               `-DeclRefExpr 0x6434b20 <col:67> 'unsigned long long' lvalue ParmVar 0x64348a0 '__n' 'unsigned long long'
| |-FunctionTemplateDecl 0x6434fb0 <line:1019:3, line:1034:5> equal
| | |-TemplateTypeParmDecl 0x6434c40 <line:1019:12, col:21> typename _II1
| | |-TemplateTypeParmDecl 0x6434cb0 <col:27, col:36> typename _II2
| | |-FunctionDecl 0x6434f10 <line:1020:5, line:1034:5> equal '_Bool (_II1, _II1, _II2)' inline
| | | |-ParmVarDecl 0x6434d50 <line:1021:11, col:16> __first1 '_II1'
| | | |-ParmVarDecl 0x6434dc0 <col:26, col:31> __last1 '_II1'
| | | |-ParmVarDecl 0x6434e30 <col:40, col:45> __first2 '_II2'
| | | `-CompoundStmt 0x6435368 <line:1022:5, line:1034:5>
| | |   |-NullStmt 0x6435010 <line:1029:56>
| | |   `-ReturnStmt 0x6435348 <line:1031:7, line:1033:37>
| | |     `-CallExpr 0x6435308 <line:1031:14, line:1033:37> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6435040 <line:1031:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__equal_aux' 0x6425b10
| | |       |-CallExpr 0x6435138 <col:31, col:57> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x64350b8 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |       | `-DeclRefExpr 0x6435110 <col:49> '_II1' lvalue ParmVar 0x6434d50 '__first1' '_II1'
| | |       |-CallExpr 0x6435208 <line:1032:10, col:35> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x6435188 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |       | `-DeclRefExpr 0x64351e0 <col:28> '_II1' lvalue ParmVar 0x6434dc0 '__last1' '_II1'
| | |       `-CallExpr 0x64352d8 <line:1033:10, col:36> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6435258 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         `-DeclRefExpr 0x64352b0 <col:28> '_II2' lvalue ParmVar 0x6434e30 '__first2' '_II2'
| |-FunctionTemplateDecl 0x6435860 <line:1051:3, line:1065:5> equal
| | |-TemplateTypeParmDecl 0x6435390 <line:1051:12, col:21> typename _IIter1
| | |-TemplateTypeParmDecl 0x6435400 <col:30, col:39> typename _IIter2
| | |-TemplateTypeParmDecl 0x6435490 <col:48, col:57> typename _BinaryPredicate
| | |-FunctionDecl 0x64357c0 <line:1052:5, line:1065:5> equal '_Bool (_IIter1, _IIter1, _IIter2, _BinaryPredicate)' inline
| | | |-ParmVarDecl 0x6435530 <line:1053:11, col:19> __first1 '_IIter1'
| | | |-ParmVarDecl 0x64355a0 <col:29, col:37> __last1 '_IIter1'
| | | |-ParmVarDecl 0x6435610 <line:1054:4, col:12> __first2 '_IIter2'
| | | |-ParmVarDecl 0x6435680 <col:22, col:39> __binary_pred '_BinaryPredicate'
| | | `-CompoundStmt 0x6435cc0 <line:1055:5, line:1065:5>
| | |   |-NullStmt 0x64358c8 <line:1059:56>
| | |   |-ForStmt 0x6435c48 <line:1061:7, line:1063:11>
| | |   | |-<<<NULL>>>
| | |   | |-<<<NULL>>>
| | |   | |-CXXOperatorCallExpr 0x6435990 <line:1061:14, col:26> '<dependent type>'
| | |   | | |-UnresolvedLookupExpr 0x6435928 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   | | |-DeclRefExpr 0x64358d8 <col:14> '_IIter1' lvalue ParmVar 0x6435530 '__first1' '_IIter1'
| | |   | | `-DeclRefExpr 0x6435900 <col:26> '_IIter1' lvalue ParmVar 0x64355a0 '__last1' '_IIter1'
| | |   | |-BinaryOperator 0x6435a68 <col:35, col:49> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6435a00 <col:35, col:37> '<dependent type>' prefix '++'
| | |   | | | `-DeclRefExpr 0x64359d8 <col:37> '_IIter1' lvalue ParmVar 0x6435530 '__first1' '_IIter1'
| | |   | | `-UnaryOperator 0x6435a48 <col:47, col:49> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x6435a20 <col:49> '_IIter2' lvalue ParmVar 0x6435610 '__first2' '_IIter2'
| | |   | `-IfStmt 0x6435c18 <line:1062:2, line:1063:11>
| | |   |   |-<<<NULL>>>
| | |   |   |-UnaryOperator 0x6435bc0 <line:1062:6, col:47> '_Bool' prefix '!'
| | |   |   | `-CXXUnresolvedConstructExpr 0x6435b90 <col:7, col:47> '_Bool'
| | |   |   |   `-CallExpr 0x6435b58 <col:12, col:46> '<dependent type>'
| | |   |   |     |-DeclRefExpr 0x6435aa0 <col:12> '_BinaryPredicate' lvalue ParmVar 0x6435680 '__binary_pred' '_BinaryPredicate'
| | |   |   |     |-UnaryOperator 0x6435af0 <col:26, col:27> '<dependent type>' prefix '*'
| | |   |   |     | `-DeclRefExpr 0x6435ac8 <col:27> '_IIter1' lvalue ParmVar 0x6435530 '__first1' '_IIter1'
| | |   |   |     `-UnaryOperator 0x6435b38 <col:37, col:38> '<dependent type>' prefix '*'
| | |   |   |       `-DeclRefExpr 0x6435b10 <col:38> '_IIter2' lvalue ParmVar 0x6435610 '__first2' '_IIter2'
| | |   |   |-ReturnStmt 0x6435bf8 <line:1063:4, col:11>
| | |   |   | `-CXXBoolLiteralExpr 0x6435be0 <col:11> '_Bool' false
| | |   |   `-<<<NULL>>>
| | |   `-ReturnStmt 0x6435ca0 <line:1064:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x6435c88 <col:14> '_Bool' true
| |-FunctionTemplateDecl 0x64360e0 <line:1082:3, line:1103:5> lexicographical_compare
| | |-TemplateTypeParmDecl 0x6435cf0 <line:1082:12, col:21> typename _II1
| | |-TemplateTypeParmDecl 0x6435d60 <col:27, col:36> typename _II2
| | |-FunctionDecl 0x6436040 <line:1083:5, line:1103:5> lexicographical_compare '_Bool (_II1, _II1, _II2, _II2)' inline
| | | |-ParmVarDecl 0x6435e00 <line:1084:29, col:34> __first1 '_II1'
| | | |-ParmVarDecl 0x6435e70 <col:44, col:49> __last1 '_II1'
| | | |-ParmVarDecl 0x6435ee0 <line:1085:8, col:13> __first2 '_II2'
| | | |-ParmVarDecl 0x6435f50 <col:23, col:28> __last2 '_II2'
| | | `-CompoundStmt 0x64365b8 <line:1086:5, line:1103:5>
| | |   |-NullStmt 0x6436148 <line:1096:56>
| | |   |-NullStmt 0x6436158 <line:1097:56>
| | |   `-ReturnStmt 0x6436598 <line:1099:7, line:1102:33>
| | |     `-CallExpr 0x6436550 <line:1099:14, line:1102:33> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x6436188 <line:1099:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_aux' 0x642fa90
| | |       |-CallExpr 0x6436280 <col:49, col:75> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x6436200 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |       | `-DeclRefExpr 0x6436258 <col:67> '_II1' lvalue ParmVar 0x6435e00 '__first1' '_II1'
| | |       |-CallExpr 0x6436350 <line:1100:7, col:32> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x64362d0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |       | `-DeclRefExpr 0x6436328 <col:25> '_II1' lvalue ParmVar 0x6435e70 '__last1' '_II1'
| | |       |-CallExpr 0x6436420 <line:1101:7, col:33> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x64363a0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |       | `-DeclRefExpr 0x64363f8 <col:25> '_II2' lvalue ParmVar 0x6435ee0 '__first2' '_II2'
| | |       `-CallExpr 0x6436520 <line:1102:7, col:32> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x64364a0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x640b440
| | |         `-DeclRefExpr 0x64364f8 <col:25> '_II2' lvalue ParmVar 0x6435f50 '__last2' '_II2'
| |-FunctionTemplateDecl 0x6436b30 <line:1118:3, line:1143:5> lexicographical_compare
| | |-TemplateTypeParmDecl 0x64365f0 <line:1118:12, col:21> typename _II1
| | |-TemplateTypeParmDecl 0x6436660 <col:27, col:36> typename _II2
| | |-TemplateTypeParmDecl 0x64366d0 <col:42, col:51> typename _Compare
| | |-FunctionDecl 0x6436a90 <line:1119:5, line:1143:5> lexicographical_compare '_Bool (_II1, _II1, _II2, _II2, _Compare)'
| | | |-ParmVarDecl 0x6436770 <line:1120:29, col:34> __first1 '_II1'
| | | |-ParmVarDecl 0x64367e0 <col:44, col:49> __last1 '_II1'
| | | |-ParmVarDecl 0x6436850 <line:1121:8, col:13> __first2 '_II2'
| | | |-ParmVarDecl 0x64368c0 <col:23, col:28> __last2 '_II2'
| | | |-ParmVarDecl 0x6436930 <col:37, col:46> __comp '_Compare'
| | | `-CompoundStmt 0x64380b0 <line:1122:5, line:1143:5>
| | |   |-DeclStmt 0x6436d58 <line:1123:7, col:75>
| | |   | `-TypedefDecl 0x6436d10 <col:7, col:65> _Category1 'typename iterator_traits<_II1>::iterator_category'
| | |   |-DeclStmt 0x6436f28 <line:1124:7, col:75>
| | |   | `-TypedefDecl 0x6436ee0 <col:7, col:65> _Category2 'typename iterator_traits<_II2>::iterator_category'
| | |   |-DeclStmt 0x6437208 <line:1125:7, col:64>
| | |   | `-TypedefDecl 0x64371c0 <col:7, col:54> __rai_type 'std::__lc_rai<_Category1, _Category2>':'__lc_rai<_Category1, _Category2>'
| | |   |-NullStmt 0x6437220 <line:1130:56>
| | |   |-NullStmt 0x6437230 <line:1131:56>
| | |   |-BinaryOperator 0x6437408 <line:1133:7, col:76> '<dependent type>' '='
| | |   | |-DeclRefExpr 0x6437240 <col:7> '_II1' lvalue ParmVar 0x64367e0 '__last1' '_II1'
| | |   | `-CallExpr 0x64373c0 <col:17, col:76> '<dependent type>'
| | |   |   |-DependentScopeDeclRefExpr 0x64372e0 <col:17, col:29> '<dependent type>' lvalue
| | |   |   |-DeclRefExpr 0x6437320 <col:40> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |   |   |-DeclRefExpr 0x6437348 <col:50> '_II1' lvalue ParmVar 0x64367e0 '__last1' '_II1'
| | |   |   |-DeclRefExpr 0x6437370 <col:59> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |   |   `-DeclRefExpr 0x6437398 <col:69> '_II2' lvalue ParmVar 0x64368c0 '__last2' '_II2'
| | |   |-ForStmt 0x6437e28 <line:1134:7, line:1141:2>
| | |   | |-<<<NULL>>>
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x6437a70 <line:1134:14, col:73> '<dependent type>' '&&'
| | |   | | |-CXXOperatorCallExpr 0x6437928 <col:14, col:26> '<dependent type>'
| | |   | | | |-UnresolvedLookupExpr 0x64378c0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   | | | |-DeclRefExpr 0x6437430 <col:14> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |   | | | `-DeclRefExpr 0x6437458 <col:26> '_II1' lvalue ParmVar 0x64367e0 '__last1' '_II1'
| | |   | | `-CallExpr 0x6437a38 <col:37, col:73> '<dependent type>'
| | |   | |   |-DependentScopeDeclRefExpr 0x64379a8 <col:37, col:49> '<dependent type>' lvalue
| | |   | |   |-DeclRefExpr 0x64379e8 <col:56> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |   | |   `-DeclRefExpr 0x6437a10 <col:66> '_II2' lvalue ParmVar 0x64368c0 '__last2' '_II2'
| | |   | |-BinaryOperator 0x6437b28 <line:1135:5, col:19> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6437ac0 <col:5, col:7> '<dependent type>' prefix '++'
| | |   | | | `-DeclRefExpr 0x6437a98 <col:7> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |   | | `-UnaryOperator 0x6437b08 <col:17, col:19> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x6437ae0 <col:19> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |   | `-CompoundStmt 0x6437e00 <line:1136:2, line:1141:2>
| | |   |   |-IfStmt 0x6437c78 <line:1137:4, line:1138:13>
| | |   |   | |-<<<NULL>>>
| | |   |   | |-CallExpr 0x6437c08 <line:1137:8, col:35> '<dependent type>'
| | |   |   | | |-DeclRefExpr 0x6437b50 <col:8> '_Compare' lvalue ParmVar 0x6436930 '__comp' '_Compare'
| | |   |   | | |-UnaryOperator 0x6437ba0 <col:15, col:16> '<dependent type>' prefix '*'
| | |   |   | | | `-DeclRefExpr 0x6437b78 <col:16> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |   |   | | `-UnaryOperator 0x6437be8 <col:26, col:27> '<dependent type>' prefix '*'
| | |   |   | |   `-DeclRefExpr 0x6437bc0 <col:27> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |   |   | |-ReturnStmt 0x6437c58 <line:1138:6, col:13>
| | |   |   | | `-CXXBoolLiteralExpr 0x6437c40 <col:13> '_Bool' true
| | |   |   | `-<<<NULL>>>
| | |   |   `-IfStmt 0x6437dd0 <line:1139:4, line:1140:13>
| | |   |     |-<<<NULL>>>
| | |   |     |-CallExpr 0x6437d60 <line:1139:8, col:35> '<dependent type>'
| | |   |     | |-DeclRefExpr 0x6437ca8 <col:8> '_Compare' lvalue ParmVar 0x6436930 '__comp' '_Compare'
| | |   |     | |-UnaryOperator 0x6437cf8 <col:15, col:16> '<dependent type>' prefix '*'
| | |   |     | | `-DeclRefExpr 0x6437cd0 <col:16> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |   |     | `-UnaryOperator 0x6437d40 <col:26, col:27> '<dependent type>' prefix '*'
| | |   |     |   `-DeclRefExpr 0x6437d18 <col:27> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |   |     |-ReturnStmt 0x6437db0 <line:1140:6, col:13>
| | |   |     | `-CXXBoolLiteralExpr 0x6437d98 <col:13> '_Bool' false
| | |   |     `-<<<NULL>>>
| | |   `-ReturnStmt 0x6438090 <line:1142:7, col:49>
| | |     `-BinaryOperator 0x6438068 <col:14, col:49> '<dependent type>' '&&'
| | |       |-CXXOperatorCallExpr 0x6437f20 <col:14, col:26> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x6437eb8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090
| | |       | |-DeclRefExpr 0x6437e68 <col:14> '_II1' lvalue ParmVar 0x6436770 '__first1' '_II1'
| | |       | `-DeclRefExpr 0x6437e90 <col:26> '_II1' lvalue ParmVar 0x64367e0 '__last1' '_II1'
| | |       `-CXXOperatorCallExpr 0x6438020 <col:37, col:49> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6437fb8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |         |-DeclRefExpr 0x6437f68 <col:37> '_II2' lvalue ParmVar 0x6436850 '__first2' '_II2'
| | |         `-DeclRefExpr 0x6437f90 <col:49> '_II2' lvalue ParmVar 0x64368c0 '__last2' '_II2'
| |-FunctionTemplateDecl 0x6438640 <line:1158:3, line:1177:5> mismatch
| | |-TemplateTypeParmDecl 0x6438110 <line:1158:12, col:21> typename _InputIterator1
| | |-TemplateTypeParmDecl 0x6438180 <col:38, col:47> typename _InputIterator2
| | |-FunctionDecl 0x64385a0 <line:1159:5, line:1177:5> mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2)'
| | | |-ParmVarDecl 0x6438350 <line:1160:14, col:30> __first1 '_InputIterator1'
| | | |-ParmVarDecl 0x64383c0 <col:40, col:56> __last1 '_InputIterator1'
| | | |-ParmVarDecl 0x6438430 <line:1161:7, col:23> __first2 '_InputIterator2'
| | | `-CompoundStmt 0x6438c38 <line:1162:5, line:1177:5>
| | |   |-NullStmt 0x64386a0 <line:1169:56>
| | |   |-WhileStmt 0x64389f8 <line:1171:7, line:1175:9>
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x6438918 <line:1171:14, col:51> '<dependent type>' '&&'
| | |   | | |-CXXOperatorCallExpr 0x6438768 <col:14, col:26> '<dependent type>'
| | |   | | | |-UnresolvedLookupExpr 0x6438700 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
| | |   | | | |-DeclRefExpr 0x64386b0 <col:14> '_InputIterator1' lvalue ParmVar 0x6438350 '__first1' '_InputIterator1'
| | |   | | | `-DeclRefExpr 0x64386d8 <col:26> '_InputIterator1' lvalue ParmVar 0x64383c0 '__last1' '_InputIterator1'
| | |   | | `-CXXOperatorCallExpr 0x64388d0 <col:37, col:51> '<dependent type>'
| | |   | |   |-UnresolvedLookupExpr 0x6438840 <col:47> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090
| | |   | |   |-UnaryOperator 0x64387d8 <col:37, col:38> '<dependent type>' prefix '*'
| | |   | |   | `-DeclRefExpr 0x64387b0 <col:38> '_InputIterator1' lvalue ParmVar 0x6438350 '__first1' '_InputIterator1'
| | |   | |   `-UnaryOperator 0x6438820 <col:50, col:51> '<dependent type>' prefix '*'
| | |   | |     `-DeclRefExpr 0x64387f8 <col:51> '_InputIterator2' lvalue ParmVar 0x6438430 '__first2' '_InputIterator2'
| | |   | `-CompoundStmt 0x64389d0 <line:1172:9, line:1175:9>
| | |   |   |-UnaryOperator 0x6438968 <line:1173:4, col:6> '<dependent type>' prefix '++'
| | |   |   | `-DeclRefExpr 0x6438940 <col:6> '_InputIterator1' lvalue ParmVar 0x6438350 '__first1' '_InputIterator1'
| | |   |   `-UnaryOperator 0x64389b0 <line:1174:4, col:6> '<dependent type>' prefix '++'
| | |   |     `-DeclRefExpr 0x6438988 <col:6> '_InputIterator2' lvalue ParmVar 0x6438430 '__first2' '_InputIterator2'
| | |   `-ReturnStmt 0x6438c18 <line:1176:7, col:71>
| | |     `-CXXUnresolvedConstructExpr 0x6438be0 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
| | |       |-DeclRefExpr 0x6438b90 <col:53> '_InputIterator1' lvalue ParmVar 0x6438350 '__first1' '_InputIterator1'
| | |       `-DeclRefExpr 0x6438bb8 <col:63> '_InputIterator2' lvalue ParmVar 0x6438430 '__first2' '_InputIterator2'
| `-FunctionTemplateDecl 0x6439290 <line:1195:3, line:1212:5> mismatch
|   |-TemplateTypeParmDecl 0x6438c70 <line:1195:12, col:21> typename _InputIterator1
|   |-TemplateTypeParmDecl 0x6438ce0 <col:38, col:47> typename _InputIterator2
|   |-TemplateTypeParmDecl 0x6438d50 <line:1196:5, col:14> typename _BinaryPredicate
|   |-FunctionDecl 0x64391f0 <line:1197:5, line:1212:5> mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)'
|   | |-ParmVarDecl 0x6438f20 <line:1198:14, col:30> __first1 '_InputIterator1'
|   | |-ParmVarDecl 0x6438f90 <col:40, col:56> __last1 '_InputIterator1'
|   | |-ParmVarDecl 0x6439000 <line:1199:7, col:23> __first2 '_InputIterator2'
|   | |-ParmVarDecl 0x6439070 <col:33, col:50> __binary_pred '_BinaryPredicate'
|   | `-CompoundStmt 0x6439858 <line:1200:5, line:1212:5>
|   |   |-NullStmt 0x64392f8 <line:1204:56>
|   |   |-WhileStmt 0x6439618 <line:1206:7, line:1210:9>
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x6439538 <line:1206:14, col:77> '<dependent type>' '&&'
|   |   | | |-CXXOperatorCallExpr 0x64393c0 <col:14, col:26> '<dependent type>'
|   |   | | | |-UnresolvedLookupExpr 0x6439358 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0
|   |   | | | |-DeclRefExpr 0x6439308 <col:14> '_InputIterator1' lvalue ParmVar 0x6438f20 '__first1' '_InputIterator1'
|   |   | | | `-DeclRefExpr 0x6439330 <col:26> '_InputIterator1' lvalue ParmVar 0x6438f90 '__last1' '_InputIterator1'
|   |   | | `-CXXUnresolvedConstructExpr 0x6439508 <col:37, col:77> '_Bool'
|   |   | |   `-CallExpr 0x64394d0 <col:42, col:76> '<dependent type>'
|   |   | |     |-DeclRefExpr 0x6439418 <col:42> '_BinaryPredicate' lvalue ParmVar 0x6439070 '__binary_pred' '_BinaryPredicate'
|   |   | |     |-UnaryOperator 0x6439468 <col:56, col:57> '<dependent type>' prefix '*'
|   |   | |     | `-DeclRefExpr 0x6439440 <col:57> '_InputIterator1' lvalue ParmVar 0x6438f20 '__first1' '_InputIterator1'
|   |   | |     `-UnaryOperator 0x64394b0 <col:67, col:68> '<dependent type>' prefix '*'
|   |   | |       `-DeclRefExpr 0x6439488 <col:68> '_InputIterator2' lvalue ParmVar 0x6439000 '__first2' '_InputIterator2'
|   |   | `-CompoundStmt 0x64395f0 <line:1207:9, line:1210:9>
|   |   |   |-UnaryOperator 0x6439588 <line:1208:4, col:6> '<dependent type>' prefix '++'
|   |   |   | `-DeclRefExpr 0x6439560 <col:6> '_InputIterator1' lvalue ParmVar 0x6438f20 '__first1' '_InputIterator1'
|   |   |   `-UnaryOperator 0x64395d0 <line:1209:4, col:6> '<dependent type>' prefix '++'
|   |   |     `-DeclRefExpr 0x64395a8 <col:6> '_InputIterator2' lvalue ParmVar 0x6439000 '__first2' '_InputIterator2'
|   |   `-ReturnStmt 0x6439838 <line:1211:7, col:71>
|   |     `-CXXUnresolvedConstructExpr 0x6439800 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
|   |       |-DeclRefExpr 0x64397b0 <col:53> '_InputIterator1' lvalue ParmVar 0x6438f20 '__first1' '_InputIterator1'
|   |       `-DeclRefExpr 0x64397d8 <col:63> '_InputIterator2' lvalue ParmVar 0x6439000 '__first2' '_InputIterator2'
|-LinkageSpecDecl 0x6410430 <line:372:6> C
| `-FunctionDecl 0x6410480 <col:6> __builtin_memmove 'void *(void *, const void *, unsigned long)' extern
|   |-ParmVarDecl 0x6410990 <<invalid sloc>> 'void *'
|   |-ParmVarDecl 0x64109f0 <<invalid sloc>> 'const void *'
|   |-ParmVarDecl 0x6410a50 <<invalid sloc>> 'unsigned long'
|   `-NoThrowAttr 0x6410ac0 <col:6> Implicit
|-LinkageSpecDecl 0x641f130 <line:703:7> C
| `-FunctionDecl 0x641f180 <col:7> __builtin_memset 'void *(void *, int, unsigned long)' extern
|   |-ParmVarDecl 0x641f290 <<invalid sloc>> 'void *'
|   |-ParmVarDecl 0x641f2f0 <<invalid sloc>> 'int'
|   |-ParmVarDecl 0x641f350 <<invalid sloc>> 'unsigned long'
|   `-NoThrowAttr 0x641f3c0 <col:7> Implicit
|-LinkageSpecDecl 0x6424310 <line:810:12> C
| `-FunctionDecl 0x6424360 <col:12> __builtin_memcmp 'int (const void *, const void *, unsigned long)' extern
|   |-ParmVarDecl 0x6424400 <<invalid sloc>> 'const void *'
|   |-ParmVarDecl 0x6424460 <<invalid sloc>> 'const void *'
|   |-ParmVarDecl 0x6425410 <<invalid sloc>> 'unsigned long'
|   `-NoThrowAttr 0x6425480 <col:12> Implicit
|-LinkageSpecDecl 0x64331d0 <line:981:46> C
| `-FunctionDecl 0x6433220 <col:46> __builtin_clz 'int (unsigned int)' extern
|   |-ParmVarDecl 0x64332c0 <<invalid sloc>> 'unsigned int'
|   |-NoThrowAttr 0x6433320 <col:46> Implicit
|   `-ConstAttr 0x6433360 <col:46> Implicit
|-LinkageSpecDecl 0x6433ba0 <line:989:46> C
| `-FunctionDecl 0x6433bf0 <col:46> __builtin_clzl 'int (unsigned long)' extern
|   |-ParmVarDecl 0x6433c90 <<invalid sloc>> 'unsigned long'
|   |-NoThrowAttr 0x6433cf0 <col:46> Implicit
|   `-ConstAttr 0x6433d30 <col:46> Implicit
|-LinkageSpecDecl 0x6434550 <line:997:51> C
| `-FunctionDecl 0x64345a0 <col:51> __builtin_clzll 'int (unsigned long long)' extern
|   |-ParmVarDecl 0x6434640 <<invalid sloc>> 'unsigned long long'
|   |-NoThrowAttr 0x64346a0 <col:51> Implicit
|   `-ConstAttr 0x64346e0 <col:51> Implicit
|-LinkageSpecDecl 0x64421b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:40:1, line:147:1> C++
| |-NamespaceDecl 0x6442200 prev 0x6403dc0 <line:42:1, line:120:1> std
| | |-original Namespace 0x62eacf0 'std'
| | |-CXXRecordDecl 0x6442260 <line:60:3, line:69:3> class exception definition
| | | |-VisibilityAttr 0x6442370 <line:35:13> Default Implicit
| | | |-CXXRecordDecl 0x64423b0 <line:60:3, col:9> class exception
| | | |-AccessSpecDecl 0x6442440 <line:62:3, col:9> public
| | | |-CXXConstructorDecl 0x64424e0 <line:63:5, col:41> exception 'void (void) throw()'
| | | | `-CompoundStmt 0x64429c8 <col:39, col:41>
| | | |-CXXDestructorDecl 0x64425f0 <line:64:5, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> ~exception 'void (void) throw()' virtual
| | | |-CXXMethodDecl 0x6442720 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:68:5, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> what 'const char *(void) const throw()' virtual
| | | |-CXXMethodDecl 0x6442820 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:60:9, <invalid sloc>> operator= 'class std::exception &(const class std::exception &)' inline noexcept-unevaluated 0x6442820
| | | | `-ParmVarDecl 0x6442940 <col:9> 'const class std::exception &'
| | | `-CXXConstructorDecl 0x64446d0 <col:9> exception 'void (const class std::exception &)' inline noexcept-unevaluated 0x64446d0
| | |   `-ParmVarDecl 0x6444810 <col:9> 'const class std::exception &'
| | |-CXXRecordDecl 0x64429e0 <line:73:3, line:84:3> class bad_exception definition
| | | |-public 'class std::exception'
| | | |-VisibilityAttr 0x6442af0 <line:35:13> Default Implicit
| | | |-CXXRecordDecl 0x6442b70 <line:73:3, col:9> class bad_exception
| | | |-AccessSpecDecl 0x6442c00 <line:75:3, col:9> public
| | | |-CXXConstructorDecl 0x6442c70 <line:76:5, col:45> bad_exception 'void (void) throw()'
| | | | |-CXXCtorInitializer 'class std::exception'
| | | | | |-CXXConstructExpr 0x6444870 <col:5> 'class std::exception' 'void (void) throw()'
| | | | `-CompoundStmt 0x64448e0 <col:43, col:45>
| | | |-CXXDestructorDecl 0x6442d80 <line:80:5, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> ~bad_exception 'void (void) throw()' virtual
| | | |-CXXMethodDecl 0x6442e50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:83:5, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> what 'const char *(void) const throw()' virtual
| | | `-CXXMethodDecl 0x6442f50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:73:9, <invalid sloc>> operator= 'class std::bad_exception &(const class std::bad_exception &)' inline noexcept-unevaluated 0x6442f50
| | |   `-ParmVarDecl 0x6443070 <col:9> 'const class std::bad_exception &'
| | |-TypedefDecl 0x64449c0 <line:87:3, col:38> terminate_handler 'void (*)(void)'
| | |-TypedefDecl 0x6444a40 <line:90:3, col:39> unexpected_handler 'void (*)(void)'
| | |-FunctionDecl 0x6444bc0 <line:93:3, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> set_terminate 'terminate_handler (terminate_handler) throw()'
| | | |-ParmVarDecl 0x6444ac0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:93:35> 'terminate_handler':'void (*)(void)'
| | | `-VisibilityAttr 0x6444c70 <line:35:13> Default Implicit
| | |-FunctionDecl 0x6444d00 <line:97:3, col:71> terminate 'void (void) __attribute__((noreturn)) throw()'
| | | `-VisibilityAttr 0x6444da0 <line:35:13> Default Implicit
| | |-FunctionDecl 0x6444ed0 <line:100:3, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:108:39> set_unexpected 'unexpected_handler (unexpected_handler) throw()'
| | | |-ParmVarDecl 0x6444e10 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/exception:100:37> 'unexpected_handler':'void (*)(void)'
| | | `-VisibilityAttr 0x6444f80 <line:35:13> Default Implicit
| | |-FunctionDecl 0x6444fe0 <line:104:3, col:50> unexpected 'void (void) __attribute__((noreturn))'
| | | `-VisibilityAttr 0x6445080 <line:35:13> Default Implicit
| | `-FunctionDecl 0x6445140 <line:117:3, col:76> uncaught_exception '_Bool (void) throw()'
| |   |-PureAttr 0x64451e0 <col:67>
| |   `-VisibilityAttr 0x6445220 <line:35:13> Default Implicit
| `-NamespaceDecl 0x6445240 prev 0x63f59f0 <line:122:1, line:145:1> __gnu_cxx
|   |-original Namespace 0x636b110 '__gnu_cxx'
|   `-FunctionDecl 0x64452c0 <line:142:3, col:36> __verbose_terminate_handler 'void (void)'
|     `-VisibilityAttr 0x6445360 <line:35:13> Default Implicit
|-LinkageSpecDecl 0x64453d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/new:44:1, line:118:1> C++
| |-NamespaceDecl 0x6445420 prev 0x6442200 <line:46:1, line:78:1> std
| | |-original Namespace 0x62eacf0 'std'
| | |-CXXRecordDecl 0x6445480 <line:54:3, line:65:3> class bad_alloc definition
| | | |-public 'class std::exception'
| | | |-VisibilityAttr 0x6445590 <line:42:13> Default Implicit
| | | |-CXXRecordDecl 0x64456b0 <line:54:3, col:9> class bad_alloc
| | | |-AccessSpecDecl 0x6445740 <line:56:3, col:9> public
| | | |-CXXConstructorDecl 0x64457b0 <line:57:5, col:27> bad_alloc 'void (void) throw()'
| | | | |-CXXCtorInitializer 'class std::exception'
| | | | | |-CXXConstructExpr 0x6445c38 <col:5> 'class std::exception' 'void (void) throw()'
| | | | `-CompoundStmt 0x6445cb0 <col:25, col:27>
| | | |-CXXDestructorDecl 0x64458c0 <line:61:5, col:32> ~bad_alloc 'void (void) throw()' virtual
| | | |-CXXMethodDecl 0x6445990 <line:64:5, col:44> what 'const char *(void) const throw()' virtual
| | | `-CXXMethodDecl 0x6445a90 <line:54:9, <invalid sloc>> operator= 'class std::bad_alloc &(const class std::bad_alloc &)' inline noexcept-unevaluated 0x6445a90
| | |   `-ParmVarDecl 0x6445bb0 <col:9> 'const class std::bad_alloc &'
| | |-CXXRecordDecl 0x6445cd0 <line:67:3, col:22> struct nothrow_t definition
| | | |-VisibilityAttr 0x6445de0 <line:42:13> Default Implicit
| | | `-CXXRecordDecl 0x6445e20 <line:67:3, col:10> struct nothrow_t
| | |-VarDecl 0x6445ec0 <line:69:3, col:26> nothrow 'const struct std::nothrow_t' extern
| | | `-VisibilityAttr 0x6445f20 <line:42:13> Default Implicit
| | |-TypedefDecl 0x6445f90 <line:73:3, col:31> new_handler 'void (*)(void)'
| | `-FunctionDecl 0x64460d0 <line:77:3, col:50> set_new_handler 'new_handler (new_handler) throw()'
| |   |-ParmVarDecl 0x6446010 <col:31> 'new_handler':'void (*)(void)'
| |   `-VisibilityAttr 0x6446180 <line:42:13> Default Implicit
| |-FunctionDecl 0x64469a0 prev 0x6446430 <line:91:1, line:92:41> operator new 'void *(std::size_t) throw(std::bad_alloc)'
| | |-ParmVarDecl 0x6446260 <line:91:20, col:25> 'std::size_t':'unsigned long'
| | |-MallocAttr 0x6446a70 <<invalid sloc>>
| | `-VisibilityAttr 0x6446a90 <line:42:13> Default Implicit
| |-FunctionDecl 0x6446bd0 prev 0x6446570 <line:93:1, line:94:41> operator new[] 'void *(std::size_t) throw(std::bad_alloc)'
| | |-ParmVarDecl 0x6446b00 <line:93:22, col:27> 'std::size_t':'unsigned long'
| | |-MallocAttr 0x6446ca0 <<invalid sloc>>
| | `-VisibilityAttr 0x6446cc0 <line:42:13> Default Implicit
| |-FunctionDecl 0x6446d70 prev 0x64467a0 <line:95:1, line:96:41> operator delete 'void (void *) throw()'
| | |-ParmVarDecl 0x6446cf0 <line:95:22, col:26> 'void *'
| | `-VisibilityAttr 0x6446e20 <line:42:13> Default Implicit
| |-FunctionDecl 0x6446ef0 prev 0x64468a0 <line:97:1, line:98:41> operator delete[] 'void (void *) throw()'
| | |-ParmVarDecl 0x6446e70 <line:97:24, col:28> 'void *'
| | `-VisibilityAttr 0x6446fa0 <line:42:13> Default Implicit
| |-FunctionDecl 0x6447280 <line:99:1, line:100:41> operator new 'void *(std::size_t, const std::nothrow_t &) throw()'
| | |-ParmVarDecl 0x6447030 <line:99:20, col:25> 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x6447170 <col:33, col:53> 'const std::nothrow_t &'
| | `-VisibilityAttr 0x6447330 <line:42:13> Default Implicit
| |-FunctionDecl 0x6447500 <line:101:1, line:102:41> operator new[] 'void *(std::size_t, const std::nothrow_t &) throw()'
| | |-ParmVarDecl 0x64473c0 <line:101:22, col:27> 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x6447470 <col:35, col:55> 'const std::nothrow_t &'
| | `-VisibilityAttr 0x64475b0 <line:42:13> Default Implicit
| |-FunctionDecl 0x64477e0 <line:103:1, line:104:41> operator delete 'void (void *, const std::nothrow_t &) throw()'
| | |-ParmVarDecl 0x6447600 <line:103:22, col:26> 'void *'
| | |-ParmVarDecl 0x64476d0 <col:29, col:49> 'const std::nothrow_t &'
| | `-VisibilityAttr 0x6447890 <line:42:13> Default Implicit
| |-FunctionDecl 0x6447a20 <line:105:1, line:106:41> operator delete[] 'void (void *, const std::nothrow_t &) throw()'
| | |-ParmVarDecl 0x64478e0 <line:105:24, col:28> 'void *'
| | |-ParmVarDecl 0x6447990 <col:31, col:51> 'const std::nothrow_t &'
| | `-VisibilityAttr 0x6447ad0 <line:42:13> Default Implicit
| |-FunctionDecl 0x6447ce0 <line:109:1, line:110:15> operator new 'void *(std::size_t, void *) throw()' inline
| | |-ParmVarDecl 0x6447b60 <line:109:27, col:32> 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x6447bd0 <col:40, col:46> __p 'void *'
| | |-CompoundStmt 0x6447e30 <line:110:1, col:15>
| | | `-ReturnStmt 0x6447e10 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x6447df8 <col:10> 'void *' <LValueToRValue>
| | |     `-DeclRefExpr 0x6447dd0 <col:10> 'void *' lvalue ParmVar 0x6447bd0 '__p' 'void *'
| | `-VisibilityAttr 0x6447d90 <line:42:13> Default Implicit
| |-FunctionDecl 0x6447fa0 <line:111:1, line:112:15> operator new[] 'void *(std::size_t, void *) throw()' inline
| | |-ParmVarDecl 0x6447ea0 <line:111:29, col:34> 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x6447f10 <col:42, col:48> __p 'void *'
| | |-CompoundStmt 0x64480f0 <line:112:1, col:15>
| | | `-ReturnStmt 0x64480d0 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x64480b8 <col:10> 'void *' <LValueToRValue>
| | |     `-DeclRefExpr 0x6448090 <col:10> 'void *' lvalue ParmVar 0x6447f10 '__p' 'void *'
| | `-VisibilityAttr 0x6448050 <line:42:13> Default Implicit
| |-FunctionDecl 0x64482a0 <line:115:1, col:69> operator delete 'void (void *, void *) throw()' inline
| | |-ParmVarDecl 0x6448120 <col:31, col:35> 'void *'
| | |-ParmVarDecl 0x6448190 <col:38, col:42> 'void *'
| | |-CompoundStmt 0x6448390 <col:67, col:69>
| | `-VisibilityAttr 0x6448350 <line:42:13> Default Implicit
| `-FunctionDecl 0x64484c0 <line:116:1, col:69> operator delete[] 'void (void *, void *) throw()' inline
|   |-ParmVarDecl 0x64483c0 <col:31, col:35> 'void *'
|   |-ParmVarDecl 0x6448430 <col:38, col:42> 'void *'
|   |-CompoundStmt 0x64485b0 <col:67, col:69>
|   `-VisibilityAttr 0x6448570 <line:42:13> Default Implicit
|-FunctionDecl 0x6446430 <<invalid sloc>> operator new 'void *(unsigned long) throw(class std::bad_alloc)'
| |-ParmVarDecl 0x6446510 <<invalid sloc>> 'unsigned long'
| `-MallocAttr 0x64464d0 <<invalid sloc>> Implicit
|-FunctionDecl 0x6446570 <<invalid sloc>> operator new[] 'void *(unsigned long) throw(class std::bad_alloc)'
| |-ParmVarDecl 0x64466c0 <<invalid sloc>> 'unsigned long'
| `-MallocAttr 0x6446610 <<invalid sloc>> Implicit
|-FunctionDecl 0x64467a0 <<invalid sloc>> operator delete 'void (void *) throw()'
| `-ParmVarDecl 0x6446840 <<invalid sloc>> 'void *'
|-FunctionDecl 0x64468a0 <<invalid sloc>> operator delete[] 'void (void *) throw()'
| `-ParmVarDecl 0x6446940 <<invalid sloc>> 'void *'
|-NamespaceDecl 0x6448600 prev 0x6445240 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/new_allocator.h:40:1, line:148:1> __gnu_cxx
| |-original Namespace 0x636b110 '__gnu_cxx'
| |-VisibilityAttr 0x6448660 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-UsingDecl 0x64486e0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/new_allocator.h:44:3, col:14> std::size_t
| |-UsingShadowDecl 0x6448730 <col:14> Typedef 0x62ead60 'size_t'
| |-UsingDecl 0x6448780 <line:45:3, col:14> std::ptrdiff_t
| |-UsingShadowDecl 0x64487d0 <col:14> Typedef 0x62eadc0 'ptrdiff_t'
| |-ClassTemplateDecl 0x6448920 <line:57:3, line:135:5> new_allocator
| | |-TemplateTypeParmDecl 0x6448810 <line:57:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x6448890 <line:58:5, line:135:5> class new_allocator definition
| | | |-CXXRecordDecl 0x6448ba0 <line:58:5, col:11> class new_allocator
| | | |-AccessSpecDecl 0x6448c30 <line:60:5, col:11> public
| | | |-TypedefDecl 0x6448c70 <line:61:7, col:26> size_type 'size_t':'unsigned long'
| | | |-TypedefDecl 0x6448cd0 <line:62:7, col:26> difference_type 'ptrdiff_t':'long'
| | | |-TypedefDecl 0x6448d60 <line:63:7, col:26> pointer '_Tp *'
| | | |-TypedefDecl 0x6448df0 <line:64:7, col:26> const_pointer 'const _Tp *'
| | | |-TypedefDecl 0x6448e80 <line:65:7, col:26> reference '_Tp &'
| | | |-TypedefDecl 0x6448f10 <line:66:7, col:26> const_reference 'const _Tp &'
| | | |-TypedefDecl 0x6448f70 <line:67:7, col:26> value_type '_Tp'
| | | |-ClassTemplateDecl 0x64490d0 <line:69:7, line:71:46> rebind
| | | | |-TemplateTypeParmDecl 0x6448fc0 <line:69:16, col:25> typename _Tp1
| | | | `-CXXRecordDecl 0x6449040 <line:70:9, line:71:46> struct rebind definition
| | | |   |-CXXRecordDecl 0x6449350 <line:70:9, col:16> struct rebind
| | | |   `-TypedefDecl 0x6449540 <line:71:11, col:39> other 'new_allocator<_Tp1>'
| | | |-CXXConstructorDecl 0x64495d0 <line:79:7, col:47> new_allocator<_Tp> 'void (void) throw()'
| | | | `-CompoundStmt 0x644cd88 <col:45, col:47>
| | | |-CXXConstructorDecl 0x644a660 <line:81:7, col:67> new_allocator<_Tp> 'void (const new_allocator<_Tp> &) throw()'
| | | | |-ParmVarDecl 0x644a560 <col:21, col:40> 'const new_allocator<_Tp> &'
| | | | `-CompoundStmt 0x644cda0 <col:65, col:67>
| | | |-FunctionTemplateDecl 0x644aad0 <line:83:7, line:84:75> new_allocator<_Tp>
| | | | |-TemplateTypeParmDecl 0x644a720 <line:83:16, col:25> typename _Tp1
| | | | |-CXXConstructorDecl 0x644aa10 <line:84:9, col:75> new_allocator<_Tp> 'void (const new_allocator<_Tp1> &) throw()'
| | | | | |-ParmVarDecl 0x644a910 <col:23, col:48> 'const new_allocator<_Tp1> &'
| | | | | `-CompoundStmt 0x644cdb8 <col:73, col:75>
| | | |-CXXDestructorDecl 0x644ab70 <line:86:7, col:48> ~new_allocator<_Tp> 'void (void) throw()'
| | | | `-CompoundStmt 0x644cdd0 <col:46, col:48>
| | | |-CXXMethodDecl 0x644ad70 <line:88:7, line:90:39> address 'pointer (reference) const'
| | | | |-ParmVarDecl 0x644ac70 <line:89:15, col:25> __x 'reference':'_Tp &'
| | | | `-CompoundStmt 0x644ced8 <line:90:7, col:39>
| | | |   `-ReturnStmt 0x644ceb8 <col:9, col:36>
| | | |     `-CallExpr 0x644ce88 <col:16, col:36> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x644ce08 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | | |       `-DeclRefExpr 0x644ce60 <col:33> '_Tp' lvalue ParmVar 0x644ac70 '__x' 'reference':'_Tp &'
| | | |-CXXMethodDecl 0x644af70 <line:92:7, line:94:39> address 'const_pointer (const_reference) const'
| | | | |-ParmVarDecl 0x644ae70 <line:93:15, col:31> __x 'const_reference':'const _Tp &'
| | | | `-CompoundStmt 0x644cfe8 <line:94:7, col:39>
| | | |   `-ReturnStmt 0x644cfc8 <col:9, col:36>
| | | |     `-CallExpr 0x644cf98 <col:16, col:36> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x644cf18 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | | |       `-DeclRefExpr 0x644cf70 <col:33> 'const _Tp' lvalue ParmVar 0x644ae70 '__x' 'const_reference':'const _Tp &'
| | | |-CXXMethodDecl 0x644b1d0 <line:98:7, line:105:7> allocate 'pointer (size_type, const void *)'
| | | | |-ParmVarDecl 0x644b050 <line:99:16, col:26> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x644b0c0 <col:31, col:45> 'const void *'
| | | | | `-ImplicitCastExpr 0x644cd48 <col:45> 'const void *' <NullToPointer>
| | | | |   `-IntegerLiteral 0x644cd28 <col:45> 'int' 0
| | | | `-CompoundStmt 0x644d4e0 <line:100:7, line:105:7>
| | | |   |-IfStmt 0x644d238 <line:101:2, line:102:27>
| | | |   | |-<<<NULL>>>
| | | |   | |-CXXOperatorCallExpr 0x644d128 <line:101:6, col:27> '<dependent type>'
| | | |   | | |-UnresolvedLookupExpr 0x644d0c8 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63feb50 0x63ff430
| | | |   | | |-DeclRefExpr 0x644d008 <col:6> 'size_type':'unsigned long' lvalue ParmVar 0x644b050 '__n' 'size_type':'unsigned long'
| | | |   | | `-CallExpr 0x644d0a0 <col:12, col:27> '<dependent type>'
| | | |   | |   `-CXXDependentScopeMemberExpr 0x644d048 <col:12, col:18> '<dependent type>' lvalue
| | | |   | |     `-CXXThisExpr 0x644d030 <col:12> 'new_allocator<_Tp> *' this
| | | |   | |-CallExpr 0x644d210 <line:102:4, col:27> 'void'
| | | |   | | `-ImplicitCastExpr 0x644d1f8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
| | | |   | |   `-DeclRefExpr 0x644d190 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x6369840 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))'
| | | |   | `-<<<NULL>>>
| | | |   `-ReturnStmt 0x644d4c0 <line:104:2, col:60>
| | | |     `-CXXStaticCastExpr 0x644d490 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
| | | |       `-CallExpr 0x644d450 <col:27, col:59> 'void *'
| | | |         |-ImplicitCastExpr 0x644d438 <col:27, col:29> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
| | | |         | `-DeclRefExpr 0x644d3a0 <col:27, col:29> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x64469a0 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'
| | | |         `-BinaryOperator 0x644d378 <col:42, col:58> 'unsigned long' '*'
| | | |           |-ImplicitCastExpr 0x644d360 <col:42> 'size_type':'unsigned long' <LValueToRValue>
| | | |           | `-DeclRefExpr 0x644d308 <col:42> 'size_type':'unsigned long' lvalue ParmVar 0x644b050 '__n' 'size_type':'unsigned long'
| | | |           `-UnaryExprOrTypeTraitExpr 0x644d340 <col:48, col:58> 'unsigned long' sizeof '_Tp'
| | | |-CXXMethodDecl 0x644b410 <line:108:7, line:110:33> deallocate 'void (pointer, size_type)'
| | | | |-ParmVarDecl 0x644b290 <line:109:18, col:26> __p 'pointer':'_Tp *'
| | | | |-ParmVarDecl 0x644b300 <col:31> 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x644d5f8 <line:110:7, col:33>
| | | |   `-CallExpr 0x644d5c8 <col:9, col:30> '<dependent type>'
| | | |     |-UnresolvedLookupExpr 0x644d538 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = 'operator delete' 0x6446d70 0x64477e0 0x64482a0
| | | |     `-DeclRefExpr 0x644d5a0 <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x644b290 '__p' 'pointer':'_Tp *'
| | | |-CXXMethodDecl 0x644c890 <line:112:7, line:114:42> max_size 'size_type (void) const throw()'
| | | | `-CompoundStmt 0x644d720 <col:7, col:42>
| | | |   `-ReturnStmt 0x644d700 <col:9, col:39>
| | | |     `-BinaryOperator 0x644d6d8 <col:16, col:39> 'unsigned long' '/'
| | | |       |-CXXFunctionalCastExpr 0x644d680 <col:16, col:25> 'size_t':'unsigned long' functional cast to size_t <NoOp>
| | | |       | `-ImplicitCastExpr 0x644d668 <col:23, col:24> 'size_t':'unsigned long' <IntegralCast>
| | | |       |   `-UnaryOperator 0x644d648 <col:23, col:24> 'int' prefix '-'
| | | |       |     `-IntegerLiteral 0x644d628 <col:24> 'int' 1
| | | |       `-UnaryExprOrTypeTraitExpr 0x644d6b8 <col:29, col:39> 'unsigned long' sizeof '_Tp'
| | | |-CXXMethodDecl 0x644cac0 <line:128:7, line:130:40> construct 'void (pointer, const _Tp &)'
| | | | |-ParmVarDecl 0x644c940 <line:129:17, col:25> __p 'pointer':'_Tp *'
| | | | |-ParmVarDecl 0x644c9b0 <col:30, col:41> __val 'const _Tp &'
| | | | `-CompoundStmt 0x644d868 <line:130:7, col:40>
| | | |   `-CXXNewExpr 0x644d808 <col:9, col:37> '_Tp *'
| | | |     |-ParenListExpr 0x644d7c8 <col:31, col:37> 'NULL TYPE'
| | | |     | `-DeclRefExpr 0x644d7a0 <col:32> 'const _Tp' lvalue ParmVar 0x644c9b0 '__val' 'const _Tp &'
| | | |     `-CStyleCastExpr 0x644d778 <col:15, col:23> 'void *' <Dependent>
| | | |       `-DeclRefExpr 0x644d740 <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x644c940 '__p' 'pointer':'_Tp *'
| | | `-CXXMethodDecl 0x644cc80 <line:132:7, line:133:43> destroy 'void (pointer)'
| | |   |-ParmVarDecl 0x644cb80 <col:15, col:23> __p 'pointer':'_Tp *'
| | |   `-CompoundStmt 0x644e248 <col:28, col:43>
| | |     `-CallExpr 0x644e220 <col:30, col:40> 'void'
| | |       `-CXXPseudoDestructorExpr 0x644e1d0 <col:30, col:36> 'void (*)(void)'
| | |         `-DeclRefExpr 0x644e198 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x644cb80 '__p' 'pointer':'_Tp *'
| | |-ClassTemplateSpecializationDecl 0x63f44e0 <line:57:3, line:135:5> class new_allocator definition
| | | |-TemplateArgument type 'char'
| | | |-CXXRecordDecl 0x63f4700 prev 0x63f44e0 <line:58:5, col:11> class new_allocator
| | | |-AccessSpecDecl 0x63f4790 <line:60:5, col:11> public
| | | |-TypedefDecl 0x63f47c0 <line:61:7, col:26> size_type 'size_t':'unsigned long'
| | | |-TypedefDecl 0x63f4810 <line:62:7, col:26> difference_type 'ptrdiff_t':'long'
| | | |-TypedefDecl 0x63f48d0 <line:63:7, col:26> pointer 'char *'
| | | |-TypedefDecl 0x63f4960 <line:64:7, col:26> const_pointer 'const char *'
| | | |-TypedefDecl 0x63f49f0 <line:65:7, col:26> reference 'char &'
| | | |-TypedefDecl 0x63f4ab0 <line:66:7, col:26> const_reference 'const char &'
| | | |-TypedefDecl 0x63f4b10 <line:67:7, col:26> value_type 'char':'char'
| | | |-ClassTemplateDecl 0x63f4c70 <line:69:7, line:70:16> rebind
| | | | |-TemplateTypeParmDecl 0x63f4b60 <line:69:16, col:25> typename _Tp1
| | | | `-CXXRecordDecl 0x63f4be0 <line:70:9, col:16> struct rebind
| | | |-CXXConstructorDecl 0x63f4ed0 <line:79:7> new_allocator 'void (void) throw()'
| | | |-CXXConstructorDecl 0x645a3e0 <line:81:7> new_allocator 'void (const class __gnu_cxx::new_allocator<char> &) throw()'
| | | | `-ParmVarDecl 0x63f4fe0 <col:21, col:40> 'const class __gnu_cxx::new_allocator<char> &'
| | | |-FunctionTemplateDecl 0x645a830 <line:83:7, line:84:9> new_allocator
| | | | |-TemplateTypeParmDecl 0x645a4c0 <line:83:16, col:25> typename _Tp1
| | | | |-CXXConstructorDecl 0x645a770 <line:84:9> new_allocator 'void (const new_allocator<_Tp1> &) throw()'
| | | | | `-ParmVarDecl 0x645a650 <col:23, col:48> 'const new_allocator<_Tp1> &'
| | | |-CXXDestructorDecl 0x645a940 <line:86:7, col:8> ~new_allocator 'void (void) throw()'
| | | |-CXXMethodDecl 0x645ab50 <line:88:7, line:90:39> address 'pointer (reference) const'
| | | | `-ParmVarDecl 0x645aa50 <line:89:15, col:25> __x 'reference':'char &'
| | | |-CXXMethodDecl 0x645ad60 <line:92:7, line:94:39> address 'const_pointer (const_reference) const'
| | | | `-ParmVarDecl 0x645ac60 <line:93:15, col:31> __x 'const_reference':'const char &'
| | | |-CXXMethodDecl 0x645af90 <line:98:7, line:105:7> allocate 'pointer (size_type, const void *)'
| | | | |-ParmVarDecl 0x645ae20 <line:99:16, col:26> __n 'size_type':'unsigned long'
| | | | `-ParmVarDecl 0x645ae80 <col:31, col:45> 'const void *'
| | | |-CXXMethodDecl 0x645b1d0 <line:108:7, line:110:33> deallocate 'void (pointer, size_type)'
| | | | |-ParmVarDecl 0x645b060 <line:109:18, col:26> __p 'pointer':'char *'
| | | | `-ParmVarDecl 0x645b0c0 <col:31> 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x645b290 <line:112:7, line:114:42> max_size 'size_type (void) const throw()'
| | | |-CXXMethodDecl 0x645b710 <line:128:7, line:130:40> construct 'void (pointer, const char &)'
| | | | |-ParmVarDecl 0x645b350 <line:129:17, col:25> __p 'pointer':'char *'
| | | | `-ParmVarDecl 0x645b600 <col:30, col:41> __val 'const char &'
| | | `-CXXMethodDecl 0x645b8e0 <line:132:7, line:133:43> destroy 'void (pointer)'
| | |   `-ParmVarDecl 0x645b7e0 <col:15, col:23> __p 'pointer':'char *'
| | |-ClassTemplateSpecializationDecl 0x645d430 <line:57:3, line:135:5> class new_allocator definition
| | | |-TemplateArgument type 'wchar_t'
| | | |-CXXRecordDecl 0x645d650 prev 0x645d430 <line:58:5, col:11> class new_allocator
| | | |-AccessSpecDecl 0x645d6e0 <line:60:5, col:11> public
| | | |-TypedefDecl 0x645d710 <line:61:7, col:26> size_type 'size_t':'unsigned long'
| | | |-TypedefDecl 0x645d760 <line:62:7, col:26> difference_type 'ptrdiff_t':'long'
| | | |-TypedefDecl 0x645d850 <line:63:7, col:26> pointer 'wchar_t *'
| | | |-TypedefDecl 0x645d910 <line:64:7, col:26> const_pointer 'const wchar_t *'
| | | |-TypedefDecl 0x645d9d0 <line:65:7, col:26> reference 'wchar_t &'
| | | |-TypedefDecl 0x645da90 <line:66:7, col:26> const_reference 'const wchar_t &'
| | | |-TypedefDecl 0x645daf0 <line:67:7, col:26> value_type 'wchar_t':'wchar_t'
| | | |-ClassTemplateDecl 0x645dc50 <line:69:7, line:70:16> rebind
| | | | |-TemplateTypeParmDecl 0x645db40 <line:69:16, col:25> typename _Tp1
| | | | `-CXXRecordDecl 0x645dbc0 <line:70:9, col:16> struct rebind
| | | |-CXXConstructorDecl 0x645e540 <line:79:7> new_allocator 'void (void) throw()'
| | | |-CXXConstructorDecl 0x645e770 <line:81:7> new_allocator 'void (const class __gnu_cxx::new_allocator<wchar_t> &) throw()'
| | | | `-ParmVarDecl 0x645e650 <col:21, col:40> 'const class __gnu_cxx::new_allocator<wchar_t> &'
| | | |-FunctionTemplateDecl 0x645eb80 <line:83:7, line:84:9> new_allocator
| | | | |-TemplateTypeParmDecl 0x645e850 <line:83:16, col:25> typename _Tp1
| | | | |-CXXConstructorDecl 0x645eac0 <line:84:9> new_allocator 'void (const new_allocator<_Tp1> &) throw()'
| | | | | `-ParmVarDecl 0x645e9e0 <col:23, col:48> 'const new_allocator<_Tp1> &'
| | | |-CXXDestructorDecl 0x645ec90 <line:86:7, col:8> ~new_allocator 'void (void) throw()'
| | | |-CXXMethodDecl 0x645eea0 <line:88:7, line:90:39> address 'pointer (reference) const'
| | | | `-ParmVarDecl 0x645eda0 <line:89:15, col:25> __x 'reference':'wchar_t &'
| | | |-CXXMethodDecl 0x645f0b0 <line:92:7, line:94:39> address 'const_pointer (const_reference) const'
| | | | `-ParmVarDecl 0x645efb0 <line:93:15, col:31> __x 'const_reference':'const wchar_t &'
| | | |-CXXMethodDecl 0x645f2e0 <line:98:7, line:105:7> allocate 'pointer (size_type, const void *)'
| | | | |-ParmVarDecl 0x645f170 <line:99:16, col:26> __n 'size_type':'unsigned long'
| | | | `-ParmVarDecl 0x645f1d0 <col:31, col:45> 'const void *'
| | | |-CXXMethodDecl 0x645f520 <line:108:7, line:110:33> deallocate 'void (pointer, size_type)'
| | | | |-ParmVarDecl 0x645f3b0 <line:109:18, col:26> __p 'pointer':'wchar_t *'
| | | | `-ParmVarDecl 0x645f410 <col:31> 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x645f5e0 <line:112:7, line:114:42> max_size 'size_type (void) const throw()'
| | | |-CXXMethodDecl 0x645f820 <line:128:7, line:130:40> construct 'void (pointer, const wchar_t &)'
| | | | |-ParmVarDecl 0x645f6a0 <line:129:17, col:25> __p 'pointer':'wchar_t *'
| | | | `-ParmVarDecl 0x645f710 <col:30, col:41> __val 'const wchar_t &'
| | | `-CXXMethodDecl 0x645f9f0 <line:132:7, line:133:43> destroy 'void (pointer)'
| | |   `-ParmVarDecl 0x645f8f0 <col:15, col:23> __p 'pointer':'wchar_t *'
| | `-ClassTemplateSpecializationDecl 0x65197a0 <line:57:3, line:135:5> class new_allocator definition
| |   |-TemplateArgument type 'long long'
| |   |-CXXRecordDecl 0x65199c0 prev 0x65197a0 <line:58:5, col:11> class new_allocator
| |   |-AccessSpecDecl 0x6519a50 <line:60:5, col:11> public
| |   |-TypedefDecl 0x6519a80 <line:61:7, col:26> size_type 'size_t':'unsigned long'
| |   |-TypedefDecl 0x6519ad0 <line:62:7, col:26> difference_type 'ptrdiff_t':'long'
| |   |-TypedefDecl 0x6519bc0 <line:63:7, col:26> pointer 'long long *'
| |   |-TypedefDecl 0x6519c80 <line:64:7, col:26> const_pointer 'const long long *'
| |   |-TypedefDecl 0x6519d10 <line:65:7, col:26> reference 'long long &'
| |   |-TypedefDecl 0x6519dd0 <line:66:7, col:26> const_reference 'const long long &'
| |   |-TypedefDecl 0x6519e30 <line:67:7, col:26> value_type 'long long':'long long'
| |   |-ClassTemplateDecl 0x6519f90 <line:69:7, line:70:16> rebind
| |   | |-TemplateTypeParmDecl 0x6519e80 <line:69:16, col:25> typename _Tp1
| |   | `-CXXRecordDecl 0x6519f00 <line:70:9, col:16> struct rebind
| |   |-CXXConstructorDecl 0x651a1f0 <line:79:7, col:47> new_allocator 'void (void) throw()'
| |   | `-CompoundStmt 0x644cd88 <col:45, col:47>
| |   |-CXXConstructorDecl 0x651a420 <line:81:7, col:67> new_allocator 'void (const class __gnu_cxx::new_allocator<long long> &) throw()'
| |   | |-ParmVarDecl 0x651a300 <col:21, col:40> 'const class __gnu_cxx::new_allocator<long long> &'
| |   | `-CompoundStmt 0x644cda0 <col:65, col:67>
| |   |-FunctionTemplateDecl 0x651a830 <line:83:7, line:84:9> new_allocator
| |   | |-TemplateTypeParmDecl 0x651a500 <line:83:16, col:25> typename _Tp1
| |   | |-CXXConstructorDecl 0x651a770 <line:84:9> new_allocator 'void (const new_allocator<_Tp1> &) throw()'
| |   | | `-ParmVarDecl 0x651a690 <col:23, col:48> 'const new_allocator<_Tp1> &'
| |   | `-CXXConstructorDecl 0x65306e0 <col:9> new_allocator 'void (const new_allocator<long long> &) throw()'
| |   |   |-TemplateArgument type 'long long'
| |   |   `-ParmVarDecl 0x6530620 <col:23, col:48> 'const new_allocator<long long> &'
| |   |-CXXDestructorDecl 0x651a940 <line:86:7, col:48> ~new_allocator 'void (void) throw()'
| |   | `-CompoundStmt 0x644cdd0 <col:46, col:48>
| |   |-CXXMethodDecl 0x651ab50 <line:88:7, line:90:39> address 'pointer (reference) const'
| |   | `-ParmVarDecl 0x651aa50 <line:89:15, col:25> __x 'reference':'long long &'
| |   |-CXXMethodDecl 0x651ad60 <line:92:7, line:94:39> address 'const_pointer (const_reference) const'
| |   | `-ParmVarDecl 0x651ac60 <line:93:15, col:31> __x 'const_reference':'const long long &'
| |   |-CXXMethodDecl 0x651af90 <line:98:7, line:105:7> allocate 'pointer (size_type, const void *)'
| |   | |-ParmVarDecl 0x651ae20 <line:99:16, col:26> __n 'size_type':'unsigned long'
| |   | |-ParmVarDecl 0x651ae80 <col:31, col:45> 'const void *'
| |   | `-CompoundStmt 0x65312f0 <line:100:7, line:105:7>
| |   |   |-IfStmt 0x6531180 <line:101:2, line:102:27>
| |   |   | |-<<<NULL>>>
| |   |   | |-BinaryOperator 0x6531118 <line:101:6, col:27> '_Bool' '>'
| |   |   | | |-ImplicitCastExpr 0x6531100 <col:6> 'size_type':'unsigned long' <LValueToRValue>
| |   |   | | | `-DeclRefExpr 0x6531028 <col:6> 'size_type':'unsigned long' lvalue ParmVar 0x651ae20 '__n' 'size_type':'unsigned long'
| |   |   | | `-CXXMemberCallExpr 0x6531098 <col:12, col:27> 'size_type':'unsigned long'
| |   |   | |   `-MemberExpr 0x6531068 <col:12, col:18> '<bound member function type>' ->max_size 0x651b290
| |   |   | |     `-ImplicitCastExpr 0x65310e8 <col:12> 'const class __gnu_cxx::new_allocator<long long> *' <NoOp>
| |   |   | |       `-CXXThisExpr 0x6531050 <col:12> 'class __gnu_cxx::new_allocator<long long> *' this
| |   |   | |-CallExpr 0x6531158 <line:102:4, col:27> 'void'
| |   |   | | `-ImplicitCastExpr 0x6531140 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
| |   |   | |   `-DeclRefExpr 0x644d190 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x6369840 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))'
| |   |   | `-<<<NULL>>>
| |   |   `-ReturnStmt 0x65312d0 <line:104:2, col:60>
| |   |     `-CXXStaticCastExpr 0x65312a0 <col:9, col:60> 'long long *' static_cast<long long *> <BitCast>
| |   |       `-CallExpr 0x6531270 <col:27, col:59> 'void *'
| |   |         |-ImplicitCastExpr 0x6531258 <col:27, col:29> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
| |   |         | `-DeclRefExpr 0x644d3a0 <col:27, col:29> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x64469a0 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'
| |   |         `-BinaryOperator 0x6531230 <col:42, col:58> 'unsigned long' '*'
| |   |           |-ImplicitCastExpr 0x6531218 <col:42> 'size_type':'unsigned long' <LValueToRValue>
| |   |           | `-DeclRefExpr 0x65311c0 <col:42> 'size_type':'unsigned long' lvalue ParmVar 0x651ae20 '__n' 'size_type':'unsigned long'
| |   |           `-UnaryExprOrTypeTraitExpr 0x65311f8 <col:48, col:58> 'unsigned long' sizeof 'long long':'long long'
| |   |-CXXMethodDecl 0x651b1d0 <line:108:7, line:110:33> deallocate 'void (pointer, size_type)'
| |   | |-ParmVarDecl 0x651b060 <line:109:18, col:26> __p 'pointer':'long long *'
| |   | |-ParmVarDecl 0x651b0c0 <col:31> 'size_type':'unsigned long'
| |   | `-CompoundStmt 0x6531a80 <line:110:7, col:33>
| |   |   `-CallExpr 0x6531a20 <col:9, col:30> 'void'
| |   |     |-ImplicitCastExpr 0x6531a08 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x6531970 <col:9, col:11> 'void (void *) throw()' lvalue Function 0x6446d70 'operator delete' 'void (void *) throw()'
| |   |     `-ImplicitCastExpr 0x6531a68 <col:27> 'void *' <BitCast>
| |   |       `-ImplicitCastExpr 0x6531a50 <col:27> 'pointer':'long long *' <LValueToRValue>
| |   |         `-DeclRefExpr 0x6531948 <col:27> 'pointer':'long long *' lvalue ParmVar 0x651b060 '__p' 'pointer':'long long *'
| |   |-CXXMethodDecl 0x651b290 <line:112:7, line:114:42> max_size 'size_type (void) const throw()'
| |   | `-CompoundStmt 0x65313d0 <col:7, col:42>
| |   |   `-ReturnStmt 0x65313b0 <col:9, col:39>
| |   |     `-BinaryOperator 0x6531388 <col:16, col:39> 'unsigned long' '/'
| |   |       |-CXXFunctionalCastExpr 0x6531330 <col:16, col:25> 'size_t':'unsigned long' functional cast to size_t <NoOp>
| |   |       | `-ImplicitCastExpr 0x6531318 <col:23, col:24> 'size_t':'unsigned long' <IntegralCast>
| |   |       |   `-UnaryOperator 0x644d648 <col:23, col:24> 'int' prefix '-'
| |   |       |     `-IntegerLiteral 0x644d628 <col:24> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x6531368 <col:29, col:39> 'unsigned long' sizeof 'long long':'long long'
| |   |-CXXMethodDecl 0x651b4d0 <line:128:7, line:130:40> construct 'void (pointer, const long long &)'
| |   | |-ParmVarDecl 0x651b350 <line:129:17, col:25> __p 'pointer':'long long *'
| |   | `-ParmVarDecl 0x651b3c0 <col:30, col:41> __val 'const long long &'
| |   `-CXXMethodDecl 0x651b6a0 <line:132:7, line:133:43> destroy 'void (pointer)'
| |     `-ParmVarDecl 0x651b5a0 <col:15, col:23> __p 'pointer':'long long *'
| |-FunctionTemplateDecl 0x644e7b0 <line:137:3, line:140:20> operator==
| | |-TemplateTypeParmDecl 0x644e270 <line:137:12, col:21> typename _Tp
| | |-FunctionDecl 0x644e710 <line:138:5, line:140:20> operator== '_Bool (const new_allocator<_Tp> &, const new_allocator<_Tp> &)' inline
| | | |-ParmVarDecl 0x644e460 <line:139:16, col:40> 'const new_allocator<_Tp> &'
| | | |-ParmVarDecl 0x644e600 <col:43, col:67> 'const new_allocator<_Tp> &'
| | | `-CompoundStmt 0x644e840 <line:140:5, col:20>
| | |   `-ReturnStmt 0x644e820 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x644e808 <col:14> '_Bool' true
| `-FunctionTemplateDecl 0x644ed30 <line:142:3, line:145:21> operator!=
|   |-TemplateTypeParmDecl 0x644e860 <line:142:12, col:21> typename _Tp
|   |-FunctionDecl 0x644ec90 <line:143:5, line:145:21> operator!= '_Bool (const new_allocator<_Tp> &, const new_allocator<_Tp> &)' inline
|   | |-ParmVarDecl 0x644ea20 <line:144:16, col:40> 'const new_allocator<_Tp> &'
|   | |-ParmVarDecl 0x644ebc0 <col:43, col:67> 'const new_allocator<_Tp> &'
|   | `-CompoundStmt 0x644edc0 <line:145:5, col:21>
|   |   `-ReturnStmt 0x644eda0 <col:7, col:14>
|   |     `-CXXBoolLiteralExpr 0x644ed88 <col:14> '_Bool' false
|-NamespaceDecl 0x644ee10 prev 0x6445420 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/memoryfwd.h:50:1, line:76:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x644ee70 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x644efc0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/memoryfwd.h:63:3, line:64:11> allocator
| | |-TemplateTypeParmDecl 0x644eeb0 <line:63:12> typename
| | |-CXXRecordDecl 0x644ef30 <line:64:5, col:11> class allocator
| | |-ClassTemplateSpecialization 0x64502b0 'allocator'
| | |-ClassTemplateSpecialization 0x63f42b0 'allocator'
| | |-ClassTemplateSpecialization 0x645d200 'allocator'
| | `-ClassTemplateSpecializationDecl 0x6518b60 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/allocator.h:91:3, line:124:5> class allocator definition
| |   |-public '__gnu_cxx::new_allocator<long long>':'class __gnu_cxx::new_allocator<long long>'
| |   |-TemplateArgument type 'long long'
| |   |-CXXRecordDecl 0x651b790 prev 0x6518b60 <line:92:5, col:11> class allocator
| |   |-AccessSpecDecl 0x651b820 <line:94:4, col:10> public
| |   |-TypedefDecl 0x651b850 <line:95:7, col:26> size_type 'size_t':'unsigned long'
| |   |-TypedefDecl 0x651b8a0 <line:96:7, col:26> difference_type 'ptrdiff_t':'long'
| |   |-TypedefDecl 0x651b930 <line:97:7, col:26> pointer 'long long *'
| |   |-TypedefDecl 0x651b9c0 <line:98:7, col:26> const_pointer 'const long long *'
| |   |-TypedefDecl 0x651ba50 <line:99:7, col:26> reference 'long long &'
| |   |-TypedefDecl 0x651bae0 <line:100:7, col:26> const_reference 'const long long &'
| |   |-TypedefDecl 0x651bb40 <line:101:7, col:26> value_type 'long long':'long long'
| |   |-ClassTemplateDecl 0x651bca0 <line:103:7, line:104:16> rebind
| |   | |-TemplateTypeParmDecl 0x651bb90 <line:103:16, col:25> typename _Tp1
| |   | |-CXXRecordDecl 0x651bc10 <line:104:9, col:16> struct rebind
| |   | `-ClassTemplateSpecializationDecl 0x651e670 <line:103:7, line:104:16> struct rebind definition
| |   |   |-TemplateArgument type 'long long'
| |   |   |-CXXRecordDecl 0x651e880 prev 0x651e670 <col:9, col:16> struct rebind
| |   |   `-TypedefDecl 0x651e9d0 <line:105:11, col:35> other 'allocator<long long>':'class std::allocator<long long>'
| |   |-CXXConstructorDecl 0x651bf30 <line:113:7, col:29> allocator 'void (void) throw()'
| |   | |-CXXCtorInitializer '__gnu_cxx::new_allocator<long long>':'class __gnu_cxx::new_allocator<long long>'
| |   | | |-CXXConstructExpr 0x652f890 <col:7> '__gnu_cxx::new_allocator<long long>':'class __gnu_cxx::new_allocator<long long>' 'void (void) throw()'
| |   | `-CompoundStmt 0x63f2408 <col:27, col:29>
| |   |-CXXConstructorDecl 0x651c160 <line:115:7, line:116:38> allocator 'void (const class std::allocator<long long> &) throw()'
| |   | |-ParmVarDecl 0x651c040 <line:115:17, col:34> __a 'const class std::allocator<long long> &'
| |   | |-CXXCtorInitializer '__gnu_cxx::new_allocator<long long>':'class __gnu_cxx::new_allocator<long long>'
| |   | | |-CXXConstructExpr 0x6530818 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:52:28, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/allocator.h:116:34> '__gnu_cxx::new_allocator<long long>':'class __gnu_cxx::new_allocator<long long>' 'void (const class __gnu_cxx::new_allocator<long long> &) throw()'
| |   | | | `-ImplicitCastExpr 0x65307f8 <col:31> 'const class __gnu_cxx::new_allocator<long long>' lvalue <DerivedToBase (new_allocator)>
| |   | | |   `-DeclRefExpr 0x65303c8 <col:31> 'const class std::allocator<long long>' lvalue ParmVar 0x651c040 '__a' 'const class std::allocator<long long> &'
| |   | `-CompoundStmt 0x63f25d0 <col:36, col:38>
| |   |-FunctionTemplateDecl 0x651c570 <line:118:7, line:119:9> allocator
| |   | |-TemplateTypeParmDecl 0x651c240 <line:118:16, col:25> typename _Tp1
| |   | |-CXXConstructorDecl 0x651c4b0 <line:119:9> allocator 'void (const allocator<_Tp1> &) throw()'
| |   | | `-ParmVarDecl 0x651c3d0 <col:19, col:40> 'const allocator<_Tp1> &'
| |   | `-CXXConstructorDecl 0x652a9d0 <col:9> allocator 'void (const allocator<long long> &) throw()'
| |   |   |-TemplateArgument type 'long long'
| |   |   `-ParmVarDecl 0x652a910 <col:19, col:40> 'const allocator<long long> &'
| |   `-CXXDestructorDecl 0x651c680 <line:121:7, col:30> ~allocator 'void (void) throw()'
| |     `-CompoundStmt 0x63f2600 <col:28, col:30>
| |-ClassTemplateSpecializationDecl 0x644fc30 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/memoryfwd.h:66:3, line:67:25> class allocator
| | |-TemplateArgument type 'void'
| `-ClassTemplateDecl 0x644ff80 <line:70:3, line:71:12> uses_allocator
|   |-TemplateTypeParmDecl 0x644fdf0 <line:70:12> typename
|   |-TemplateTypeParmDecl 0x644fe60 <col:22> typename
|   `-CXXRecordDecl 0x644fef0 <line:71:5, col:12> struct uses_allocator
|-NamespaceDecl 0x64501f0 prev 0x644ee10 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/allocator.h:52:1, line:219:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x6450250 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateSpecializationDecl 0x64502b0 parent 0x644ee10 prev 0x644fc30 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/allocator.h:62:3, line:81:5> class allocator definition
| | |-TemplateArgument type 'void'
| | |-CXXRecordDecl 0x64504c0 <line:63:5, col:11> class allocator
| | |-AccessSpecDecl 0x6450550 <line:65:5, col:11> public
| | |-TypedefDecl 0x6450590 <line:66:7, col:27> size_type 'size_t':'unsigned long'
| | |-TypedefDecl 0x64505f0 <line:67:7, col:27> difference_type 'ptrdiff_t':'long'
| | |-TypedefDecl 0x6450650 <line:68:7, col:27> pointer 'void *'
| | |-TypedefDecl 0x64506b0 <line:69:7, col:27> const_pointer 'const void *'
| | |-TypedefDecl 0x6450710 <line:70:7, col:27> value_type 'void'
| | `-ClassTemplateDecl 0x6450870 <line:72:7, line:74:42> rebind
| |   |-TemplateTypeParmDecl 0x6450760 <line:72:16, col:25> typename _Tp1
| |   `-CXXRecordDecl 0x64507e0 <line:73:9, line:74:42> struct rebind definition
| |     |-CXXRecordDecl 0x6450af0 <line:73:9, col:16> struct rebind
| |     `-TypedefDecl 0x64510d0 <line:74:11, col:35> other 'allocator<_Tp1>'
| |-ClassTemplateDecl 0x6451230 prev 0x644efc0 <line:91:3, line:124:5> allocator
| | |-TemplateTypeParmDecl 0x6451120 <line:91:12, col:21> typename _Tp
| | |-CXXRecordDecl 0x64511a0 prev 0x644ef30 <line:92:5, line:124:5> class allocator definition
| | | |-public '__gnu_cxx::new_allocator<_Tp>':'new_allocator<_Tp>'
| | | |-CXXRecordDecl 0x6451470 <line:92:5, col:11> class allocator
| | | |-AccessSpecDecl 0x6451500 <line:94:4, col:10> public
| | | |-TypedefDecl 0x6451540 <line:95:7, col:26> size_type 'size_t':'unsigned long'
| | | |-TypedefDecl 0x64515a0 <line:96:7, col:26> difference_type 'ptrdiff_t':'long'
| | | |-TypedefDecl 0x6451630 <line:97:7, col:26> pointer '_Tp *'
| | | |-TypedefDecl 0x64516c0 <line:98:7, col:26> const_pointer 'const _Tp *'
| | | |-TypedefDecl 0x6451750 <line:99:7, col:26> reference '_Tp &'
| | | |-TypedefDecl 0x64517e0 <line:100:7, col:26> const_reference 'const _Tp &'
| | | |-TypedefDecl 0x6451840 <line:101:7, col:26> value_type '_Tp'
| | | |-ClassTemplateDecl 0x64519a0 <line:103:7, line:105:42> rebind
| | | | |-TemplateTypeParmDecl 0x6451890 <line:103:16, col:25> typename _Tp1
| | | | `-CXXRecordDecl 0x6451910 <line:104:9, line:105:42> struct rebind definition
| | | |   |-CXXRecordDecl 0x6451c20 <line:104:9, col:16> struct rebind
| | | |   `-TypedefDecl 0x6451e10 <line:105:11, col:35> other 'allocator<_Tp1>'
| | | |-CXXConstructorDecl 0x6451ea0 <line:113:7, col:29> allocator<type-parameter-0-0> 'void (void) throw()'
| | | | `-CompoundStmt 0x63f2408 <col:27, col:29>
| | | |-CXXConstructorDecl 0x63f1e20 <line:115:7, line:116:38> allocator<type-parameter-0-0> 'void (const allocator<type-parameter-0-0> &) throw()'
| | | | |-ParmVarDecl 0x63f1d20 <line:115:17, col:34> __a 'const allocator<type-parameter-0-0> &'
| | | | |-CXXCtorInitializer '__gnu_cxx::new_allocator<_Tp>':'new_allocator<_Tp>'
| | | | | |-ParenListExpr 0x63f2570 <line:116:30, col:34> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x63f2548 <col:31> 'const allocator<type-parameter-0-0>' lvalue ParmVar 0x63f1d20 '__a' 'const allocator<type-parameter-0-0> &'
| | | | `-CompoundStmt 0x63f25d0 <col:36, col:38>
| | | |-FunctionTemplateDecl 0x63f2290 <line:118:7, line:119:53> allocator<type-parameter-0-0>
| | | | |-TemplateTypeParmDecl 0x63f1ee0 <line:118:16, col:25> typename _Tp1
| | | | |-CXXConstructorDecl 0x63f21d0 <line:119:9, col:53> allocator<type-parameter-0-0> 'void (const allocator<_Tp1> &) throw()'
| | | | | |-ParmVarDecl 0x63f20d0 <col:19, col:40> 'const allocator<_Tp1> &'
| | | | | `-CompoundStmt 0x63f25e8 <col:51, col:53>
| | | `-CXXDestructorDecl 0x63f2330 <line:121:7, col:30> ~allocator<type-parameter-0-0> 'void (void) throw()'
| | |   `-CompoundStmt 0x63f2600 <col:28, col:30>
| | |-ClassTemplateSpecialization 0x64502b0 'allocator'
| | |-ClassTemplateSpecialization 0x63f42b0 'allocator'
| | |-ClassTemplateSpecialization 0x645d200 'allocator'
| | `-ClassTemplateSpecialization 0x6518b60 'allocator'
| |-FunctionTemplateDecl 0x63f2c60 <line:126:3, line:129:20> operator==
| | |-TemplateTypeParmDecl 0x63f2620 <line:126:12, col:21> typename _T1
| | |-TemplateTypeParmDecl 0x63f2690 <col:26, col:35> typename _T2
| | |-FunctionDecl 0x63f2bc0 <line:127:5, line:129:20> operator== '_Bool (const allocator<_T1> &, const allocator<_T2> &)' inline
| | | |-ParmVarDecl 0x63f2890 <line:128:16, col:36> 'const allocator<_T1> &'
| | | |-ParmVarDecl 0x63f2ab0 <col:39, col:59> 'const allocator<_T2> &'
| | | `-CompoundStmt 0x63f2cf0 <line:129:5, col:20>
| | |   `-ReturnStmt 0x63f2cd0 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x63f2cb8 <col:14> '_Bool' true
| |-FunctionTemplateDecl 0x63f3650 <line:131:3, line:134:20> operator==
| | |-TemplateTypeParmDecl 0x63f3140 <line:131:12, col:21> typename _Tp
| | |-FunctionDecl 0x63f35b0 <line:132:5, line:134:20> operator== '_Bool (const allocator<_Tp> &, const allocator<_Tp> &)' inline
| | | |-ParmVarDecl 0x63f3300 <line:133:16, col:36> 'const allocator<_Tp> &'
| | | |-ParmVarDecl 0x63f34a0 <col:39, col:59> 'const allocator<_Tp> &'
| | | `-CompoundStmt 0x63f36e0 <line:134:5, col:20>
| | |   `-ReturnStmt 0x63f36c0 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x63f36a8 <col:14> '_Bool' true
| |-FunctionTemplateDecl 0x63f3c50 <line:136:3, line:139:21> operator!=
| | |-TemplateTypeParmDecl 0x63f3700 <line:136:12, col:21> typename _T1
| | |-TemplateTypeParmDecl 0x63f3770 <col:26, col:35> typename _T2
| | |-FunctionDecl 0x63f3bb0 <line:137:5, line:139:21> operator!= '_Bool (const allocator<_T1> &, const allocator<_T2> &)' inline
| | | |-ParmVarDecl 0x63f3940 <line:138:16, col:36> 'const allocator<_T1> &'
| | | |-ParmVarDecl 0x63f3ae0 <col:39, col:59> 'const allocator<_T2> &'
| | | `-CompoundStmt 0x63f3ce0 <line:139:5, col:21>
| | |   `-ReturnStmt 0x63f3cc0 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x63f3ca8 <col:14> '_Bool' false
| |-FunctionTemplateDecl 0x63f41f0 <line:141:3, line:144:21> operator!=
| | |-TemplateTypeParmDecl 0x63f3d00 <line:141:12, col:21> typename _Tp
| | |-FunctionDecl 0x63f4150 <line:142:5, line:144:21> operator!= '_Bool (const allocator<_Tp> &, const allocator<_Tp> &)' inline
| | | |-ParmVarDecl 0x63f3ec0 <line:143:16, col:36> 'const allocator<_Tp> &'
| | | |-ParmVarDecl 0x63f4060 <col:39, col:59> 'const allocator<_Tp> &'
| | | `-CompoundStmt 0x63f4280 <line:144:5, col:21>
| | |   `-ReturnStmt 0x63f4260 <col:7, col:14>
| | |     `-CXXBoolLiteralExpr 0x63f4248 <col:14> '_Bool' false
| |-ClassTemplateSpecializationDecl 0x63f42b0 <line:151:3, col:39> class allocator definition
| | |-public '__gnu_cxx::new_allocator<char>':'class __gnu_cxx::new_allocator<char>'
| | |-TemplateArgument type 'char'
| | |-CXXRecordDecl 0x645b9d0 prev 0x63f42b0 <line:92:5, col:11> class allocator
| | |-AccessSpecDecl 0x645ba60 <line:94:4, col:10> public
| | |-TypedefDecl 0x645ba90 <line:95:7, col:26> size_type 'size_t':'unsigned long'
| | |-TypedefDecl 0x645bae0 <line:96:7, col:26> difference_type 'ptrdiff_t':'long'
| | |-TypedefDecl 0x645bb70 <line:97:7, col:26> pointer 'char *'
| | |-TypedefDecl 0x645bc00 <line:98:7, col:26> const_pointer 'const char *'
| | |-TypedefDecl 0x645bc90 <line:99:7, col:26> reference 'char &'
| | |-TypedefDecl 0x645bd20 <line:100:7, col:26> const_reference 'const char &'
| | |-TypedefDecl 0x645bd80 <line:101:7, col:26> value_type 'char':'char'
| | |-ClassTemplateDecl 0x645bee0 <line:103:7, line:104:16> rebind
| | | |-TemplateTypeParmDecl 0x645bdd0 <line:103:16, col:25> typename _Tp1
| | | `-CXXRecordDecl 0x645be50 <line:104:9, col:16> struct rebind
| | |-CXXConstructorDecl 0x645c140 <line:113:7> allocator 'void (void) throw()'
| | |-CXXConstructorDecl 0x645c370 <line:115:7> allocator 'void (const class std::allocator<char> &) throw()'
| | | `-ParmVarDecl 0x645c250 <col:17, col:34> __a 'const class std::allocator<char> &'
| | |-FunctionTemplateDecl 0x645d020 <line:118:7, line:119:9> allocator
| | | |-TemplateTypeParmDecl 0x645c450 <line:118:16, col:25> typename _Tp1
| | | |-CXXConstructorDecl 0x645cf60 <line:119:9> allocator 'void (const allocator<_Tp1> &) throw()'
| | | | `-ParmVarDecl 0x645ce40 <col:19, col:40> 'const allocator<_Tp1> &'
| | `-CXXDestructorDecl 0x645d130 <line:121:7, col:8> ~allocator 'void (void) throw()'
| |-ClassTemplateSpecializationDecl 0x645d200 <line:152:3, col:42> class allocator definition
| | |-public '__gnu_cxx::new_allocator<wchar_t>':'class __gnu_cxx::new_allocator<wchar_t>'
| | |-TemplateArgument type 'wchar_t'
| | |-CXXRecordDecl 0x645fae0 prev 0x645d200 <line:92:5, col:11> class allocator
| | |-AccessSpecDecl 0x645fb70 <line:94:4, col:10> public
| | |-TypedefDecl 0x645fba0 <line:95:7, col:26> size_type 'size_t':'unsigned long'
| | |-TypedefDecl 0x645fbf0 <line:96:7, col:26> difference_type 'ptrdiff_t':'long'
| | |-TypedefDecl 0x645fc80 <line:97:7, col:26> pointer 'wchar_t *'
| | |-TypedefDecl 0x645fd10 <line:98:7, col:26> const_pointer 'const wchar_t *'
| | |-TypedefDecl 0x645fda0 <line:99:7, col:26> reference 'wchar_t &'
| | |-TypedefDecl 0x645fe30 <line:100:7, col:26> const_reference 'const wchar_t &'
| | |-TypedefDecl 0x645fe90 <line:101:7, col:26> value_type 'wchar_t':'wchar_t'
| | |-ClassTemplateDecl 0x645fff0 <line:103:7, line:104:16> rebind
| | | |-TemplateTypeParmDecl 0x645fee0 <line:103:16, col:25> typename _Tp1
| | | `-CXXRecordDecl 0x645ff60 <line:104:9, col:16> struct rebind
| | |-CXXConstructorDecl 0x6460250 <line:113:7> allocator 'void (void) throw()'
| | |-CXXConstructorDecl 0x64612f0 <line:115:7> allocator 'void (const class std::allocator<wchar_t> &) throw()'
| | | `-ParmVarDecl 0x6460360 <col:17, col:34> __a 'const class std::allocator<wchar_t> &'
| | |-FunctionTemplateDecl 0x6461700 <line:118:7, line:119:9> allocator
| | | |-TemplateTypeParmDecl 0x64613d0 <line:118:16, col:25> typename _Tp1
| | | |-CXXConstructorDecl 0x6461640 <line:119:9> allocator 'void (const allocator<_Tp1> &) throw()'
| | | | `-ParmVarDecl 0x6461560 <col:19, col:40> 'const allocator<_Tp1> &'
| | `-CXXDestructorDecl 0x6461810 <line:121:7, col:8> ~allocator 'void (void) throw()'
| |-ClassTemplateDecl 0x6461a90 <line:159:3, line:161:50> __alloc_swap
| | |-TemplateTypeParmDecl 0x64618d0 <line:159:12, col:21> typename _Alloc
| | |-NonTypeTemplateParmDecl 0x6461980 <col:29, col:53> '_Bool'
| | | |-TypeTraitExpr 0x6461948 <col:36, col:53> '_Bool'
| | `-CXXRecordDecl 0x6461a00 <line:160:5, line:161:50> struct __alloc_swap definition
| |   |-CXXRecordDecl 0x6461d50 <line:160:5, col:12> struct __alloc_swap
| |   `-CXXMethodDecl 0x6461f60 <line:161:7, col:48> _S_do_it 'void (_Alloc &, _Alloc &)' static
| |     |-ParmVarDecl 0x6461e20 <col:28, col:34> '_Alloc &'
| |     |-ParmVarDecl 0x6461e90 <col:37, col:43> '_Alloc &'
| |     `-CompoundStmt 0x6462038 <col:46, col:48>
| |-ClassTemplatePartialSpecializationDecl 0x6462230 <line:163:3, line:173:5> struct __alloc_swap definition
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument integral 0
| | |-TemplateTypeParmDecl 0x6462050 <line:163:12, col:21> typename _Alloc
| | |-CXXRecordDecl 0x6462490 <line:164:5, col:12> struct __alloc_swap
| | `-CXXMethodDecl 0x64626a0 <line:166:7, line:172:7> _S_do_it 'void (_Alloc &, _Alloc &)' static
| |   |-ParmVarDecl 0x6462560 <line:167:16, col:24> __one '_Alloc &'
| |   |-ParmVarDecl 0x64625d0 <col:31, col:39> __two '_Alloc &'
| |   `-CompoundStmt 0x64629a0 <line:168:7, line:172:7>
| |     `-IfStmt 0x6462970 <line:170:2, line:171:21>
| |       |-<<<NULL>>>
| |       |-CXXOperatorCallExpr 0x6462840 <line:170:6, col:15> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x64627c8 <col:12> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63f41f0 0x63f3c50 0x63c9220 0x63e71b0 0x63eb0c0
| |       | |-DeclRefExpr 0x6462778 <col:6> '_Alloc' lvalue ParmVar 0x6462560 '__one' '_Alloc &'
| |       | `-DeclRefExpr 0x64627a0 <col:15> '_Alloc' lvalue ParmVar 0x64625d0 '__two' '_Alloc &'
| |       |-CallExpr 0x6462938 <line:171:4, col:21> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x6462888 <col:4> '<overloaded function type>' lvalue (ADL) = 'swap' 0x63bc770 0x634ceb0
| |       | |-DeclRefExpr 0x64628e8 <col:9> '_Alloc' lvalue ParmVar 0x6462560 '__one' '_Alloc &'
| |       | `-DeclRefExpr 0x6462910 <col:16> '_Alloc' lvalue ParmVar 0x64625d0 '__two' '_Alloc &'
| |       `-<<<NULL>>>
| |-ClassTemplateDecl 0x6462b80 <line:176:3, line:182:5> __alloc_neq
| | |-TemplateTypeParmDecl 0x64629c0 <line:176:12, col:21> typename _Alloc
| | |-NonTypeTemplateParmDecl 0x6462a70 <col:29, col:53> '_Bool'
| | | |-TypeTraitExpr 0x6462a38 <col:36, col:53> '_Bool'
| | `-CXXRecordDecl 0x6462af0 <line:177:5, line:182:5> struct __alloc_neq definition
| |   |-CXXRecordDecl 0x6462e40 <line:177:5, col:12> struct __alloc_neq
| |   `-CXXMethodDecl 0x6463090 <line:179:7, line:181:23> _S_do_it '_Bool (const _Alloc &, const _Alloc &)' static
| |     |-ParmVarDecl 0x6462f10 <line:180:16, col:28> 'const _Alloc &'
| |     |-ParmVarDecl 0x6462f80 <col:31, col:43> 'const _Alloc &'
| |     `-CompoundStmt 0x64631a0 <line:181:7, col:23>
| |       `-ReturnStmt 0x6463180 <col:9, col:16>
| |         `-CXXBoolLiteralExpr 0x6463168 <col:16> '_Bool' false
| `-ClassTemplatePartialSpecializationDecl 0x6464e20 <line:184:3, line:190:5> struct __alloc_neq definition
|   |-TemplateArgument type 'type-parameter-0-0'
|   |-TemplateArgument integral 0
|   |-TemplateTypeParmDecl 0x64631c0 <line:184:12, col:21> typename _Alloc
|   |-CXXRecordDecl 0x6465080 <line:185:5, col:12> struct __alloc_neq
|   `-CXXMethodDecl 0x6465290 <line:187:7, line:189:32> _S_do_it '_Bool (const _Alloc &, const _Alloc &)' static
|     |-ParmVarDecl 0x6465150 <line:188:16, col:30> __one 'const _Alloc &'
|     |-ParmVarDecl 0x64651c0 <col:37, col:51> __two 'const _Alloc &'
|     `-CompoundStmt 0x6465498 <line:189:7, col:32>
|       `-ReturnStmt 0x6465478 <col:9, col:25>
|         `-CXXOperatorCallExpr 0x6465430 <col:16, col:25> '<dependent type>'
|           |-UnresolvedLookupExpr 0x64653b8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63f41f0 0x63f3c50 0x63c9220 0x63e71b0 0x63eb0c0
|           |-DeclRefExpr 0x6465368 <col:16> 'const _Alloc' lvalue ParmVar 0x6465150 '__one' 'const _Alloc &'
|           `-DeclRefExpr 0x6465390 <col:25> 'const _Alloc' lvalue ParmVar 0x64651c0 '__two' 'const _Alloc &'
|-NamespaceDecl 0x64654f0 prev 0x6448600 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/alloc_traits.h:41:1, line:240:1> __gnu_cxx
| |-original Namespace 0x636b110 '__gnu_cxx'
| |-VisibilityAttr 0x6465550 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| `-ClassTemplateDecl 0x64656a0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/ext/alloc_traits.h:120:1, line:237:3> __alloc_traits
|   |-TemplateTypeParmDecl 0x6465590 <line:120:10, col:19> typename _Alloc
|   |-CXXRecordDecl 0x6465610 <line:121:3, line:237:3> struct __alloc_traits definition
|   | |-CXXRecordDecl 0x6465920 <line:121:3, col:10> struct __alloc_traits
|   | |-TypedefDecl 0x64659c0 <line:126:5, col:20> allocator_type '_Alloc'
|   | |-TypedefDecl 0x6465ab0 <line:199:5, col:53> pointer 'typename _Alloc::pointer'
|   | |-TypedefDecl 0x6465bb0 <line:200:5, col:53> const_pointer 'typename _Alloc::const_pointer'
|   | |-TypedefDecl 0x6465c80 <line:201:5, col:53> value_type 'typename _Alloc::value_type'
|   | |-TypedefDecl 0x6465d50 <line:202:5, col:53> reference 'typename _Alloc::reference'
|   | |-TypedefDecl 0x6465e20 <line:203:5, col:53> const_reference 'typename _Alloc::const_reference'
|   | |-TypedefDecl 0x6465f20 <line:204:5, col:53> size_type 'typename _Alloc::size_type'
|   | |-TypedefDecl 0x6465ff0 <line:205:5, col:53> difference_type 'typename _Alloc::difference_type'
|   | |-CXXMethodDecl 0x6466240 <line:207:5, line:209:33> allocate 'pointer (_Alloc &, size_type)' static
|   | | |-ParmVarDecl 0x64660a0 <line:208:14, col:22> __a '_Alloc &'
|   | | |-ParmVarDecl 0x6466130 <col:27, col:37> __n 'size_type':'typename _Alloc::size_type'
|   | | `-CompoundStmt 0x646c670 <line:209:5, col:33>
|   | |   `-ReturnStmt 0x646c650 <col:7, col:30>
|   | |     `-CallExpr 0x646c620 <col:14, col:30> '<dependent type>'
|   | |       |-CXXDependentScopeMemberExpr 0x646c5a0 <col:14, col:18> '<dependent type>' lvalue
|   | |       | `-DeclRefExpr 0x646c578 <col:14> '_Alloc' lvalue ParmVar 0x64660a0 '__a' '_Alloc &'
|   | |       `-DeclRefExpr 0x646c5f8 <col:27> 'size_type':'typename _Alloc::size_type' lvalue ParmVar 0x6466130 '__n' 'size_type':'typename _Alloc::size_type'
|   | |-CXXMethodDecl 0x6466510 <line:211:5, line:212:33> deallocate 'void (_Alloc &, pointer, size_type)' static
|   | | |-ParmVarDecl 0x6466300 <line:211:28, col:36> __a '_Alloc &'
|   | | |-ParmVarDecl 0x6466370 <col:41, col:49> __p 'pointer':'typename _Alloc::pointer'
|   | | |-ParmVarDecl 0x64663e0 <col:54, col:64> __n 'size_type':'typename _Alloc::size_type'
|   | | `-CompoundStmt 0x646c798 <line:212:5, col:33>
|   | |   `-CallExpr 0x646c760 <col:7, col:30> '<dependent type>'
|   | |     |-CXXDependentScopeMemberExpr 0x646c6b8 <col:7, col:11> '<dependent type>' lvalue
|   | |     | `-DeclRefExpr 0x646c690 <col:7> '_Alloc' lvalue ParmVar 0x6466300 '__a' '_Alloc &'
|   | |     |-DeclRefExpr 0x646c710 <col:22> 'pointer':'typename _Alloc::pointer' lvalue ParmVar 0x6466370 '__p' 'pointer':'typename _Alloc::pointer'
|   | |     `-DeclRefExpr 0x646c738 <col:27> 'size_type':'typename _Alloc::size_type' lvalue ParmVar 0x64663e0 '__n' 'size_type':'typename _Alloc::size_type'
|   | |-FunctionTemplateDecl 0x6466970 <line:214:5, line:216:36> construct
|   | | |-TemplateTypeParmDecl 0x64665d0 <line:214:14, col:23> typename _Tp
|   | | |-CXXMethodDecl 0x64668d0 <line:215:7, line:216:36> construct 'void (_Alloc &, pointer, const _Tp &)' static
|   | | | |-ParmVarDecl 0x6466660 <line:215:29, col:37> __a '_Alloc &'
|   | | | |-ParmVarDecl 0x64666d0 <col:42, col:50> __p 'pointer':'typename _Alloc::pointer'
|   | | | |-ParmVarDecl 0x64667a0 <col:55, col:66> __arg 'const _Tp &'
|   | | | `-CompoundStmt 0x646c8c0 <line:216:7, col:36>
|   | | |   `-CallExpr 0x646c888 <col:9, col:33> '<dependent type>'
|   | | |     |-CXXDependentScopeMemberExpr 0x646c7e0 <col:9, col:13> '<dependent type>' lvalue
|   | | |     | `-DeclRefExpr 0x646c7b8 <col:9> '_Alloc' lvalue ParmVar 0x6466660 '__a' '_Alloc &'
|   | | |     |-DeclRefExpr 0x646c838 <col:23> 'pointer':'typename _Alloc::pointer' lvalue ParmVar 0x64666d0 '__p' 'pointer':'typename _Alloc::pointer'
|   | | |     `-DeclRefExpr 0x646c860 <col:28> 'const _Tp' lvalue ParmVar 0x64667a0 '__arg' 'const _Tp &'
|   | |-CXXMethodDecl 0x6466b60 <line:218:5, line:219:25> destroy 'void (_Alloc &, pointer)' static
|   | | |-ParmVarDecl 0x64669e0 <line:218:25, col:33> __a '_Alloc &'
|   | | |-ParmVarDecl 0x6466a50 <col:38, col:46> __p 'pointer':'typename _Alloc::pointer'
|   | | `-CompoundStmt 0x646c9b8 <line:219:5, col:25>
|   | |   `-CallExpr 0x646c988 <col:7, col:22> '<dependent type>'
|   | |     |-CXXDependentScopeMemberExpr 0x646c908 <col:7, col:11> '<dependent type>' lvalue
|   | |     | `-DeclRefExpr 0x646c8e0 <col:7> '_Alloc' lvalue ParmVar 0x64669e0 '__a' '_Alloc &'
|   | |     `-DeclRefExpr 0x646c960 <col:19> 'pointer':'typename _Alloc::pointer' lvalue ParmVar 0x6466a50 '__p' 'pointer':'typename _Alloc::pointer'
|   | |-CXXMethodDecl 0x646ba50 <line:221:5, line:222:30> max_size 'size_type (const _Alloc &)' static
|   | | |-ParmVarDecl 0x6466c50 <line:221:31, col:45> __a 'const _Alloc &'
|   | | `-CompoundStmt 0x646caa0 <line:222:5, col:30>
|   | |   `-ReturnStmt 0x646ca80 <col:7, col:27>
|   | |     `-CallExpr 0x646ca58 <col:14, col:27> '<dependent type>'
|   | |       `-CXXDependentScopeMemberExpr 0x646ca00 <col:14, col:18> '<dependent type>' lvalue
|   | |         `-DeclRefExpr 0x646c9d8 <col:14> 'const _Alloc' lvalue ParmVar 0x6466c50 '__a' 'const _Alloc &'
|   | |-CXXMethodDecl 0x646bc10 <line:224:5, col:77> _S_select_on_copy 'const _Alloc &(const _Alloc &)' static
|   | | |-ParmVarDecl 0x646bb10 <col:44, col:58> __a 'const _Alloc &'
|   | | `-CompoundStmt 0x646cb08 <col:63, col:77>
|   | |   `-ReturnStmt 0x646cae8 <col:65, col:72>
|   | |     `-DeclRefExpr 0x646cac0 <col:72> 'const _Alloc' lvalue ParmVar 0x646bb10 '__a' 'const _Alloc &'
|   | |-CXXMethodDecl 0x646be10 <line:226:5, line:231:5> _S_on_swap 'void (_Alloc &, _Alloc &)' static
|   | | |-ParmVarDecl 0x646bcd0 <line:226:28, col:36> __a '_Alloc &'
|   | | |-ParmVarDecl 0x646bd40 <col:41, col:49> __b '_Alloc &'
|   | | `-CompoundStmt 0x646ce40 <line:227:5, line:231:5>
|   | |   `-CallExpr 0x646ce08 <line:230:7, col:51> '<dependent type>'
|   | |     |-DependentScopeDeclRefExpr 0x646cd78 <col:7, col:34> '<dependent type>' lvalue
|   | |     |-DeclRefExpr 0x646cdb8 <col:43> '_Alloc' lvalue ParmVar 0x646bcd0 '__a' '_Alloc &'
|   | |     `-DeclRefExpr 0x646cde0 <col:48> '_Alloc' lvalue ParmVar 0x646bd40 '__b' '_Alloc &'
|   | `-ClassTemplateDecl 0x646bfd0 <line:233:5, line:235:69> rebind
|   |   |-TemplateTypeParmDecl 0x646bec0 <line:233:14, col:23> typename _Tp
|   |   `-CXXRecordDecl 0x646bf40 <line:234:7, line:235:69> struct rebind definition
|   |     |-CXXRecordDecl 0x646c250 <line:234:7, col:14> struct rebind
|   |     `-TypedefDecl 0x646c500 <line:235:9, col:62> other 'typename _Alloc::template _Alloc::rebind<_Tp>::other'
|   `-ClassTemplateSpecializationDecl 0x65193c0 <line:120:1, line:237:3> struct __alloc_traits definition
|     |-TemplateArgument type 'class std::allocator<long long>'
|     |-CXXRecordDecl 0x65195b0 prev 0x65193c0 <line:121:3, col:10> struct __alloc_traits
|     |-TypedefDecl 0x6519680 <line:126:5, col:20> allocator_type 'class std::allocator<long long>':'class std::allocator<long long>'
|     |-TypedefDecl 0x651c7b0 <line:199:5, col:53> pointer 'typename class allocator<long long>::pointer':'long long *'
|     |-TypedefDecl 0x651c890 <line:200:5, col:53> const_pointer 'typename class allocator<long long>::const_pointer':'const long long *'
|     |-TypedefDecl 0x651c970 <line:201:5, col:53> value_type 'typename class allocator<long long>::value_type':'long long'
|     |-TypedefDecl 0x651ca50 <line:202:5, col:53> reference 'typename class allocator<long long>::reference':'long long &'
|     |-TypedefDecl 0x651cb30 <line:203:5, col:53> const_reference 'typename class allocator<long long>::const_reference':'const long long &'
|     |-TypedefDecl 0x651cc10 <line:204:5, col:53> size_type 'typename class allocator<long long>::size_type':'unsigned long'
|     |-TypedefDecl 0x651ccf0 <line:205:5, col:53> difference_type 'typename class allocator<long long>::difference_type':'long'
|     |-CXXMethodDecl 0x651cf70 <line:207:5, line:209:33> allocate 'pointer (class std::allocator<long long> &, size_type)' static
|     | |-ParmVarDecl 0x651cdd0 <line:208:14, col:22> __a 'class std::allocator<long long> &'
|     | `-ParmVarDecl 0x651ce60 <col:27, col:37> __n 'size_type':'unsigned long'
|     |-CXXMethodDecl 0x651d250 <line:211:5, line:212:33> deallocate 'void (class std::allocator<long long> &, pointer, size_type)' static
|     | |-ParmVarDecl 0x651d040 <line:211:28, col:36> __a 'class std::allocator<long long> &'
|     | |-ParmVarDecl 0x651d0b0 <col:41, col:49> __p 'pointer':'long long *'
|     | `-ParmVarDecl 0x651d120 <col:54, col:64> __n 'size_type':'unsigned long'
|     |-FunctionTemplateDecl 0x651d690 <line:214:5, line:216:36> construct
|     | |-TemplateTypeParmDecl 0x651d320 <line:214:14, col:23> typename _Tp
|     | |-CXXMethodDecl 0x651d5f0 <line:215:7, line:216:36> construct 'void (class std::allocator<long long> &, pointer, const _Tp &)' static
|     | | |-ParmVarDecl 0x651d3b0 <line:215:29, col:37> __a 'class std::allocator<long long> &'
|     | | |-ParmVarDecl 0x651d420 <col:42, col:50> __p 'pointer':'long long *'
|     | | `-ParmVarDecl 0x651d4c0 <col:55, col:66> __arg 'const _Tp &'
|     |-CXXMethodDecl 0x651d910 <line:218:5, line:219:25> destroy 'void (class std::allocator<long long> &, pointer)' static
|     | |-ParmVarDecl 0x651d790 <line:218:25, col:33> __a 'class std::allocator<long long> &'
|     | `-ParmVarDecl 0x651d800 <col:38, col:46> __p 'pointer':'long long *'
|     |-CXXMethodDecl 0x651db10 <line:221:5, line:222:30> max_size 'size_type (const class std::allocator<long long> &)' static
|     | `-ParmVarDecl 0x651da10 <line:221:31, col:45> __a 'const class std::allocator<long long> &'
|     |-CXXMethodDecl 0x651dce0 <line:224:5, col:77> _S_select_on_copy 'const class std::allocator<long long> &(const class std::allocator<long long> &)' static
|     | `-ParmVarDecl 0x651dbe0 <col:44, col:58> __a 'const class std::allocator<long long> &'
|     |-CXXMethodDecl 0x651df30 <line:226:5, line:231:5> _S_on_swap 'void (class std::allocator<long long> &, class std::allocator<long long> &)' static
|     | |-ParmVarDecl 0x651ddb0 <line:226:28, col:36> __a 'class std::allocator<long long> &'
|     | `-ParmVarDecl 0x651de20 <col:41, col:49> __b 'class std::allocator<long long> &'
|     `-ClassTemplateDecl 0x651e100 <line:233:5, line:234:14> rebind
|       |-TemplateTypeParmDecl 0x651dff0 <line:233:14, col:23> typename _Tp
|       |-CXXRecordDecl 0x651e070 <line:234:7, col:14> struct rebind
|       `-ClassTemplateSpecializationDecl 0x651e370 <line:233:5, line:234:14> struct rebind definition
|         |-TemplateArgument type 'long long'
|         |-CXXRecordDecl 0x651e580 prev 0x651e370 <col:7, col:14> struct rebind
|         `-TypedefDecl 0x651ea90 <line:235:9, col:62> other 'typename class allocator<long long>::rebind<long long>::other':'class std::allocator<long long>'
|-NamespaceDecl 0x646ce90 prev 0x64501f0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_construct.h:63:1, line:155:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x646cef0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-FunctionTemplateDecl 0x646d2c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_construct.h:77:3, line:84:5> _Construct
| | |-TemplateTypeParmDecl 0x646cf30 <line:77:12, col:21> typename _T1
| | |-TemplateTypeParmDecl 0x646cfa0 <col:26, col:35> typename _T2
| | |-FunctionDecl 0x646d220 <line:78:5, line:84:5> _Construct 'void (_T1 *, const _T2 &)' inline
| | | |-ParmVarDecl 0x646d070 <line:79:16, col:21> __p '_T1 *'
| | | |-ParmVarDecl 0x646d110 <col:26, col:37> __value 'const _T2 &'
| | | `-CompoundStmt 0x646d448 <line:80:5, line:84:5>
| | |   `-CXXNewExpr 0x646d3e8 <line:83:7, col:49> '_T1 *'
| | |     |-ParenListExpr 0x646d3a8 <col:41, col:49> 'NULL TYPE'
| | |     | `-DeclRefExpr 0x646d380 <col:42> 'const _T2' lvalue ParmVar 0x646d110 '__value' 'const _T2 &'
| | |     `-CXXStaticCastExpr 0x646d350 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
| | |       `-DeclRefExpr 0x646d318 <col:32> '_T1 *' lvalue ParmVar 0x646d070 '__p' '_T1 *'
| |-FunctionTemplateDecl 0x646d690 <line:90:3, line:93:26> _Destroy
| | |-TemplateTypeParmDecl 0x646d470 <line:90:12, col:21> typename _Tp
| | |-FunctionDecl 0x646d5f0 <line:91:5, line:93:26> _Destroy 'void (_Tp *)' inline
| | | |-ParmVarDecl 0x646d530 <line:92:14, col:19> __pointer '_Tp *'
| | | `-CompoundStmt 0x646d790 <line:93:5, col:26>
| | |   `-CallExpr 0x646d768 <col:7, col:23> 'void'
| | |     `-CXXPseudoDestructorExpr 0x646d718 <col:7, col:19> 'void (*)(void)'
| | |       `-DeclRefExpr 0x646d6e0 <col:7> '_Tp *' lvalue ParmVar 0x646d530 '__pointer' '_Tp *'
| |-ClassTemplateDecl 0x646d8c0 <line:95:3, line:105:5> _Destroy_aux
| | |-NonTypeTemplateParmDecl 0x646d7c0 <line:95:12> '_Bool'
| | |-CXXRecordDecl 0x646d830 <line:96:5, line:105:5> struct _Destroy_aux definition
| | | |-CXXRecordDecl 0x646f530 <line:96:5, col:12> struct _Destroy_aux
| | | `-FunctionTemplateDecl 0x646f870 <line:98:7, line:104:2> __destroy
| | |   |-TemplateTypeParmDecl 0x646f5c0 <line:98:16, col:25> typename _ForwardIterator
| | |   |-CXXMethodDecl 0x646f7d0 <line:99:9, line:104:2> __destroy 'void (_ForwardIterator, _ForwardIterator)' static
| | |   | |-ParmVarDecl 0x646f650 <line:100:19, col:36> __first '_ForwardIterator'
| | |   | |-ParmVarDecl 0x646f6c0 <col:45, col:62> __last '_ForwardIterator'
| | |   | `-CompoundStmt 0x646fc40 <line:101:2, line:104:2>
| | |   |   `-ForStmt 0x646fc00 <line:102:4, line:103:46>
| | |   |     |-<<<NULL>>>
| | |   |     |-<<<NULL>>>
| | |   |     |-CXXOperatorCallExpr 0x646f9c0 <line:102:11, col:22> '<dependent type>'
| | |   |     | |-UnresolvedLookupExpr 0x646f948 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |   |     | |-DeclRefExpr 0x646f8f8 <col:11> '_ForwardIterator' lvalue ParmVar 0x646f650 '__first' '_ForwardIterator'
| | |   |     | `-DeclRefExpr 0x646f920 <col:22> '_ForwardIterator' lvalue ParmVar 0x646f6c0 '__last' '_ForwardIterator'
| | |   |     |-UnaryOperator 0x646fa30 <col:30, col:32> '<dependent type>' prefix '++'
| | |   |     | `-DeclRefExpr 0x646fa08 <col:32> '_ForwardIterator' lvalue ParmVar 0x646f650 '__first' '_ForwardIterator'
| | |   |     `-CallExpr 0x646fbd0 <line:103:6, col:46> '<dependent type>'
| | |   |       |-UnresolvedLookupExpr 0x646fa88 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690
| | |   |       `-CallExpr 0x646fba0 <col:20, col:45> '<dependent type>'
| | |   |         |-UnresolvedLookupExpr 0x646fb00 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |   |         `-UnaryOperator 0x646fb80 <col:37, col:38> '<dependent type>' prefix '*'
| | |   |           `-DeclRefExpr 0x646fb58 <col:38> '_ForwardIterator' lvalue ParmVar 0x646f650 '__first' '_ForwardIterator'
| | `-ClassTemplateSpecialization 0x646fc90 '_Destroy_aux'
| |-ClassTemplateSpecializationDecl 0x646fc90 <line:107:3, line:113:5> struct _Destroy_aux definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x646feb0 <line:108:5, col:12> struct _Destroy_aux
| | `-FunctionTemplateDecl 0x64701f0 <line:110:7, line:112:57> __destroy
| |   |-TemplateTypeParmDecl 0x646ff40 <line:110:16, col:25> typename _ForwardIterator
| |   |-CXXMethodDecl 0x6470150 <line:111:9, line:112:57> __destroy 'void (_ForwardIterator, _ForwardIterator)' static
| |   | |-ParmVarDecl 0x646ffd0 <col:19> '_ForwardIterator'
| |   | |-ParmVarDecl 0x6470040 <col:37> '_ForwardIterator'
| |   | `-CompoundStmt 0x6470278 <col:55, col:57>
| |   `-CXXMethodDecl 0x653d8b0 <line:111:9, line:112:57> __destroy 'void (long long *, long long *)' static
| |     |-TemplateArgument type 'long long *'
| |     |-ParmVarDecl 0x653d770 <col:19> 'long long *':'long long *'
| |     |-ParmVarDecl 0x653d7e0 <col:37> 'long long *':'long long *'
| |     `-CompoundStmt 0x6470278 <col:55, col:57>
| |-FunctionTemplateDecl 0x6470500 <line:120:3, line:128:5> _Destroy
| | |-TemplateTypeParmDecl 0x6470290 <line:120:12, col:21> typename _ForwardIterator
| | |-FunctionDecl 0x6470460 <line:121:5, line:128:5> _Destroy 'void (_ForwardIterator, _ForwardIterator)' inline
| | | |-ParmVarDecl 0x6470320 <line:122:14, col:31> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6470390 <col:40, col:57> __last '_ForwardIterator'
| | | `-CompoundStmt 0x64709f0 <line:123:5, line:128:5>
| | |   |-DeclStmt 0x6470718 <line:124:7, line:125:35>
| | |   | `-TypedefDecl 0x64706d0 <line:124:7, line:125:24> _Value_type 'typename iterator_traits<_ForwardIterator>::value_type'
| | |   `-CallExpr 0x64709b8 <line:126:7, line:127:27> '<dependent type>'
| | |     |-DependentScopeDeclRefExpr 0x6470928 <line:126:7, line:127:2> '<dependent type>' lvalue
| | |     |-DeclRefExpr 0x6470968 <col:12> '_ForwardIterator' lvalue ParmVar 0x6470320 '__first' '_ForwardIterator'
| | |     `-DeclRefExpr 0x6470990 <col:21> '_ForwardIterator' lvalue ParmVar 0x6470390 '__last' '_ForwardIterator'
| | `-FunctionDecl 0x653d120 <line:121:5, line:128:5> _Destroy 'void (long long *, long long *)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-ParmVarDecl 0x653cfa0 <line:122:14, col:31> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x653d010 <col:40, col:57> __last 'long long *':'long long *'
| |   `-CompoundStmt 0x653daa8 <line:123:5, line:128:5>
| |     |-DeclStmt 0x653d4a8 <line:124:7, line:125:35>
| |     | `-TypedefDecl 0x653d460 <line:124:7, line:125:24> _Value_type 'typename iterator_traits<long long *>::value_type':'long long'
| |     `-CallExpr 0x653da40 <line:126:7, line:127:27> 'void'
| |       |-ImplicitCastExpr 0x653da28 <line:126:7, line:127:2> 'void (*)(long long *, long long *)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x653d9c0 <line:126:7, line:127:2> 'void (long long *, long long *)' lvalue CXXMethod 0x653d8b0 '__destroy' 'void (long long *, long long *)' (FunctionTemplate 0x64701f0 '__destroy')
| |       |-ImplicitCastExpr 0x653da78 <col:12> 'long long *':'long long *' <LValueToRValue>
| |       | `-DeclRefExpr 0x653d610 <col:12> 'long long *':'long long *' lvalue ParmVar 0x653cfa0 '__first' 'long long *':'long long *'
| |       `-ImplicitCastExpr 0x653da90 <col:21> 'long long *':'long long *' <LValueToRValue>
| |         `-DeclRefExpr 0x653d638 <col:21> 'long long *':'long long *' lvalue ParmVar 0x653d010 '__last' 'long long *':'long long *'
| |-FunctionTemplateDecl 0x6470e10 <line:136:3, line:144:5> _Destroy
| | |-TemplateTypeParmDecl 0x6470a20 <line:136:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6470a90 <col:39, col:48> typename _Allocator
| | |-FunctionDecl 0x6470d70 <line:137:5, line:144:5> _Destroy 'void (_ForwardIterator, _ForwardIterator, _Allocator &)'
| | | |-ParmVarDecl 0x6470b30 <line:138:14, col:31> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6470ba0 <col:40, col:57> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x6470c40 <line:139:7, col:19> __alloc '_Allocator &'
| | | `-CompoundStmt 0x64714a8 <line:140:5, line:144:5>
| | |   |-DeclStmt 0x64710b8 <line:141:7, col:61>
| | |   | `-TypedefDecl 0x6471070 <col:7, col:53> __traits '__gnu_cxx::__alloc_traits<_Allocator>':'__alloc_traits<_Allocator>'
| | |   `-ForStmt 0x6471468 <line:142:7, line:143:55>
| | |     |-<<<NULL>>>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x6471198 <line:142:14, col:25> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x6471120 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |     | |-DeclRefExpr 0x64710d0 <col:14> '_ForwardIterator' lvalue ParmVar 0x6470b30 '__first' '_ForwardIterator'
| | |     | `-DeclRefExpr 0x64710f8 <col:25> '_ForwardIterator' lvalue ParmVar 0x6470ba0 '__last' '_ForwardIterator'
| | |     |-UnaryOperator 0x6471208 <col:33, col:35> '<dependent type>' prefix '++'
| | |     | `-DeclRefExpr 0x64711e0 <col:35> '_ForwardIterator' lvalue ParmVar 0x6470b30 '__first' '_ForwardIterator'
| | |     `-CallExpr 0x6471430 <line:143:2, col:55> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x64712b8 <col:2, col:12> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x64712f8 <col:20> '_Allocator' lvalue ParmVar 0x6470c40 '__alloc' '_Allocator &'
| | |       `-CallExpr 0x6471400 <col:29, col:54> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6471340 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |         `-UnaryOperator 0x64713e0 <col:46, col:47> '<dependent type>' prefix '*'
| | |           `-DeclRefExpr 0x6471398 <col:47> '_ForwardIterator' lvalue ParmVar 0x6470b30 '__first' '_ForwardIterator'
| | `-FunctionDecl 0x653c650 <line:137:5, line:144:5> _Destroy 'void (long long *, long long *, class std::allocator<long long> &)'
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'class std::allocator<long long>'
| |   |-ParmVarDecl 0x653c3e0 <line:138:14, col:31> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x653c450 <col:40, col:57> __last 'long long *':'long long *'
| |   `-ParmVarDecl 0x653c520 <line:139:7, col:19> __alloc 'class std::allocator<long long> &'
| `-FunctionTemplateDecl 0x64719f0 <line:146:3, line:152:5> _Destroy
|   |-TemplateTypeParmDecl 0x64714d0 <line:146:12, col:21> typename _ForwardIterator
|   |-TemplateTypeParmDecl 0x6471540 <col:39, col:48> typename _Tp
|   |-FunctionDecl 0x6471950 <line:147:5, line:152:5> _Destroy 'void (_ForwardIterator, _ForwardIterator, allocator<_Tp> &)' inline
|   | |-ParmVarDecl 0x64715e0 <line:148:14, col:31> __first '_ForwardIterator'
|   | |-ParmVarDecl 0x6471650 <col:40, col:57> __last '_ForwardIterator'
|   | |-ParmVarDecl 0x6471820 <line:149:7, col:21> 'allocator<_Tp> &'
|   | `-CompoundStmt 0x6471b48 <line:150:5, line:152:5>
|   |   `-CallExpr 0x6471b10 <line:151:7, col:31> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x6471a50 <col:7> '<overloaded function type>' lvalue (ADL) = '_Destroy' 0x64719f0 0x6470e10 0x6470500 0x646d690
|   |     |-DeclRefExpr 0x6471ac0 <col:16> '_ForwardIterator' lvalue ParmVar 0x64715e0 '__first' '_ForwardIterator'
|   |     `-DeclRefExpr 0x6471ae8 <col:25> '_ForwardIterator' lvalue ParmVar 0x6471650 '__last' '_ForwardIterator'
|   `-FunctionDecl 0x653cb60 <line:147:5, line:152:5> _Destroy 'void (long long *, long long *, allocator<long long> &)' inline
|     |-TemplateArgument type 'long long *'
|     |-TemplateArgument type 'long long'
|     |-ParmVarDecl 0x653c8c0 <line:148:14, col:31> __first 'long long *':'long long *'
|     |-ParmVarDecl 0x653c930 <col:40, col:57> __last 'long long *':'long long *'
|     |-ParmVarDecl 0x653ca80 <line:149:7, col:21> 'allocator<long long> &'
|     `-CompoundStmt 0x653d338 <line:150:5, line:152:5>
|       `-CallExpr 0x653d2d0 <line:151:7, col:31> 'void'
|         |-ImplicitCastExpr 0x653d2b8 <col:7> 'void (*)(long long *, long long *)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x653d230 <col:7> 'void (long long *, long long *)' lvalue Function 0x653d120 '_Destroy' 'void (long long *, long long *)' (FunctionTemplate 0x6470500 '_Destroy')
|         |-ImplicitCastExpr 0x653d308 <col:16> 'long long *':'long long *' <LValueToRValue>
|         | `-DeclRefExpr 0x653ce40 <col:16> 'long long *':'long long *' lvalue ParmVar 0x653c8c0 '__first' 'long long *':'long long *'
|         `-ImplicitCastExpr 0x653d320 <col:25> 'long long *':'long long *' <LValueToRValue>
|           `-DeclRefExpr 0x653ce68 <col:25> 'long long *':'long long *' lvalue ParmVar 0x653c930 '__last' 'long long *':'long long *'
|-NamespaceDecl 0x6471ba0 prev 0x646ce90 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:59:1, line:654:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x6471c00 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x6471d50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:63:3, line:84:5> __uninitialized_copy
| | |-NonTypeTemplateParmDecl 0x6471c50 <line:63:12, col:17> '_Bool' _TrivialValueTypes
| | |-CXXRecordDecl 0x6471cc0 <line:64:5, line:84:5> struct __uninitialized_copy definition
| | | |-CXXRecordDecl 0x6471ff0 <line:64:5, col:12> struct __uninitialized_copy
| | | `-FunctionTemplateDecl 0x64723f0 <line:66:7, line:83:2> __uninit_copy
| | |   |-TemplateTypeParmDecl 0x6472080 <line:66:16, col:25> typename _InputIterator
| | |   |-TemplateTypeParmDecl 0x64720f0 <col:41, col:50> typename _ForwardIterator
| | |   |-CXXMethodDecl 0x6472350 <line:67:9, line:83:2> __uninit_copy '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator)' static
| | |   | |-ParmVarDecl 0x6472190 <line:68:23, col:38> __first '_InputIterator'
| | |   | |-ParmVarDecl 0x6472200 <col:47, col:62> __last '_InputIterator'
| | |   | |-ParmVarDecl 0x6472270 <line:69:9, col:26> __result '_ForwardIterator'
| | |   | `-CompoundStmt 0x6472b40 <line:70:9, line:83:2>
| | |   |   |-DeclStmt 0x6472510 <line:71:4, col:37>
| | |   |   | `-VarDecl 0x6472490 <col:4, col:29> __cur '_ForwardIterator'
| | |   |   |   `-DeclRefExpr 0x64724e8 <col:29> '_ForwardIterator' lvalue ParmVar 0x6472270 '__result' '_ForwardIterator'
| | |   |   `-CXXTryStmt 0x6472b20 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:82:6>
| | |   |     |-CompoundStmt 0x6472978 <line:73:6, line:77:6>
| | |   |     | |-ForStmt 0x64728f0 <line:74:8, line:75:53>
| | |   |     | | |-<<<NULL>>>
| | |   |     | | |-<<<NULL>>>
| | |   |     | | |-CXXOperatorCallExpr 0x64725f0 <line:74:15, col:26> '<dependent type>'
| | |   |     | | | |-UnresolvedLookupExpr 0x6472578 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |   |     | | | |-DeclRefExpr 0x6472528 <col:15> '_InputIterator' lvalue ParmVar 0x6472190 '__first' '_InputIterator'
| | |   |     | | | `-DeclRefExpr 0x6472550 <col:26> '_InputIterator' lvalue ParmVar 0x6472200 '__last' '_InputIterator'
| | |   |     | | |-BinaryOperator 0x64726c8 <col:34, col:47> '<dependent type>' ','
| | |   |     | | | |-UnaryOperator 0x6472660 <col:34, col:36> '<dependent type>' prefix '++'
| | |   |     | | | | `-DeclRefExpr 0x6472638 <col:36> '_InputIterator' lvalue ParmVar 0x6472190 '__first' '_InputIterator'
| | |   |     | | | `-UnaryOperator 0x64726a8 <col:45, col:47> '<dependent type>' prefix '++'
| | |   |     | | |   `-DeclRefExpr 0x6472680 <col:47> '_ForwardIterator' lvalue Var 0x6472490 '__cur' '_ForwardIterator'
| | |   |     | | `-CallExpr 0x64728b8 <line:75:3, col:53> '<dependent type>'
| | |   |     | |   |-UnresolvedLookupExpr 0x6472728 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '_Construct' 0x646d2c0
| | |   |     | |   |-CallExpr 0x6472840 <col:19, col:42> '<dependent type>'
| | |   |     | |   | |-UnresolvedLookupExpr 0x64727a0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |   |     | |   | `-UnaryOperator 0x6472820 <col:36, col:37> '<dependent type>' prefix '*'
| | |   |     | |   |   `-DeclRefExpr 0x64727f8 <col:37> '_ForwardIterator' lvalue Var 0x6472490 '__cur' '_ForwardIterator'
| | |   |     | |   `-UnaryOperator 0x6472898 <col:45, col:46> '<dependent type>' prefix '*'
| | |   |     | |     `-DeclRefExpr 0x6472870 <col:46> '_InputIterator' lvalue ParmVar 0x6472190 '__first' '_InputIterator'
| | |   |     | `-ReturnStmt 0x6472958 <line:76:8, col:15>
| | |   |     |   `-DeclRefExpr 0x6472930 <col:15> '_ForwardIterator' lvalue Var 0x6472490 '__cur' '_ForwardIterator'
| | |   |     `-CXXCatchStmt 0x6472b00 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:82:6>
| | |   |       |-<<<NULL>>>
| | |   |       `-CompoundStmt 0x6472ad8 <line:79:6, line:82:6>
| | |   |         |-CallExpr 0x6472a80 <line:80:8, col:37> '<dependent type>'
| | |   |         | |-UnresolvedLookupExpr 0x64729c0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |   |         | |-DeclRefExpr 0x6472a30 <col:22> '_ForwardIterator' lvalue ParmVar 0x6472270 '__result' '_ForwardIterator'
| | |   |         | `-DeclRefExpr 0x6472a58 <col:32> '_ForwardIterator' lvalue Var 0x6472490 '__cur' '_ForwardIterator'
| | |   |         `-CXXThrowExpr 0x6472ab8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | `-ClassTemplateSpecialization 0x6472b90 '__uninitialized_copy'
| |-ClassTemplateSpecializationDecl 0x6472b90 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:86:3, line:94:5> struct __uninitialized_copy definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x6472db0 <line:87:5, col:12> struct __uninitialized_copy
| | `-FunctionTemplateDecl 0x64731b0 <line:89:7, line:93:56> __uninit_copy
| |   |-TemplateTypeParmDecl 0x6472e40 <line:89:16, col:25> typename _InputIterator
| |   |-TemplateTypeParmDecl 0x6472eb0 <col:41, col:50> typename _ForwardIterator
| |   |-CXXMethodDecl 0x6473110 <line:90:9, line:93:56> __uninit_copy '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator)' static
| |   | |-ParmVarDecl 0x6472f50 <line:91:23, col:38> __first '_InputIterator'
| |   | |-ParmVarDecl 0x6472fc0 <col:47, col:62> __last '_InputIterator'
| |   | |-ParmVarDecl 0x6473030 <line:92:9, col:26> __result '_ForwardIterator'
| |   | `-CompoundStmt 0x6473388 <line:93:9, col:56>
| |   |   `-ReturnStmt 0x6473368 <col:11, col:53>
| |   |     `-CallExpr 0x6473328 <col:18, col:53> '<dependent type>'
| |   |       |-UnresolvedLookupExpr 0x6473258 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |   |       |-DeclRefExpr 0x64732b0 <col:28> '_InputIterator' lvalue ParmVar 0x6472f50 '__first' '_InputIterator'
| |   |       |-DeclRefExpr 0x64732d8 <col:37> '_InputIterator' lvalue ParmVar 0x6472fc0 '__last' '_InputIterator'
| |   |       `-DeclRefExpr 0x6473300 <col:45> '_ForwardIterator' lvalue ParmVar 0x6473030 '__result' '_ForwardIterator'
| |-FunctionTemplateDecl 0x6473760 <line:105:3, line:118:5> uninitialized_copy
| | |-TemplateTypeParmDecl 0x64733f0 <line:105:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x6473460 <col:37, col:46> typename _ForwardIterator
| | |-FunctionDecl 0x64736c0 <line:106:5, line:118:5> uninitialized_copy '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator)' inline
| | | |-ParmVarDecl 0x6473500 <line:107:24, col:39> __first '_InputIterator'
| | | |-ParmVarDecl 0x6473570 <col:48, col:63> __last '_InputIterator'
| | | |-ParmVarDecl 0x64735e0 <line:108:10, col:27> __result '_ForwardIterator'
| | | `-CompoundStmt 0x6473ef0 <line:109:5, line:118:5>
| | |   |-DeclStmt 0x6473978 <line:110:7, line:111:13>
| | |   | `-TypedefDecl 0x6473930 <line:110:7, line:111:2> _ValueType1 'typename iterator_traits<_InputIterator>::value_type'
| | |   |-DeclStmt 0x6473b48 <line:112:7, line:113:13>
| | |   | `-TypedefDecl 0x6473b00 <line:112:7, line:113:2> _ValueType2 'typename iterator_traits<_ForwardIterator>::value_type'
| | |   `-ReturnStmt 0x6473ed0 <line:115:7, line:117:41>
| | |     `-CallExpr 0x6473e90 <line:115:14, line:117:41> '<dependent type>'
| | |       |-DependentScopeDeclRefExpr 0x6473dd8 <line:115:14, line:117:2> '<dependent type>' lvalue
| | |       |-DeclRefExpr 0x6473e18 <col:16> '_InputIterator' lvalue ParmVar 0x6473500 '__first' '_InputIterator'
| | |       |-DeclRefExpr 0x6473e40 <col:25> '_InputIterator' lvalue ParmVar 0x6473570 '__last' '_InputIterator'
| | |       `-DeclRefExpr 0x6473e68 <col:33> '_ForwardIterator' lvalue ParmVar 0x64735e0 '__result' '_ForwardIterator'
| |-ClassTemplateDecl 0x6474030 <line:121:3, line:141:5> __uninitialized_fill
| | |-NonTypeTemplateParmDecl 0x6473f30 <line:121:12, col:17> '_Bool' _TrivialValueType
| | |-CXXRecordDecl 0x6473fa0 <line:122:5, line:141:5> struct __uninitialized_fill definition
| | | |-CXXRecordDecl 0x64742d0 <line:122:5, col:12> struct __uninitialized_fill
| | | `-FunctionTemplateDecl 0x6474780 <line:124:7, line:140:2> __uninit_fill
| | |   |-TemplateTypeParmDecl 0x6474360 <line:124:16, col:25> typename _ForwardIterator
| | |   |-TemplateTypeParmDecl 0x64743d0 <col:43, col:52> typename _Tp
| | |   |-CXXMethodDecl 0x64746e0 <line:125:9, line:140:2> __uninit_fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' static
| | |   | |-ParmVarDecl 0x6474470 <line:126:23, col:40> __first '_ForwardIterator'
| | |   | |-ParmVarDecl 0x64744e0 <col:49, col:66> __last '_ForwardIterator'
| | |   | |-ParmVarDecl 0x64745b0 <line:127:9, col:20> __x 'const _Tp &'
| | |   | `-CompoundStmt 0x6474dd8 <line:128:9, line:140:2>
| | |   |   |-DeclStmt 0x64748a0 <line:129:4, col:36>
| | |   |   | `-VarDecl 0x6474820 <col:4, col:29> __cur '_ForwardIterator'
| | |   |   |   `-DeclRefExpr 0x6474878 <col:29> '_ForwardIterator' lvalue ParmVar 0x6474470 '__first' '_ForwardIterator'
| | |   |   `-CXXTryStmt 0x6474db8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:139:6>
| | |   |     |-CompoundStmt 0x6474c18 <line:131:6, line:134:6>
| | |   |     | `-ForStmt 0x6474bd8 <line:132:8, line:133:48>
| | |   |     |   |-<<<NULL>>>
| | |   |     |   |-<<<NULL>>>
| | |   |     |   |-CXXOperatorCallExpr 0x6474980 <line:132:15, col:24> '<dependent type>'
| | |   |     |   | |-UnresolvedLookupExpr 0x6474908 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |   |     |   | |-DeclRefExpr 0x64748b8 <col:15> '_ForwardIterator' lvalue Var 0x6474820 '__cur' '_ForwardIterator'
| | |   |     |   | `-DeclRefExpr 0x64748e0 <col:24> '_ForwardIterator' lvalue ParmVar 0x64744e0 '__last' '_ForwardIterator'
| | |   |     |   |-UnaryOperator 0x64749f0 <col:32, col:34> '<dependent type>' prefix '++'
| | |   |     |   | `-DeclRefExpr 0x64749c8 <col:34> '_ForwardIterator' lvalue Var 0x6474820 '__cur' '_ForwardIterator'
| | |   |     |   `-CallExpr 0x6474ba0 <line:133:3, col:48> '<dependent type>'
| | |   |     |     |-UnresolvedLookupExpr 0x6474a30 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '_Construct' 0x646d2c0
| | |   |     |     |-CallExpr 0x6474b48 <col:19, col:42> '<dependent type>'
| | |   |     |     | |-UnresolvedLookupExpr 0x6474aa8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |   |     |     | `-UnaryOperator 0x6474b28 <col:36, col:37> '<dependent type>' prefix '*'
| | |   |     |     |   `-DeclRefExpr 0x6474b00 <col:37> '_ForwardIterator' lvalue Var 0x6474820 '__cur' '_ForwardIterator'
| | |   |     |     `-DeclRefExpr 0x6474b78 <col:45> 'const _Tp' lvalue ParmVar 0x64745b0 '__x' 'const _Tp &'
| | |   |     `-CXXCatchStmt 0x6474d98 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:139:6>
| | |   |       |-<<<NULL>>>
| | |   |       `-CompoundStmt 0x6474d70 <line:136:6, line:139:6>
| | |   |         |-CallExpr 0x6474d18 <line:137:8, col:36> '<dependent type>'
| | |   |         | |-UnresolvedLookupExpr 0x6474c58 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |   |         | |-DeclRefExpr 0x6474cc8 <col:22> '_ForwardIterator' lvalue ParmVar 0x6474470 '__first' '_ForwardIterator'
| | |   |         | `-DeclRefExpr 0x6474cf0 <col:31> '_ForwardIterator' lvalue Var 0x6474820 '__cur' '_ForwardIterator'
| | |   |         `-CXXThrowExpr 0x6474d50 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | `-ClassTemplateSpecialization 0x6474e30 '__uninitialized_fill'
| |-ClassTemplateSpecializationDecl 0x6474e30 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:143:3, line:151:5> struct __uninitialized_fill definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x6475050 <line:144:5, col:12> struct __uninitialized_fill
| | `-FunctionTemplateDecl 0x64758c0 <line:146:7, line:150:44> __uninit_fill
| |   |-TemplateTypeParmDecl 0x64750e0 <line:146:16, col:25> typename _ForwardIterator
| |   |-TemplateTypeParmDecl 0x6475150 <col:43, col:52> typename _Tp
| |   |-CXXMethodDecl 0x6475820 <line:147:9, line:150:44> __uninit_fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' static
| |   | |-ParmVarDecl 0x64751f0 <line:148:23, col:40> __first '_ForwardIterator'
| |   | |-ParmVarDecl 0x6475260 <col:49, col:66> __last '_ForwardIterator'
| |   | |-ParmVarDecl 0x6475300 <line:149:9, col:20> __x 'const _Tp &'
| |   | `-CompoundStmt 0x6475a78 <line:150:9, col:44>
| |   |   `-CallExpr 0x6475a38 <col:11, col:41> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x6475968 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10
| |   |     |-DeclRefExpr 0x64759c0 <col:21> '_ForwardIterator' lvalue ParmVar 0x64751f0 '__first' '_ForwardIterator'
| |   |     |-DeclRefExpr 0x64759e8 <col:30> '_ForwardIterator' lvalue ParmVar 0x6475260 '__last' '_ForwardIterator'
| |   |     `-DeclRefExpr 0x6475a10 <col:38> 'const _Tp' lvalue ParmVar 0x6475300 '__x' 'const _Tp &'
| |-FunctionTemplateDecl 0x6475e40 <line:162:3, line:172:5> uninitialized_fill
| | |-TemplateTypeParmDecl 0x6475aa0 <line:162:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6475b10 <col:39, col:48> typename _Tp
| | |-FunctionDecl 0x6475da0 <line:163:5, line:172:5> uninitialized_fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
| | | |-ParmVarDecl 0x6475bb0 <line:164:24, col:41> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6475c20 <col:50, col:67> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x6475cc0 <line:165:10, col:21> __x 'const _Tp &'
| | | `-CompoundStmt 0x6476360 <line:166:5, line:172:5>
| | |   |-DeclStmt 0x6476058 <line:167:7, line:168:12>
| | |   | `-TypedefDecl 0x6476010 <line:167:7, line:168:2> _ValueType 'typename iterator_traits<_ForwardIterator>::value_type'
| | |   `-CallExpr 0x6476320 <line:170:7, line:171:36> '<dependent type>'
| | |     |-DependentScopeDeclRefExpr 0x6476268 <line:170:7, line:171:2> '<dependent type>' lvalue
| | |     |-DeclRefExpr 0x64762a8 <col:16> '_ForwardIterator' lvalue ParmVar 0x6475bb0 '__first' '_ForwardIterator'
| | |     |-DeclRefExpr 0x64762d0 <col:25> '_ForwardIterator' lvalue ParmVar 0x6475c20 '__last' '_ForwardIterator'
| | |     `-DeclRefExpr 0x64762f8 <col:33> 'const _Tp' lvalue ParmVar 0x6475cc0 '__x' 'const _Tp &'
| |-ClassTemplateDecl 0x64764a0 <line:175:3, line:195:5> __uninitialized_fill_n
| | |-NonTypeTemplateParmDecl 0x64763a0 <line:175:12, col:17> '_Bool' _TrivialValueType
| | |-CXXRecordDecl 0x6476410 <line:176:5, line:195:5> struct __uninitialized_fill_n definition
| | | |-CXXRecordDecl 0x6476740 <line:176:5, col:12> struct __uninitialized_fill_n
| | | `-FunctionTemplateDecl 0x6476c90 <line:178:7, line:194:2> __uninit_fill_n
| | |   |-TemplateTypeParmDecl 0x64767d0 <line:178:16, col:25> typename _ForwardIterator
| | |   |-TemplateTypeParmDecl 0x6476840 <col:43, col:52> typename _Size
| | |   |-TemplateTypeParmDecl 0x64768b0 <col:59, col:68> typename _Tp
| | |   |-CXXMethodDecl 0x6476bf0 <line:179:9, line:194:2> __uninit_fill_n 'void (_ForwardIterator, _Size, const _Tp &)' static
| | |   | |-ParmVarDecl 0x6476980 <line:180:25, col:42> __first '_ForwardIterator'
| | |   | |-ParmVarDecl 0x64769f0 <col:51, col:57> __n '_Size'
| | |   | |-ParmVarDecl 0x6476ac0 <line:181:4, col:15> __x 'const _Tp &'
| | |   | `-CompoundStmt 0x6477340 <line:182:9, line:194:2>
| | |   |   |-DeclStmt 0x6476db0 <line:183:4, col:36>
| | |   |   | `-VarDecl 0x6476d30 <col:4, col:29> __cur '_ForwardIterator'
| | |   |   |   `-DeclRefExpr 0x6476d88 <col:29> '_ForwardIterator' lvalue ParmVar 0x6476980 '__first' '_ForwardIterator'
| | |   |   `-CXXTryStmt 0x6477320 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:193:6>
| | |   |     |-CompoundStmt 0x6477180 <line:185:6, line:188:6>
| | |   |     | `-ForStmt 0x6477140 <line:186:8, line:187:48>
| | |   |     |   |-<<<NULL>>>
| | |   |     |   |-<<<NULL>>>
| | |   |     |   |-CXXOperatorCallExpr 0x6476e78 <line:186:15, col:21> '<dependent type>'
| | |   |     |   | |-UnresolvedLookupExpr 0x6476e10 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | |   |     |   | |-DeclRefExpr 0x6476dc8 <col:15> '_Size' lvalue ParmVar 0x64769f0 '__n' '_Size'
| | |   |     |   | `-IntegerLiteral 0x6476df0 <col:21> 'int' 0
| | |   |     |   |-BinaryOperator 0x6476f50 <col:24, col:33> '<dependent type>' ','
| | |   |     |   | |-UnaryOperator 0x6476ee8 <col:24, col:26> '<dependent type>' prefix '--'
| | |   |     |   | | `-DeclRefExpr 0x6476ec0 <col:26> '_Size' lvalue ParmVar 0x64769f0 '__n' '_Size'
| | |   |     |   | `-UnaryOperator 0x6476f30 <col:31, col:33> '<dependent type>' prefix '++'
| | |   |     |   |   `-DeclRefExpr 0x6476f08 <col:33> '_ForwardIterator' lvalue Var 0x6476d30 '__cur' '_ForwardIterator'
| | |   |     |   `-CallExpr 0x6477108 <line:187:3, col:48> '<dependent type>'
| | |   |     |     |-UnresolvedLookupExpr 0x6476f98 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '_Construct' 0x646d2c0
| | |   |     |     |-CallExpr 0x64770b0 <col:19, col:42> '<dependent type>'
| | |   |     |     | |-UnresolvedLookupExpr 0x6477010 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |   |     |     | `-UnaryOperator 0x6477090 <col:36, col:37> '<dependent type>' prefix '*'
| | |   |     |     |   `-DeclRefExpr 0x6477068 <col:37> '_ForwardIterator' lvalue Var 0x6476d30 '__cur' '_ForwardIterator'
| | |   |     |     `-DeclRefExpr 0x64770e0 <col:45> 'const _Tp' lvalue ParmVar 0x6476ac0 '__x' 'const _Tp &'
| | |   |     `-CXXCatchStmt 0x6477300 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:193:6>
| | |   |       |-<<<NULL>>>
| | |   |       `-CompoundStmt 0x64772d8 <line:190:6, line:193:6>
| | |   |         |-CallExpr 0x6477280 <line:191:8, col:36> '<dependent type>'
| | |   |         | |-UnresolvedLookupExpr 0x64771c0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |   |         | |-DeclRefExpr 0x6477230 <col:22> '_ForwardIterator' lvalue ParmVar 0x6476980 '__first' '_ForwardIterator'
| | |   |         | `-DeclRefExpr 0x6477258 <col:31> '_ForwardIterator' lvalue Var 0x6476d30 '__cur' '_ForwardIterator'
| | |   |         `-CXXThrowExpr 0x64772b8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | `-ClassTemplateSpecialization 0x6477390 '__uninitialized_fill_n'
| |-ClassTemplateSpecializationDecl 0x6477390 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:197:3, line:205:5> struct __uninitialized_fill_n definition
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x64775b0 <line:198:5, col:12> struct __uninitialized_fill_n
| | `-FunctionTemplateDecl 0x6477f30 <line:200:7, line:204:43> __uninit_fill_n
| |   |-TemplateTypeParmDecl 0x6477640 <line:200:16, col:25> typename _ForwardIterator
| |   |-TemplateTypeParmDecl 0x64776b0 <col:43, col:52> typename _Size
| |   |-TemplateTypeParmDecl 0x6477720 <col:59, col:68> typename _Tp
| |   |-CXXMethodDecl 0x6477e90 <line:201:9, line:204:43> __uninit_fill_n 'void (_ForwardIterator, _Size, const _Tp &)' static
| |   | |-ParmVarDecl 0x6477c50 <line:202:25, col:42> __first '_ForwardIterator'
| |   | |-ParmVarDecl 0x6477cc0 <col:51, col:57> __n '_Size'
| |   | |-ParmVarDecl 0x6477d60 <line:203:4, col:15> __x 'const _Tp &'
| |   | `-CompoundStmt 0x64780e8 <line:204:9, col:43>
| |   |   `-CallExpr 0x64780a8 <col:11, col:40> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x6477fd8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = 'fill_n' 0x64229e0
| |   |     |-DeclRefExpr 0x6478030 <col:23> '_ForwardIterator' lvalue ParmVar 0x6477c50 '__first' '_ForwardIterator'
| |   |     |-DeclRefExpr 0x6478058 <col:32> '_Size' lvalue ParmVar 0x6477cc0 '__n' '_Size'
| |   |     `-DeclRefExpr 0x6478080 <col:37> 'const _Tp' lvalue ParmVar 0x6477d60 '__x' 'const _Tp &'
| |   `-CXXMethodDecl 0x6534200 <line:201:9, line:204:43> __uninit_fill_n 'void (long long *, unsigned long, const long long &)' static
| |     |-TemplateArgument type 'long long *'
| |     |-TemplateArgument type 'unsigned long'
| |     |-TemplateArgument type 'long long'
| |     |-ParmVarDecl 0x6533fb0 <line:202:25, col:42> __first 'long long *':'long long *'
| |     |-ParmVarDecl 0x6534050 <col:51, col:57> __n 'unsigned long':'unsigned long'
| |     |-ParmVarDecl 0x6534120 <line:203:4, col:15> __x 'const long long &'
| |     `-CompoundStmt 0x6534ba0 <line:204:9, col:43>
| |       `-CallExpr 0x6534b30 <col:11, col:40> 'long long *':'long long *'
| |         |-ImplicitCastExpr 0x6534b18 <col:11, col:16> 'long long *(*)(long long *, unsigned long, const long long &)' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x6534a80 <col:11, col:16> 'long long *(long long *, unsigned long, const long long &)' lvalue Function 0x6534940 'fill_n' 'long long *(long long *, unsigned long, const long long &)' (FunctionTemplate 0x64229e0 'fill_n')
| |         |-ImplicitCastExpr 0x6534b70 <col:23> 'long long *':'long long *' <LValueToRValue>
| |         | `-DeclRefExpr 0x65344c0 <col:23> 'long long *':'long long *' lvalue ParmVar 0x6533fb0 '__first' 'long long *':'long long *'
| |         |-ImplicitCastExpr 0x6534b88 <col:32> 'unsigned long':'unsigned long' <LValueToRValue>
| |         | `-DeclRefExpr 0x65344e8 <col:32> 'unsigned long':'unsigned long' lvalue ParmVar 0x6534050 '__n' 'unsigned long':'unsigned long'
| |         `-DeclRefExpr 0x6534510 <col:37> 'const long long':'const long long' lvalue ParmVar 0x6534120 '__x' 'const long long &'
| |-FunctionTemplateDecl 0x6478520 <line:216:3, line:225:5> uninitialized_fill_n
| | |-TemplateTypeParmDecl 0x6478110 <line:216:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6478180 <col:39, col:48> typename _Size
| | |-TemplateTypeParmDecl 0x64781f0 <col:55, col:64> typename _Tp
| | |-FunctionDecl 0x6478480 <line:217:5, line:225:5> uninitialized_fill_n 'void (_ForwardIterator, _Size, const _Tp &)' inline
| | | |-ParmVarDecl 0x6478290 <line:218:26, col:43> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6478300 <col:52, col:58> __n '_Size'
| | | |-ParmVarDecl 0x64783a0 <col:63, col:74> __x 'const _Tp &'
| | | `-CompoundStmt 0x6478a40 <line:219:5, line:225:5>
| | |   |-DeclStmt 0x6478738 <line:220:7, line:221:12>
| | |   | `-TypedefDecl 0x64786f0 <line:220:7, line:221:2> _ValueType 'typename iterator_traits<_ForwardIterator>::value_type'
| | |   `-CallExpr 0x6478a00 <line:223:7, line:224:35> '<dependent type>'
| | |     |-DependentScopeDeclRefExpr 0x6478948 <line:223:7, line:224:2> '<dependent type>' lvalue
| | |     |-DeclRefExpr 0x6478988 <col:18> '_ForwardIterator' lvalue ParmVar 0x6478290 '__first' '_ForwardIterator'
| | |     |-DeclRefExpr 0x64789b0 <col:27> '_Size' lvalue ParmVar 0x6478300 '__n' '_Size'
| | |     `-DeclRefExpr 0x64789d8 <col:32> 'const _Tp' lvalue ParmVar 0x64783a0 '__x' 'const _Tp &'
| | `-FunctionDecl 0x6533380 <line:217:5, line:225:5> uninitialized_fill_n 'void (long long *, unsigned long, const long long &)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument type 'long long'
| |   |-ParmVarDecl 0x65330e0 <line:218:26, col:43> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x6533180 <col:52, col:58> __n 'unsigned long':'unsigned long'
| |   |-ParmVarDecl 0x6533250 <col:63, col:74> __x 'const long long &'
| |   `-CompoundStmt 0x6534440 <line:219:5, line:225:5>
| |     |-DeclStmt 0x6533c48 <line:220:7, line:221:12>
| |     | `-TypedefDecl 0x6533c00 <line:220:7, line:221:2> _ValueType 'typename iterator_traits<long long *>::value_type':'long long'
| |     `-CallExpr 0x65343d0 <line:223:7, line:224:35> 'void'
| |       |-ImplicitCastExpr 0x65343b8 <line:223:7, line:224:2> 'void (*)(long long *, unsigned long, const long long &)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x6534348 <line:223:7, line:224:2> 'void (long long *, unsigned long, const long long &)' lvalue CXXMethod 0x6534200 '__uninit_fill_n' 'void (long long *, unsigned long, const long long &)' (FunctionTemplate 0x6477f30 '__uninit_fill_n')
| |       |-ImplicitCastExpr 0x6534410 <col:18> 'long long *':'long long *' <LValueToRValue>
| |       | `-DeclRefExpr 0x6533dd8 <col:18> 'long long *':'long long *' lvalue ParmVar 0x65330e0 '__first' 'long long *':'long long *'
| |       |-ImplicitCastExpr 0x6534428 <col:27> 'unsigned long':'unsigned long' <LValueToRValue>
| |       | `-DeclRefExpr 0x6533e00 <col:27> 'unsigned long':'unsigned long' lvalue ParmVar 0x6533180 '__n' 'unsigned long':'unsigned long'
| |       `-DeclRefExpr 0x6533e28 <col:32> 'const long long':'const long long' lvalue ParmVar 0x6533250 '__x' 'const long long &'
| |-FunctionTemplateDecl 0x6478f80 <line:233:3, line:252:5> __uninitialized_copy_a
| | |-TemplateTypeParmDecl 0x6478a70 <line:233:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x6478ae0 <col:37, col:46> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6478b50 <line:234:5, col:14> typename _Allocator
| | |-FunctionDecl 0x6478ee0 <line:235:5, line:252:5> __uninitialized_copy_a '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)'
| | | |-ParmVarDecl 0x6478bf0 <line:236:28, col:43> __first '_InputIterator'
| | | |-ParmVarDecl 0x6478c60 <col:52, col:67> __last '_InputIterator'
| | | |-ParmVarDecl 0x6478cd0 <line:237:7, col:24> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x6478da0 <col:34, col:46> __alloc '_Allocator &'
| | | `-CompoundStmt 0x6479990 <line:238:5, line:252:5>
| | |   |-DeclStmt 0x6479080 <line:239:7, col:40>
| | |   | `-VarDecl 0x6479000 <col:7, col:32> __cur '_ForwardIterator'
| | |   |   `-DeclRefExpr 0x6479058 <col:32> '_ForwardIterator' lvalue ParmVar 0x6478cd0 '__result' '_ForwardIterator'
| | |   `-CXXTryStmt 0x6479970 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:251:2>
| | |     |-CompoundStmt 0x6479790 <line:241:2, line:246:2>
| | |     | |-DeclStmt 0x64792b8 <line:242:4, col:58>
| | |     | | `-TypedefDecl 0x6479270 <col:4, col:50> __traits '__gnu_cxx::__alloc_traits<_Allocator>':'__alloc_traits<_Allocator>'
| | |     | |-ForStmt 0x6479708 <line:243:4, line:244:69>
| | |     | | |-<<<NULL>>>
| | |     | | |-<<<NULL>>>
| | |     | | |-CXXOperatorCallExpr 0x6479398 <line:243:11, col:22> '<dependent type>'
| | |     | | | |-UnresolvedLookupExpr 0x6479320 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |     | | | |-DeclRefExpr 0x64792d0 <col:11> '_InputIterator' lvalue ParmVar 0x6478bf0 '__first' '_InputIterator'
| | |     | | | `-DeclRefExpr 0x64792f8 <col:22> '_InputIterator' lvalue ParmVar 0x6478c60 '__last' '_InputIterator'
| | |     | | |-BinaryOperator 0x6479470 <col:30, col:43> '<dependent type>' ','
| | |     | | | |-UnaryOperator 0x6479408 <col:30, col:32> '<dependent type>' prefix '++'
| | |     | | | | `-DeclRefExpr 0x64793e0 <col:32> '_InputIterator' lvalue ParmVar 0x6478bf0 '__first' '_InputIterator'
| | |     | | | `-UnaryOperator 0x6479450 <col:41, col:43> '<dependent type>' prefix '++'
| | |     | | |   `-DeclRefExpr 0x6479428 <col:43> '_ForwardIterator' lvalue Var 0x6479000 '__cur' '_ForwardIterator'
| | |     | | `-CallExpr 0x64796c8 <line:244:6, col:69> '<dependent type>'
| | |     | |   |-DependentScopeDeclRefExpr 0x6479528 <col:6, col:16> '<dependent type>' lvalue
| | |     | |   |-DeclRefExpr 0x6479568 <col:26> '_Allocator' lvalue ParmVar 0x6478da0 '__alloc' '_Allocator &'
| | |     | |   |-CallExpr 0x6479650 <col:35, col:58> '<dependent type>'
| | |     | |   | |-UnresolvedLookupExpr 0x64795b0 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |     | |   | `-UnaryOperator 0x6479630 <col:52, col:53> '<dependent type>' prefix '*'
| | |     | |   |   `-DeclRefExpr 0x6479608 <col:53> '_ForwardIterator' lvalue Var 0x6479000 '__cur' '_ForwardIterator'
| | |     | |   `-UnaryOperator 0x64796a8 <col:61, col:62> '<dependent type>' prefix '*'
| | |     | |     `-DeclRefExpr 0x6479680 <col:62> '_InputIterator' lvalue ParmVar 0x6478bf0 '__first' '_InputIterator'
| | |     | `-ReturnStmt 0x6479770 <line:245:4, col:11>
| | |     |   `-DeclRefExpr 0x6479748 <col:11> '_ForwardIterator' lvalue Var 0x6479000 '__cur' '_ForwardIterator'
| | |     `-CXXCatchStmt 0x6479950 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:251:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x6479928 <line:248:2, line:251:2>
| | |         |-CallExpr 0x64798c8 <line:249:4, col:42> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x64797e0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x6479850 <col:18> '_ForwardIterator' lvalue ParmVar 0x6478cd0 '__result' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x6479878 <col:28> '_ForwardIterator' lvalue Var 0x6479000 '__cur' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x64798a0 <col:35> '_Allocator' lvalue ParmVar 0x6478da0 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x6479908 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |-FunctionTemplateDecl 0x647a060 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:254:3, line:258:66> __uninitialized_copy_a
| | |-TemplateTypeParmDecl 0x64799c0 <line:254:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x6479a30 <col:37, col:46> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x6479aa0 <col:64, col:73> typename _Tp
| | |-FunctionDecl 0x6479fc0 <line:255:5, line:258:66> __uninitialized_copy_a '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp> &)' inline
| | | |-ParmVarDecl 0x6479b40 <line:256:28, col:43> __first '_InputIterator'
| | | |-ParmVarDecl 0x6479bb0 <col:52, col:67> __last '_InputIterator'
| | | |-ParmVarDecl 0x6479c60 <line:257:7, col:24> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x6479e80 <col:34, col:48> 'allocator<_Tp> &'
| | | `-CompoundStmt 0x647a218 <line:258:5, col:66>
| | |   `-ReturnStmt 0x647a1f8 <col:7, col:63>
| | |     `-CallExpr 0x647a1b8 <col:14, col:63> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x647a0e8 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = 'uninitialized_copy' 0x6473760
| | |       |-DeclRefExpr 0x647a140 <col:38> '_InputIterator' lvalue ParmVar 0x6479b40 '__first' '_InputIterator'
| | |       |-DeclRefExpr 0x647a168 <col:47> '_InputIterator' lvalue ParmVar 0x6479bb0 '__last' '_InputIterator'
| | |       `-DeclRefExpr 0x647a190 <col:55> '_ForwardIterator' lvalue ParmVar 0x6479c60 '__result' '_ForwardIterator'
| |-FunctionTemplateDecl 0x647a6d0 <line:260:3, line:269:5> __uninitialized_move_a
| | |-TemplateTypeParmDecl 0x647a240 <line:260:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x647a2b0 <col:37, col:46> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647a320 <line:261:5, col:14> typename _Allocator
| | |-FunctionDecl 0x647a630 <line:262:5, line:269:5> __uninitialized_move_a '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)' inline
| | | |-ParmVarDecl 0x647a3c0 <line:263:28, col:43> __first '_InputIterator'
| | | |-ParmVarDecl 0x647a430 <col:52, col:67> __last '_InputIterator'
| | | |-ParmVarDecl 0x647a4a0 <line:264:7, col:24> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x647a540 <col:34, col:46> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647a900 <line:265:5, line:269:5>
| | |   `-ReturnStmt 0x647a8e0 <line:266:7, line:268:24>
| | |     `-CallExpr 0x647a898 <line:266:14, line:268:24> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x647a758 <line:266:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |       |-ParenExpr 0x647a7e0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1144:44, col:50> '_InputIterator' lvalue
| | |       | `-DeclRefExpr 0x647a7b8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:266:70> '_InputIterator' lvalue ParmVar 0x647a3c0 '__first' '_InputIterator'
| | |       |-ParenExpr 0x647a828 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1144:44, col:50> '_InputIterator' lvalue
| | |       | `-DeclRefExpr 0x647a800 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:267:35> '_InputIterator' lvalue ParmVar 0x647a430 '__last' '_InputIterator'
| | |       |-DeclRefExpr 0x647a848 <line:268:7> '_ForwardIterator' lvalue ParmVar 0x647a4a0 '__result' '_ForwardIterator'
| | |       `-DeclRefExpr 0x647a870 <col:17> '_Allocator' lvalue ParmVar 0x647a540 '__alloc' '_Allocator &'
| |-FunctionTemplateDecl 0x647adb0 <line:271:3, line:282:5> __uninitialized_move_if_noexcept_a
| | |-TemplateTypeParmDecl 0x647a920 <line:271:12, col:21> typename _InputIterator
| | |-TemplateTypeParmDecl 0x647a990 <col:37, col:46> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647aa00 <line:272:5, col:14> typename _Allocator
| | |-FunctionDecl 0x647ad10 <line:273:5, line:282:5> __uninitialized_move_if_noexcept_a '_ForwardIterator (_InputIterator, _InputIterator, _ForwardIterator, _Allocator &)' inline
| | | |-ParmVarDecl 0x647aaa0 <line:274:40, col:55> __first '_InputIterator'
| | | |-ParmVarDecl 0x647ab10 <line:275:12, col:27> __last '_InputIterator'
| | | |-ParmVarDecl 0x647ab80 <line:276:12, col:29> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x647ac20 <line:277:12, col:24> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647afe0 <line:278:5, line:282:5>
| | |   `-ReturnStmt 0x647afc0 <line:279:7, line:281:69>
| | |     `-CallExpr 0x647af78 <line:279:14, line:281:69> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x647ae38 <line:279:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |       |-ParenExpr 0x647aec0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1145:56, col:62> '_InputIterator' lvalue
| | |       | `-DeclRefExpr 0x647ae98 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:280:43> '_InputIterator' lvalue ParmVar 0x647aaa0 '__first' '_InputIterator'
| | |       |-ParenExpr 0x647af08 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1145:56, col:62> '_InputIterator' lvalue
| | |       | `-DeclRefExpr 0x647aee0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:281:43> '_InputIterator' lvalue ParmVar 0x647ab10 '__last' '_InputIterator'
| | |       |-DeclRefExpr 0x647af28 <col:52> '_ForwardIterator' lvalue ParmVar 0x647ab80 '__result' '_ForwardIterator'
| | |       `-DeclRefExpr 0x647af50 <col:62> '_Allocator' lvalue ParmVar 0x647ac20 '__alloc' '_Allocator &'
| |-FunctionTemplateDecl 0x647b510 <line:284:3, line:301:5> __uninitialized_fill_a
| | |-TemplateTypeParmDecl 0x647b000 <line:284:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647b070 <col:39, col:48> typename _Tp
| | |-TemplateTypeParmDecl 0x647b0e0 <col:53, col:62> typename _Allocator
| | |-FunctionDecl 0x647b470 <line:285:5, line:301:5> __uninitialized_fill_a 'void (_ForwardIterator, _ForwardIterator, const _Tp &, _Allocator &)'
| | | |-ParmVarDecl 0x647b180 <line:286:28, col:45> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x647b1f0 <col:54, col:71> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x647b290 <line:287:7, col:18> __x 'const _Tp &'
| | | |-ParmVarDecl 0x647b330 <col:23, col:35> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647be20 <line:288:5, line:301:5>
| | |   |-DeclStmt 0x647b610 <line:289:7, col:39>
| | |   | `-VarDecl 0x647b590 <col:7, col:32> __cur '_ForwardIterator'
| | |   |   `-DeclRefExpr 0x647b5e8 <col:32> '_ForwardIterator' lvalue ParmVar 0x647b180 '__first' '_ForwardIterator'
| | |   `-CXXTryStmt 0x647be00 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:300:2>
| | |     |-CompoundStmt 0x647bbf8 <line:291:2, line:295:2>
| | |     | |-DeclStmt 0x647b7f8 <line:292:4, col:58>
| | |     | | `-TypedefDecl 0x647b7b0 <col:4, col:50> __traits '__gnu_cxx::__alloc_traits<_Allocator>':'__alloc_traits<_Allocator>'
| | |     | `-ForStmt 0x647bbb8 <line:293:4, line:294:64>
| | |     |   |-<<<NULL>>>
| | |     |   |-<<<NULL>>>
| | |     |   |-CXXOperatorCallExpr 0x647b8d8 <line:293:11, col:20> '<dependent type>'
| | |     |   | |-UnresolvedLookupExpr 0x647b860 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | |     |   | |-DeclRefExpr 0x647b810 <col:11> '_ForwardIterator' lvalue Var 0x647b590 '__cur' '_ForwardIterator'
| | |     |   | `-DeclRefExpr 0x647b838 <col:20> '_ForwardIterator' lvalue ParmVar 0x647b1f0 '__last' '_ForwardIterator'
| | |     |   |-UnaryOperator 0x647b948 <col:28, col:30> '<dependent type>' prefix '++'
| | |     |   | `-DeclRefExpr 0x647b920 <col:30> '_ForwardIterator' lvalue Var 0x647b590 '__cur' '_ForwardIterator'
| | |     |   `-CallExpr 0x647bb78 <line:294:6, col:64> '<dependent type>'
| | |     |     |-DependentScopeDeclRefExpr 0x647b9f8 <col:6, col:16> '<dependent type>' lvalue
| | |     |     |-DeclRefExpr 0x647ba38 <col:26> '_Allocator' lvalue ParmVar 0x647b330 '__alloc' '_Allocator &'
| | |     |     |-CallExpr 0x647bb20 <col:35, col:58> '<dependent type>'
| | |     |     | |-UnresolvedLookupExpr 0x647ba80 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |     |     | `-UnaryOperator 0x647bb00 <col:52, col:53> '<dependent type>' prefix '*'
| | |     |     |   `-DeclRefExpr 0x647bad8 <col:53> '_ForwardIterator' lvalue Var 0x647b590 '__cur' '_ForwardIterator'
| | |     |     `-DeclRefExpr 0x647bb50 <col:61> 'const _Tp' lvalue ParmVar 0x647b290 '__x' 'const _Tp &'
| | |     `-CXXCatchStmt 0x647bde0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:300:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x647bdb8 <line:297:2, line:300:2>
| | |         |-CallExpr 0x647bd58 <line:298:4, col:41> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x647bc70 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x647bce0 <col:18> '_ForwardIterator' lvalue ParmVar 0x647b180 '__first' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x647bd08 <col:27> '_ForwardIterator' lvalue Var 0x647b590 '__cur' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x647bd30 <col:34> '_Allocator' lvalue ParmVar 0x647b330 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x647bd98 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |-FunctionTemplateDecl 0x647c460 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:303:3, line:307:54> __uninitialized_fill_a
| | |-TemplateTypeParmDecl 0x647be50 <line:303:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647bec0 <col:39, col:48> typename _Tp
| | |-TemplateTypeParmDecl 0x647bf30 <col:53, col:62> typename _Tp2
| | |-FunctionDecl 0x647c3c0 <line:304:5, line:307:54> __uninitialized_fill_a 'void (_ForwardIterator, _ForwardIterator, const _Tp &, allocator<_Tp2> &)' inline
| | | |-ParmVarDecl 0x647bfd0 <line:305:28, col:45> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x647c040 <col:54, col:71> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x647c0e0 <line:306:7, col:18> __x 'const _Tp &'
| | | |-ParmVarDecl 0x647c280 <col:23, col:38> 'allocator<_Tp2> &'
| | | `-CompoundStmt 0x647c5f8 <line:307:5, col:54>
| | |   `-CallExpr 0x647c5b8 <col:7, col:51> '<dependent type>'
| | |     |-UnresolvedLookupExpr 0x647c4e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'uninitialized_fill' 0x6475e40
| | |     |-DeclRefExpr 0x647c540 <col:31> '_ForwardIterator' lvalue ParmVar 0x647bfd0 '__first' '_ForwardIterator'
| | |     |-DeclRefExpr 0x647c568 <col:40> '_ForwardIterator' lvalue ParmVar 0x647c040 '__last' '_ForwardIterator'
| | |     `-DeclRefExpr 0x647c590 <col:48> 'const _Tp' lvalue ParmVar 0x647c0e0 '__x' 'const _Tp &'
| |-FunctionTemplateDecl 0x647cbe0 <line:309:3, line:327:5> __uninitialized_fill_n_a
| | |-TemplateTypeParmDecl 0x647c620 <line:309:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647c690 <col:39, col:48> typename _Size
| | |-TemplateTypeParmDecl 0x647c700 <col:55, col:64> typename _Tp
| | |-TemplateTypeParmDecl 0x647c770 <line:310:5, col:14> typename _Allocator
| | |-FunctionDecl 0x647cb40 <line:311:5, line:327:5> __uninitialized_fill_n_a 'void (_ForwardIterator, _Size, const _Tp &, _Allocator &)'
| | | |-ParmVarDecl 0x647c820 <line:312:30, col:47> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x647c890 <col:56, col:62> __n '_Size'
| | | |-ParmVarDecl 0x647c930 <line:313:9, col:20> __x 'const _Tp &'
| | | |-ParmVarDecl 0x647ca00 <col:25, col:37> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647d560 <line:314:5, line:327:5>
| | |   |-DeclStmt 0x647cce0 <line:315:7, col:39>
| | |   | `-VarDecl 0x647cc60 <col:7, col:32> __cur '_ForwardIterator'
| | |   |   `-DeclRefExpr 0x647ccb8 <col:32> '_ForwardIterator' lvalue ParmVar 0x647c820 '__first' '_ForwardIterator'
| | |   `-CXXTryStmt 0x647d540 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:326:2>
| | |     |-CompoundStmt 0x647d368 <line:317:2, line:321:2>
| | |     | |-DeclStmt 0x647cf18 <line:318:4, col:58>
| | |     | | `-TypedefDecl 0x647ced0 <col:4, col:50> __traits '__gnu_cxx::__alloc_traits<_Allocator>':'__alloc_traits<_Allocator>'
| | |     | `-ForStmt 0x647d328 <line:319:4, line:320:64>
| | |     |   |-<<<NULL>>>
| | |     |   |-<<<NULL>>>
| | |     |   |-CXXOperatorCallExpr 0x647cfe0 <line:319:11, col:17> '<dependent type>'
| | |     |   | |-UnresolvedLookupExpr 0x647cf78 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | |     |   | |-DeclRefExpr 0x647cf30 <col:11> '_Size' lvalue ParmVar 0x647c890 '__n' '_Size'
| | |     |   | `-IntegerLiteral 0x647cf58 <col:17> 'int' 0
| | |     |   |-BinaryOperator 0x647d0b8 <col:20, col:29> '<dependent type>' ','
| | |     |   | |-UnaryOperator 0x647d050 <col:20, col:22> '<dependent type>' prefix '--'
| | |     |   | | `-DeclRefExpr 0x647d028 <col:22> '_Size' lvalue ParmVar 0x647c890 '__n' '_Size'
| | |     |   | `-UnaryOperator 0x647d098 <col:27, col:29> '<dependent type>' prefix '++'
| | |     |   |   `-DeclRefExpr 0x647d070 <col:29> '_ForwardIterator' lvalue Var 0x647cc60 '__cur' '_ForwardIterator'
| | |     |   `-CallExpr 0x647d2e8 <line:320:6, col:64> '<dependent type>'
| | |     |     |-DependentScopeDeclRefExpr 0x647d168 <col:6, col:16> '<dependent type>' lvalue
| | |     |     |-DeclRefExpr 0x647d1a8 <col:26> '_Allocator' lvalue ParmVar 0x647ca00 '__alloc' '_Allocator &'
| | |     |     |-CallExpr 0x647d290 <col:35, col:58> '<dependent type>'
| | |     |     | |-UnresolvedLookupExpr 0x647d1f0 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | |     |     | `-UnaryOperator 0x647d270 <col:52, col:53> '<dependent type>' prefix '*'
| | |     |     |   `-DeclRefExpr 0x647d248 <col:53> '_ForwardIterator' lvalue Var 0x647cc60 '__cur' '_ForwardIterator'
| | |     |     `-DeclRefExpr 0x647d2c0 <col:61> 'const _Tp' lvalue ParmVar 0x647c930 '__x' 'const _Tp &'
| | |     `-CXXCatchStmt 0x647d520 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:326:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x647d4f8 <line:323:2, line:326:2>
| | |         |-CallExpr 0x647d498 <line:324:4, col:41> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x647d3b0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x647d420 <col:18> '_ForwardIterator' lvalue ParmVar 0x647c820 '__first' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x647d448 <col:27> '_ForwardIterator' lvalue Var 0x647cc60 '__cur' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x647d470 <col:34> '_Allocator' lvalue ParmVar 0x647ca00 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x647d4d8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | `-FunctionDecl 0x6532240 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:311:5, line:327:5> __uninitialized_fill_n_a 'void (long long *, unsigned long, const long long &, class std::allocator<long long> &)'
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument type 'long long'
| |   |-TemplateArgument type 'class std::allocator<long long>'
| |   |-ParmVarDecl 0x6531ec0 <line:312:30, col:47> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x6531f60 <col:56, col:62> __n 'unsigned long':'unsigned long'
| |   |-ParmVarDecl 0x6532030 <line:313:9, col:20> __x 'const long long &'
| |   `-ParmVarDecl 0x6532100 <col:25, col:37> __alloc 'class std::allocator<long long> &'
| |-FunctionTemplateDecl 0x647dd20 <line:329:3, line:334:53> __uninitialized_fill_n_a
| | |-TemplateTypeParmDecl 0x647d590 <line:329:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647d600 <col:39, col:48> typename _Size
| | |-TemplateTypeParmDecl 0x647d670 <col:55, col:64> typename _Tp
| | |-TemplateTypeParmDecl 0x647d6e0 <line:330:5, col:14> typename _Tp2
| | |-FunctionDecl 0x647dc80 <line:331:5, line:334:53> __uninitialized_fill_n_a 'void (_ForwardIterator, _Size, const _Tp &, allocator<_Tp2> &)' inline
| | | |-ParmVarDecl 0x647d790 <line:332:30, col:47> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x647d800 <col:56, col:62> __n '_Size'
| | | |-ParmVarDecl 0x647d8a0 <line:333:9, col:20> __x 'const _Tp &'
| | | |-ParmVarDecl 0x647dac0 <col:25, col:40> 'allocator<_Tp2> &'
| | | `-CompoundStmt 0x647deb8 <line:334:5, col:53>
| | |   `-CallExpr 0x647de78 <col:7, col:50> '<dependent type>'
| | |     |-UnresolvedLookupExpr 0x647dda8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'uninitialized_fill_n' 0x6478520
| | |     |-DeclRefExpr 0x647de00 <col:33> '_ForwardIterator' lvalue ParmVar 0x647d790 '__first' '_ForwardIterator'
| | |     |-DeclRefExpr 0x647de28 <col:42> '_Size' lvalue ParmVar 0x647d800 '__n' '_Size'
| | |     `-DeclRefExpr 0x647de50 <col:47> 'const _Tp' lvalue ParmVar 0x647d8a0 '__x' 'const _Tp &'
| | `-FunctionDecl 0x65328e0 <line:331:5, line:334:53> __uninitialized_fill_n_a 'void (long long *, unsigned long, const long long &, allocator<long long> &)' inline
| |   |-TemplateArgument type 'long long *'
| |   |-TemplateArgument type 'unsigned long'
| |   |-TemplateArgument type 'long long'
| |   |-TemplateArgument type 'long long'
| |   |-ParmVarDecl 0x6532530 <line:332:30, col:47> __first 'long long *':'long long *'
| |   |-ParmVarDecl 0x65325d0 <col:56, col:62> __n 'unsigned long':'unsigned long'
| |   |-ParmVarDecl 0x65326a0 <line:333:9, col:20> __x 'const long long &'
| |   |-ParmVarDecl 0x65327f0 <col:25, col:40> 'allocator<long long> &'
| |   `-CompoundStmt 0x65335e0 <line:334:5, col:53>
| |     `-CallExpr 0x6533570 <col:7, col:50> 'void'
| |       |-ImplicitCastExpr 0x6533558 <col:7, col:12> 'void (*)(long long *, unsigned long, const long long &)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x65334c0 <col:7, col:12> 'void (long long *, unsigned long, const long long &)' lvalue Function 0x6533380 'uninitialized_fill_n' 'void (long long *, unsigned long, const long long &)' (FunctionTemplate 0x6478520 'uninitialized_fill_n')
| |       |-ImplicitCastExpr 0x65335b0 <col:33> 'long long *':'long long *' <LValueToRValue>
| |       | `-DeclRefExpr 0x6532f08 <col:33> 'long long *':'long long *' lvalue ParmVar 0x6532530 '__first' 'long long *':'long long *'
| |       |-ImplicitCastExpr 0x65335c8 <col:42> 'unsigned long':'unsigned long' <LValueToRValue>
| |       | `-DeclRefExpr 0x6532f30 <col:42> 'unsigned long':'unsigned long' lvalue ParmVar 0x65325d0 '__n' 'unsigned long':'unsigned long'
| |       `-DeclRefExpr 0x6532f58 <col:47> 'const long long':'const long long' lvalue ParmVar 0x65326a0 '__x' 'const long long &'
| |-FunctionTemplateDecl 0x647e550 <line:346:3, line:368:5> __uninitialized_copy_move
| | |-TemplateTypeParmDecl 0x647dee0 <line:346:12, col:21> typename _InputIterator1
| | |-TemplateTypeParmDecl 0x647df50 <col:38, col:47> typename _InputIterator2
| | |-TemplateTypeParmDecl 0x647dfc0 <line:347:5, col:14> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647e030 <col:32, col:41> typename _Allocator
| | |-FunctionDecl 0x647e4b0 <line:348:5, line:368:5> __uninitialized_copy_move '_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)' inline
| | | |-ParmVarDecl 0x647e0e0 <line:349:31, col:47> __first1 '_InputIterator1'
| | | |-ParmVarDecl 0x647e150 <line:350:10, col:26> __last1 '_InputIterator1'
| | | |-ParmVarDecl 0x647e1c0 <line:351:10, col:26> __first2 '_InputIterator2'
| | | |-ParmVarDecl 0x647e230 <line:352:10, col:26> __last2 '_InputIterator2'
| | | |-ParmVarDecl 0x647e2a0 <line:353:10, col:27> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x647e340 <line:354:10, col:22> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647eb28 <line:355:5, line:368:5>
| | |   |-DeclStmt 0x647e7a0 <line:356:7, line:358:19>
| | |   | `-VarDecl 0x647e5e0 <line:356:7, line:358:18> __mid '_ForwardIterator'
| | |   |   `-CallExpr 0x647e758 <line:356:32, line:358:18> '<dependent type>'
| | |   |     |-UnresolvedLookupExpr 0x647e658 <line:356:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |   |     |-DeclRefExpr 0x647e6b8 <col:60> '_InputIterator1' lvalue ParmVar 0x647e0e0 '__first1' '_InputIterator1'
| | |   |     |-DeclRefExpr 0x647e6e0 <col:70> '_InputIterator1' lvalue ParmVar 0x647e150 '__last1' '_InputIterator1'
| | |   |     |-DeclRefExpr 0x647e708 <line:357:11> '_ForwardIterator' lvalue ParmVar 0x647e2a0 '__result' '_ForwardIterator'
| | |   |     `-DeclRefExpr 0x647e730 <line:358:11> '_Allocator' lvalue ParmVar 0x647e340 '__alloc' '_Allocator &'
| | |   `-CXXTryStmt 0x647eb08 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:367:2>
| | |     |-CompoundStmt 0x647e938 <line:360:2, line:362:2>
| | |     | `-ReturnStmt 0x647e918 <line:361:4, col:72>
| | |     |   `-CallExpr 0x647e8d0 <col:11, col:72> '<dependent type>'
| | |     |     |-UnresolvedLookupExpr 0x647e7d8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| | |     |     |-DeclRefExpr 0x647e830 <col:39> '_InputIterator2' lvalue ParmVar 0x647e1c0 '__first2' '_InputIterator2'
| | |     |     |-DeclRefExpr 0x647e858 <col:49> '_InputIterator2' lvalue ParmVar 0x647e230 '__last2' '_InputIterator2'
| | |     |     |-DeclRefExpr 0x647e880 <col:58> '_ForwardIterator' lvalue Var 0x647e5e0 '__mid' '_ForwardIterator'
| | |     |     `-DeclRefExpr 0x647e8a8 <col:65> '_Allocator' lvalue ParmVar 0x647e340 '__alloc' '_Allocator &'
| | |     `-CXXCatchStmt 0x647eae8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:367:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x647eac0 <line:364:2, line:367:2>
| | |         |-CallExpr 0x647ea60 <line:365:4, col:42> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x647e978 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x647e9e8 <col:18> '_ForwardIterator' lvalue ParmVar 0x647e2a0 '__result' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x647ea10 <col:28> '_ForwardIterator' lvalue Var 0x647e5e0 '__mid' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x647ea38 <col:35> '_Allocator' lvalue ParmVar 0x647e340 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x647eaa0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |-FunctionTemplateDecl 0x647f160 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:374:3, line:396:5> __uninitialized_move_copy
| | |-TemplateTypeParmDecl 0x647eb50 <line:374:12, col:21> typename _InputIterator1
| | |-TemplateTypeParmDecl 0x647ebc0 <col:38, col:47> typename _InputIterator2
| | |-TemplateTypeParmDecl 0x647ec30 <line:375:5, col:14> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647eca0 <col:32, col:41> typename _Allocator
| | |-FunctionDecl 0x647f0c0 <line:376:5, line:396:5> __uninitialized_move_copy '_ForwardIterator (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _ForwardIterator, _Allocator &)' inline
| | | |-ParmVarDecl 0x647ed50 <line:377:31, col:47> __first1 '_InputIterator1'
| | | |-ParmVarDecl 0x647edc0 <line:378:10, col:26> __last1 '_InputIterator1'
| | | |-ParmVarDecl 0x647ee30 <line:379:10, col:26> __first2 '_InputIterator2'
| | | |-ParmVarDecl 0x647eea0 <line:380:10, col:26> __last2 '_InputIterator2'
| | | |-ParmVarDecl 0x647ef10 <line:381:10, col:27> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x647efb0 <line:382:10, col:22> __alloc '_Allocator &'
| | | `-CompoundStmt 0x647f738 <line:383:5, line:396:5>
| | |   |-DeclStmt 0x647f3a8 <line:384:7, line:386:19>
| | |   | `-VarDecl 0x647f1f0 <line:384:7, line:386:18> __mid '_ForwardIterator'
| | |   |   `-CallExpr 0x647f360 <line:384:32, line:386:18> '<dependent type>'
| | |   |     |-UnresolvedLookupExpr 0x647f268 <line:384:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| | |   |     |-DeclRefExpr 0x647f2c0 <col:60> '_InputIterator1' lvalue ParmVar 0x647ed50 '__first1' '_InputIterator1'
| | |   |     |-DeclRefExpr 0x647f2e8 <col:70> '_InputIterator1' lvalue ParmVar 0x647edc0 '__last1' '_InputIterator1'
| | |   |     |-DeclRefExpr 0x647f310 <line:385:11> '_ForwardIterator' lvalue ParmVar 0x647ef10 '__result' '_ForwardIterator'
| | |   |     `-DeclRefExpr 0x647f338 <line:386:11> '_Allocator' lvalue ParmVar 0x647efb0 '__alloc' '_Allocator &'
| | |   `-CXXTryStmt 0x647f718 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:395:2>
| | |     |-CompoundStmt 0x647f548 <line:388:2, line:390:2>
| | |     | `-ReturnStmt 0x647f528 <line:389:4, col:72>
| | |     |   `-CallExpr 0x647f4e0 <col:11, col:72> '<dependent type>'
| | |     |     |-UnresolvedLookupExpr 0x647f3e0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |     |     |-DeclRefExpr 0x647f440 <col:39> '_InputIterator2' lvalue ParmVar 0x647ee30 '__first2' '_InputIterator2'
| | |     |     |-DeclRefExpr 0x647f468 <col:49> '_InputIterator2' lvalue ParmVar 0x647eea0 '__last2' '_InputIterator2'
| | |     |     |-DeclRefExpr 0x647f490 <col:58> '_ForwardIterator' lvalue Var 0x647f1f0 '__mid' '_ForwardIterator'
| | |     |     `-DeclRefExpr 0x647f4b8 <col:65> '_Allocator' lvalue ParmVar 0x647efb0 '__alloc' '_Allocator &'
| | |     `-CXXCatchStmt 0x647f6f8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:395:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x647f6d0 <line:392:2, line:395:2>
| | |         |-CallExpr 0x647f670 <line:393:4, col:42> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x647f588 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x647f5f8 <col:18> '_ForwardIterator' lvalue ParmVar 0x647ef10 '__result' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x647f620 <col:28> '_ForwardIterator' lvalue Var 0x647f1f0 '__mid' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x647f648 <col:35> '_Allocator' lvalue ParmVar 0x647efb0 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x647f6b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |-FunctionTemplateDecl 0x647fe40 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:401:3, line:418:5> __uninitialized_fill_move
| | |-TemplateTypeParmDecl 0x647f760 <line:401:12, col:21> typename _ForwardIterator
| | |-TemplateTypeParmDecl 0x647f7d0 <col:39, col:48> typename _Tp
| | |-TemplateTypeParmDecl 0x647f840 <col:53, col:62> typename _InputIterator
| | |-TemplateTypeParmDecl 0x647f8b0 <line:402:5, col:14> typename _Allocator
| | |-FunctionDecl 0x647fda0 <line:403:5, line:418:5> __uninitialized_fill_move '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _InputIterator, _InputIterator, _Allocator &)' inline
| | | |-ParmVarDecl 0x647f960 <line:404:31, col:48> __result '_ForwardIterator'
| | | |-ParmVarDecl 0x647f9d0 <col:58, col:75> __mid '_ForwardIterator'
| | | |-ParmVarDecl 0x647fa70 <line:405:10, col:21> __x 'const _Tp &'
| | | |-ParmVarDecl 0x647fae0 <col:26, col:41> __first '_InputIterator'
| | | |-ParmVarDecl 0x647fb50 <line:406:10, col:25> __last '_InputIterator'
| | | |-ParmVarDecl 0x647fbf0 <col:33, col:45> __alloc '_Allocator &'
| | | `-CompoundStmt 0x6480390 <line:407:5, line:418:5>
| | |   |-CallExpr 0x647ffd8 <line:408:7, col:64> '<dependent type>'
| | |   | |-UnresolvedLookupExpr 0x647fed8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_a' 0x647b510 0x647c460
| | |   | |-DeclRefExpr 0x647ff38 <col:35> '_ForwardIterator' lvalue ParmVar 0x647f960 '__result' '_ForwardIterator'
| | |   | |-DeclRefExpr 0x647ff60 <col:45> '_ForwardIterator' lvalue ParmVar 0x647f9d0 '__mid' '_ForwardIterator'
| | |   | |-DeclRefExpr 0x647ff88 <col:52> 'const _Tp' lvalue ParmVar 0x647fa70 '__x' 'const _Tp &'
| | |   | `-DeclRefExpr 0x647ffb0 <col:57> '_Allocator' lvalue ParmVar 0x647fbf0 '__alloc' '_Allocator &'
| | |   `-CXXTryStmt 0x6480370 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:417:2>
| | |     |-CompoundStmt 0x64801a0 <line:410:2, line:412:2>
| | |     | `-ReturnStmt 0x6480180 <line:411:4, col:70>
| | |     |   `-CallExpr 0x6480138 <col:11, col:70> '<dependent type>'
| | |     |     |-UnresolvedLookupExpr 0x6480040 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| | |     |     |-DeclRefExpr 0x6480098 <col:39> '_InputIterator' lvalue ParmVar 0x647fae0 '__first' '_InputIterator'
| | |     |     |-DeclRefExpr 0x64800c0 <col:48> '_InputIterator' lvalue ParmVar 0x647fb50 '__last' '_InputIterator'
| | |     |     |-DeclRefExpr 0x64800e8 <col:56> '_ForwardIterator' lvalue ParmVar 0x647f9d0 '__mid' '_ForwardIterator'
| | |     |     `-DeclRefExpr 0x6480110 <col:63> '_Allocator' lvalue ParmVar 0x647fbf0 '__alloc' '_Allocator &'
| | |     `-CXXCatchStmt 0x6480350 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:417:2>
| | |       |-<<<NULL>>>
| | |       `-CompoundStmt 0x6480328 <line:414:2, line:417:2>
| | |         |-CallExpr 0x64802c8 <line:415:4, col:42> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x64801e0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |         | |-DeclRefExpr 0x6480250 <col:18> '_ForwardIterator' lvalue ParmVar 0x647f960 '__result' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x6480278 <col:28> '_ForwardIterator' lvalue ParmVar 0x647f9d0 '__mid' '_ForwardIterator'
| | |         | `-DeclRefExpr 0x64802a0 <col:35> '_Allocator' lvalue ParmVar 0x647fbf0 '__alloc' '_Allocator &'
| | |         `-CXXThrowExpr 0x6480308 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| `-FunctionTemplateDecl 0x6480a60 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:423:3, line:443:5> __uninitialized_move_fill
|   |-TemplateTypeParmDecl 0x64803c0 <line:423:12, col:21> typename _InputIterator
|   |-TemplateTypeParmDecl 0x6480430 <col:37, col:46> typename _ForwardIterator
|   |-TemplateTypeParmDecl 0x64804a0 <col:64, col:73> typename _Tp
|   |-TemplateTypeParmDecl 0x6480510 <line:424:5, col:14> typename _Allocator
|   |-FunctionDecl 0x64809c0 <line:425:5, line:443:5> __uninitialized_move_fill 'void (_InputIterator, _InputIterator, _ForwardIterator, _ForwardIterator, const _Tp &, _Allocator &)' inline
|   | |-ParmVarDecl 0x64805c0 <line:426:31, col:46> __first1 '_InputIterator'
|   | |-ParmVarDecl 0x6480630 <col:56, col:71> __last1 '_InputIterator'
|   | |-ParmVarDecl 0x64806a0 <line:427:10, col:27> __first2 '_ForwardIterator'
|   | |-ParmVarDecl 0x6480710 <line:428:10, col:27> __last2 '_ForwardIterator'
|   | |-ParmVarDecl 0x64807b0 <col:36, col:47> __x 'const _Tp &'
|   | |-ParmVarDecl 0x6480850 <line:429:10, col:22> __alloc '_Allocator &'
|   | `-CompoundStmt 0x6481018 <line:430:5, line:443:5>
|   |   |-DeclStmt 0x6480ca8 <line:431:7, line:433:20>
|   |   | `-VarDecl 0x6480af0 <line:431:7, line:433:19> __mid2 '_ForwardIterator'
|   |   |   `-CallExpr 0x6480c60 <line:431:33, line:433:19> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x6480b68 <line:431:33, col:38> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
|   |   |     |-DeclRefExpr 0x6480bc0 <col:61> '_InputIterator' lvalue ParmVar 0x64805c0 '__first1' '_InputIterator'
|   |   |     |-DeclRefExpr 0x6480be8 <col:71> '_InputIterator' lvalue ParmVar 0x6480630 '__last1' '_InputIterator'
|   |   |     |-DeclRefExpr 0x6480c10 <line:432:12> '_ForwardIterator' lvalue ParmVar 0x64806a0 '__first2' '_ForwardIterator'
|   |   |     `-DeclRefExpr 0x6480c38 <line:433:12> '_Allocator' lvalue ParmVar 0x6480850 '__alloc' '_Allocator &'
|   |   `-CXXTryStmt 0x6480ff8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:442:2>
|   |     |-CompoundStmt 0x6480e28 <line:435:2, line:437:2>
|   |     | `-CallExpr 0x6480de0 <line:436:4, col:61> '<dependent type>'
|   |     |   |-UnresolvedLookupExpr 0x6480ce0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_a' 0x647b510 0x647c460
|   |     |   |-DeclRefExpr 0x6480d40 <col:32> '_ForwardIterator' lvalue Var 0x6480af0 '__mid2' '_ForwardIterator'
|   |     |   |-DeclRefExpr 0x6480d68 <col:40> '_ForwardIterator' lvalue ParmVar 0x6480710 '__last2' '_ForwardIterator'
|   |     |   |-DeclRefExpr 0x6480d90 <col:49> 'const _Tp' lvalue ParmVar 0x64807b0 '__x' 'const _Tp &'
|   |     |   `-DeclRefExpr 0x6480db8 <col:54> '_Allocator' lvalue ParmVar 0x6480850 '__alloc' '_Allocator &'
|   |     `-CXXCatchStmt 0x6480fd8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_uninitialized.h:442:2>
|   |       |-<<<NULL>>>
|   |       `-CompoundStmt 0x6480fb0 <line:439:2, line:442:2>
|   |         |-CallExpr 0x6480f50 <line:440:4, col:43> '<dependent type>'
|   |         | |-UnresolvedLookupExpr 0x6480e68 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
|   |         | |-DeclRefExpr 0x6480ed8 <col:18> '_ForwardIterator' lvalue ParmVar 0x64806a0 '__first2' '_ForwardIterator'
|   |         | |-DeclRefExpr 0x6480f00 <col:28> '_ForwardIterator' lvalue Var 0x6480af0 '__mid2' '_ForwardIterator'
|   |         | `-DeclRefExpr 0x6480f28 <col:36> '_Allocator' lvalue ParmVar 0x6480850 '__alloc' '_Allocator &'
|   |         `-CXXThrowExpr 0x6480f90 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
|-NamespaceDecl 0x6481070 prev 0x6471ba0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:66:1, line:1455:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x64810d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-ClassTemplateDecl 0x64812a0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:71:3, line:185:5> _Vector_base
| | |-TemplateTypeParmDecl 0x6481110 <line:71:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x6481180 <col:26, col:35> typename _Alloc
| | |-CXXRecordDecl 0x6481210 <line:72:5, line:185:5> struct _Vector_base definition
| | | |-CXXRecordDecl 0x6481540 <line:72:5, col:12> struct _Vector_base
| | | |-TypedefDecl 0x6481900 <line:74:7, line:75:28> _Tp_alloc_type 'typename __gnu_cxx::__alloc_traits<_Alloc>::template __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Tp>::other'
| | | |-TypedefDecl 0x6481b80 <line:76:7, line:77:9> pointer 'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | |-CXXRecordDecl 0x6481bd0 <line:79:7, line:107:7> struct _Vector_impl definition
| | | | |-public '_Tp_alloc_type':'typename __gnu_cxx::__alloc_traits<_Alloc>::template __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Tp>::other'
| | | | |-CXXRecordDecl 0x64828b0 <line:79:7, col:14> struct _Vector_impl
| | | | |-FieldDecl 0x6482970 <line:82:2, col:10> _M_start 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | |-FieldDecl 0x64829d0 <line:83:2, col:10> _M_finish 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | |-FieldDecl 0x6482a30 <line:84:2, col:10> _M_end_of_storage 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | |-CXXConstructorDecl 0x6482ac0 <line:86:2, line:88:4> _Vector_impl 'void (void)'
| | | | | |-CXXCtorInitializer '_Tp_alloc_type':'typename __gnu_cxx::__alloc_traits<_Alloc>::template __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Tp>::other'
| | | | | | |-ParenListExpr 0x6484258 <line:87:18, col:19> 'NULL TYPE'
| | | | | |-CXXCtorInitializer Field 0x6482970 '_M_start' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x64842d8 <col:30, col:32> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x64842b8 <col:31> 'int' 0
| | | | | |-CXXCtorInitializer Field 0x64829d0 '_M_finish' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x6484358 <col:44, col:46> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x6484338 <col:45> 'int' 0
| | | | | |-CXXCtorInitializer Field 0x6482a30 '_M_end_of_storage' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x64843d8 <col:66, col:68> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x64843b8 <col:67> 'int' 0
| | | | | `-CompoundStmt 0x6484458 <line:88:2, col:4>
| | | | |-CXXConstructorDecl 0x6482cf0 <line:90:2, line:92:4> _Vector_impl 'void (const _Tp_alloc_type &)'
| | | | | |-ParmVarDecl 0x6482bf0 <line:90:15, col:37> __a 'const _Tp_alloc_type &'
| | | | | |-CXXCtorInitializer '_Tp_alloc_type':'typename __gnu_cxx::__alloc_traits<_Alloc>::template __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Tp>::other'
| | | | | | |-ParenListExpr 0x6484498 <line:91:18, col:22> 'NULL TYPE'
| | | | | | | `-DeclRefExpr 0x6484470 <col:19> 'const _Tp_alloc_type':'const typename __gnu_cxx::__alloc_traits<_Alloc>::template __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Tp>::other' lvalue ParmVar 0x6482bf0 '__a' 'const _Tp_alloc_type &'
| | | | | |-CXXCtorInitializer Field 0x6482970 '_M_start' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x6484528 <col:33, col:35> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x6484508 <col:34> 'int' 0
| | | | | |-CXXCtorInitializer Field 0x64829d0 '_M_finish' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x64845a8 <col:47, col:49> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x6484588 <col:48> 'int' 0
| | | | | |-CXXCtorInitializer Field 0x6482a30 '_M_end_of_storage' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | | | |-ParenListExpr 0x6484628 <col:69, col:71> 'NULL TYPE'
| | | | | | | `-IntegerLiteral 0x6484608 <col:70> 'int' 0
| | | | | `-CompoundStmt 0x64846a8 <line:92:2, col:4>
| | | | `-CXXMethodDecl 0x6482eb0 <line:101:2, line:106:2> _M_swap_data 'void (struct std::_Vector_base::_Vector_impl &)'
| | | |   |-ParmVarDecl 0x6482df0 <line:101:20, col:34> __x 'struct std::_Vector_base::_Vector_impl &'
| | | |   `-CompoundStmt 0x6487ec0 <line:102:2, line:106:2>
| | | |     |-CallExpr 0x6487b88 <line:103:4, col:36> '<dependent type>'
| | | |     | |-UnresolvedLookupExpr 0x64846f8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0
| | | |     | |-MemberExpr 0x6484770 <col:14> 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer' lvalue ->_M_start 0x6482970
| | | |     | | `-CXXThisExpr 0x6484758 <col:14> 'struct std::_Vector_base::_Vector_impl *' this
| | | |     | `-CXXDependentScopeMemberExpr 0x6487b30 <col:24, col:28> '<dependent type>' lvalue
| | | |     |   `-DeclRefExpr 0x64847a0 <col:24> 'struct std::_Vector_base::_Vector_impl' lvalue ParmVar 0x6482df0 '__x' 'struct std::_Vector_base::_Vector_impl &'
| | | |     |-CallExpr 0x6487d08 <line:104:4, col:38> '<dependent type>'
| | | |     | |-UnresolvedLookupExpr 0x6487be0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0
| | | |     | |-MemberExpr 0x6487c58 <col:14> 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer' lvalue ->_M_finish 0x64829d0
| | | |     | | `-CXXThisExpr 0x6487c40 <col:14> 'struct std::_Vector_base::_Vector_impl *' this
| | | |     | `-CXXDependentScopeMemberExpr 0x6487cb0 <col:25, col:29> '<dependent type>' lvalue
| | | |     |   `-DeclRefExpr 0x6487c88 <col:25> 'struct std::_Vector_base::_Vector_impl' lvalue ParmVar 0x6482df0 '__x' 'struct std::_Vector_base::_Vector_impl &'
| | | |     `-CallExpr 0x6487e88 <line:105:4, col:54> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x6487d60 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0
| | | |       |-MemberExpr 0x6487dd8 <col:14> 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer' lvalue ->_M_end_of_storage 0x6482a30
| | | |       | `-CXXThisExpr 0x6487dc0 <col:14> 'struct std::_Vector_base::_Vector_impl *' this
| | | |       `-CXXDependentScopeMemberExpr 0x6487e30 <col:33, col:37> '<dependent type>' lvalue
| | | |         `-DeclRefExpr 0x6487e08 <col:33> 'struct std::_Vector_base::_Vector_impl' lvalue ParmVar 0x6482df0 '__x' 'struct std::_Vector_base::_Vector_impl &'
| | | |-AccessSpecDecl 0x6482f60 <line:109:5, col:11> public
| | | |-TypedefDecl 0x6482fa0 <line:110:7, col:22> allocator_type '_Alloc'
| | | |-CXXMethodDecl 0x64830d0 <line:112:7, line:114:63> _M_get_Tp_allocator '_Tp_alloc_type &(void)'
| | | | `-CompoundStmt 0x6488058 <col:7, col:63>
| | | |   `-ReturnStmt 0x6488038 <col:9, col:60>
| | | |     `-UnaryOperator 0x6488018 <col:16, col:60> '<dependent type>' prefix '*'
| | | |       `-CXXStaticCastExpr 0x6487fe8 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
| | | |         `-UnaryOperator 0x6487f60 <col:46, col:53> '<dependent type>' prefix '&'
| | | |           `-CXXDependentScopeMemberExpr 0x6487f08 <col:47, col:53> '<dependent type>' lvalue
| | | |             `-CXXThisExpr 0x6487ef0 <col:47> '_Vector_base<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x64831f0 <line:116:7, line:118:69> _M_get_Tp_allocator 'const _Tp_alloc_type &(void) const'
| | | | `-CompoundStmt 0x6488218 <col:7, col:69>
| | | |   `-ReturnStmt 0x64881f8 <col:9, col:66>
| | | |     `-UnaryOperator 0x64881d8 <col:16, col:66> '<dependent type>' prefix '*'
| | | |       `-CXXStaticCastExpr 0x64881a8 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
| | | |         `-UnaryOperator 0x6488118 <col:52, col:59> '<dependent type>' prefix '&'
| | | |           `-CXXDependentScopeMemberExpr 0x64880c0 <col:53, col:59> '<dependent type>' lvalue
| | | |             `-CXXThisExpr 0x64880a8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x6483330 <line:120:7, line:122:55> get_allocator 'allocator_type (void) const'
| | | | `-CompoundStmt 0x6488348 <col:7, col:55>
| | | |   `-ReturnStmt 0x6488328 <col:9, col:52>
| | | |     `-CXXUnresolvedConstructExpr 0x64882f8 <col:16, col:52> 'allocator_type':'_Alloc'
| | | |       `-CallExpr 0x64882d0 <col:31, col:51> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x6488260 <col:31> '<bound member function type>' lvalue
| | | |-CXXConstructorDecl 0x6483410 <line:124:7, line:125:21> _Vector_base<_Tp, _Alloc> 'void (void)'
| | | | |-CXXCtorInitializer Field 0x6483c40 '_M_impl' 'struct std::_Vector_base::_Vector_impl'
| | | | | |-ParenListExpr 0x6488368 <col:16, col:17> 'NULL TYPE'
| | | | `-CompoundStmt 0x64883c0 <col:19, col:21>
| | | |-CXXConstructorDecl 0x6483610 <line:127:7, line:128:24> _Vector_base<_Tp, _Alloc> 'void (const allocator_type &)'
| | | | |-ParmVarDecl 0x6483510 <line:127:20, col:42> __a 'const allocator_type &'
| | | | |-CXXCtorInitializer Field 0x6483c40 '_M_impl' 'struct std::_Vector_base::_Vector_impl'
| | | | | |-ParenListExpr 0x6488400 <line:128:16, col:20> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x64883d8 <col:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x6483510 '__a' 'const allocator_type &'
| | | | `-CompoundStmt 0x6488460 <col:22, col:24>
| | | |-CXXConstructorDecl 0x64837e0 <line:130:7, line:132:33> _Vector_base<_Tp, _Alloc> 'void (size_t)'
| | | | |-ParmVarDecl 0x64836e0 <line:130:20, col:27> __n 'size_t':'unsigned long'
| | | | |-CXXCtorInitializer Field 0x6483c40 '_M_impl' 'struct std::_Vector_base::_Vector_impl'
| | | | | |-ParenListExpr 0x6488478 <line:131:16, col:17> 'NULL TYPE'
| | | | `-CompoundStmt 0x6488570 <line:132:7, col:33>
| | | |   `-CallExpr 0x6488540 <col:9, col:30> '<dependent type>'
| | | |     |-MemberExpr 0x64884e8 <col:9> '<bound member function type>' ->_M_create_storage 0x6484150
| | | |     | `-CXXThisExpr 0x64884d0 <col:9> '_Vector_base<_Tp, _Alloc> *' this
| | | |     `-DeclRefExpr 0x6488518 <col:27> 'size_t':'unsigned long' lvalue ParmVar 0x64836e0 '__n' 'size_t':'unsigned long'
| | | |-CXXConstructorDecl 0x6483a30 <line:134:7, line:136:33> _Vector_base<_Tp, _Alloc> 'void (size_t, const allocator_type &)'
| | | | |-ParmVarDecl 0x64838b0 <line:134:20, col:27> __n 'size_t':'unsigned long'
| | | | |-ParmVarDecl 0x6483920 <col:32, col:54> __a 'const allocator_type &'
| | | | |-CXXCtorInitializer Field 0x6483c40 '_M_impl' 'struct std::_Vector_base::_Vector_impl'
| | | | | |-ParenListExpr 0x64885b8 <line:135:16, col:20> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x6488590 <col:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x6483920 '__a' 'const allocator_type &'
| | | | `-CompoundStmt 0x64886c0 <line:136:7, col:33>
| | | |   `-CallExpr 0x6488690 <col:9, col:30> '<dependent type>'
| | | |     |-MemberExpr 0x6488638 <col:9> '<bound member function type>' ->_M_create_storage 0x6484150
| | | |     | `-CXXThisExpr 0x6488620 <col:9> '_Vector_base<_Tp, _Alloc> *' this
| | | |     `-DeclRefExpr 0x6488668 <col:27> 'size_t':'unsigned long' lvalue ParmVar 0x64838b0 '__n' 'size_t':'unsigned long'
| | | |-CXXDestructorDecl 0x6483b50 <line:159:7, line:161:36> ~_Vector_base<_Tp, _Alloc> 'void (void)'
| | | | `-CompoundStmt 0x6488a60 <line:160:7, line:161:36>
| | | |   `-CallExpr 0x6488a28 <line:160:9, line:161:33> '<dependent type>'
| | | |     |-MemberExpr 0x64886f8 <line:160:9> '<bound member function type>' ->_M_deallocate 0x6483fe0
| | | |     | `-CXXThisExpr 0x64886e0 <col:9> '_Vector_base<_Tp, _Alloc> *' this
| | | |     |-CXXDependentScopeMemberExpr 0x6488798 <col:23, col:37> '<dependent type>' lvalue
| | | |     | `-CXXDependentScopeMemberExpr 0x6488740 <col:23, col:29> '<dependent type>' lvalue
| | | |     |   `-CXXThisExpr 0x6488728 <col:23> '_Vector_base<_Tp, _Alloc> *' this
| | | |     `-CXXOperatorCallExpr 0x64889e0 <col:47, line:161:25> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x6488980 <col:9> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |       |-CXXDependentScopeMemberExpr 0x6488860 <line:160:47, col:61> '<dependent type>' lvalue
| | | |       | `-CXXDependentScopeMemberExpr 0x6488808 <col:47, col:53> '<dependent type>' lvalue
| | | |       |   `-CXXThisExpr 0x64887f0 <col:47> '_Vector_base<_Tp, _Alloc> *' this
| | | |       `-CXXDependentScopeMemberExpr 0x6488928 <line:161:11, col:25> '<dependent type>' lvalue
| | | |         `-CXXDependentScopeMemberExpr 0x64888d0 <col:11, col:17> '<dependent type>' lvalue
| | | |           `-CXXThisExpr 0x64888b8 <col:11> '_Vector_base<_Tp, _Alloc> *' this
| | | |-AccessSpecDecl 0x6483c00 <line:163:5, col:11> public
| | | |-FieldDecl 0x6483c40 <line:164:7, col:20> _M_impl 'struct std::_Vector_base::_Vector_impl'
| | | |-CXXMethodDecl 0x6483da0 <line:166:7, line:168:54> _M_allocate 'pointer (size_t)'
| | | | |-ParmVarDecl 0x6483ca0 <line:167:19, col:26> __n 'size_t':'unsigned long'
| | | | `-CompoundStmt 0x6488c88 <line:168:7, col:54>
| | | |   `-ReturnStmt 0x6488c68 <col:9, col:51>
| | | |     `-ConditionalOperator 0x6488c38 <col:16, col:51> '<dependent type>'
| | | |       |-BinaryOperator 0x6488af8 <col:16, col:23> '_Bool' '!='
| | | |       | |-ImplicitCastExpr 0x6488ac8 <col:16> 'size_t':'unsigned long' <LValueToRValue>
| | | |       | | `-DeclRefExpr 0x6488a80 <col:16> 'size_t':'unsigned long' lvalue ParmVar 0x6483ca0 '__n' 'size_t':'unsigned long'
| | | |       | `-ImplicitCastExpr 0x6488ae0 <col:23> 'unsigned long' <IntegralCast>
| | | |       |   `-IntegerLiteral 0x6488aa8 <col:23> 'int' 0
| | | |       |-CallExpr 0x6488be8 <col:27, col:47> '<dependent type>'
| | | |       | |-CXXDependentScopeMemberExpr 0x6488b68 <col:27, col:35> '<dependent type>' lvalue
| | | |       | | `-MemberExpr 0x6488b38 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x6483c40
| | | |       | |   `-CXXThisExpr 0x6488b20 <col:27> '_Vector_base<_Tp, _Alloc> *' this
| | | |       | `-DeclRefExpr 0x6488bc0 <col:44> 'size_t':'unsigned long' lvalue ParmVar 0x6483ca0 '__n' 'size_t':'unsigned long'
| | | |       `-IntegerLiteral 0x6488c18 <col:51> 'int' 0
| | | |-CXXMethodDecl 0x6483fe0 <line:170:7, line:175:7> _M_deallocate 'void (pointer, size_t)'
| | | | |-ParmVarDecl 0x6483e60 <line:171:21, col:29> __p 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | | |-ParmVarDecl 0x6483ed0 <col:34, col:41> __n 'size_t':'unsigned long'
| | | | `-CompoundStmt 0x6488e28 <line:172:7, line:175:7>
| | | |   `-IfStmt 0x6488df8 <line:173:2, line:174:31>
| | | |     |-<<<NULL>>>
| | | |     |-DeclRefExpr 0x6488ca8 <line:173:6> 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer' lvalue ParmVar 0x6483e60 '__p' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | |     |-CallExpr 0x6488dc0 <line:174:4, col:31> '<dependent type>'
| | | |     | |-CXXDependentScopeMemberExpr 0x6488d18 <col:4, col:12> '<dependent type>' lvalue
| | | |     | | `-MemberExpr 0x6488ce8 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x6483c40
| | | |     | |   `-CXXThisExpr 0x6488cd0 <col:4> '_Vector_base<_Tp, _Alloc> *' this
| | | |     | |-DeclRefExpr 0x6488d70 <col:23> 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer' lvalue ParmVar 0x6483e60 '__p' 'pointer':'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer'
| | | |     | `-DeclRefExpr 0x6488d98 <col:28> 'size_t':'unsigned long' lvalue ParmVar 0x6483ed0 '__n' 'size_t':'unsigned long'
| | | |     `-<<<NULL>>>
| | | |-AccessSpecDecl 0x6484090 <line:177:5, col:12> private
| | | `-CXXMethodDecl 0x6484150 <line:178:7, line:184:7> _M_create_storage 'void (size_t)'
| | |   |-ParmVarDecl 0x64840d0 <line:179:25, col:32> __n 'size_t':'unsigned long'
| | |   `-CompoundStmt 0x6489438 <line:180:7, line:184:7>
| | |     |-BinaryOperator 0x6488fd8 <line:181:2, col:48> '<dependent type>' '='
| | |     | |-CXXDependentScopeMemberExpr 0x6488eb8 <col:2, col:16> '<dependent type>' lvalue
| | |     | | `-CXXDependentScopeMemberExpr 0x6488e60 <col:2, col:8> '<dependent type>' lvalue
| | |     | |   `-CXXThisExpr 0x6488e48 <col:2> '_Vector_base<_Tp, _Alloc> *' this
| | |     | `-CallExpr 0x6488fa8 <col:27, col:48> '<dependent type>'
| | |     |   |-CXXDependentScopeMemberExpr 0x6488f28 <col:27, col:33> '<dependent type>' lvalue
| | |     |   | `-CXXThisExpr 0x6488f10 <col:27> '_Vector_base<_Tp, _Alloc> *' this
| | |     |   `-DeclRefExpr 0x6488f80 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x64840d0 '__n' 'size_t':'unsigned long'
| | |     |-BinaryOperator 0x6489190 <line:182:2, col:42> '<dependent type>' '='
| | |     | |-CXXDependentScopeMemberExpr 0x6489070 <col:2, col:16> '<dependent type>' lvalue
| | |     | | `-CXXDependentScopeMemberExpr 0x6489018 <col:2, col:8> '<dependent type>' lvalue
| | |     | |   `-CXXThisExpr 0x6489000 <col:2> '_Vector_base<_Tp, _Alloc> *' this
| | |     | `-CXXDependentScopeMemberExpr 0x6489138 <col:28, col:42> '<dependent type>' lvalue
| | |     |   `-CXXDependentScopeMemberExpr 0x64890e0 <col:28, col:34> '<dependent type>' lvalue
| | |     |     `-CXXThisExpr 0x64890c8 <col:28> '_Vector_base<_Tp, _Alloc> *' this
| | |     `-BinaryOperator 0x6489410 <line:183:2, col:61> '<dependent type>' '='
| | |       |-CXXDependentScopeMemberExpr 0x6489228 <col:2, col:16> '<dependent type>' lvalue
| | |       | `-CXXDependentScopeMemberExpr 0x64891d0 <col:2, col:8> '<dependent type>' lvalue
| | |       |   `-CXXThisExpr 0x64891b8 <col:2> '_Vector_base<_Tp, _Alloc> *' this
| | |       `-CXXOperatorCallExpr 0x64893c8 <col:36, col:61> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x6489370 <col:59> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | |         |-CXXDependentScopeMemberExpr 0x64892f0 <col:36, col:50> '<dependent type>' lvalue
| | |         | `-CXXDependentScopeMemberExpr 0x6489298 <col:36, col:42> '<dependent type>' lvalue
| | |         |   `-CXXThisExpr 0x6489280 <col:36> '_Vector_base<_Tp, _Alloc> *' this
| | |         `-DeclRefExpr 0x6489348 <col:61> 'size_t':'unsigned long' lvalue ParmVar 0x64840d0 '__n' 'size_t':'unsigned long'
| | `-ClassTemplateSpecializationDecl 0x65190d0 <line:71:3, line:185:5> struct _Vector_base definition
| |   |-TemplateArgument type 'long long'
| |   |-TemplateArgument type 'class std::allocator<long long>'
| |   |-CXXRecordDecl 0x65192f0 prev 0x65190d0 <line:72:5, col:12> struct _Vector_base
| |   |-TypedefDecl 0x651eb50 <line:74:7, line:75:28> _Tp_alloc_type 'typename __gnu_cxx::__alloc_traits<class allocator<long long> >::rebind<long long>::other':'class std::allocator<long long>'
| |   |-TypedefDecl 0x651ecd0 <line:76:7, line:77:9> pointer 'typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer':'long long *'
| |   |-CXXRecordDecl 0x651ed20 <line:79:7, line:107:7> struct _Vector_impl definition
| |   | |-public '_Tp_alloc_type':'class std::allocator<long long>'
| |   | |-CXXRecordDecl 0x651fb40 prev 0x651ed20 <line:79:7, col:14> struct _Vector_impl
| |   | |-FieldDecl 0x651fc00 <line:82:2, col:10> _M_start 'pointer':'long long *'
| |   | |-FieldDecl 0x651fc60 <line:83:2, col:10> _M_finish 'pointer':'long long *'
| |   | |-FieldDecl 0x651fcc0 <line:84:2, col:10> _M_end_of_storage 'pointer':'long long *'
| |   | |-CXXConstructorDecl 0x651fd70 <line:86:2> _Vector_impl 'void (void)'
| |   | |-CXXConstructorDecl 0x651ff30 <line:90:2, line:92:4> _Vector_impl 'void (const _Tp_alloc_type &)'
| |   | | |-ParmVarDecl 0x651fe50 <line:90:15, col:37> __a 'const _Tp_alloc_type &'
| |   | | |-CXXCtorInitializer '_Tp_alloc_type':'class std::allocator<long long>'
| |   | | | |-CXXConstructExpr 0x65301f0 <line:91:4, col:22> '_Tp_alloc_type':'class std::allocator<long long>' 'void (const class std::allocator<long long> &) throw()'
| |   | | | | `-DeclRefExpr 0x6530150 <col:19> 'const _Tp_alloc_type':'const class std::allocator<long long>' lvalue ParmVar 0x651fe50 '__a' 'const _Tp_alloc_type &'
| |   | | |-CXXCtorInitializer Field 0x651fc00 '_M_start' 'pointer':'long long *'
| |   | | | |-ImplicitCastExpr 0x6530288 <col:34> 'pointer':'long long *' <NullToPointer>
| |   | | | | `-IntegerLiteral 0x6484508 <col:34> 'int' 0
| |   | | |-CXXCtorInitializer Field 0x651fc60 '_M_finish' 'pointer':'long long *'
| |   | | | |-ImplicitCastExpr 0x65302f8 <col:48> 'pointer':'long long *' <NullToPointer>
| |   | | | | `-IntegerLiteral 0x6484588 <col:48> 'int' 0
| |   | | |-CXXCtorInitializer Field 0x651fcc0 '_M_end_of_storage' 'pointer':'long long *'
| |   | | | |-ImplicitCastExpr 0x6530368 <col:70> 'pointer':'long long *' <NullToPointer>
| |   | | | | `-IntegerLiteral 0x6484608 <col:70> 'int' 0
| |   | | `-CompoundStmt 0x64846a8 <line:92:2, col:4>
| |   | |-CXXMethodDecl 0x6520110 <line:101:2, line:106:2> _M_swap_data 'void (struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl &)'
| |   | | `-ParmVarDecl 0x6520050 <line:101:20, col:34> __x 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl &'
| |   | |-CXXDestructorDecl 0x65201f0 <line:79:14> ~_Vector_impl 'void (void) throw()' inline
| |   | | `-CompoundStmt 0x6530030 <col:14>
| |   | `-CXXConstructorDecl 0x652fe00 <col:14> _Vector_impl 'void (const struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl &)' inline noexcept-unevaluated 0x652fe00
| |   |   `-ParmVarDecl 0x652ff40 <col:14> 'const struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl &'
| |   |-AccessSpecDecl 0x651ede0 <line:109:5, col:11> public
| |   |-TypedefDecl 0x651ee20 <line:110:7, col:22> allocator_type 'class std::allocator<long long>':'class std::allocator<long long>'
| |   |-CXXMethodDecl 0x651ef20 <line:112:7, line:114:63> _M_get_Tp_allocator '_Tp_alloc_type &(void)'
| |   | `-CompoundStmt 0x6532e90 <col:7, col:63>
| |   |   `-ReturnStmt 0x6532e70 <col:9, col:60>
| |   |     `-UnaryOperator 0x6532e50 <col:16, col:60> '_Tp_alloc_type':'class std::allocator<long long>' lvalue prefix '*'
| |   |       `-CXXStaticCastExpr 0x6532e20 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <NoOp>
| |   |         `-ImplicitCastExpr 0x6532e00 <col:46, col:53> '_Tp_alloc_type *' <DerivedToBase (allocator)>
| |   |           `-UnaryOperator 0x6532de0 <col:46, col:53> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl *' prefix '&'
| |   |             `-MemberExpr 0x6532db0 <col:47, col:53> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |               `-CXXThisExpr 0x6532d98 <col:47> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |-CXXMethodDecl 0x651f080 <line:116:7, line:118:69> _M_get_Tp_allocator 'const _Tp_alloc_type &(void) const'
| |   |-CXXMethodDecl 0x651f1d0 <line:120:7, line:122:55> get_allocator 'allocator_type (void) const'
| |   |-CXXConstructorDecl 0x651f2c0 <line:124:7> _Vector_base 'void (void)'
| |   |-CXXConstructorDecl 0x651f4b0 <line:127:7> _Vector_base 'void (const allocator_type &)'
| |   | `-ParmVarDecl 0x651f3d0 <col:20, col:42> __a 'const allocator_type &'
| |   |-CXXConstructorDecl 0x651f610 <line:130:7> _Vector_base 'void (size_t)'
| |   | `-ParmVarDecl 0x651f590 <col:20, col:27> __n 'size_t':'unsigned long'
| |   |-CXXConstructorDecl 0x651f890 <line:134:7, line:136:33> _Vector_base 'void (size_t, const allocator_type &)'
| |   | |-ParmVarDecl 0x651f6f0 <line:134:20, col:27> __n 'size_t':'unsigned long'
| |   | |-ParmVarDecl 0x651f760 <col:32, col:54> __a 'const allocator_type &'
| |   | |-CXXCtorInitializer Field 0x65202e0 '_M_impl' 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl'
| |   | | |-CXXConstructExpr 0x652ffc8 <line:135:9, col:20> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' 'void (const _Tp_alloc_type &)'
| |   | | | `-DeclRefExpr 0x652fd78 <col:17> 'const allocator_type':'const class std::allocator<long long>' lvalue ParmVar 0x651f760 '__a' 'const allocator_type &'
| |   | `-CompoundStmt 0x6530130 <line:136:7, col:33>
| |   |   `-CXXMemberCallExpr 0x65300e8 <col:9, col:30> 'void'
| |   |     |-MemberExpr 0x6530090 <col:9> '<bound member function type>' ->_M_create_storage 0x6520780
| |   |     | `-CXXThisExpr 0x6530078 <col:9> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |     `-ImplicitCastExpr 0x6530118 <col:27> 'size_t':'unsigned long' <LValueToRValue>
| |   |       `-DeclRefExpr 0x65300c0 <col:27> 'size_t':'unsigned long' lvalue ParmVar 0x651f6f0 '__n' 'size_t':'unsigned long'
| |   |-CXXDestructorDecl 0x651f9a0 <line:159:7, line:161:36> ~_Vector_base 'void (void)'
| |   | `-CompoundStmt 0x65316c0 <line:160:7, line:161:36>
| |   |   `-CXXMemberCallExpr 0x6531658 <line:160:9, line:161:33> 'void'
| |   |     |-MemberExpr 0x6531408 <line:160:9> '<bound member function type>' ->_M_deallocate 0x6520630
| |   |     | `-CXXThisExpr 0x65313f0 <col:9> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |     |-ImplicitCastExpr 0x6531690 <col:23, col:37> 'pointer':'long long *' <LValueToRValue>
| |   |     | `-MemberExpr 0x6531480 <col:23, col:37> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |     |   `-MemberExpr 0x6531450 <col:23, col:29> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     |     `-CXXThisExpr 0x6531438 <col:23> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |     `-ImplicitCastExpr 0x65316a8 <col:47, line:161:25> 'size_t':'unsigned long' <IntegralCast>
| |   |       `-BinaryOperator 0x6531630 <line:160:47, line:161:25> 'long' '-'
| |   |         |-ImplicitCastExpr 0x6531600 <line:160:47, col:61> 'pointer':'long long *' <LValueToRValue>
| |   |         | `-MemberExpr 0x6531558 <col:47, col:61> 'pointer':'long long *' lvalue ._M_end_of_storage 0x651fcc0
| |   |         |   `-MemberExpr 0x6531528 <col:47, col:53> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |         |     `-CXXThisExpr 0x6531510 <col:47> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |         `-ImplicitCastExpr 0x6531618 <line:161:11, col:25> 'pointer':'long long *' <LValueToRValue>
| |   |           `-MemberExpr 0x65315d0 <col:11, col:25> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |             `-MemberExpr 0x65315a0 <col:11, col:17> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |               `-CXXThisExpr 0x6531588 <col:11> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |-AccessSpecDecl 0x651fa60 <line:163:5, col:11> public
| |   |-FieldDecl 0x65202e0 <line:164:7, col:20> _M_impl 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl'
| |   |-CXXMethodDecl 0x6520430 <line:166:7, line:168:54> _M_allocate 'pointer (size_t)'
| |   | |-ParmVarDecl 0x6520330 <line:167:19, col:26> __n 'size_t':'unsigned long'
| |   | `-CompoundStmt 0x6530fa8 <line:168:7, col:54>
| |   |   `-ReturnStmt 0x6530f88 <col:9, col:51>
| |   |     `-ConditionalOperator 0x6530f58 <col:16, col:51> 'pointer':'long long *'
| |   |       |-BinaryOperator 0x6530d80 <col:16, col:23> '_Bool' '!='
| |   |       | |-ImplicitCastExpr 0x6530d50 <col:16> 'size_t':'unsigned long' <LValueToRValue>
| |   |       | | `-DeclRefExpr 0x6530d28 <col:16> 'size_t':'unsigned long' lvalue ParmVar 0x6520330 '__n' 'size_t':'unsigned long'
| |   |       | `-ImplicitCastExpr 0x6530d68 <col:23> 'unsigned long' <IntegralCast>
| |   |       |   `-IntegerLiteral 0x6488aa8 <col:23> 'int' 0
| |   |       |-CXXMemberCallExpr 0x6530e48 <col:27, col:47> 'pointer':'long long *'
| |   |       | |-MemberExpr 0x6530df0 <col:27, col:35> '<bound member function type>' .allocate 0x651af90
| |   |       | | `-ImplicitCastExpr 0x6530ea8 <col:27> 'class __gnu_cxx::new_allocator<long long>' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
| |   |       | |   `-MemberExpr 0x6530dc0 <col:27> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |       | |     `-CXXThisExpr 0x6530da8 <col:27> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |       | |-ImplicitCastExpr 0x6530ee8 <col:44> 'size_t':'unsigned long' <LValueToRValue>
| |   |       | | `-DeclRefExpr 0x6530e20 <col:44> 'size_t':'unsigned long' lvalue ParmVar 0x6520330 '__n' 'size_t':'unsigned long'
| |   |       | `-CXXDefaultArgExpr 0x6530f18 <<invalid sloc>> 'const void *'
| |   |       `-ImplicitCastExpr 0x6530f40 <col:51> 'pointer':'long long *' <NullToPointer>
| |   |         `-IntegerLiteral 0x6488c18 <col:51> 'int' 0
| |   |-CXXMethodDecl 0x6520630 <line:170:7, line:175:7> _M_deallocate 'void (pointer, size_t)'
| |   | |-ParmVarDecl 0x6520500 <line:171:21, col:29> __p 'pointer':'long long *'
| |   | |-ParmVarDecl 0x6520560 <col:34, col:41> __n 'size_t':'unsigned long'
| |   | `-CompoundStmt 0x65318c0 <line:172:7, line:175:7>
| |   |   `-IfStmt 0x6531890 <line:173:2, line:174:31>
| |   |     |-<<<NULL>>>
| |   |     |-ImplicitCastExpr 0x6531720 <line:173:6> '_Bool' <PointerToBoolean>
| |   |     | `-ImplicitCastExpr 0x6531708 <col:6> 'pointer':'long long *' <LValueToRValue>
| |   |     |   `-DeclRefExpr 0x65316e0 <col:6> 'pointer':'long long *' lvalue ParmVar 0x6520500 '__p' 'pointer':'long long *'
| |   |     |-CXXMemberCallExpr 0x6531800 <line:174:4, col:31> 'void'
| |   |     | |-MemberExpr 0x6531780 <col:4, col:12> '<bound member function type>' .deallocate 0x651b1d0
| |   |     | | `-ImplicitCastExpr 0x6531838 <col:4> 'class __gnu_cxx::new_allocator<long long>' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
| |   |     | |   `-MemberExpr 0x6531750 <col:4> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     | |     `-CXXThisExpr 0x6531738 <col:4> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |     | |-ImplicitCastExpr 0x6531860 <col:23> 'pointer':'long long *' <LValueToRValue>
| |   |     | | `-DeclRefExpr 0x65317b0 <col:23> 'pointer':'long long *' lvalue ParmVar 0x6520500 '__p' 'pointer':'long long *'
| |   |     | `-ImplicitCastExpr 0x6531878 <col:28> 'size_t':'unsigned long' <LValueToRValue>
| |   |     |   `-DeclRefExpr 0x65317d8 <col:28> 'size_t':'unsigned long' lvalue ParmVar 0x6520560 '__n' 'size_t':'unsigned long'
| |   |     `-<<<NULL>>>
| |   |-AccessSpecDecl 0x65206f0 <line:177:5, col:12> private
| |   |-CXXMethodDecl 0x6520780 <line:178:7, line:184:7> _M_create_storage 'void (size_t)'
| |   | |-ParmVarDecl 0x6520720 <line:179:25, col:32> __n 'size_t':'unsigned long'
| |   | `-CompoundStmt 0x6530cf8 <line:180:7, line:184:7>
| |   |   |-BinaryOperator 0x65309b0 <line:181:2, col:48> 'pointer':'long long *' lvalue '='
| |   |   | |-MemberExpr 0x65308c8 <col:2, col:16> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |   | | `-MemberExpr 0x6530898 <col:2, col:8> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |   | |   `-CXXThisExpr 0x6530880 <col:2> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |   | `-CXXMemberCallExpr 0x6530968 <col:27, col:48> 'pointer':'long long *'
| |   |   |   |-MemberExpr 0x6530910 <col:27, col:33> '<bound member function type>' ->_M_allocate 0x6520430
| |   |   |   | `-CXXThisExpr 0x65308f8 <col:27> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |   |   `-ImplicitCastExpr 0x6530998 <col:45> 'size_t':'unsigned long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0x6530940 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x6520720 '__n' 'size_t':'unsigned long'
| |   |   |-BinaryOperator 0x6530ae0 <line:182:2, col:42> 'pointer':'long long *' lvalue '='
| |   |   | |-MemberExpr 0x6530a20 <col:2, col:16> 'pointer':'long long *' lvalue ._M_finish 0x651fc60
| |   |   | | `-MemberExpr 0x65309f0 <col:2, col:8> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |   | |   `-CXXThisExpr 0x65309d8 <col:2> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |   | `-ImplicitCastExpr 0x6530ac8 <col:28, col:42> 'pointer':'long long *' <LValueToRValue>
| |   |   |   `-MemberExpr 0x6530a98 <col:28, col:42> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |   |     `-MemberExpr 0x6530a68 <col:28, col:34> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |   |       `-CXXThisExpr 0x6530a50 <col:28> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |   `-BinaryOperator 0x6530cd0 <line:183:2, col:61> 'pointer':'long long *' lvalue '='
| |   |     |-MemberExpr 0x6530b50 <col:2, col:16> 'pointer':'long long *' lvalue ._M_end_of_storage 0x651fcc0
| |   |     | `-MemberExpr 0x6530b20 <col:2, col:8> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     |   `-CXXThisExpr 0x6530b08 <col:2> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |     `-BinaryOperator 0x6530ca8 <col:36, col:61> 'pointer':'long long *' '+'
| |   |       |-ImplicitCastExpr 0x6530c78 <col:36, col:50> 'pointer':'long long *' <LValueToRValue>
| |   |       | `-MemberExpr 0x6530c20 <col:36, col:50> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |       |   `-MemberExpr 0x6530bf0 <col:36, col:42> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |       |     `-CXXThisExpr 0x6530bd8 <col:36> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' this
| |   |       `-ImplicitCastExpr 0x6530c90 <col:61> 'size_t':'unsigned long' <LValueToRValue>
| |   |         `-DeclRefExpr 0x6530c50 <col:61> 'size_t':'unsigned long' lvalue ParmVar 0x6520720 '__n' 'size_t':'unsigned long'
| |   `-CXXConstructorDecl 0x652fa20 <line:72:12> _Vector_base 'void (const struct std::_Vector_base<long long, class std::allocator<long long> > &)' inline noexcept-unevaluated 0x652fa20
| |     `-ParmVarDecl 0x652fb60 <col:12> 'const struct std::_Vector_base<long long, class std::allocator<long long> > &'
| |-ClassTemplateDecl 0x6489790 <line:209:3, line:1388:5> vector
| | |-TemplateTypeParmDecl 0x6489470 <line:209:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x6489670 <col:26, col:62> typename _Alloc 'std::allocator<_Tp>':'allocator<_Tp>'
| | |-CXXRecordDecl 0x6489700 <line:210:5, line:1388:5> class vector definition
| | | |-protected '_Vector_base<_Tp, _Alloc>'
| | | |-CXXRecordDecl 0x6489d50 <line:210:5, col:11> class vector
| | | |-TypedefDecl 0x6489eb0 <line:213:7, col:58> _Alloc_value_type 'typename _Alloc::value_type'
| | | |-TypedefDecl 0x648a070 <line:217:7, col:44> _Base '_Vector_base<_Tp, _Alloc>'
| | | |-TypedefDecl 0x648a1d0 <line:218:7, col:48> _Tp_alloc_type 'typename _Base::_Tp_alloc_type'
| | | |-TypedefDecl 0x648a410 <line:219:7, col:58> _Alloc_traits '__gnu_cxx::__alloc_traits<_Tp_alloc_type>':'__alloc_traits<_Tp_alloc_type>'
| | | |-AccessSpecDecl 0x648a460 <line:221:5, col:11> public
| | | |-TypedefDecl 0x648a4a0 <line:222:7, col:24> value_type '_Tp'
| | | |-TypedefDecl 0x648a5a0 <line:223:7, col:58> pointer 'typename _Base::pointer'
| | | |-TypedefDecl 0x648a700 <line:224:7, col:58> const_pointer 'typename _Alloc_traits::const_pointer'
| | | |-TypedefDecl 0x648a800 <line:225:7, col:58> reference 'typename _Alloc_traits::reference'
| | | |-TypedefDecl 0x648a900 <line:226:7, col:58> const_reference 'typename _Alloc_traits::const_reference'
| | | |-TypedefDecl 0x648abc0 <line:227:7, col:61> iterator '__gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> >':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |-TypedefDecl 0x648ae70 <line:228:7, line:229:7> const_iterator '__gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> >':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
| | | |-TypedefDecl 0x648b0c0 <line:230:7, col:54> const_reverse_iterator 'std::reverse_iterator<const_iterator>':'reverse_iterator<const_iterator>'
| | | |-TypedefDecl 0x648b300 <line:231:7, col:49> reverse_iterator 'std::reverse_iterator<iterator>':'reverse_iterator<iterator>'
| | | |-TypedefDecl 0x648b360 <line:232:7, col:27> size_type 'size_t':'unsigned long'
| | | |-TypedefDecl 0x648b3c0 <line:233:7, col:30> difference_type 'ptrdiff_t':'long'
| | | |-TypedefDecl 0x648b420 <line:234:7, col:48> allocator_type '_Alloc'
| | | |-AccessSpecDecl 0x648b470 <line:236:5, col:14> protected
| | | |-UnresolvedUsingValueDecl 0x648b4b0 <line:237:7, col:20> _Base::_M_allocate '<dependent type>'
| | | |-UnresolvedUsingValueDecl 0x648b520 <line:238:7, col:20> _Base::_M_deallocate '<dependent type>'
| | | |-UnresolvedUsingValueDecl 0x648b590 <line:239:7, col:20> _Base::_M_impl '<dependent type>'
| | | |-UnresolvedUsingValueDecl 0x648b600 <line:240:7, col:20> _Base::_M_get_Tp_allocator '<dependent type>'
| | | |-AccessSpecDecl 0x648b650 <line:242:5, col:11> public
| | | |-CXXConstructorDecl 0x648b6c0 <line:248:7, line:249:19> vector<_Tp, _Alloc> 'void (void)'
| | | | |-CXXCtorInitializer '_Base':'_Vector_base<_Tp, _Alloc>'
| | | | | |-ParenListExpr 0x649db28 <col:14, col:15> 'NULL TYPE'
| | | | `-CompoundStmt 0x649db90 <col:17, col:19>
| | | |-CXXConstructorDecl 0x648b8a0 <line:255:7, line:257:22> vector<_Tp, _Alloc> 'void (const allocator_type &)'
| | | | |-ParmVarDecl 0x648b7e0 <line:256:14, col:36> __a 'const allocator_type &'
| | | | |-CXXCtorInitializer '_Base':'_Vector_base<_Tp, _Alloc>'
| | | | | |-ParenListExpr 0x649dbd0 <line:257:14, col:18> 'NULL TYPE'
| | | | | | `-DeclRefExpr 0x649dba8 <col:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x648b7e0 '__a' 'const allocator_type &'
| | | | `-CompoundStmt 0x649dc40 <col:20, col:22>
| | | |-CXXConstructorDecl 0x648bbf0 <line:294:7, line:298:43> vector<_Tp, _Alloc> 'void (size_type, const value_type &, const allocator_type &)'
| | | | |-ParmVarDecl 0x648b990 <line:295:14, col:24> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x648ba50 <col:29, col:68> __value 'const value_type &'
| | | | | `-CXXUnresolvedConstructExpr 0x649da28 <col:57, col:68> 'value_type':'_Tp'
| | | | |-ParmVarDecl 0x648bac0 <line:296:7, col:50> __a 'const allocator_type &'
| | | | | `-CXXUnresolvedConstructExpr 0x649da60 <col:35, col:50> 'allocator_type':'_Alloc'
| | | | |-CXXCtorInitializer '_Base':'_Vector_base<_Tp, _Alloc>'
| | | | | |-ParenListExpr 0x649dca8 <line:297:14, col:23> 'NULL TYPE'
| | | | | | |-DeclRefExpr 0x649dc58 <col:15> 'size_type':'unsigned long' lvalue ParmVar 0x648b990 '__n' 'size_type':'unsigned long'
| | | | | | `-DeclRefExpr 0x649dc80 <col:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x648bac0 '__a' 'const allocator_type &'
| | | | `-CompoundStmt 0x649ddf0 <line:298:7, col:43>
| | | |   `-CallExpr 0x649ddb8 <col:9, col:40> '<dependent type>'
| | | |     |-MemberExpr 0x649dd38 <col:9> '<bound member function type>' ->_M_fill_initialize 0x64985e0
| | | |     | `-CXXThisExpr 0x649dd20 <col:9> 'vector<_Tp, _Alloc> *' this
| | | |     |-DeclRefExpr 0x649dd68 <col:28> 'size_type':'unsigned long' lvalue ParmVar 0x648b990 '__n' 'size_type':'unsigned long'
| | | |     `-DeclRefExpr 0x649dd90 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0x648ba50 '__value' 'const value_type &'
| | | |-CXXConstructorDecl 0x648bde0 <line:310:7, line:317:7> vector<_Tp, _Alloc> 'void (const vector<_Tp, _Alloc> &)'
| | | | |-ParmVarDecl 0x648bd20 <line:310:14, col:28> __x 'const vector<_Tp, _Alloc> &'
| | | | |-CXXCtorInitializer '_Base':'_Vector_base<_Tp, _Alloc>'
| | | | | |-ParenListExpr 0x649f3f0 <line:311:14, line:312:68> 'NULL TYPE'
| | | | | | |-CallExpr 0x649f260 <line:311:15, col:24> '<dependent type>'
| | | | | | | `-CXXDependentScopeMemberExpr 0x649de38 <col:15, col:19> '<dependent type>' lvalue
| | | | | | |   `-DeclRefExpr 0x649de10 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x648bd20 '__x' 'const vector<_Tp, _Alloc> &'
| | | | | | `-CallExpr 0x649f3c0 <line:312:9, col:67> '<dependent type>'
| | | | | |   |-CXXDependentScopeMemberExpr 0x649f2c0 <col:9, col:24> '<dependent type>' lvalue
| | | | | |   `-CallExpr 0x649f398 <col:42, col:66> '<dependent type>'
| | | | | |     `-CXXDependentScopeMemberExpr 0x649f340 <col:42, col:46> '<dependent type>' lvalue
| | | | | |       `-DeclRefExpr 0x649f318 <col:42> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x648bd20 '__x' 'const vector<_Tp, _Alloc> &'
| | | | `-CompoundStmt 0x649f8d0 <line:313:7, line:317:7>
| | | |   `-BinaryOperator 0x649f8a8 <line:313:9, line:316:32> '<dependent type>' '='
| | | |     |-CXXDependentScopeMemberExpr 0x649f4e0 <line:313:9, col:23> '<dependent type>' lvalue
| | | |     | `-CXXDependentScopeMemberExpr 0x649f488 <col:9, col:15> '<dependent type>' lvalue
| | | |     |   `-CXXThisExpr 0x649f470 <col:9> 'vector<_Tp, _Alloc> *' this
| | | |     `-CallExpr 0x649f860 <line:314:4, line:316:32> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x649f558 <line:314:4, col:9> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | | |       |-CallExpr 0x649f638 <col:32, col:42> '<dependent type>'
| | | |       | `-CXXDependentScopeMemberExpr 0x649f5e0 <col:32, col:36> '<dependent type>' lvalue
| | | |       |   `-DeclRefExpr 0x649f5b8 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x648bd20 '__x' 'const vector<_Tp, _Alloc> &'
| | | |       |-CallExpr 0x649f6e0 <col:45, col:53> '<dependent type>'
| | | |       | `-CXXDependentScopeMemberExpr 0x649f688 <col:45, col:49> '<dependent type>' lvalue
| | | |       |   `-DeclRefExpr 0x649f660 <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x648bd20 '__x' 'const vector<_Tp, _Alloc> &'
| | | |       |-CXXDependentScopeMemberExpr 0x649f778 <line:315:11, col:25> '<dependent type>' lvalue
| | | |       | `-CXXDependentScopeMemberExpr 0x649f720 <col:11, col:17> '<dependent type>' lvalue
| | | |       |   `-CXXThisExpr 0x649f708 <col:11> 'vector<_Tp, _Alloc> *' this
| | | |       `-CallExpr 0x649f838 <line:316:11, col:31> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x649f7d0 <col:11> '<dependent type>' lvalue
| | | |-FunctionTemplateDecl 0x648c200 <line:397:7, line:405:2> vector<_Tp, _Alloc>
| | | | |-TemplateTypeParmDecl 0x648bea0 <line:397:16, col:25> typename _InputIterator
| | | | |-CXXConstructorDecl 0x648c140 <line:398:9, line:405:2> vector<_Tp, _Alloc> 'void (_InputIterator, _InputIterator, const allocator_type &)'
| | | | | |-ParmVarDecl 0x648bf30 <line:398:16, col:31> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x648bfa0 <col:40, col:55> __last '_InputIterator'
| | | | | |-ParmVarDecl 0x648c010 <line:399:9, col:52> __a 'const allocator_type &'
| | | | | | `-CXXUnresolvedConstructExpr 0x649da98 <col:37, col:52> 'allocator_type':'_Alloc'
| | | | | |-CXXCtorInitializer '_Base':'_Vector_base<_Tp, _Alloc>'
| | | | | | |-ParenListExpr 0x649f918 <line:400:9, col:13> 'NULL TYPE'
| | | | | | | `-DeclRefExpr 0x649f8f0 <col:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x648c010 '__a' 'const allocator_type &'
| | | | | `-CompoundStmt 0x649fd98 <line:401:9, line:405:2>
| | | | |   |-DeclStmt 0x649fc08 <line:403:4, col:72>
| | | | |   | `-TypedefDecl 0x649fbc0 <col:4, col:63> _Integral 'typename std::__is_integer<_InputIterator>::__type'
| | | | |   `-CallExpr 0x649fd58 <line:404:4, col:55> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x649fc38 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x649fca8 <col:27> '_InputIterator' lvalue ParmVar 0x648bf30 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x649fcd0 <col:36> '_InputIterator' lvalue ParmVar 0x648bfa0 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x649fd30 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
| | | |-CXXDestructorDecl 0x648c2b0 <line:414:7, line:416:33> ~vector<_Tp, _Alloc> 'void (void)'
| | | | `-CompoundStmt 0x64a00b0 <line:415:7, line:416:33>
| | | |   `-CallExpr 0x64a0070 <line:415:9, line:416:30> '<dependent type>'
| | | |     |-UnresolvedLookupExpr 0x649fde0 <line:415:9, col:14> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | | |     |-CXXDependentScopeMemberExpr 0x649fec0 <col:23, col:37> '<dependent type>' lvalue
| | | |     | `-CXXDependentScopeMemberExpr 0x649fe68 <col:23, col:29> '<dependent type>' lvalue
| | | |     |   `-CXXThisExpr 0x649fe50 <col:23> 'vector<_Tp, _Alloc> *' this
| | | |     |-CXXDependentScopeMemberExpr 0x649ff88 <col:47, col:61> '<dependent type>' lvalue
| | | |     | `-CXXDependentScopeMemberExpr 0x649ff30 <col:47, col:53> '<dependent type>' lvalue
| | | |     |   `-CXXThisExpr 0x649ff18 <col:47> 'vector<_Tp, _Alloc> *' this
| | | |     `-CallExpr 0x64a0048 <line:416:9, col:29> '<dependent type>'
| | | |       `-UnresolvedMemberExpr 0x649ffe0 <col:9> '<dependent type>' lvalue
| | | |-CXXMethodDecl 0x648c460 <line:426:7, line:427:34> operator= 'vector<_Tp, _Alloc> &(const vector<_Tp, _Alloc> &)'
| | | | `-ParmVarDecl 0x648c370 <col:17, col:31> __x 'const vector<_Tp, _Alloc> &'
| | | |-CXXMethodDecl 0x648c6a0 <line:478:7, line:480:37> assign 'void (size_type, const value_type &)'
| | | | |-ParmVarDecl 0x648c520 <line:479:14, col:24> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x648c590 <col:29, col:47> __val 'const value_type &'
| | | | `-CompoundStmt 0x64a01a0 <line:480:7, col:37>
| | | |   `-CallExpr 0x64a0168 <col:9, col:34> '<dependent type>'
| | | |     |-MemberExpr 0x64a00e8 <col:9> '<bound member function type>' ->_M_fill_assign 0x649bfb0
| | | |     | `-CXXThisExpr 0x64a00d0 <col:9> 'vector<_Tp, _Alloc> *' this
| | | |     |-DeclRefExpr 0x64a0118 <col:24> 'size_type':'unsigned long' lvalue ParmVar 0x648c520 '__n' 'size_type':'unsigned long'
| | | |     `-DeclRefExpr 0x64a0140 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0x648c590 '__val' 'const value_type &'
| | | |-FunctionTemplateDecl 0x648c9c0 <line:501:7, line:508:2> assign
| | | | |-TemplateTypeParmDecl 0x648c750 <line:501:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x648c920 <line:502:9, line:508:2> assign 'void (_InputIterator, _InputIterator)'
| | | | | |-ParmVarDecl 0x648c7e0 <line:503:16, col:31> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x648c850 <col:40, col:55> __last '_InputIterator'
| | | | | `-CompoundStmt 0x64a0508 <line:504:9, line:508:2>
| | | | |   |-DeclStmt 0x64a0378 <line:506:4, col:72>
| | | | |   | `-TypedefDecl 0x64a0330 <col:4, col:63> _Integral 'typename std::__is_integer<_InputIterator>::__type'
| | | | |   `-CallExpr 0x64a04c8 <line:507:4, col:51> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x64a03a8 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x64a0418 <col:23> '_InputIterator' lvalue ParmVar 0x648c7e0 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x64a0440 <col:32> '_InputIterator' lvalue ParmVar 0x648c850 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x64a04a0 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
| | | |-UnresolvedUsingValueDecl 0x648ca30 <line:529:7, col:20> _Base::get_allocator '<dependent type>'
| | | |-CXXMethodDecl 0x648cb00 <line:537:7, line:539:50> begin 'iterator (void)'
| | | | `-CompoundStmt 0x64a0658 <col:7, col:50>
| | | |   `-ReturnStmt 0x64a0638 <col:9, col:47>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0608 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |       `-CXXDependentScopeMemberExpr 0x64a05b0 <col:25, col:39> '<dependent type>' lvalue
| | | |         `-CXXDependentScopeMemberExpr 0x64a0558 <col:25, col:31> '<dependent type>' lvalue
| | | |           `-CXXThisExpr 0x64a0540 <col:25> 'vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648cc20 <line:546:7, line:548:56> begin 'const_iterator (void) const'
| | | | `-CompoundStmt 0x64a07d0 <col:7, col:56>
| | | |   `-ReturnStmt 0x64a07b0 <col:9, col:53>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0780 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
| | | |       `-CXXDependentScopeMemberExpr 0x64a0728 <col:31, col:45> '<dependent type>' lvalue
| | | |         `-CXXDependentScopeMemberExpr 0x64a06d0 <col:31, col:37> '<dependent type>' lvalue
| | | |           `-CXXThisExpr 0x64a06b8 <col:31> 'const vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648cce0 <line:555:7, line:557:51> end 'iterator (void)'
| | | | `-CompoundStmt 0x64a0918 <col:7, col:51>
| | | |   `-ReturnStmt 0x64a08f8 <col:9, col:48>
| | | |     `-CXXUnresolvedConstructExpr 0x64a08c8 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |       `-CXXDependentScopeMemberExpr 0x64a0870 <col:25, col:39> '<dependent type>' lvalue
| | | |         `-CXXDependentScopeMemberExpr 0x64a0818 <col:25, col:31> '<dependent type>' lvalue
| | | |           `-CXXThisExpr 0x64a0800 <col:25> 'vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648cda0 <line:564:7, line:566:57> end 'const_iterator (void) const'
| | | | `-CompoundStmt 0x64a0a60 <col:7, col:57>
| | | |   `-ReturnStmt 0x64a0a40 <col:9, col:54>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0a10 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
| | | |       `-CXXDependentScopeMemberExpr 0x64a09b8 <col:31, col:45> '<dependent type>' lvalue
| | | |         `-CXXDependentScopeMemberExpr 0x64a0960 <col:31, col:37> '<dependent type>' lvalue
| | | |           `-CXXThisExpr 0x64a0948 <col:31> 'const vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648cee0 <line:573:7, line:575:41> rbegin 'reverse_iterator (void)'
| | | | `-CompoundStmt 0x64a0b90 <col:7, col:41>
| | | |   `-ReturnStmt 0x64a0b70 <col:9, col:38>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0b40 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
| | | |       `-CallExpr 0x64a0b18 <col:33, col:37> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a0aa8 <col:33> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x648d020 <line:582:7, line:584:47> rbegin 'const_reverse_iterator (void) const'
| | | | `-CompoundStmt 0x64a0cc0 <col:7, col:47>
| | | |   `-ReturnStmt 0x64a0ca0 <col:9, col:44>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0c70 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
| | | |       `-CallExpr 0x64a0c48 <col:39, col:43> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a0bd8 <col:39> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x648d0e0 <line:591:7, line:593:43> rend 'reverse_iterator (void)'
| | | | `-CompoundStmt 0x64a0df0 <col:7, col:43>
| | | |   `-ReturnStmt 0x64a0dd0 <col:9, col:40>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0da0 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
| | | |       `-CallExpr 0x64a0d78 <col:33, col:39> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a0d08 <col:33> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x648d1a0 <line:600:7, line:602:49> rend 'const_reverse_iterator (void) const'
| | | | `-CompoundStmt 0x64a0f20 <col:7, col:49>
| | | |   `-ReturnStmt 0x64a0f00 <col:9, col:46>
| | | |     `-CXXUnresolvedConstructExpr 0x64a0ed0 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
| | | |       `-CallExpr 0x64a0ea8 <col:39, col:45> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a0e38 <col:39> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x648d290 <line:644:7, line:646:77> size 'size_type (void) const'
| | | | `-CompoundStmt 0x64a11d8 <col:7, col:77>
| | | |   `-ReturnStmt 0x64a11b8 <col:9, col:74>
| | | |     `-CXXUnresolvedConstructExpr 0x64a1188 <col:16, col:74> 'size_type':'unsigned long'
| | | |       `-CXXOperatorCallExpr 0x64a1140 <col:26, col:66> '<dependent type>'
| | | |         |-UnresolvedLookupExpr 0x64a10e0 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |         |-CXXDependentScopeMemberExpr 0x64a0fc0 <col:26, col:40> '<dependent type>' lvalue
| | | |         | `-CXXDependentScopeMemberExpr 0x64a0f68 <col:26, col:32> '<dependent type>' lvalue
| | | |         |   `-CXXThisExpr 0x64a0f50 <col:26> 'const vector<_Tp, _Alloc> *' this
| | | |         `-CXXDependentScopeMemberExpr 0x64a1088 <col:52, col:66> '<dependent type>' lvalue
| | | |           `-CXXDependentScopeMemberExpr 0x64a1030 <col:52, col:58> '<dependent type>' lvalue
| | | |             `-CXXThisExpr 0x64a1018 <col:52> 'const vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648d350 <line:649:7, line:651:64> max_size 'size_type (void) const'
| | | | `-CompoundStmt 0x64a1588 <col:7, col:64>
| | | |   `-ReturnStmt 0x64a1568 <col:9, col:61>
| | | |     `-CallExpr 0x64a1538 <col:16, col:61> '<dependent type>'
| | | |       |-CXXDependentScopeMemberExpr 0x64a1450 <col:16, col:31> '<dependent type>' lvalue
| | | |       `-CallExpr 0x64a1510 <col:40, col:60> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a14a8 <col:40> '<dependent type>' lvalue
| | | |-CXXMethodDecl 0x648d580 <line:703:7, line:710:7> resize 'void (size_type, value_type)'
| | | | |-ParmVarDecl 0x648d400 <line:704:14, col:24> __new_size 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x648d470 <col:36, col:64> __x 'value_type':'_Tp'
| | | | | `-CXXUnresolvedConstructExpr 0x649dad0 <col:53, col:64> 'value_type':'_Tp'
| | | | `-CompoundStmt 0x64a1d88 <line:705:7, line:710:7>
| | | |   `-IfStmt 0x64a1d58 <line:706:2, line:709:55>
| | | |     |-<<<NULL>>>
| | | |     |-CXXOperatorCallExpr 0x64a16a8 <line:706:6, col:24> '<dependent type>'
| | | |     | |-UnresolvedLookupExpr 0x64a1640 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | | |     | |-DeclRefExpr 0x64a15a8 <col:6> 'size_type':'unsigned long' lvalue ParmVar 0x648d400 '__new_size' 'size_type':'unsigned long'
| | | |     | `-CallExpr 0x64a1618 <col:19, col:24> '<dependent type>'
| | | |     |   `-MemberExpr 0x64a15e8 <col:19> '<bound member function type>' ->size 0x648d290
| | | |     |     `-CXXThisExpr 0x64a15d0 <col:19> 'vector<_Tp, _Alloc> *' this
| | | |     |-CallExpr 0x64a1998 <line:707:4, col:42> '<dependent type>'
| | | |     | |-UnresolvedMemberExpr 0x64a1708 <col:4> '<bound member function type>' lvalue
| | | |     | |-CallExpr 0x64a1808 <col:11, col:15> '<dependent type>'
| | | |     | | `-UnresolvedMemberExpr 0x64a1798 <col:11> '<bound member function type>' lvalue
| | | |     | |-CXXOperatorCallExpr 0x64a1928 <col:18, col:36> '<dependent type>'
| | | |     | | |-UnresolvedLookupExpr 0x64a18c8 <col:29> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |     | | |-DeclRefExpr 0x64a1830 <col:18> 'size_type':'unsigned long' lvalue ParmVar 0x648d400 '__new_size' 'size_type':'unsigned long'
| | | |     | | `-CallExpr 0x64a18a0 <col:31, col:36> '<dependent type>'
| | | |     | |   `-MemberExpr 0x64a1870 <col:31> '<bound member function type>' ->size 0x648d290
| | | |     | |     `-CXXThisExpr 0x64a1858 <col:31> 'vector<_Tp, _Alloc> *' this
| | | |     | `-DeclRefExpr 0x64a1970 <col:39> 'value_type':'_Tp' lvalue ParmVar 0x648d470 '__x' 'value_type':'_Tp'
| | | |     `-IfStmt 0x64a1d28 <line:708:7, line:709:55>
| | | |       |-<<<NULL>>>
| | | |       |-CXXOperatorCallExpr 0x64a1ad8 <line:708:11, col:29> '<dependent type>'
| | | |       | |-UnresolvedLookupExpr 0x64a1a70 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | | |       | |-DeclRefExpr 0x64a19d8 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x648d400 '__new_size' 'size_type':'unsigned long'
| | | |       | `-CallExpr 0x64a1a48 <col:24, col:29> '<dependent type>'
| | | |       |   `-MemberExpr 0x64a1a18 <col:24> '<bound member function type>' ->size 0x648d290
| | | |       |     `-CXXThisExpr 0x64a1a00 <col:24> 'vector<_Tp, _Alloc> *' this
| | | |       |-CallExpr 0x64a1cf8 <line:709:4, col:55> '<dependent type>'
| | | |       | |-MemberExpr 0x64a1b38 <col:4> '<bound member function type>' ->_M_erase_at_end 0x649d970
| | | |       | | `-CXXThisExpr 0x64a1b20 <col:4> 'vector<_Tp, _Alloc> *' this
| | | |       | `-CXXOperatorCallExpr 0x64a1cb0 <col:20, col:45> '<dependent type>'
| | | |       |   |-UnresolvedLookupExpr 0x64a1c58 <col:43> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | |       |   |-CXXDependentScopeMemberExpr 0x64a1bd8 <col:20, col:34> '<dependent type>' lvalue
| | | |       |   | `-CXXDependentScopeMemberExpr 0x64a1b80 <col:20, col:26> '<dependent type>' lvalue
| | | |       |   |   `-CXXThisExpr 0x64a1b68 <col:20> 'vector<_Tp, _Alloc> *' this
| | | |       |   `-DeclRefExpr 0x64a1c30 <col:45> 'size_type':'unsigned long' lvalue ParmVar 0x648d400 '__new_size' 'size_type':'unsigned long'
| | | |       `-<<<NULL>>>
| | | |-CXXMethodDecl 0x648d650 <line:724:7, line:727:32> capacity 'size_type (void) const'
| | | | `-CompoundStmt 0x64a2040 <line:726:7, line:727:32>
| | | |   `-ReturnStmt 0x64a2020 <line:726:9, line:727:29>
| | | |     `-CXXUnresolvedConstructExpr 0x64a1ff0 <line:726:16, line:727:29> 'size_type':'unsigned long'
| | | |       `-CXXOperatorCallExpr 0x64a1fa8 <line:726:26, line:727:21> '<dependent type>'
| | | |         |-UnresolvedLookupExpr 0x64a1f48 <col:5> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |         |-CXXDependentScopeMemberExpr 0x64a1e28 <line:726:26, col:40> '<dependent type>' lvalue
| | | |         | `-CXXDependentScopeMemberExpr 0x64a1dd0 <col:26, col:32> '<dependent type>' lvalue
| | | |         |   `-CXXThisExpr 0x64a1db8 <col:26> 'const vector<_Tp, _Alloc> *' this
| | | |         `-CXXDependentScopeMemberExpr 0x64a1ef0 <line:727:7, col:21> '<dependent type>' lvalue
| | | |           `-CXXDependentScopeMemberExpr 0x64a1e98 <col:7, col:13> '<dependent type>' lvalue
| | | |             `-CXXThisExpr 0x64a1e80 <col:7> 'const vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x648d740 <line:733:7, line:735:34> empty '_Bool (void) const'
| | | | `-CompoundStmt 0x64a22a0 <col:7, col:34>
| | | |   `-ReturnStmt 0x64a2280 <col:9, col:31>
| | | |     `-CXXOperatorCallExpr 0x64a2238 <col:16, col:31> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x64a21c0 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650
| | | |       |-CallExpr 0x64a20e8 <col:16, col:22> '<dependent type>'
| | | |       | `-UnresolvedMemberExpr 0x64a2078 <col:16> '<bound member function type>' lvalue
| | | |       `-CallExpr 0x64a2198 <col:27, col:31> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a2128 <col:27> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x648d8b0 <line:754:7, line:755:28> reserve 'void (size_type)'
| | | | `-ParmVarDecl 0x648d7f0 <col:15, col:25> __n 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x648da90 <line:769:7, line:771:49> operator[] 'reference (size_type)'
| | | | |-ParmVarDecl 0x648d990 <line:770:18, col:28> __n 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x64a24b0 <line:771:7, col:49>
| | | |   `-ReturnStmt 0x64a2490 <col:9, col:46>
| | | |     `-UnaryOperator 0x64a2470 <col:16, col:46> '<dependent type>' prefix '*'
| | | |       `-ParenExpr 0x64a2450 <col:17, col:46> '<dependent type>'
| | | |         `-CXXOperatorCallExpr 0x64a2408 <col:18, col:43> '<dependent type>'
| | | |           |-UnresolvedLookupExpr 0x64a23b0 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | |           |-CXXDependentScopeMemberExpr 0x64a2330 <col:18, col:32> '<dependent type>' lvalue
| | | |           | `-CXXDependentScopeMemberExpr 0x64a22d8 <col:18, col:24> '<dependent type>' lvalue
| | | |           |   `-CXXThisExpr 0x64a22c0 <col:18> 'vector<_Tp, _Alloc> *' this
| | | |           `-DeclRefExpr 0x64a2388 <col:43> 'size_type':'unsigned long' lvalue ParmVar 0x648d990 '__n' 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x6491d80 <line:784:7, line:786:49> operator[] 'const_reference (size_type) const'
| | | | |-ParmVarDecl 0x648db70 <line:785:18, col:28> __n 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x64a26c0 <line:786:7, col:49>
| | | |   `-ReturnStmt 0x64a26a0 <col:9, col:46>
| | | |     `-UnaryOperator 0x64a2680 <col:16, col:46> '<dependent type>' prefix '*'
| | | |       `-ParenExpr 0x64a2660 <col:17, col:46> '<dependent type>'
| | | |         `-CXXOperatorCallExpr 0x64a2618 <col:18, col:43> '<dependent type>'
| | | |           |-UnresolvedLookupExpr 0x64a25c0 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | |           |-CXXDependentScopeMemberExpr 0x64a2540 <col:18, col:32> '<dependent type>' lvalue
| | | |           | `-CXXDependentScopeMemberExpr 0x64a24e8 <col:18, col:24> '<dependent type>' lvalue
| | | |           |   `-CXXThisExpr 0x64a24d0 <col:18> 'const vector<_Tp, _Alloc> *' this
| | | |           `-DeclRefExpr 0x64a2598 <col:43> 'size_type':'unsigned long' lvalue ParmVar 0x648db70 '__n' 'size_type':'unsigned long'
| | | |-AccessSpecDecl 0x6491e30 <line:788:5, col:14> protected
| | | |-CXXMethodDecl 0x6491f70 <line:790:7, line:795:7> _M_range_check 'void (size_type) const'
| | | | |-ParmVarDecl 0x6491e70 <line:791:22, col:32> __n 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x64a2a68 <line:792:7, line:795:7>
| | | |   `-IfStmt 0x64a2a38 <line:793:2, line:794:54>
| | | |     |-<<<NULL>>>
| | | |     |-CXXOperatorCallExpr 0x64a2808 <line:793:6, col:24> '<dependent type>'
| | | |     | |-UnresolvedLookupExpr 0x64a27a0 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630
| | | |     | |-DeclRefExpr 0x64a26e0 <col:6> 'size_type':'unsigned long' lvalue ParmVar 0x6491e70 '__n' 'size_type':'unsigned long'
| | | |     | `-CallExpr 0x64a2778 <col:13, col:24> '<dependent type>'
| | | |     |   `-CXXDependentScopeMemberExpr 0x64a2720 <col:13, col:19> '<dependent type>' lvalue
| | | |     |     `-CXXThisExpr 0x64a2708 <col:13> 'const vector<_Tp, _Alloc> *' this
| | | |     |-CallExpr 0x64a29f0 <line:794:4, col:54> 'void'
| | | |     | |-ImplicitCastExpr 0x64a29d8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| | | |     | | `-DeclRefExpr 0x64a2988 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a180 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'
| | | |     | `-ImplicitCastExpr 0x64a2a20 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <ArrayToPointerDecay>
| | | |     |   `-ParenExpr 0x64a2968 <col:24, col:30> 'const char [23]' lvalue
| | | |     |     `-StringLiteral 0x64a2928 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:794:29> 'const char [23]' lvalue "vector::_M_range_check"
| | | |     `-<<<NULL>>>
| | | |-AccessSpecDecl 0x6492020 <line:797:5, col:11> public
| | | |-CXXMethodDecl 0x64920e0 <line:809:7, line:814:7> at 'reference (size_type)'
| | | | |-ParmVarDecl 0x6492060 <line:810:10, col:20> __n 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x64a2bf0 <line:811:7, line:814:7>
| | | |   |-CallExpr 0x64a2af8 <line:812:2, col:20> '<dependent type>'
| | | |   | |-MemberExpr 0x64a2aa0 <col:2> '<bound member function type>' ->_M_range_check 0x6491f70
| | | |   | | `-CXXThisExpr 0x64a2a88 <col:2> 'vector<_Tp, _Alloc> *' this
| | | |   | `-DeclRefExpr 0x64a2ad0 <col:17> 'size_type':'unsigned long' lvalue ParmVar 0x6492060 '__n' 'size_type':'unsigned long'
| | | |   `-ReturnStmt 0x64a2bd0 <line:813:2, col:20>
| | | |     `-ArraySubscriptExpr 0x64a2ba8 <col:9, col:20> '<dependent type>' lvalue
| | | |       |-ParenExpr 0x64a2b60 <col:9, col:15> '<dependent type>'
| | | |       | `-UnaryOperator 0x64a2b40 <col:10, col:11> '<dependent type>' prefix '*'
| | | |       |   `-CXXThisExpr 0x64a2b28 <col:11> 'vector<_Tp, _Alloc> *' this
| | | |       `-DeclRefExpr 0x64a2b80 <col:17> 'size_type':'unsigned long' lvalue ParmVar 0x6492060 '__n' 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x6492220 <line:827:7, line:832:7> at 'const_reference (size_type) const'
| | | | |-ParmVarDecl 0x64921a0 <line:828:10, col:20> __n 'size_type':'unsigned long'
| | | | `-CompoundStmt 0x64a2d80 <line:829:7, line:832:7>
| | | |   |-CallExpr 0x64a2c88 <line:830:2, col:20> '<dependent type>'
| | | |   | |-MemberExpr 0x64a2c30 <col:2> '<bound member function type>' ->_M_range_check 0x6491f70
| | | |   | | `-CXXThisExpr 0x64a2c18 <col:2> 'const vector<_Tp, _Alloc> *' this
| | | |   | `-DeclRefExpr 0x64a2c60 <col:17> 'size_type':'unsigned long' lvalue ParmVar 0x64921a0 '__n' 'size_type':'unsigned long'
| | | |   `-ReturnStmt 0x64a2d60 <line:831:2, col:20>
| | | |     `-ArraySubscriptExpr 0x64a2d38 <col:9, col:20> '<dependent type>' lvalue
| | | |       |-ParenExpr 0x64a2cf0 <col:9, col:15> '<dependent type>'
| | | |       | `-UnaryOperator 0x64a2cd0 <col:10, col:11> '<dependent type>' prefix '*'
| | | |       |   `-CXXThisExpr 0x64a2cb8 <col:11> 'const vector<_Tp, _Alloc> *' this
| | | |       `-DeclRefExpr 0x64a2d10 <col:17> 'size_type':'unsigned long' lvalue ParmVar 0x64921a0 '__n' 'size_type':'unsigned long'
| | | |-CXXMethodDecl 0x6492350 <line:838:7, line:840:26> front 'reference (void)'
| | | | `-CompoundStmt 0x64a2e98 <col:7, col:26>
| | | |   `-ReturnStmt 0x64a2e78 <col:9, col:23>
| | | |     `-UnaryOperator 0x64a2e58 <col:16, col:23> '<dependent type>' prefix '*'
| | | |       `-CallExpr 0x64a2e30 <col:17, col:23> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a2dc0 <col:17> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x6492470 <line:846:7, line:848:26> front 'const_reference (void) const'
| | | | `-CompoundStmt 0x64a2fa8 <col:7, col:26>
| | | |   `-ReturnStmt 0x64a2f88 <col:9, col:23>
| | | |     `-UnaryOperator 0x64a2f68 <col:16, col:23> '<dependent type>' prefix '*'
| | | |       `-CallExpr 0x64a2f40 <col:17, col:23> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a2ed0 <col:17> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x6492530 <line:854:7, line:856:30> back 'reference (void)'
| | | | `-CompoundStmt 0x64a31a0 <col:7, col:30>
| | | |   `-ReturnStmt 0x64a3180 <col:9, col:27>
| | | |     `-UnaryOperator 0x64a3160 <col:16, col:27> '<dependent type>' prefix '*'
| | | |       `-ParenExpr 0x64a3140 <col:17, col:27> '<dependent type>'
| | | |         `-CXXOperatorCallExpr 0x64a30f8 <col:18, col:26> '<dependent type>'
| | | |           |-UnresolvedLookupExpr 0x64a3098 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |           |-CallExpr 0x64a3050 <col:18, col:22> '<dependent type>'
| | | |           | `-UnresolvedMemberExpr 0x64a2fe0 <col:18> '<bound member function type>' lvalue
| | | |           `-IntegerLiteral 0x64a3078 <col:26> 'int' 1
| | | |-CXXMethodDecl 0x64925f0 <line:862:7, line:864:30> back 'const_reference (void) const'
| | | | `-CompoundStmt 0x64a3398 <col:7, col:30>
| | | |   `-ReturnStmt 0x64a3378 <col:9, col:27>
| | | |     `-UnaryOperator 0x64a3358 <col:16, col:27> '<dependent type>' prefix '*'
| | | |       `-ParenExpr 0x64a3338 <col:17, col:27> '<dependent type>'
| | | |         `-CXXOperatorCallExpr 0x64a32f0 <col:18, col:26> '<dependent type>'
| | | |           |-UnresolvedLookupExpr 0x64a3290 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |           |-CallExpr 0x64a3248 <col:18, col:22> '<dependent type>'
| | | |           | `-UnresolvedMemberExpr 0x64a31d8 <col:18> '<bound member function type>' lvalue
| | | |           `-IntegerLiteral 0x64a3270 <col:26> 'int' 1
| | | |-CXXMethodDecl 0x6492710 <line:876:7, line:879:43> data 'pointer (void)'
| | | | `-CompoundStmt 0x64a4860 <col:7, col:43>
| | | |   `-ReturnStmt 0x64a4840 <col:9, col:40>
| | | |     `-CallExpr 0x64a4810 <col:16, col:40> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x64a33d8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | | |       `-CallExpr 0x64a47e8 <col:33, col:39> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a4778 <col:33> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x6492830 <line:884:7, line:887:43> data 'const_pointer (void) const'
| | | | `-CompoundStmt 0x64a49f8 <col:7, col:43>
| | | |   `-ReturnStmt 0x64a49d8 <col:9, col:40>
| | | |     `-CallExpr 0x64a49a8 <col:16, col:40> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x64a48a0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x63bc190
| | | |       `-CallExpr 0x64a4980 <col:33, col:39> '<dependent type>'
| | | |         `-UnresolvedMemberExpr 0x64a4910 <col:33> '<bound member function type>' lvalue
| | | |-CXXMethodDecl 0x64929a0 <line:900:7, line:915:7> push_back 'void (const value_type &)'
| | | | |-ParmVarDecl 0x64928e0 <line:901:17, col:35> __x 'const value_type &'
| | | | `-CompoundStmt 0x64a5148 <line:902:7, line:915:7>
| | | |   `-IfStmt 0x64a5118 <line:903:2, line:913:28>
| | | |     |-<<<NULL>>>
| | | |     |-CXXOperatorCallExpr 0x64a4c20 <line:903:6, col:47> '<dependent type>'
| | | |     | |-UnresolvedLookupExpr 0x64a4ba8 <col:30> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | | |     | |-CXXDependentScopeMemberExpr 0x64a4a88 <col:6, col:20> '<dependent type>' lvalue
| | | |     | | `-CXXDependentScopeMemberExpr 0x64a4a30 <col:6, col:12> '<dependent type>' lvalue
| | | |     | |   `-CXXThisExpr 0x64a4a18 <col:6> 'vector<_Tp, _Alloc> *' this
| | | |     | `-CXXDependentScopeMemberExpr 0x64a4b50 <col:33, col:47> '<dependent type>' lvalue
| | | |     |   `-CXXDependentScopeMemberExpr 0x64a4af8 <col:33, col:39> '<dependent type>' lvalue
| | | |     |     `-CXXThisExpr 0x64a4ae0 <col:33> 'vector<_Tp, _Alloc> *' this
| | | |     |-CompoundStmt 0x64a4f98 <line:904:4, line:908:4>
| | | |     | |-CallExpr 0x64a4e70 <line:905:6, line:906:34> '<dependent type>'
| | | |     | | |-CXXDependentScopeMemberExpr 0x64a4cb8 <line:905:6, col:21> '<dependent type>' lvalue
| | | |     | | |-CXXDependentScopeMemberExpr 0x64a4d28 <col:31, col:37> '<dependent type>' lvalue
| | | |     | | | `-CXXThisExpr 0x64a4d10 <col:31> 'vector<_Tp, _Alloc> *' this
| | | |     | | |-CXXDependentScopeMemberExpr 0x64a4df0 <col:46, col:60> '<dependent type>' lvalue
| | | |     | | | `-CXXDependentScopeMemberExpr 0x64a4d98 <col:46, col:52> '<dependent type>' lvalue
| | | |     | | |   `-CXXThisExpr 0x64a4d80 <col:46> 'vector<_Tp, _Alloc> *' this
| | | |     | | `-DeclRefExpr 0x64a4e48 <line:906:31> 'const value_type':'const _Tp' lvalue ParmVar 0x64928e0 '__x' 'const value_type &'
| | | |     | `-UnaryOperator 0x64a4f78 <line:907:6, col:22> '<dependent type>' prefix '++'
| | | |     |   `-CXXDependentScopeMemberExpr 0x64a4f20 <col:8, col:22> '<dependent type>' lvalue
| | | |     |     `-CXXDependentScopeMemberExpr 0x64a4ec8 <col:8, col:14> '<dependent type>' lvalue
| | | |     |       `-CXXThisExpr 0x64a4eb0 <col:8> 'vector<_Tp, _Alloc> *' this
| | | |     `-CallExpr 0x64a50e0 <line:913:4, col:28> '<dependent type>'
| | | |       |-MemberExpr 0x64a4fd8 <col:4> '<bound member function type>' ->_M_insert_aux 0x649d570
| | | |       | `-CXXThisExpr 0x64a4fc0 <col:4> 'vector<_Tp, _Alloc> *' this
| | | |       |-CallExpr 0x64a5090 <col:18, col:22> '<dependent type>'
| | | |       | `-UnresolvedMemberExpr 0x64a5020 <col:18> '<bound member function type>' lvalue
| | | |       `-DeclRefExpr 0x64a50b8 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0x64928e0 '__x' 'const value_type &'
| | | |-CXXMethodDecl 0x6492a70 <line:936:7, line:941:7> pop_back 'void (void)'
| | | | `-CompoundStmt 0x64a5468 <line:938:7, line:941:7>
| | | |   |-UnaryOperator 0x64a5230 <line:939:2, col:18> '<dependent type>' prefix '--'
| | | |   | `-CXXDependentScopeMemberExpr 0x64a51d8 <col:4, col:18> '<dependent type>' lvalue
| | | |   |   `-CXXDependentScopeMemberExpr 0x64a5180 <col:4, col:10> '<dependent type>' lvalue
| | | |   |     `-CXXThisExpr 0x64a5168 <col:4> 'vector<_Tp, _Alloc> *' this
| | | |   `-CallExpr 0x64a5430 <line:940:2, col:63> '<dependent type>'
| | | |     |-CXXDependentScopeMemberExpr 0x64a52a0 <col:2, col:17> '<dependent type>' lvalue
| | | |     |-CXXDependentScopeMemberExpr 0x64a5310 <col:25, col:31> '<dependent type>' lvalue
| | | |     | `-CXXThisExpr 0x64a52f8 <col:25> 'vector<_Tp, _Alloc> *' this
| | | |     `-CXXDependentScopeMemberExpr 0x64a53d8 <col:40, col:54> '<dependent type>' lvalue
| | | |       `-CXXDependentScopeMemberExpr 0x64a5380 <col:40, col:46> '<dependent type>' lvalue
| | | |         `-CXXThisExpr 0x64a5368 <col:40> 'vector<_Tp, _Alloc> *' this
| | | |-CXXMethodDecl 0x6492ca0 <line:972:7, line:973:56> insert 'iterator (iterator, const value_type &)'
| | | | |-ParmVarDecl 0x6492b20 <col:14, col:23> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | `-ParmVarDecl 0x6492b90 <col:35, col:53> __x 'const value_type &'
| | | |-CXXMethodDecl 0x6492f70 <line:1022:7, line:1024:47> insert 'void (iterator, size_type, const value_type &)'
| | | | |-ParmVarDecl 0x6492d60 <line:1023:14, col:23> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | |-ParmVarDecl 0x6492dd0 <col:35, col:45> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x6492e40 <col:50, col:68> __x 'const value_type &'
| | | | `-CompoundStmt 0x64a5590 <line:1024:7, col:47>
| | | |   `-CallExpr 0x64a5550 <col:9, col:44> '<dependent type>'
| | | |     |-MemberExpr 0x64a54a8 <col:9> '<bound member function type>' ->_M_fill_insert 0x649d320
| | | |     | `-CXXThisExpr 0x64a5490 <col:9> 'vector<_Tp, _Alloc> *' this
| | | |     |-DeclRefExpr 0x64a54d8 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6492d60 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |     |-DeclRefExpr 0x64a5500 <col:36> 'size_type':'unsigned long' lvalue ParmVar 0x6492dd0 '__n' 'size_type':'unsigned long'
| | | |     `-DeclRefExpr 0x64a5528 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0x6492e40 '__x' 'const value_type &'
| | | |-FunctionTemplateDecl 0x6493370 <line:1048:7, line:1056:2> insert
| | | | |-TemplateTypeParmDecl 0x6493030 <line:1048:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x64932d0 <line:1049:9, line:1056:2> insert 'void (iterator, _InputIterator, _InputIterator)'
| | | | | |-ParmVarDecl 0x64930c0 <line:1050:16, col:25> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | | |-ParmVarDecl 0x6493130 <col:37, col:52> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x64931a0 <line:1051:9, col:24> __last '_InputIterator'
| | | | | `-CompoundStmt 0x64a5920 <line:1052:9, line:1056:2>
| | | | |   |-DeclStmt 0x64a5768 <line:1054:4, col:72>
| | | | |   | `-TypedefDecl 0x64a5720 <col:4, col:63> _Integral 'typename std::__is_integer<_InputIterator>::__type'
| | | | |   `-CallExpr 0x64a58d8 <line:1055:4, col:63> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x64a5798 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x64a5808 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64930c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | |     |-DeclRefExpr 0x64a5830 <col:35> '_InputIterator' lvalue ParmVar 0x6493130 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x64a5858 <col:44> '_InputIterator' lvalue ParmVar 0x64931a0 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x64a58b0 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
| | | |-CXXMethodDecl 0x64934e0 <line:1074:7, line:1075:32> erase 'iterator (iterator)'
| | | | `-ParmVarDecl 0x64933e0 <col:13, col:22> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |-CXXMethodDecl 0x6493720 <line:1095:7, line:1096:46> erase 'iterator (iterator, iterator)'
| | | | |-ParmVarDecl 0x64935a0 <col:13, col:22> __first 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | `-ParmVarDecl 0x6493610 <col:31, col:40> __last 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |-CXXMethodDecl 0x64938a0 <line:1107:7, line:1116:7> swap 'void (vector<_Tp, _Alloc> &)'
| | | | |-ParmVarDecl 0x64937e0 <line:1108:12, col:20> __x 'vector<_Tp, _Alloc> &'
| | | | `-CompoundStmt 0x64a5cd8 <line:1112:7, line:1116:7>
| | | |   |-CallExpr 0x64a5a90 <line:1113:2, col:40> '<dependent type>'
| | | |   | |-CXXDependentScopeMemberExpr 0x64a59b8 <col:2, col:16> '<dependent type>' lvalue
| | | |   | | `-CXXDependentScopeMemberExpr 0x64a5960 <col:2, col:8> '<dependent type>' lvalue
| | | |   | |   `-CXXThisExpr 0x64a5948 <col:2> 'vector<_Tp, _Alloc> *' this
| | | |   | `-CXXDependentScopeMemberExpr 0x64a5a38 <col:29, col:33> '<dependent type>' lvalue
| | | |   |   `-DeclRefExpr 0x64a5a10 <col:29> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x64937e0 '__x' 'vector<_Tp, _Alloc> &'
| | | |   `-CallExpr 0x64a5ca0 <line:1114:2, line:1115:53> '<dependent type>'
| | | |     |-CXXDependentScopeMemberExpr 0x64a5b10 <line:1114:2, col:17> '<dependent type>' lvalue
| | | |     |-CallExpr 0x64a5bd0 <col:28, col:48> '<dependent type>'
| | | |     | `-UnresolvedMemberExpr 0x64a5b68 <col:28> '<dependent type>' lvalue
| | | |     `-CallExpr 0x64a5c78 <line:1115:28, col:52> '<dependent type>'
| | | |       `-CXXDependentScopeMemberExpr 0x64a5c20 <col:28, col:32> '<dependent type>' lvalue
| | | |         `-DeclRefExpr 0x64a5bf8 <col:28> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x64937e0 '__x' 'vector<_Tp, _Alloc> &'
| | | |-CXXMethodDecl 0x6493970 <line:1124:7, line:1126:50> clear 'void (void)'
| | | | `-CompoundStmt 0x64a5e40 <col:7, col:50>
| | | |   `-CallExpr 0x64a5e10 <col:9, col:47> '<dependent type>'
| | | |     |-MemberExpr 0x64a5d18 <col:9> '<bound member function type>' ->_M_erase_at_end 0x649d970
| | | |     | `-CXXThisExpr 0x64a5d00 <col:9> 'vector<_Tp, _Alloc> *' this
| | | |     `-CXXDependentScopeMemberExpr 0x64a5db8 <col:25, col:39> '<dependent type>' lvalue
| | | |       `-CXXDependentScopeMemberExpr 0x64a5d60 <col:25, col:31> '<dependent type>' lvalue
| | | |         `-CXXThisExpr 0x64a5d48 <col:25> 'vector<_Tp, _Alloc> *' this
| | | |-AccessSpecDecl 0x6493a10 <line:1128:5, col:14> protected
| | | |-FunctionTemplateDecl 0x6497510 <line:1133:7, line:1150:2> _M_allocate_and_copy
| | | | |-TemplateTypeParmDecl 0x6493a40 <line:1133:16, col:25> typename _ForwardIterator
| | | | |-CXXMethodDecl 0x6497470 <line:1134:9, line:1150:2> _M_allocate_and_copy 'pointer (size_type, _ForwardIterator, _ForwardIterator)'
| | | | | |-ParmVarDecl 0x6493ad0 <line:1135:30, col:40> __n 'size_type':'unsigned long'
| | | | | |-ParmVarDecl 0x6493b40 <line:1136:9, col:26> __first '_ForwardIterator'
| | | | | |-ParmVarDecl 0x6493bb0 <col:35, col:52> __last '_ForwardIterator'
| | | | | `-CompoundStmt 0x64a6360 <line:1137:9, line:1150:2>
| | | | |   |-DeclStmt 0x64a5f90 <line:1138:4, col:45>
| | | | |   | `-VarDecl 0x64a5e70 <col:4, col:44> __result 'pointer':'typename _Base::pointer'
| | | | |   |   `-CallExpr 0x64a5f60 <col:23, col:44> '<dependent type>'
| | | | |   |     |-CXXDependentScopeMemberExpr 0x64a5ee0 <col:23, col:29> '<dependent type>' lvalue
| | | | |   |     | `-CXXThisExpr 0x64a5ec8 <col:23> 'vector<_Tp, _Alloc> *' this
| | | | |   |     `-DeclRefExpr 0x64a5f38 <col:41> 'size_type':'unsigned long' lvalue ParmVar 0x6493ad0 '__n' 'size_type':'unsigned long'
| | | | |   `-CXXTryStmt 0x64a6340 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:1149:6>
| | | | |     |-CompoundStmt 0x64a61c0 <line:1140:6, line:1144:6>
| | | | |     | |-CallExpr 0x64a6130 <line:1141:8, line:1142:29> '<dependent type>'
| | | | |     | | |-UnresolvedLookupExpr 0x64a5fc8 <line:1141:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | | | |     | | |-DeclRefExpr 0x64a6028 <col:36> '_ForwardIterator' lvalue ParmVar 0x6493b40 '__first' '_ForwardIterator'
| | | | |     | | |-DeclRefExpr 0x64a6050 <col:45> '_ForwardIterator' lvalue ParmVar 0x6493bb0 '__last' '_ForwardIterator'
| | | | |     | | |-DeclRefExpr 0x64a6078 <col:53> 'pointer':'typename _Base::pointer' lvalue Var 0x64a5e70 '__result' 'pointer':'typename _Base::pointer'
| | | | |     | | `-CallExpr 0x64a6108 <line:1142:8, col:28> '<dependent type>'
| | | | |     | |   `-UnresolvedMemberExpr 0x64a60a0 <col:8> '<dependent type>' lvalue
| | | | |     | `-ReturnStmt 0x64a61a0 <line:1143:8, col:15>
| | | | |     |   `-DeclRefExpr 0x64a6178 <col:15> 'pointer':'typename _Base::pointer' lvalue Var 0x64a5e70 '__result' 'pointer':'typename _Base::pointer'
| | | | |     `-CXXCatchStmt 0x64a6320 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:1149:6>
| | | | |       |-<<<NULL>>>
| | | | |       `-CompoundStmt 0x64a62f8 <line:1146:6, line:1149:6>
| | | | |         |-CallExpr 0x64a62a0 <line:1147:8, col:35> '<dependent type>'
| | | | |         | |-UnresolvedMemberExpr 0x64a61e8 <col:8> '<dependent type>' lvalue
| | | | |         | |-DeclRefExpr 0x64a6250 <col:22> 'pointer':'typename _Base::pointer' lvalue Var 0x64a5e70 '__result' 'pointer':'typename _Base::pointer'
| | | | |         | `-DeclRefExpr 0x64a6278 <col:32> 'size_type':'unsigned long' lvalue ParmVar 0x6493ad0 '__n' 'size_type':'unsigned long'
| | | | |         `-CXXThrowExpr 0x64a62d8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | | |-FunctionTemplateDecl 0x64978b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:1159:7, line:1167:2> _M_initialize_dispatch
| | | | |-TemplateTypeParmDecl 0x6497570 <line:1159:16, col:25> typename _Integer
| | | | |-CXXMethodDecl 0x6497810 <line:1160:9, line:1167:2> _M_initialize_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
| | | | | |-ParmVarDecl 0x6497600 <line:1161:32, col:41> __n '_Integer'
| | | | | |-ParmVarDecl 0x6497670 <col:46, col:55> __value '_Integer'
| | | | | |-ParmVarDecl 0x64976e0 <col:64> 'struct std::__true_type'
| | | | | `-CompoundStmt 0x64a6978 <line:1162:9, line:1167:2>
| | | | |   |-BinaryOperator 0x64a6550 <line:1163:4, col:68> '<dependent type>' '='
| | | | |   | |-CXXDependentScopeMemberExpr 0x64a63f8 <col:4, col:18> '<dependent type>' lvalue
| | | | |   | | `-CXXDependentScopeMemberExpr 0x64a63a0 <col:4, col:10> '<dependent type>' lvalue
| | | | |   | |   `-CXXThisExpr 0x64a6388 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |   | `-CallExpr 0x64a6520 <col:29, col:68> '<dependent type>'
| | | | |   |   |-UnresolvedMemberExpr 0x64a6450 <col:29> '<dependent type>' lvalue
| | | | |   |   `-CXXStaticCastExpr 0x64a64f0 <col:41, col:67> 'size_type':'unsigned long' static_cast<size_type> <Dependent>
| | | | |   |     `-DeclRefExpr 0x64a64b8 <col:64> '_Integer' lvalue ParmVar 0x6497600 '__n' '_Integer'
| | | | |   |-BinaryOperator 0x64a6840 <line:1164:4, line:1165:57> '<dependent type>' '='
| | | | |   | |-CXXDependentScopeMemberExpr 0x64a65e8 <line:1164:4, col:18> '<dependent type>' lvalue
| | | | |   | | `-CXXDependentScopeMemberExpr 0x64a6590 <col:4, col:10> '<dependent type>' lvalue
| | | | |   | |   `-CXXThisExpr 0x64a6578 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |   | `-CXXOperatorCallExpr 0x64a67f8 <line:1165:6, col:57> '<dependent type>'
| | | | |   |   |-UnresolvedLookupExpr 0x64a67a0 <col:29> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | | |   |   |-CXXDependentScopeMemberExpr 0x64a66b0 <col:6, col:20> '<dependent type>' lvalue
| | | | |   |   | `-CXXDependentScopeMemberExpr 0x64a6658 <col:6, col:12> '<dependent type>' lvalue
| | | | |   |   |   `-CXXThisExpr 0x64a6640 <col:6> 'vector<_Tp, _Alloc> *' this
| | | | |   |   `-CXXStaticCastExpr 0x64a6770 <col:31, col:57> 'size_type':'unsigned long' static_cast<size_type> <Dependent>
| | | | |   |     `-DeclRefExpr 0x64a6708 <col:54> '_Integer' lvalue ParmVar 0x6497600 '__n' '_Integer'
| | | | |   `-CallExpr 0x64a6940 <line:1166:4, col:59> '<dependent type>'
| | | | |     |-MemberExpr 0x64a6880 <col:4> '<bound member function type>' ->_M_fill_initialize 0x64985e0
| | | | |     | `-CXXThisExpr 0x64a6868 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |     |-CXXStaticCastExpr 0x64a68e8 <col:23, col:49> 'size_type':'unsigned long' static_cast<size_type> <Dependent>
| | | | |     | `-DeclRefExpr 0x64a68b0 <col:46> '_Integer' lvalue ParmVar 0x6497600 '__n' '_Integer'
| | | | |     `-DeclRefExpr 0x64a6918 <col:52> '_Integer' lvalue ParmVar 0x6497670 '__value' '_Integer'
| | | |-FunctionTemplateDecl 0x6497c50 <line:1170:7, line:1178:2> _M_initialize_dispatch
| | | | |-TemplateTypeParmDecl 0x6497910 <line:1170:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x6497bb0 <line:1171:9, line:1178:2> _M_initialize_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
| | | | | |-ParmVarDecl 0x64979a0 <line:1172:32, col:47> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x6497a10 <col:56, col:71> __last '_InputIterator'
| | | | | |-ParmVarDecl 0x6497a80 <line:1173:11> 'struct std::__false_type'
| | | | | `-CompoundStmt 0x64a6d08 <line:1174:9, line:1178:2>
| | | | |   |-DeclStmt 0x64a6b78 <line:1175:4, line:1176:37>
| | | | |   | `-TypedefDecl 0x64a6b30 <line:1175:4, line:1176:24> _IterCategory 'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | | |   `-CallExpr 0x64a6cc8 <line:1177:4, col:56> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x64a6ba8 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x64a6c18 <col:24> '_InputIterator' lvalue ParmVar 0x64979a0 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x64a6c40 <col:33> '_InputIterator' lvalue ParmVar 0x6497a10 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x64a6ca0 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | |-FunctionTemplateDecl 0x6498060 <line:1181:7, line:1192:2> _M_range_initialize
| | | | |-TemplateTypeParmDecl 0x6497cb0 <line:1181:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x6497fc0 <line:1182:9, line:1192:2> _M_range_initialize 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
| | | | | |-ParmVarDecl 0x6497d40 <line:1183:29, col:44> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x6497db0 <line:1184:8, col:23> __last '_InputIterator'
| | | | | |-ParmVarDecl 0x6497e90 <col:31, col:36> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| | | | | `-CompoundStmt 0x64a6f88 <line:1185:9, line:1192:2>
| | | | |   `-ForStmt 0x64a6f48 <line:1186:4, line:1190:24>
| | | | |     |-<<<NULL>>>
| | | | |     |-<<<NULL>>>
| | | | |     |-CXXOperatorCallExpr 0x64a6df8 <line:1186:11, col:22> '<dependent type>'
| | | | |     | |-UnresolvedLookupExpr 0x64a6d80 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0
| | | | |     | |-DeclRefExpr 0x64a6d30 <col:11> '_InputIterator' lvalue ParmVar 0x6497d40 '__first' '_InputIterator'
| | | | |     | `-DeclRefExpr 0x64a6d58 <col:22> '_InputIterator' lvalue ParmVar 0x6497db0 '__last' '_InputIterator'
| | | | |     |-UnaryOperator 0x64a6e68 <col:30, col:32> '<dependent type>' prefix '++'
| | | | |     | `-DeclRefExpr 0x64a6e40 <col:32> '_InputIterator' lvalue ParmVar 0x6497d40 '__first' '_InputIterator'
| | | | |     `-CallExpr 0x64a6f18 <line:1190:6, col:24> '<dependent type>'
| | | | |       |-MemberExpr 0x64a6ea0 <col:6> '<bound member function type>' ->push_back 0x64929a0
| | | | |       | `-CXXThisExpr 0x64a6e88 <col:6> 'vector<_Tp, _Alloc> *' this
| | | | |       `-UnaryOperator 0x64a6ef8 <col:16, col:17> '<dependent type>' prefix '*'
| | | | |         `-DeclRefExpr 0x64a6ed0 <col:17> '_InputIterator' lvalue ParmVar 0x6497d40 '__first' '_InputIterator'
| | | |-FunctionTemplateDecl 0x6498470 <line:1195:7, line:1207:2> _M_range_initialize
| | | | |-TemplateTypeParmDecl 0x64980c0 <line:1195:16, col:25> typename _ForwardIterator
| | | | |-CXXMethodDecl 0x64983d0 <line:1196:9, line:1207:2> _M_range_initialize 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | | | |-ParmVarDecl 0x6498150 <line:1197:29, col:46> __first '_ForwardIterator'
| | | | | |-ParmVarDecl 0x64981c0 <line:1198:8, col:25> __last '_ForwardIterator'
| | | | | |-ParmVarDecl 0x64982a0 <col:33, col:38> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | | | `-CompoundStmt 0x64a78c8 <line:1199:9, line:1207:2>
| | | | |   |-DeclStmt 0x64a7118 <line:1200:4, col:56>
| | | | |   | `-VarDecl 0x64a6fc0 <col:4, col:55> __n 'const size_type':'const unsigned long'
| | | | |   |   `-CallExpr 0x64a70e0 <col:26, col:55> '<dependent type>'
| | | | |   |     |-UnresolvedLookupExpr 0x64a7038 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
| | | | |   |     |-DeclRefExpr 0x64a7090 <col:40> '_ForwardIterator' lvalue ParmVar 0x6498150 '__first' '_ForwardIterator'
| | | | |   |     `-DeclRefExpr 0x64a70b8 <col:49> '_ForwardIterator' lvalue ParmVar 0x64981c0 '__last' '_ForwardIterator'
| | | | |   |-BinaryOperator 0x64a72c0 <line:1201:4, col:50> '<dependent type>' '='
| | | | |   | |-CXXDependentScopeMemberExpr 0x64a71a0 <col:4, col:18> '<dependent type>' lvalue
| | | | |   | | `-CXXDependentScopeMemberExpr 0x64a7148 <col:4, col:10> '<dependent type>' lvalue
| | | | |   | |   `-CXXThisExpr 0x64a7130 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |   | `-CallExpr 0x64a7290 <col:29, col:50> '<dependent type>'
| | | | |   |   |-CXXDependentScopeMemberExpr 0x64a7210 <col:29, col:35> '<dependent type>' lvalue
| | | | |   |   | `-CXXThisExpr 0x64a71f8 <col:29> 'vector<_Tp, _Alloc> *' this
| | | | |   |   `-DeclRefExpr 0x64a7268 <col:47> 'const size_type':'const unsigned long' lvalue Var 0x64a6fc0 '__n' 'const size_type':'const unsigned long'
| | | | |   |-BinaryOperator 0x64a7540 <line:1202:4, col:63> '<dependent type>' '='
| | | | |   | |-CXXDependentScopeMemberExpr 0x64a7358 <col:4, col:18> '<dependent type>' lvalue
| | | | |   | | `-CXXDependentScopeMemberExpr 0x64a7300 <col:4, col:10> '<dependent type>' lvalue
| | | | |   | |   `-CXXThisExpr 0x64a72e8 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |   | `-CXXOperatorCallExpr 0x64a74f8 <col:38, col:63> '<dependent type>'
| | | | |   |   |-UnresolvedLookupExpr 0x64a74a0 <col:61> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | | |   |   |-CXXDependentScopeMemberExpr 0x64a7420 <col:38, col:52> '<dependent type>' lvalue
| | | | |   |   | `-CXXDependentScopeMemberExpr 0x64a73c8 <col:38, col:44> '<dependent type>' lvalue
| | | | |   |   |   `-CXXThisExpr 0x64a73b0 <col:38> 'vector<_Tp, _Alloc> *' this
| | | | |   |   `-DeclRefExpr 0x64a7478 <col:63> 'const size_type':'const unsigned long' lvalue Var 0x64a6fc0 '__n' 'const size_type':'const unsigned long'
| | | | |   `-BinaryOperator 0x64a78a0 <line:1203:4, line:1206:27> '<dependent type>' '='
| | | | |     |-CXXDependentScopeMemberExpr 0x64a75d8 <line:1203:4, col:18> '<dependent type>' lvalue
| | | | |     | `-CXXDependentScopeMemberExpr 0x64a7580 <col:4, col:10> '<dependent type>' lvalue
| | | | |     |   `-CXXThisExpr 0x64a7568 <col:4> 'vector<_Tp, _Alloc> *' this
| | | | |     `-CallExpr 0x64a7858 <line:1204:6, line:1206:27> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0x64a7650 <line:1204:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | | | |       |-DeclRefExpr 0x64a76b0 <col:34> '_ForwardIterator' lvalue ParmVar 0x6498150 '__first' '_ForwardIterator'
| | | | |       |-DeclRefExpr 0x64a76d8 <col:43> '_ForwardIterator' lvalue ParmVar 0x64981c0 '__last' '_ForwardIterator'
| | | | |       |-CXXDependentScopeMemberExpr 0x64a7770 <line:1205:6, col:20> '<dependent type>' lvalue
| | | | |       | `-CXXDependentScopeMemberExpr 0x64a7718 <col:6, col:12> '<dependent type>' lvalue
| | | | |       |   `-CXXThisExpr 0x64a7700 <col:6> 'vector<_Tp, _Alloc> *' this
| | | | |       `-CallExpr 0x64a7830 <line:1206:6, col:26> '<dependent type>'
| | | | |         `-UnresolvedMemberExpr 0x64a77c8 <col:6> '<dependent type>' lvalue
| | | |-CXXMethodDecl 0x64985e0 <line:1211:7, line:1217:7> _M_fill_initialize 'void (size_type, const value_type &)'
| | | | |-ParmVarDecl 0x64984e0 <line:1212:26, col:36> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x6498550 <col:41, col:59> __value 'const value_type &'
| | | | `-CompoundStmt 0x64a7d28 <line:1213:7, line:1217:7>
| | | |   |-CallExpr 0x64a7b28 <line:1214:2, line:1215:32> '<dependent type>'
| | | |   | |-UnresolvedLookupExpr 0x64a7920 <line:1214:2, col:7> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_n_a' 0x647cbe0 0x647dd20
| | | |   | |-CXXDependentScopeMemberExpr 0x64a79f0 <col:32, col:46> '<dependent type>' lvalue
| | | |   | | `-CXXDependentScopeMemberExpr 0x64a7998 <col:32, col:38> '<dependent type>' lvalue
| | | |   | |   `-CXXThisExpr 0x64a7980 <col:32> 'vector<_Tp, _Alloc> *' this
| | | |   | |-DeclRefExpr 0x64a7a48 <col:56> 'size_type':'unsigned long' lvalue ParmVar 0x64984e0 '__n' 'size_type':'unsigned long'
| | | |   | |-DeclRefExpr 0x64a7a70 <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0x6498550 '__value' 'const value_type &'
| | | |   | `-CallExpr 0x64a7b00 <line:1215:11, col:31> '<dependent type>'
| | | |   |   `-UnresolvedMemberExpr 0x64a7a98 <col:11> '<dependent type>' lvalue
| | | |   `-BinaryOperator 0x64a7d00 <line:1216:2, col:42> '<dependent type>' '='
| | | |     |-CXXDependentScopeMemberExpr 0x64a7be0 <col:2, col:16> '<dependent type>' lvalue
| | | |     | `-CXXDependentScopeMemberExpr 0x64a7b88 <col:2, col:8> '<dependent type>' lvalue
| | | |     |   `-CXXThisExpr 0x64a7b70 <col:2> 'vector<_Tp, _Alloc> *' this
| | | |     `-CXXDependentScopeMemberExpr 0x64a7ca8 <col:28, col:42> '<dependent type>' lvalue
| | | |       `-CXXDependentScopeMemberExpr 0x64a7c50 <col:28, col:34> '<dependent type>' lvalue
| | | |         `-CXXThisExpr 0x64a7c38 <col:28> 'vector<_Tp, _Alloc> *' this
| | | |-FunctionTemplateDecl 0x6498980 <line:1237:7, line:1240:39> _M_assign_dispatch
| | | | |-TemplateTypeParmDecl 0x6498690 <line:1237:16, col:25> typename _Integer
| | | | |-CXXMethodDecl 0x64988e0 <line:1238:9, line:1240:39> _M_assign_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
| | | | | |-ParmVarDecl 0x6498720 <line:1239:28, col:37> __n '_Integer'
| | | | | |-ParmVarDecl 0x6498790 <col:42, col:51> __val '_Integer'
| | | | | |-ParmVarDecl 0x6498800 <col:58> 'struct std::__true_type'
| | | | | `-CompoundStmt 0x64a7e20 <line:1240:9, col:39>
| | | | |   `-CallExpr 0x64a7de8 <col:11, col:36> '<dependent type>'
| | | | |     |-MemberExpr 0x64a7d68 <col:11> '<bound member function type>' ->_M_fill_assign 0x649bfb0
| | | | |     | `-CXXThisExpr 0x64a7d50 <col:11> 'vector<_Tp, _Alloc> *' this
| | | | |     |-DeclRefExpr 0x64a7d98 <col:26> '_Integer' lvalue ParmVar 0x6498720 '__n' '_Integer'
| | | | |     `-DeclRefExpr 0x64a7dc0 <col:31> '_Integer' lvalue ParmVar 0x6498790 '__val' '_Integer'
| | | |-FunctionTemplateDecl 0x6498cd0 <line:1243:7, line:1251:2> _M_assign_dispatch
| | | | |-TemplateTypeParmDecl 0x64989e0 <line:1243:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x6498c30 <line:1244:9, line:1251:2> _M_assign_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
| | | | | |-ParmVarDecl 0x6498a70 <line:1245:28, col:43> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x6498ae0 <col:52, col:67> __last '_InputIterator'
| | | | | |-ParmVarDecl 0x6498b50 <line:1246:7> 'struct std::__false_type'
| | | | | `-CompoundStmt 0x64a8188 <line:1247:9, line:1251:2>
| | | | |   |-DeclStmt 0x64a7ff8 <line:1248:4, line:1249:37>
| | | | |   | `-TypedefDecl 0x64a7fb0 <line:1248:4, line:1249:24> _IterCategory 'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | | |   `-CallExpr 0x64a8148 <line:1250:4, col:50> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x64a8028 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x64a8098 <col:18> '_InputIterator' lvalue ParmVar 0x6498a70 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x64a80c0 <col:27> '_InputIterator' lvalue ParmVar 0x6498ae0 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x64a8120 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | |-FunctionTemplateDecl 0x6499060 <line:1254:7, line:1257:32> _M_assign_aux
| | | | |-TemplateTypeParmDecl 0x6498d30 <line:1254:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x6498fc0 <line:1255:9, line:1257:32> _M_assign_aux 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
| | | | | |-ParmVarDecl 0x6498dc0 <line:1256:23, col:38> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x6498e30 <col:47, col:62> __last '_InputIterator'
| | | | | `-ParmVarDecl 0x6498ee0 <line:1257:9, col:14> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| | | |-FunctionTemplateDecl 0x64993f0 <line:1260:7, line:1263:34> _M_assign_aux
| | | | |-TemplateTypeParmDecl 0x64990c0 <line:1260:16, col:25> typename _ForwardIterator
| | | | |-CXXMethodDecl 0x6499350 <line:1261:9, line:1263:34> _M_assign_aux 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | | | |-ParmVarDecl 0x6499150 <line:1262:23, col:40> __first '_ForwardIterator'
| | | | | |-ParmVarDecl 0x64991c0 <col:49, col:66> __last '_ForwardIterator'
| | | | | `-ParmVarDecl 0x6499270 <line:1263:9, col:14> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | |-CXXMethodDecl 0x649bfb0 <line:1267:7, line:1268:60> _M_fill_assign 'void (size_type, const value_type &)'
| | | | |-ParmVarDecl 0x649beb0 <col:22, col:32> __n 'size_type':'unsigned long'
| | | | `-ParmVarDecl 0x649bf20 <col:37, col:55> __val 'const value_type &'
| | | |-FunctionTemplateDecl 0x649c420 <line:1277:7, line:1281:46> _M_insert_dispatch
| | | | |-TemplateTypeParmDecl 0x649c060 <line:1277:16, col:25> typename _Integer
| | | | |-CXXMethodDecl 0x649c380 <line:1278:9, line:1281:46> _M_insert_dispatch 'void (iterator, _Integer, _Integer, struct std::__true_type)'
| | | | | |-ParmVarDecl 0x649c0f0 <line:1279:28, col:37> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | | |-ParmVarDecl 0x649c160 <col:44, col:53> __n '_Integer'
| | | | | |-ParmVarDecl 0x649c1d0 <col:58, col:67> __val '_Integer'
| | | | | |-ParmVarDecl 0x649c240 <line:1280:7> 'struct std::__true_type'
| | | | | `-CompoundStmt 0x64a82b0 <line:1281:9, col:46>
| | | | |   `-CallExpr 0x64a8270 <col:11, col:43> '<dependent type>'
| | | | |     |-MemberExpr 0x64a81c8 <col:11> '<bound member function type>' ->_M_fill_insert 0x649d320
| | | | |     | `-CXXThisExpr 0x64a81b0 <col:11> 'vector<_Tp, _Alloc> *' this
| | | | |     |-DeclRefExpr 0x64a81f8 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x649c0f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | |     |-DeclRefExpr 0x64a8220 <col:33> '_Integer' lvalue ParmVar 0x649c160 '__n' '_Integer'
| | | | |     `-DeclRefExpr 0x64a8248 <col:38> '_Integer' lvalue ParmVar 0x649c1d0 '__val' '_Integer'
| | | |-FunctionTemplateDecl 0x649c850 <line:1284:7, line:1292:2> _M_insert_dispatch
| | | | |-TemplateTypeParmDecl 0x649c490 <line:1284:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x649c7b0 <line:1285:9, line:1292:2> _M_insert_dispatch 'void (iterator, _InputIterator, _InputIterator, struct std::__false_type)'
| | | | | |-ParmVarDecl 0x649c520 <line:1286:28, col:37> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | | |-ParmVarDecl 0x649c590 <col:44, col:59> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x649c600 <line:1287:7, col:22> __last '_InputIterator'
| | | | | |-ParmVarDecl 0x649c670 <col:30> 'struct std::__false_type'
| | | | | `-CompoundStmt 0x64a8640 <line:1288:9, line:1292:2>
| | | | |   |-DeclStmt 0x64a8488 <line:1289:4, line:1290:37>
| | | | |   | `-TypedefDecl 0x64a8440 <line:1289:4, line:1290:24> _IterCategory 'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | | |   `-CallExpr 0x64a85f8 <line:1291:4, col:59> '<dependent type>'
| | | | |     |-UnresolvedMemberExpr 0x64a84b8 <col:4> '<bound member function type>' lvalue
| | | | |     |-DeclRefExpr 0x64a8528 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x649c520 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | |     |-DeclRefExpr 0x64a8550 <col:27> '_InputIterator' lvalue ParmVar 0x649c590 '__first' '_InputIterator'
| | | | |     |-DeclRefExpr 0x64a8578 <col:36> '_InputIterator' lvalue ParmVar 0x649c600 '__last' '_InputIterator'
| | | | |     `-CXXUnresolvedConstructExpr 0x64a85d0 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category'
| | | |-FunctionTemplateDecl 0x649ccc0 <line:1295:7, line:1298:50> _M_range_insert
| | | | |-TemplateTypeParmDecl 0x649c8c0 <line:1295:16, col:25> typename _InputIterator
| | | | |-CXXMethodDecl 0x649cc20 <line:1296:9, line:1298:50> _M_range_insert 'void (iterator, _InputIterator, _InputIterator, std::input_iterator_tag)'
| | | | | |-ParmVarDecl 0x649c950 <line:1297:25, col:34> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | | |-ParmVarDecl 0x649c9c0 <col:41, col:56> __first '_InputIterator'
| | | | | |-ParmVarDecl 0x649ca30 <line:1298:4, col:19> __last '_InputIterator'
| | | | | `-ParmVarDecl 0x649cae0 <col:27, col:32> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| | | |-FunctionTemplateDecl 0x649d130 <line:1301:7, line:1304:54> _M_range_insert
| | | | |-TemplateTypeParmDecl 0x649cd30 <line:1301:16, col:25> typename _ForwardIterator
| | | | |-CXXMethodDecl 0x649d090 <line:1302:9, line:1304:54> _M_range_insert 'void (iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | | | |-ParmVarDecl 0x649cdc0 <line:1303:25, col:34> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | | |-ParmVarDecl 0x649ce30 <col:41, col:58> __first '_ForwardIterator'
| | | | | |-ParmVarDecl 0x649cea0 <line:1304:4, col:21> __last '_ForwardIterator'
| | | | | `-ParmVarDecl 0x649cf50 <col:29, col:34> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | |-CXXMethodDecl 0x649d320 <line:1308:7, line:1309:74> _M_fill_insert 'void (iterator, size_type, const value_type &)'
| | | | |-ParmVarDecl 0x649d1b0 <col:22, col:31> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | |-ParmVarDecl 0x649d220 <col:38, col:48> __n 'size_type':'unsigned long'
| | | | `-ParmVarDecl 0x649d290 <col:53, col:71> __x 'const value_type &'
| | | |-CXXMethodDecl 0x649d570 <line:1322:7, line:1323:63> _M_insert_aux 'void (iterator, const value_type &)'
| | | | |-ParmVarDecl 0x649d3f0 <col:21, col:30> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | | `-ParmVarDecl 0x649d460 <col:42, col:60> __x 'const value_type &'
| | | |-CXXMethodDecl 0x649d7b0 <line:1335:7, line:1343:7> _M_check_len 'size_type (size_type, const char *) const'
| | | | |-ParmVarDecl 0x649d630 <line:1336:20, col:30> __n 'size_type':'unsigned long'
| | | | |-ParmVarDecl 0x649d6a0 <col:35, col:47> __s 'const char *'
| | | | `-CompoundStmt 0x64a9400 <line:1337:7, line:1343:7>
| | | |   |-IfStmt 0x64a8d28 <line:1338:2, line:1339:33>
| | | |   | |-<<<NULL>>>
| | | |   | |-CXXOperatorCallExpr 0x64a8bb8 <line:1338:6, col:28> '<dependent type>'
| | | |   | | |-UnresolvedLookupExpr 0x64a8b50 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | | |   | | |-CXXOperatorCallExpr 0x64a8ae0 <col:6, col:24> '<dependent type>'
| | | |   | | | |-UnresolvedLookupExpr 0x64a8a80 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00
| | | |   | | | |-CallExpr 0x64a86b0 <col:6, col:15> '<dependent type>'
| | | |   | | | | `-MemberExpr 0x64a8680 <col:6> '<bound member function type>' ->max_size 0x648d350
| | | |   | | | |   `-CXXThisExpr 0x64a8668 <col:6> 'const vector<_Tp, _Alloc> *' this
| | | |   | | | `-CallExpr 0x64a8720 <col:19, col:24> '<dependent type>'
| | | |   | | |   `-MemberExpr 0x64a86f0 <col:19> '<bound member function type>' ->size 0x648d290
| | | |   | | |     `-CXXThisExpr 0x64a86d8 <col:19> 'const vector<_Tp, _Alloc> *' this
| | | |   | | `-DeclRefExpr 0x64a8b28 <col:28> 'size_type':'unsigned long' lvalue ParmVar 0x649d630 '__n' 'size_type':'unsigned long'
| | | |   | |-CallExpr 0x64a8ce0 <line:1339:4, col:33> 'void'
| | | |   | | |-ImplicitCastExpr 0x64a8cc8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| | | |   | | | `-DeclRefExpr 0x64a8ca0 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a040 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
| | | |   | | `-ImplicitCastExpr 0x64a8d10 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <LValueToRValue>
| | | |   | |   `-ParenExpr 0x64a8c80 <col:24, col:30> 'const char *' lvalue
| | | |   | |     `-DeclRefExpr 0x64a8c58 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_vector.h:1339:29> 'const char *' lvalue ParmVar 0x649d6a0 '__s' 'const char *'
| | | |   | `-<<<NULL>>>
| | | |   |-DeclStmt 0x64a9028 <line:1341:2, col:56>
| | | |   | `-VarDecl 0x64a8d70 <col:2, col:55> __len 'const size_type':'const unsigned long'
| | | |   |   `-CXXOperatorCallExpr 0x64a8fe0 <col:26, col:55> '<dependent type>'
| | | |   |     |-UnresolvedLookupExpr 0x64a8f88 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700
| | | |   |     |-CallExpr 0x64a8e10 <col:26, col:31> '<dependent type>'
| | | |   |     | `-MemberExpr 0x64a8de0 <col:26> '<bound member function type>' ->size 0x648d290
| | | |   |     |   `-CXXThisExpr 0x64a8dc8 <col:26> 'const vector<_Tp, _Alloc> *' this
| | | |   |     `-CallExpr 0x64a8f50 <col:35, col:55> '<dependent type>'
| | | |   |       |-UnresolvedLookupExpr 0x64a8e58 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = 'max' 0x6409aa0 0x640a690
| | | |   |       |-CallExpr 0x64a8f00 <col:44, col:49> '<dependent type>'
| | | |   |       | `-MemberExpr 0x64a8ed0 <col:44> '<bound member function type>' ->size 0x648d290
| | | |   |       |   `-CXXThisExpr 0x64a8eb8 <col:44> 'const vector<_Tp, _Alloc> *' this
| | | |   |       `-DeclRefExpr 0x64a8f28 <col:52> 'size_type':'unsigned long' lvalue ParmVar 0x649d630 '__n' 'size_type':'unsigned long'
| | | |   `-ReturnStmt 0x64a93e0 <line:1342:2, col:63>
| | | |     `-ConditionalOperator 0x64a93b0 <col:9, col:63> '<dependent type>'
| | | |       |-ParenExpr 0x64a92f8 <col:9, col:46> '<dependent type>'
| | | |       | `-BinaryOperator 0x64a92d0 <col:10, col:45> '<dependent type>' '||'
| | | |       |   |-CXXOperatorCallExpr 0x64a9140 <col:10, col:23> '<dependent type>'
| | | |       |   | |-UnresolvedLookupExpr 0x64a90d8 <col:16> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880
| | | |       |   | |-DeclRefExpr 0x64a9040 <col:10> 'const size_type':'const unsigned long' lvalue Var 0x64a8d70 '__len' 'const size_type':'const unsigned long'
| | | |       |   | `-CallExpr 0x64a90b0 <col:18, col:23> '<dependent type>'
| | | |       |   |   `-MemberExpr 0x64a9080 <col:18> '<bound member function type>' ->size 0x648d290
| | | |       |   |     `-CXXThisExpr 0x64a9068 <col:18> 'const vector<_Tp, _Alloc> *' this
| | | |       |   `-CXXOperatorCallExpr 0x64a9288 <col:28, col:45> '<dependent type>'
| | | |       |     |-UnresolvedLookupExpr 0x64a9220 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0
| | | |       |     |-DeclRefExpr 0x64a9188 <col:28> 'const size_type':'const unsigned long' lvalue Var 0x64a8d70 '__len' 'const size_type':'const unsigned long'
| | | |       |     `-CallExpr 0x64a91f8 <col:36, col:45> '<dependent type>'
| | | |       |       `-MemberExpr 0x64a91c8 <col:36> '<bound member function type>' ->max_size 0x648d350
| | | |       |         `-CXXThisExpr 0x64a91b0 <col:36> 'const vector<_Tp, _Alloc> *' this
| | | |       |-CallExpr 0x64a9360 <col:50, col:59> '<dependent type>'
| | | |       | `-MemberExpr 0x64a9330 <col:50> '<bound member function type>' ->max_size 0x648d350
| | | |       |   `-CXXThisExpr 0x64a9318 <col:50> 'const vector<_Tp, _Alloc> *' this
| | | |       `-DeclRefExpr 0x64a9388 <col:63> 'const size_type':'const unsigned long' lvalue Var 0x64a8d70 '__len' 'const size_type':'const unsigned long'
| | | `-CXXMethodDecl 0x649d970 <line:1349:7, line:1354:7> _M_erase_at_end 'void (pointer)'
| | |   |-ParmVarDecl 0x649d870 <line:1350:23, col:31> __pos 'pointer':'typename _Base::pointer'
| | |   `-CompoundStmt 0x64a9798 <line:1351:7, line:1354:7>
| | |     |-CallExpr 0x64a9640 <line:1352:2, col:69> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x64a9450 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |     | |-DeclRefExpr 0x64a94c0 <col:16> 'pointer':'typename _Base::pointer' lvalue ParmVar 0x649d870 '__pos' 'pointer':'typename _Base::pointer'
| | |     | |-CXXDependentScopeMemberExpr 0x64a9558 <col:23, col:37> '<dependent type>' lvalue
| | |     | | `-CXXDependentScopeMemberExpr 0x64a9500 <col:23, col:29> '<dependent type>' lvalue
| | |     | |   `-CXXThisExpr 0x64a94e8 <col:23> 'vector<_Tp, _Alloc> *' this
| | |     | `-CallExpr 0x64a9618 <col:48, col:68> '<dependent type>'
| | |     |   `-UnresolvedMemberExpr 0x64a95b0 <col:48> '<dependent type>' lvalue
| | |     `-BinaryOperator 0x64a9770 <line:1353:2, col:28> '<dependent type>' '='
| | |       |-CXXDependentScopeMemberExpr 0x64a96f0 <col:2, col:16> '<dependent type>' lvalue
| | |       | `-CXXDependentScopeMemberExpr 0x64a9698 <col:2, col:8> '<dependent type>' lvalue
| | |       |   `-CXXThisExpr 0x64a9680 <col:2> 'vector<_Tp, _Alloc> *' this
| | |       `-DeclRefExpr 0x64a9748 <col:28> 'pointer':'typename _Base::pointer' lvalue ParmVar 0x649d870 '__pos' 'pointer':'typename _Base::pointer'
| | `-ClassTemplateSpecializationDecl 0x6518d20 <line:209:3, line:1388:5> class vector definition
| |   |-protected '_Vector_base<long long, class std::allocator<long long> >':'struct std::_Vector_base<long long, class std::allocator<long long> >'
| |   |-TemplateArgument type 'long long'
| |   |-TemplateArgument type 'class std::allocator<long long>'
| |   |-CXXRecordDecl 0x6520870 prev 0x6518d20 <line:210:5, col:11> class vector
| |   |-TypedefDecl 0x6520980 <line:213:7, col:58> _Alloc_value_type 'typename class allocator<long long>::value_type':'long long'
| |   |-TypedefDecl 0x6520aa0 <line:217:7, col:44> _Base '_Vector_base<long long, class std::allocator<long long> >':'struct std::_Vector_base<long long, class std::allocator<long long> >'
| |   |-TypedefDecl 0x6520ba0 <line:218:7, col:48> _Tp_alloc_type 'typename _Base::_Tp_alloc_type':'class std::allocator<long long>'
| |   |-TypedefDecl 0x6520ce0 <line:219:7, col:58> _Alloc_traits '__gnu_cxx::__alloc_traits<_Tp_alloc_type>':'struct __gnu_cxx::__alloc_traits<class std::allocator<long long> >'
| |   |-AccessSpecDecl 0x6520d30 <line:221:5, col:11> public
| |   |-TypedefDecl 0x6520d70 <line:222:7, col:24> value_type 'long long':'long long'
| |   |-TypedefDecl 0x6520e30 <line:223:7, col:58> pointer 'typename _Base::pointer':'long long *'
| |   |-TypedefDecl 0x6520f50 <line:224:7, col:58> const_pointer 'typename _Alloc_traits::const_pointer':'const long long *'
| |   |-TypedefDecl 0x6521030 <line:225:7, col:58> reference 'typename _Alloc_traits::reference':'long long &'
| |   |-TypedefDecl 0x6521110 <line:226:7, col:58> const_reference 'typename _Alloc_traits::const_reference':'const long long &'
| |   |-TypedefDecl 0x65213a0 <line:227:7, col:61> iterator '__gnu_cxx::__normal_iterator<pointer, vector<long long, allocator<long long> > >':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   |-TypedefDecl 0x6521630 <line:228:7, line:229:7> const_iterator '__gnu_cxx::__normal_iterator<const_pointer, vector<long long, allocator<long long> > >':'class __gnu_cxx::__normal_iterator<const long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   |-TypedefDecl 0x6521870 <line:230:7, col:54> const_reverse_iterator 'std::reverse_iterator<const_iterator>':'class std::reverse_iterator<class __gnu_cxx::__normal_iterator<const long long *, class std::vector<long long, class std::allocator<long long> > > >'
| |   |-TypedefDecl 0x6521ab0 <line:231:7, col:49> reverse_iterator 'std::reverse_iterator<iterator>':'class std::reverse_iterator<class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > > >'
| |   |-TypedefDecl 0x6521b00 <line:232:7, col:27> size_type 'size_t':'unsigned long'
| |   |-TypedefDecl 0x6521b50 <line:233:7, col:30> difference_type 'ptrdiff_t':'long'
| |   |-TypedefDecl 0x6521bb0 <line:234:7, col:48> allocator_type 'class std::allocator<long long>':'class std::allocator<long long>'
| |   |-AccessSpecDecl 0x6521c00 <line:236:5, col:14> protected
| |   |-UsingDecl 0x6521c50 <line:237:7, col:20> _Base::_M_allocate
| |   |-UsingShadowDecl 0x6521ca0 <col:20> CXXMethod 0x6520430 '_M_allocate' 'pointer (size_t)'
| |   |-UsingDecl 0x6521d00 <line:238:7, col:20> _Base::_M_deallocate
| |   |-UsingShadowDecl 0x6521d50 <col:20> CXXMethod 0x6520630 '_M_deallocate' 'void (pointer, size_t)'
| |   |-UsingDecl 0x6521db0 <line:239:7, col:20> _Base::_M_impl
| |   |-UsingShadowDecl 0x6521e00 <col:20> Field 0x65202e0 '_M_impl' 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl'
| |   |-UsingDecl 0x6521e60 <line:240:7, col:20> _Base::_M_get_Tp_allocator
| |   |-UsingShadowDecl 0x6521eb0 <col:20> CXXMethod 0x651ef20 '_M_get_Tp_allocator' '_Tp_alloc_type &(void)'
| |   |-UsingShadowDecl 0x6521ef0 <col:20> CXXMethod 0x651f080 '_M_get_Tp_allocator' 'const _Tp_alloc_type &(void) const'
| |   |-AccessSpecDecl 0x6521f30 <line:242:5, col:11> public
| |   |-CXXConstructorDecl 0x6521fa0 <line:248:7> vector 'void (void)'
| |   |-CXXConstructorDecl 0x65221b0 <line:255:7, line:256:7> vector 'void (const allocator_type &)'
| |   | `-ParmVarDecl 0x65220d0 <col:14, col:36> __a 'const allocator_type &'
| |   |-CXXConstructorDecl 0x6522510 <line:294:7, line:298:43> vector 'void (size_type, const value_type &, const allocator_type &)'
| |   | |-ParmVarDecl 0x6522290 <line:295:14, col:24> __n 'size_type':'unsigned long'
| |   | |-ParmVarDecl 0x6522350 <col:29, col:68> __value 'const value_type &'
| |   | |-ParmVarDecl 0x65223c0 <line:296:7, col:50> __a 'const allocator_type &'
| |   | |-CXXCtorInitializer '_Base':'struct std::_Vector_base<long long, class std::allocator<long long> >'
| |   | | |-CXXConstructExpr 0x652fbd8 <line:297:9, col:23> '_Vector_base<long long, class std::allocator<long long> >':'struct std::_Vector_base<long long, class std::allocator<long long> >' 'void (size_t, const allocator_type &)'
| |   | | | |-ImplicitCastExpr 0x652fbc0 <col:15> 'size_type':'unsigned long' <LValueToRValue>
| |   | | | | `-DeclRefExpr 0x652f950 <col:15> 'size_type':'unsigned long' lvalue ParmVar 0x6522290 '__n' 'size_type':'unsigned long'
| |   | | | `-DeclRefExpr 0x652f978 <col:20> 'const allocator_type':'const class std::allocator<long long>' lvalue ParmVar 0x65223c0 '__a' 'const allocator_type &'
| |   | `-CompoundStmt 0x652fd38 <line:298:7, col:43>
| |   |   `-CXXMemberCallExpr 0x652fce8 <col:9, col:40> 'void'
| |   |     |-MemberExpr 0x652fc68 <col:9> '<bound member function type>' ->_M_fill_initialize 0x6527a40
| |   |     | `-CXXThisExpr 0x652fc50 <col:9> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |     |-ImplicitCastExpr 0x652fd20 <col:28> 'size_type':'unsigned long' <LValueToRValue>
| |   |     | `-DeclRefExpr 0x652fc98 <col:28> 'size_type':'unsigned long' lvalue ParmVar 0x6522290 '__n' 'size_type':'unsigned long'
| |   |     `-DeclRefExpr 0x652fcc0 <col:33> 'const value_type':'const long long' lvalue ParmVar 0x6522350 '__value' 'const value_type &'
| |   |-CXXConstructorDecl 0x6522720 <line:310:7> vector 'void (const class std::vector<long long, class std::allocator<long long> > &)'
| |   | `-ParmVarDecl 0x6522640 <col:14, col:28> __x 'const class std::vector<long long, class std::allocator<long long> > &'
| |   |-FunctionTemplateDecl 0x6522b80 <line:397:7, line:398:9> vector
| |   | |-TemplateTypeParmDecl 0x6522800 <line:397:16, col:25> typename _InputIterator
| |   | |-CXXConstructorDecl 0x6522ac0 <line:398:9> vector 'void (_InputIterator, _InputIterator, const allocator_type &)'
| |   | | |-ParmVarDecl 0x6522890 <col:16, col:31> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6522900 <col:40, col:55> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6522970 <line:399:9, col:52> __a 'const allocator_type &'
| |   |-CXXDestructorDecl 0x6522ca0 <line:414:7, line:416:33> ~vector 'void (void)'
| |   | `-CompoundStmt 0x653cdb0 <line:415:7, line:416:33>
| |   |   `-CallExpr 0x653cd40 <line:415:9, line:416:30> 'void'
| |   |     |-ImplicitCastExpr 0x653cd28 <line:415:9, col:14> 'void (*)(long long *, long long *, allocator<long long> &)' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x653cc90 <col:9, col:14> 'void (long long *, long long *, allocator<long long> &)' lvalue Function 0x653cb60 '_Destroy' 'void (long long *, long long *, allocator<long long> &)' (FunctionTemplate 0x64719f0 '_Destroy')
| |   |     |-ImplicitCastExpr 0x653cd80 <col:23, col:37> 'pointer':'long long *' <LValueToRValue>
| |   |     | `-MemberExpr 0x653c088 <col:23, col:37> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |     |   `-MemberExpr 0x653c040 <col:23, col:29> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     |     `-ImplicitCastExpr 0x653c020 <col:23> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |     |       `-CXXThisExpr 0x653c008 <col:23> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |     |-ImplicitCastExpr 0x653cd98 <col:47, col:61> 'pointer':'long long *' <LValueToRValue>
| |   |     | `-MemberExpr 0x653c138 <col:47, col:61> 'pointer':'long long *' lvalue ._M_finish 0x651fc60
| |   |     |   `-MemberExpr 0x653c0f0 <col:47, col:53> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     |     `-ImplicitCastExpr 0x653c0d0 <col:47> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |     |       `-CXXThisExpr 0x653c0b8 <col:47> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |     `-CXXMemberCallExpr 0x653c258 <line:416:9, col:29> '_Tp_alloc_type':'class std::allocator<long long>' lvalue
| |   |       `-MemberExpr 0x653c210 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0x651ef20
| |   |         `-ImplicitCastExpr 0x653c280 <col:9> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |           `-CXXThisExpr 0x653c1f8 <col:9> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |-CXXMethodDecl 0x6522e60 <line:426:7, line:427:34> operator= 'class std::vector<long long, class std::allocator<long long> > &(const class std::vector<long long, class std::allocator<long long> > &)'
| |   | `-ParmVarDecl 0x6522da0 <col:17, col:31> __x 'const class std::vector<long long, class std::allocator<long long> > &'
| |   |-CXXMethodDecl 0x65230a0 <line:478:7, line:480:37> assign 'void (size_type, const value_type &)'
| |   | |-ParmVarDecl 0x6522f20 <line:479:14, col:24> __n 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x6522f90 <col:29, col:47> __val 'const value_type &'
| |   |-FunctionTemplateDecl 0x65233d0 <line:501:7, line:508:2> assign
| |   | |-TemplateTypeParmDecl 0x6523160 <line:501:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6523330 <line:502:9, line:508:2> assign 'void (_InputIterator, _InputIterator)'
| |   | | |-ParmVarDecl 0x65231f0 <line:503:16, col:31> __first '_InputIterator'
| |   | | `-ParmVarDecl 0x6523260 <col:40, col:55> __last '_InputIterator'
| |   |-UsingDecl 0x65234e0 <line:529:7, col:20> _Base::get_allocator
| |   |-UsingShadowDecl 0x6523530 <col:20> CXXMethod 0x651f1d0 'get_allocator' 'allocator_type (void) const'
| |   |-CXXMethodDecl 0x65235f0 <line:537:7, line:539:50> begin 'iterator (void)'
| |   |-CXXMethodDecl 0x6523720 <line:546:7, line:548:56> begin 'const_iterator (void) const'
| |   |-CXXMethodDecl 0x65237f0 <line:555:7, line:557:51> end 'iterator (void)'
| |   |-CXXMethodDecl 0x65238c0 <line:564:7, line:566:57> end 'const_iterator (void) const'
| |   |-CXXMethodDecl 0x6523a10 <line:573:7, line:575:41> rbegin 'reverse_iterator (void)'
| |   |-CXXMethodDecl 0x6523b60 <line:582:7, line:584:47> rbegin 'const_reverse_iterator (void) const'
| |   |-CXXMethodDecl 0x6523c30 <line:591:7, line:593:43> rend 'reverse_iterator (void)'
| |   |-CXXMethodDecl 0x6523d40 <line:600:7, line:602:49> rend 'const_reverse_iterator (void) const'
| |   |-CXXMethodDecl 0x6523df0 <line:644:7, line:646:77> size 'size_type (void) const'
| |   |-CXXMethodDecl 0x6523ea0 <line:649:7, line:651:64> max_size 'size_type (void) const'
| |   |-CXXMethodDecl 0x65240d0 <line:703:7, line:710:7> resize 'void (size_type, value_type)'
| |   | |-ParmVarDecl 0x6523f50 <line:704:14, col:24> __new_size 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x6523fc0 <col:36, col:64> __x 'value_type':'long long'
| |   |-CXXMethodDecl 0x6524190 <line:724:7, line:727:32> capacity 'size_type (void) const'
| |   |-CXXMethodDecl 0x6524240 <line:733:7, line:735:34> empty '_Bool (void) const'
| |   |-CXXMethodDecl 0x6524350 <line:754:7, line:755:28> reserve 'void (size_type)'
| |   | `-ParmVarDecl 0x65242f0 <col:15, col:25> __n 'size_type':'unsigned long'
| |   |-CXXMethodDecl 0x6524530 <line:769:7, line:771:49> operator[] 'reference (size_type)'
| |   | |-ParmVarDecl 0x6524430 <line:770:18, col:28> __n 'size_type':'unsigned long'
| |   | `-CompoundStmt 0x653dcb8 <line:771:7, col:49>
| |   |   `-ReturnStmt 0x653dc98 <col:9, col:46>
| |   |     `-UnaryOperator 0x653dc78 <col:16, col:46> 'long long':'long long' lvalue prefix '*'
| |   |       `-ParenExpr 0x653dc58 <col:17, col:46> 'pointer':'long long *'
| |   |         `-BinaryOperator 0x653dc30 <col:18, col:43> 'pointer':'long long *' '+'
| |   |           |-ImplicitCastExpr 0x653dc00 <col:18, col:32> 'pointer':'long long *' <LValueToRValue>
| |   |           | `-MemberExpr 0x653dba8 <col:18, col:32> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |           |   `-MemberExpr 0x653db60 <col:18, col:24> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |           |     `-ImplicitCastExpr 0x653db40 <col:18> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |           |       `-CXXThisExpr 0x653db28 <col:18> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |           `-ImplicitCastExpr 0x653dc18 <col:43> 'size_type':'unsigned long' <LValueToRValue>
| |   |             `-DeclRefExpr 0x653dbd8 <col:43> 'size_type':'unsigned long' lvalue ParmVar 0x6524430 '__n' 'size_type':'unsigned long'
| |   |-CXXMethodDecl 0x6524710 <line:784:7, line:786:49> operator[] 'const_reference (size_type) const'
| |   | `-ParmVarDecl 0x6524610 <line:785:18, col:28> __n 'size_type':'unsigned long'
| |   |-AccessSpecDecl 0x65247d0 <line:788:5, col:14> protected
| |   |-CXXMethodDecl 0x6524860 <line:790:7, line:795:7> _M_range_check 'void (size_type) const'
| |   | `-ParmVarDecl 0x6524800 <line:791:22, col:32> __n 'size_type':'unsigned long'
| |   |-AccessSpecDecl 0x6524920 <line:797:5, col:11> public
| |   |-CXXMethodDecl 0x65249d0 <line:809:7, line:814:7> at 'reference (size_type)'
| |   | `-ParmVarDecl 0x6524950 <line:810:10, col:20> __n 'size_type':'unsigned long'
| |   |-CXXMethodDecl 0x6524b10 <line:827:7, line:832:7> at 'const_reference (size_type) const'
| |   | `-ParmVarDecl 0x6524a90 <line:828:10, col:20> __n 'size_type':'unsigned long'
| |   |-CXXMethodDecl 0x6524c50 <line:838:7, line:840:26> front 'reference (void)'
| |   |-CXXMethodDecl 0x6524d80 <line:846:7, line:848:26> front 'const_reference (void) const'
| |   |-CXXMethodDecl 0x6524e50 <line:854:7, line:856:30> back 'reference (void)'
| |   |-CXXMethodDecl 0x6524f20 <line:862:7, line:864:30> back 'const_reference (void) const'
| |   |-CXXMethodDecl 0x6525050 <line:876:7, line:879:43> data 'pointer (void)'
| |   |-CXXMethodDecl 0x6525180 <line:884:7, line:887:43> data 'const_pointer (void) const'
| |   |-CXXMethodDecl 0x6525340 <line:900:7, line:915:7> push_back 'void (const value_type &)'
| |   | `-ParmVarDecl 0x6525240 <line:901:17, col:35> __x 'const value_type &'
| |   |-CXXMethodDecl 0x6525400 <line:936:7, line:941:7> pop_back 'void (void)'
| |   |-CXXMethodDecl 0x6525640 <line:972:7, line:973:56> insert 'iterator (iterator, const value_type &)'
| |   | |-ParmVarDecl 0x65254c0 <col:14, col:23> __position 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | `-ParmVarDecl 0x6525530 <col:35, col:53> __x 'const value_type &'
| |   |-CXXMethodDecl 0x6525910 <line:1022:7, line:1024:47> insert 'void (iterator, size_type, const value_type &)'
| |   | |-ParmVarDecl 0x6525710 <line:1023:14, col:23> __position 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | |-ParmVarDecl 0x6525770 <col:35, col:45> __n 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x65257e0 <col:50, col:68> __x 'const value_type &'
| |   |-FunctionTemplateDecl 0x6525d20 <line:1048:7, line:1056:2> insert
| |   | |-TemplateTypeParmDecl 0x65259e0 <line:1048:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6525c80 <line:1049:9, line:1056:2> insert 'void (iterator, _InputIterator, _InputIterator)'
| |   | | |-ParmVarDecl 0x6525a70 <line:1050:16, col:25> __position 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | | |-ParmVarDecl 0x6525ae0 <col:37, col:52> __first '_InputIterator'
| |   | | `-ParmVarDecl 0x6525b50 <line:1051:9, col:24> __last '_InputIterator'
| |   |-CXXMethodDecl 0x6525f20 <line:1074:7, line:1075:32> erase 'iterator (iterator)'
| |   | `-ParmVarDecl 0x6525e20 <col:13, col:22> __position 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   |-CXXMethodDecl 0x6526170 <line:1095:7, line:1096:46> erase 'iterator (iterator, iterator)'
| |   | |-ParmVarDecl 0x6525ff0 <col:13, col:22> __first 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | `-ParmVarDecl 0x6526060 <col:31, col:40> __last 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   |-CXXMethodDecl 0x6526300 <line:1107:7, line:1116:7> swap 'void (class std::vector<long long, class std::allocator<long long> > &)'
| |   | `-ParmVarDecl 0x6526240 <line:1108:12, col:20> __x 'class std::vector<long long, class std::allocator<long long> > &'
| |   |-CXXMethodDecl 0x65263c0 <line:1124:7, line:1126:50> clear 'void (void)'
| |   |-AccessSpecDecl 0x6526470 <line:1128:5, col:14> protected
| |   |-FunctionTemplateDecl 0x65267d0 <line:1133:7, line:1150:2> _M_allocate_and_copy
| |   | |-TemplateTypeParmDecl 0x65264a0 <line:1133:16, col:25> typename _ForwardIterator
| |   | |-CXXMethodDecl 0x6526730 <line:1134:9, line:1150:2> _M_allocate_and_copy 'pointer (size_type, _ForwardIterator, _ForwardIterator)'
| |   | | |-ParmVarDecl 0x6526520 <line:1135:30, col:40> __n 'size_type':'unsigned long'
| |   | | |-ParmVarDecl 0x6526590 <line:1136:9, col:26> __first '_ForwardIterator'
| |   | | `-ParmVarDecl 0x6526600 <col:35, col:52> __last '_ForwardIterator'
| |   |-FunctionTemplateDecl 0x6526bf0 <line:1159:7, line:1167:2> _M_initialize_dispatch
| |   | |-TemplateTypeParmDecl 0x65268c0 <line:1159:16, col:25> typename _Integer
| |   | |-CXXMethodDecl 0x6526b50 <line:1160:9, line:1167:2> _M_initialize_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
| |   | | |-ParmVarDecl 0x6526950 <line:1161:32, col:41> __n '_Integer'
| |   | | |-ParmVarDecl 0x65269c0 <col:46, col:55> __value '_Integer'
| |   | | `-ParmVarDecl 0x6526a20 <col:64> 'struct std::__true_type'
| |   |-FunctionTemplateDecl 0x6527010 <line:1170:7, line:1178:2> _M_initialize_dispatch
| |   | |-TemplateTypeParmDecl 0x6526ce0 <line:1170:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6526f70 <line:1171:9, line:1178:2> _M_initialize_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
| |   | | |-ParmVarDecl 0x6526d70 <line:1172:32, col:47> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6526de0 <col:56, col:71> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6526e40 <line:1173:11> 'struct std::__false_type'
| |   |-FunctionTemplateDecl 0x6527430 <line:1181:7, line:1192:2> _M_range_initialize
| |   | |-TemplateTypeParmDecl 0x6527100 <line:1181:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6527390 <line:1182:9, line:1192:2> _M_range_initialize 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
| |   | | |-ParmVarDecl 0x6527190 <line:1183:29, col:44> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6527200 <line:1184:8, col:23> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6527260 <col:31, col:36> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| |   |-FunctionTemplateDecl 0x6527850 <line:1195:7, line:1207:2> _M_range_initialize
| |   | |-TemplateTypeParmDecl 0x6527520 <line:1195:16, col:25> typename _ForwardIterator
| |   | |-CXXMethodDecl 0x65277b0 <line:1196:9, line:1207:2> _M_range_initialize 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| |   | | |-ParmVarDecl 0x65275b0 <line:1197:29, col:46> __first '_ForwardIterator'
| |   | | |-ParmVarDecl 0x6527620 <line:1198:8, col:25> __last '_ForwardIterator'
| |   | | `-ParmVarDecl 0x6527680 <col:33, col:38> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| |   |-CXXMethodDecl 0x6527a40 <line:1211:7, line:1217:7> _M_fill_initialize 'void (size_type, const value_type &)'
| |   | |-ParmVarDecl 0x6527940 <line:1212:26, col:36> __n 'size_type':'unsigned long'
| |   | |-ParmVarDecl 0x65279b0 <col:41, col:59> __value 'const value_type &'
| |   | `-CompoundStmt 0x6532d08 <line:1213:7, line:1217:7>
| |   |   |-CallExpr 0x6532af0 <line:1214:2, line:1215:32> 'void'
| |   |   | |-ImplicitCastExpr 0x6532ad8 <line:1214:2, col:7> 'void (*)(long long *, unsigned long, const long long &, allocator<long long> &)' <FunctionToPointerDecay>
| |   |   | | `-DeclRefExpr 0x6532a40 <col:2, col:7> 'void (long long *, unsigned long, const long long &, allocator<long long> &)' lvalue Function 0x65328e0 '__uninitialized_fill_n_a' 'void (long long *, unsigned long, const long long &, allocator<long long> &)' (FunctionTemplate 0x647dd20 '__uninitialized_fill_n_a')
| |   |   | |-ImplicitCastExpr 0x6532b38 <col:32, col:46> 'pointer':'long long *' <LValueToRValue>
| |   |   | | `-MemberExpr 0x6531b80 <col:32, col:46> 'pointer':'long long *' lvalue ._M_start 0x651fc00
| |   |   | |   `-MemberExpr 0x6531b38 <col:32, col:38> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |   | |     `-ImplicitCastExpr 0x6531b18 <col:32> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |   | |       `-CXXThisExpr 0x6531b00 <col:32> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |   | |-ImplicitCastExpr 0x6532b50 <col:56> 'size_type':'unsigned long' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0x6531bb0 <col:56> 'size_type':'unsigned long' lvalue ParmVar 0x6527940 '__n' 'size_type':'unsigned long'
| |   |   | |-DeclRefExpr 0x6531bd8 <col:61> 'const value_type':'const long long' lvalue ParmVar 0x65279b0 '__value' 'const value_type &'
| |   |   | `-CXXMemberCallExpr 0x6531cf0 <line:1215:11, col:31> '_Tp_alloc_type':'class std::allocator<long long>' lvalue
| |   |   |   `-MemberExpr 0x6531ca8 <col:11> '<bound member function type>' ->_M_get_Tp_allocator 0x651ef20
| |   |   |     `-ImplicitCastExpr 0x6531d18 <col:11> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |   |       `-CXXThisExpr 0x6531c90 <col:11> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |   `-BinaryOperator 0x6532ce0 <line:1216:2, col:42> 'pointer':'long long *' lvalue '='
| |   |     |-MemberExpr 0x6532be8 <col:2, col:16> 'pointer':'long long *' lvalue ._M_finish 0x651fc60
| |   |     | `-MemberExpr 0x6532ba0 <col:2, col:8> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |     |   `-ImplicitCastExpr 0x6532b80 <col:2> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |     |     `-CXXThisExpr 0x6532b68 <col:2> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |     `-ImplicitCastExpr 0x6532cc8 <col:28, col:42> 'pointer':'long long *' <LValueToRValue>
| |   |       `-MemberExpr 0x6532c98 <col:28, col:42> 'pointer':'long long *' lvalue ._M_end_of_storage 0x651fcc0
| |   |         `-MemberExpr 0x6532c50 <col:28, col:34> 'struct std::_Vector_base<long long, class std::allocator<long long> >::_Vector_impl' lvalue ->_M_impl 0x65202e0
| |   |           `-ImplicitCastExpr 0x6532c30 <col:28> 'struct std::_Vector_base<long long, class std::allocator<long long> > *' <UncheckedDerivedToBase (_Vector_base)>
| |   |             `-CXXThisExpr 0x6532c18 <col:28> 'class std::vector<long long, class std::allocator<long long> > *' this
| |   |-FunctionTemplateDecl 0x6527e30 <line:1237:7, line:1240:39> _M_assign_dispatch
| |   | |-TemplateTypeParmDecl 0x6527b00 <line:1237:16, col:25> typename _Integer
| |   | |-CXXMethodDecl 0x6527d90 <line:1238:9, line:1240:39> _M_assign_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
| |   | | |-ParmVarDecl 0x6527b90 <line:1239:28, col:37> __n '_Integer'
| |   | | |-ParmVarDecl 0x6527c00 <col:42, col:51> __val '_Integer'
| |   | | `-ParmVarDecl 0x6527c60 <col:58> 'struct std::__true_type'
| |   |-FunctionTemplateDecl 0x6528200 <line:1243:7, line:1251:2> _M_assign_dispatch
| |   | |-TemplateTypeParmDecl 0x6527f20 <line:1243:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6528160 <line:1244:9, line:1251:2> _M_assign_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
| |   | | |-ParmVarDecl 0x6527fb0 <line:1245:28, col:43> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6528020 <col:52, col:67> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6528080 <line:1246:7> 'struct std::__false_type'
| |   |-FunctionTemplateDecl 0x65285d0 <line:1254:7, line:1257:32> _M_assign_aux
| |   | |-TemplateTypeParmDecl 0x65282f0 <line:1254:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6528530 <line:1255:9, line:1257:32> _M_assign_aux 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
| |   | | |-ParmVarDecl 0x6528380 <line:1256:23, col:38> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x65283f0 <col:47, col:62> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6528450 <line:1257:9, col:14> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| |   |-FunctionTemplateDecl 0x65289a0 <line:1260:7, line:1263:34> _M_assign_aux
| |   | |-TemplateTypeParmDecl 0x65286c0 <line:1260:16, col:25> typename _ForwardIterator
| |   | |-CXXMethodDecl 0x6528900 <line:1261:9, line:1263:34> _M_assign_aux 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| |   | | |-ParmVarDecl 0x6528750 <line:1262:23, col:40> __first '_ForwardIterator'
| |   | | |-ParmVarDecl 0x65287c0 <col:49, col:66> __last '_ForwardIterator'
| |   | | `-ParmVarDecl 0x6528820 <line:1263:9, col:14> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| |   |-CXXMethodDecl 0x6528b90 <line:1267:7, line:1268:60> _M_fill_assign 'void (size_type, const value_type &)'
| |   | |-ParmVarDecl 0x6528a90 <col:22, col:32> __n 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x6528b00 <col:37, col:55> __val 'const value_type &'
| |   |-FunctionTemplateDecl 0x6529000 <line:1277:7, line:1281:46> _M_insert_dispatch
| |   | |-TemplateTypeParmDecl 0x6528c50 <line:1277:16, col:25> typename _Integer
| |   | |-CXXMethodDecl 0x6528f60 <line:1278:9, line:1281:46> _M_insert_dispatch 'void (iterator, _Integer, _Integer, struct std::__true_type)'
| |   | | |-ParmVarDecl 0x6528ce0 <line:1279:28, col:37> __pos 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | | |-ParmVarDecl 0x6528d50 <col:44, col:53> __n '_Integer'
| |   | | |-ParmVarDecl 0x6528dc0 <col:58, col:67> __val '_Integer'
| |   | | `-ParmVarDecl 0x6528e20 <line:1280:7> 'struct std::__true_type'
| |   |-FunctionTemplateDecl 0x65294b0 <line:1284:7, line:1292:2> _M_insert_dispatch
| |   | |-TemplateTypeParmDecl 0x6529100 <line:1284:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x6529410 <line:1285:9, line:1292:2> _M_insert_dispatch 'void (iterator, _InputIterator, _InputIterator, struct std::__false_type)'
| |   | | |-ParmVarDecl 0x6529190 <line:1286:28, col:37> __pos 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | | |-ParmVarDecl 0x6529200 <col:44, col:59> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6529270 <line:1287:7, col:22> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x65292d0 <col:30> 'struct std::__false_type'
| |   |-FunctionTemplateDecl 0x6529960 <line:1295:7, line:1298:50> _M_range_insert
| |   | |-TemplateTypeParmDecl 0x65295b0 <line:1295:16, col:25> typename _InputIterator
| |   | |-CXXMethodDecl 0x65298c0 <line:1296:9, line:1298:50> _M_range_insert 'void (iterator, _InputIterator, _InputIterator, std::input_iterator_tag)'
| |   | | |-ParmVarDecl 0x6529640 <line:1297:25, col:34> __pos 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | | |-ParmVarDecl 0x65296b0 <col:41, col:56> __first '_InputIterator'
| |   | | |-ParmVarDecl 0x6529720 <line:1298:4, col:19> __last '_InputIterator'
| |   | | `-ParmVarDecl 0x6529780 <col:27, col:32> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| |   |-FunctionTemplateDecl 0x6529e10 <line:1301:7, line:1304:54> _M_range_insert
| |   | |-TemplateTypeParmDecl 0x6529a60 <line:1301:16, col:25> typename _ForwardIterator
| |   | |-CXXMethodDecl 0x6529d70 <line:1302:9, line:1304:54> _M_range_insert 'void (iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| |   | | |-ParmVarDecl 0x6529af0 <line:1303:25, col:34> __pos 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | | |-ParmVarDecl 0x6529b60 <col:41, col:58> __first '_ForwardIterator'
| |   | | |-ParmVarDecl 0x6529bd0 <line:1304:4, col:21> __last '_ForwardIterator'
| |   | | `-ParmVarDecl 0x6529c30 <col:29, col:34> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| |   |-CXXMethodDecl 0x652a080 <line:1308:7, line:1309:74> _M_fill_insert 'void (iterator, size_type, const value_type &)'
| |   | |-ParmVarDecl 0x6529f20 <col:22, col:31> __pos 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | |-ParmVarDecl 0x6529f80 <col:38, col:48> __n 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x6529ff0 <col:53, col:71> __x 'const value_type &'
| |   |-CXXMethodDecl 0x652a2e0 <line:1322:7, line:1323:63> _M_insert_aux 'void (iterator, const value_type &)'
| |   | |-ParmVarDecl 0x652a160 <col:21, col:30> __position 'iterator':'class __gnu_cxx::__normal_iterator<long long *, class std::vector<long long, class std::allocator<long long> > >'
| |   | `-ParmVarDecl 0x652a1d0 <col:42, col:60> __x 'const value_type &'
| |   |-CXXMethodDecl 0x652a460 <line:1335:7, line:1343:7> _M_check_len 'size_type (size_type, const char *) const'
| |   | |-ParmVarDecl 0x652a3a0 <line:1336:20, col:30> __n 'size_type':'unsigned long'
| |   | `-ParmVarDecl 0x652a400 <col:35, col:47> __s 'const char *'
| |   `-CXXMethodDecl 0x652a5f0 <line:1349:7, line:1354:7> _M_erase_at_end 'void (pointer)'
| |     `-ParmVarDecl 0x652a530 <line:1350:23, col:31> __pos 'pointer':'long long *'
| |-FunctionTemplateDecl 0x64a9e60 <line:1401:3, line:1405:61> operator==
| | |-TemplateTypeParmDecl 0x64a97c0 <line:1401:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64a9830 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64a9dc0 <line:1402:5, line:1405:61> operator== '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64a9aa0 <line:1403:16, col:43> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64a9cb0 <col:48, col:75> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64aa3f0 <line:1404:5, line:1405:61>
| | |   `-ReturnStmt 0x64aa3d0 <line:1404:7, line:1405:58>
| | |     `-ParenExpr 0x64aa3b0 <line:1404:14, line:1405:58> '<dependent type>'
| | |       `-BinaryOperator 0x64aa388 <line:1404:15, line:1405:57> '<dependent type>' '&&'
| | |         |-CXXOperatorCallExpr 0x64aa088 <line:1404:15, col:38> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x64aa008 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x64a9e60 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650
| | |         | |-CallExpr 0x64a9f38 <col:15, col:24> '<dependent type>'
| | |         | | `-CXXDependentScopeMemberExpr 0x64a9ee0 <col:15, col:19> '<dependent type>' lvalue
| | |         | |   `-DeclRefExpr 0x64a9eb8 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64a9aa0 '__x' 'const vector<_Tp, _Alloc> &'
| | |         | `-CallExpr 0x64a9fe0 <col:29, col:38> '<dependent type>'
| | |         |   `-CXXDependentScopeMemberExpr 0x64a9f88 <col:29, col:33> '<dependent type>' lvalue
| | |         |     `-DeclRefExpr 0x64a9f60 <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64a9cb0 '__y' 'const vector<_Tp, _Alloc> &'
| | |         `-CallExpr 0x64aa348 <line:1405:11, col:57> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x64aa0f0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = 'equal' 0x6434fb0 0x6435860
| | |           |-CallExpr 0x64aa1d0 <col:22, col:32> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0x64aa178 <col:22, col:26> '<dependent type>' lvalue
| | |           |   `-DeclRefExpr 0x64aa150 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64a9aa0 '__x' 'const vector<_Tp, _Alloc> &'
| | |           |-CallExpr 0x64aa278 <col:35, col:43> '<dependent type>'
| | |           | `-CXXDependentScopeMemberExpr 0x64aa220 <col:35, col:39> '<dependent type>' lvalue
| | |           |   `-DeclRefExpr 0x64aa1f8 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64a9aa0 '__x' 'const vector<_Tp, _Alloc> &'
| | |           `-CallExpr 0x64aa320 <col:46, col:56> '<dependent type>'
| | |             `-CXXDependentScopeMemberExpr 0x64aa2c8 <col:46, col:50> '<dependent type>' lvalue
| | |               `-DeclRefExpr 0x64aa2a0 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64a9cb0 '__y' 'const vector<_Tp, _Alloc> &'
| |-FunctionTemplateDecl 0x64aaae0 <line:1418:3, line:1422:33> operator<
| | |-TemplateTypeParmDecl 0x64aa410 <line:1418:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64aa480 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64aa9a0 <line:1419:5, line:1422:33> operator< '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64aa6c0 <line:1420:15, col:42> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64aa8d0 <col:47, col:74> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64aaec0 <line:1421:5, line:1422:33>
| | |   `-ReturnStmt 0x64aaea0 <line:1421:7, line:1422:30>
| | |     `-CallExpr 0x64aae58 <line:1421:14, line:1422:30> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x64aab58 <line:1421:14, col:19> '<overloaded function type>' lvalue (no ADL) = 'lexicographical_compare' 0x64360e0 0x6436b30
| | |       |-CallExpr 0x64aac38 <col:43, col:53> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x64aabe0 <col:43, col:47> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x64aabb8 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64aa6c0 '__x' 'const vector<_Tp, _Alloc> &'
| | |       |-CallExpr 0x64aace0 <col:56, col:64> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x64aac88 <col:56, col:60> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x64aac60 <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64aa6c0 '__x' 'const vector<_Tp, _Alloc> &'
| | |       |-CallExpr 0x64aad88 <line:1422:8, col:18> '<dependent type>'
| | |       | `-CXXDependentScopeMemberExpr 0x64aad30 <col:8, col:12> '<dependent type>' lvalue
| | |       |   `-DeclRefExpr 0x64aad08 <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64aa8d0 '__y' 'const vector<_Tp, _Alloc> &'
| | |       `-CallExpr 0x64aae30 <col:21, col:29> '<dependent type>'
| | |         `-CXXDependentScopeMemberExpr 0x64aadd8 <col:21, col:25> '<dependent type>' lvalue
| | |           `-DeclRefExpr 0x64aadb0 <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64aa8d0 '__y' 'const vector<_Tp, _Alloc> &'
| |-FunctionTemplateDecl 0x64ab510 <line:1425:3, line:1428:29> operator!=
| | |-TemplateTypeParmDecl 0x64aaee0 <line:1425:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64aaf50 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64ab470 <line:1426:5, line:1428:29> operator!= '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64ab190 <line:1427:16, col:43> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64ab3a0 <col:48, col:75> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64ab6e0 <line:1428:5, col:29>
| | |   `-ReturnStmt 0x64ab6c0 <col:7, col:26>
| | |     `-UnaryOperator 0x64ab6a0 <col:14, col:26> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x64ab680 <col:15, col:26> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x64ab638 <col:16, col:23> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x64ab5b8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x64a9e60 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650
| | |           |-DeclRefExpr 0x64ab568 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ab190 '__x' 'const vector<_Tp, _Alloc> &'
| | |           `-DeclRefExpr 0x64ab590 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ab3a0 '__y' 'const vector<_Tp, _Alloc> &'
| |-FunctionTemplateDecl 0x64abd30 <line:1431:3, line:1434:25> operator>
| | |-TemplateTypeParmDecl 0x64ab700 <line:1431:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64ab770 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64abc90 <line:1432:5, line:1434:25> operator> '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64ab9b0 <line:1433:15, col:42> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64abbc0 <col:47, col:74> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64abeb0 <line:1434:5, col:25>
| | |   `-ReturnStmt 0x64abe90 <col:7, col:20>
| | |     `-CXXOperatorCallExpr 0x64abe48 <col:14, col:20> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x64abdd8 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x64aaae0 0x63c85a0 0x63e4aa0 0x63ea880
| | |       |-DeclRefExpr 0x64abd88 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64abbc0 '__y' 'const vector<_Tp, _Alloc> &'
| | |       `-DeclRefExpr 0x64abdb0 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ab9b0 '__x' 'const vector<_Tp, _Alloc> &'
| |-FunctionTemplateDecl 0x64ac500 <line:1437:3, line:1440:28> operator<=
| | |-TemplateTypeParmDecl 0x64abed0 <line:1437:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64abf40 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64ac460 <line:1438:5, line:1440:28> operator<= '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64ac180 <line:1439:16, col:43> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64ac390 <col:48, col:75> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64ac6c0 <line:1440:5, col:28>
| | |   `-ReturnStmt 0x64ac6a0 <col:7, col:25>
| | |     `-UnaryOperator 0x64ac680 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x64ac660 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x64ac618 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x64ac5a8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x64aaae0 0x63c85a0 0x63e4aa0 0x63ea880
| | |           |-DeclRefExpr 0x64ac558 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ac390 '__y' 'const vector<_Tp, _Alloc> &'
| | |           `-DeclRefExpr 0x64ac580 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ac180 '__x' 'const vector<_Tp, _Alloc> &'
| |-FunctionTemplateDecl 0x64acd30 <line:1443:3, line:1446:28> operator>=
| | |-TemplateTypeParmDecl 0x64ac6e0 <line:1443:12, col:21> typename _Tp
| | |-TemplateTypeParmDecl 0x64ac750 <col:26, col:35> typename _Alloc
| | |-FunctionDecl 0x64acc90 <line:1444:5, line:1446:28> operator>= '_Bool (const vector<_Tp, _Alloc> &, const vector<_Tp, _Alloc> &)' inline
| | | |-ParmVarDecl 0x64ac990 <line:1445:16, col:43> __x 'const vector<_Tp, _Alloc> &'
| | | |-ParmVarDecl 0x64acbc0 <col:48, col:75> __y 'const vector<_Tp, _Alloc> &'
| | | `-CompoundStmt 0x64acef0 <line:1446:5, col:28>
| | |   `-ReturnStmt 0x64aced0 <col:7, col:25>
| | |     `-UnaryOperator 0x64aceb0 <col:14, col:25> '<dependent type>' prefix '!'
| | |       `-ParenExpr 0x64ace90 <col:15, col:25> '<dependent type>'
| | |         `-CXXOperatorCallExpr 0x64ace48 <col:16, col:22> '<dependent type>'
| | |           |-UnresolvedLookupExpr 0x64acdd8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x64aaae0 0x63c85a0 0x63e4aa0 0x63ea880
| | |           |-DeclRefExpr 0x64acd88 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64ac990 '__x' 'const vector<_Tp, _Alloc> &'
| | |           `-DeclRefExpr 0x64acdb0 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64acbc0 '__y' 'const vector<_Tp, _Alloc> &'
| `-FunctionTemplateDecl 0x64ad5b0 <line:1449:3, line:1452:22> swap
|   |-TemplateTypeParmDecl 0x64acf10 <line:1449:12, col:21> typename _Tp
|   |-TemplateTypeParmDecl 0x64acf80 <col:26, col:35> typename _Alloc
|   |-FunctionDecl 0x64ad510 <line:1450:5, line:1452:22> swap 'void (vector<_Tp, _Alloc> &, vector<_Tp, _Alloc> &)' inline
|   | |-ParmVarDecl 0x64ad1f0 <line:1451:10, col:31> __x 'vector<_Tp, _Alloc> &'
|   | |-ParmVarDecl 0x64ad400 <col:36, col:57> __y 'vector<_Tp, _Alloc> &'
|   | `-CompoundStmt 0x64ad6e0 <line:1452:5, col:22>
|   |   `-CallExpr 0x64ad6b0 <col:7, col:19> '<dependent type>'
|   |     |-CXXDependentScopeMemberExpr 0x64ad630 <col:7, col:11> '<dependent type>' lvalue
|   |     | `-DeclRefExpr 0x64ad608 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x64ad1f0 '__x' 'vector<_Tp, _Alloc> &'
|   |     `-DeclRefExpr 0x64ad688 <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x64ad400 '__y' 'vector<_Tp, _Alloc> &'
|-NamespaceDecl 0x64ad730 prev 0x6481070 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:63:1, line:489:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x64ad790 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-TypedefDecl 0x64ad7e0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:67:3, col:25> _Bit_type 'unsigned long'
| |-EnumDecl 0x64ad830 <line:68:3, col:62>
| | `-EnumConstantDecl 0x64ad9e0 <col:10, col:60> _S_word_bit 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| |   `-ImplicitCastExpr 0x64ada30 <col:24, col:60> 'unsigned int' <IntegralCast>
| |     `-CXXFunctionalCastExpr 0x64ad9b8 <col:24, col:60> 'int' functional cast to int <NoOp>
| |       `-ImplicitCastExpr 0x64ad9a0 <<built-in>:33:22, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:59> 'int' <IntegralCast>
| |         `-BinaryOperator 0x64ad978 <<built-in>:33:22, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:59> 'unsigned long' '*'
| |           |-ImplicitCastExpr 0x64ad960 <<built-in>:33:22> 'unsigned long' <IntegralCast>
| |           | `-IntegerLiteral 0x64ad8f0 <col:22> 'int' 8
| |           `-UnaryExprOrTypeTraitExpr 0x64ad940 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:43, col:59> 'unsigned long' sizeof '_Bit_type':'unsigned long'
| |-CXXRecordDecl 0x64ada50 <line:70:3, line:108:3> struct _Bit_reference definition
| | |-CXXRecordDecl 0x64adb60 <line:70:3, col:10> struct _Bit_reference
| | |-FieldDecl 0x64adc60 <line:72:5, col:17> _M_p '_Bit_type *'
| | |-FieldDecl 0x64adcc0 <line:73:5, col:15> _M_mask '_Bit_type':'unsigned long'
| | |-CXXConstructorDecl 0x64adec0 <line:75:5, line:76:33> _Bit_reference 'void (_Bit_type *, _Bit_type)'
| | | |-ParmVarDecl 0x64add20 <line:75:20, col:32> __x '_Bit_type *'
| | | |-ParmVarDecl 0x64add90 <col:37, col:47> __y '_Bit_type':'unsigned long'
| | | |-CXXCtorInitializer Field 0x64adc60 '_M_p' '_Bit_type *'
| | | | |-ImplicitCastExpr 0x64ae8d0 <line:76:12> '_Bit_type *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x64ae878 <col:12> '_Bit_type *' lvalue ParmVar 0x64add20 '__x' '_Bit_type *'
| | | |-CXXCtorInitializer Field 0x64adcc0 '_M_mask' '_Bit_type':'unsigned long'
| | | | |-ImplicitCastExpr 0x64ae970 <col:26> '_Bit_type':'unsigned long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x64ae918 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0x64add90 '__y' '_Bit_type':'unsigned long'
| | | `-CompoundStmt 0x64ae9c8 <col:31, col:33>
| | |-CXXConstructorDecl 0x64adfb0 <line:78:5, col:64> _Bit_reference 'void (void)'
| | | |-CXXCtorInitializer Field 0x64adc60 '_M_p' '_Bit_type *'
| | | | |-ImplicitCastExpr 0x64aea30 <col:47> '_Bit_type *' <NullToPointer>
| | | | | `-IntegerLiteral 0x64ae9e0 <col:47> 'int' 0
| | | |-CXXCtorInitializer Field 0x64adcc0 '_M_mask' '_Bit_type':'unsigned long'
| | | | |-ImplicitCastExpr 0x64aeac8 <col:59> '_Bit_type':'unsigned long' <IntegralCast>
| | | | | `-IntegerLiteral 0x64aea78 <col:59> 'int' 0
| | | `-CompoundStmt 0x64aeb38 <col:62, col:64>
| | |-CXXConversionDecl 0x64ae0c0 <line:80:5, line:81:35> operator bool '_Bool (void) const'
| | | `-CompoundStmt 0x64aed30 <col:5, col:35>
| | |   `-ReturnStmt 0x64aed10 <col:7, col:32>
| | |     `-UnaryOperator 0x64aecf0 <col:14, col:32> '_Bool' prefix '!'
| | |       `-UnaryOperator 0x64aecd0 <col:15, col:32> '_Bool' prefix '!'
| | |         `-ImplicitCastExpr 0x64aecb8 <col:16, col:32> '_Bool' <IntegralToBoolean>
| | |           `-ParenExpr 0x64aec98 <col:16, col:32> 'unsigned long'
| | |             `-BinaryOperator 0x64aec70 <col:17, col:25> 'unsigned long' '&'
| | |               |-ImplicitCastExpr 0x64aec40 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
| | |               | `-UnaryOperator 0x64aebd8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
| | |               |   `-ImplicitCastExpr 0x64aebc0 <col:18> '_Bit_type *' <LValueToRValue>
| | |               |     `-MemberExpr 0x64aeb90 <col:18> '_Bit_type *const' lvalue ->_M_p 0x64adc60
| | |               |       `-CXXThisExpr 0x64aeb78 <col:18> 'const struct std::_Bit_reference *' this
| | |               `-ImplicitCastExpr 0x64aec58 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
| | |                 `-MemberExpr 0x64aec10 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0x64adcc0
| | |                   `-CXXThisExpr 0x64aebf8 <col:25> 'const struct std::_Bit_reference *' this
| | |-CXXMethodDecl 0x64ae270 <line:83:5, line:91:5> operator= 'struct std::_Bit_reference &(_Bool)'
| | | |-ParmVarDecl 0x64ae180 <line:84:15, col:20> __x '_Bool'
| | | `-CompoundStmt 0x64af068 <line:85:5, line:91:5>
| | |   |-IfStmt 0x64aefe0 <line:86:7, line:89:12>
| | |   | |-<<<NULL>>>
| | |   | |-ImplicitCastExpr 0x64aed78 <line:86:11> '_Bool' <LValueToRValue>
| | |   | | `-DeclRefExpr 0x64aed50 <col:11> '_Bool' lvalue ParmVar 0x64ae180 '__x' '_Bool'
| | |   | |-CompoundAssignOperator 0x64aee70 <line:87:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
| | |   | | |-UnaryOperator 0x64aedf0 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
| | |   | | | `-ImplicitCastExpr 0x64aedd8 <col:3> '_Bit_type *' <LValueToRValue>
| | |   | | |   `-MemberExpr 0x64aeda8 <col:3> '_Bit_type *' lvalue ->_M_p 0x64adc60
| | |   | | |     `-CXXThisExpr 0x64aed90 <col:3> 'struct std::_Bit_reference *' this
| | |   | | `-ImplicitCastExpr 0x64aee58 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
| | |   | |   `-MemberExpr 0x64aee28 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x64adcc0
| | |   | |     `-CXXThisExpr 0x64aee10 <col:11> 'struct std::_Bit_reference *' this
| | |   | `-CompoundAssignOperator 0x64aefa8 <line:89:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
| | |   |   |-UnaryOperator 0x64aef08 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
| | |   |   | `-ImplicitCastExpr 0x64aeef0 <col:3> '_Bit_type *' <LValueToRValue>
| | |   |   |   `-MemberExpr 0x64aeec0 <col:3> '_Bit_type *' lvalue ->_M_p 0x64adc60
| | |   |   |     `-CXXThisExpr 0x64aeea8 <col:3> 'struct std::_Bit_reference *' this
| | |   |   `-UnaryOperator 0x64aef88 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
| | |   |     `-ImplicitCastExpr 0x64aef70 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
| | |   |       `-MemberExpr 0x64aef40 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x64adcc0
| | |   |         `-CXXThisExpr 0x64aef28 <col:12> 'struct std::_Bit_reference *' this
| | |   `-ReturnStmt 0x64af048 <line:90:7, col:15>
| | |     `-UnaryOperator 0x64af028 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64af010 <col:15> 'struct std::_Bit_reference *' this
| | |-CXXMethodDecl 0x64ae420 <line:93:5, line:95:33> operator= 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'
| | | |-ParmVarDecl 0x64ae360 <line:94:15, col:37> __x 'const struct std::_Bit_reference &'
| | | `-CompoundStmt 0x64afb58 <line:95:5, col:33>
| | |   `-ReturnStmt 0x64afb38 <col:7, col:30>
| | |     `-CXXOperatorCallExpr 0x64afaf0 <col:14, col:30> 'struct std::_Bit_reference' lvalue
| | |       |-ImplicitCastExpr 0x64afad8 <col:20> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x64afa88 <col:20> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x64ae270 'operator=' 'struct std::_Bit_reference &(_Bool)'
| | |       |-UnaryOperator 0x64af0a8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
| | |       | `-CXXThisExpr 0x64af090 <col:15> 'struct std::_Bit_reference *' this
| | |       `-CXXFunctionalCastExpr 0x64af1a0 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
| | |         `-ImplicitCastExpr 0x64af188 <col:27> '_Bool' <UserDefinedConversion>
| | |           `-CXXMemberCallExpr 0x64af160 <col:27> '_Bool'
| | |             `-MemberExpr 0x64af130 <col:27> '<bound member function type>' .operator bool 0x64ae0c0
| | |               `-DeclRefExpr 0x64af0d8 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0x64ae360 '__x' 'const struct std::_Bit_reference &'
| | |-CXXMethodDecl 0x64ae5a0 <line:97:5, line:99:40> operator== '_Bool (const struct std::_Bit_reference &) const'
| | | |-ParmVarDecl 0x64ae4e0 <line:98:16, col:38> __x 'const struct std::_Bit_reference &'
| | | `-CompoundStmt 0x64afdb0 <line:99:5, col:40>
| | |   `-ReturnStmt 0x64afd90 <col:7, col:37>
| | |     `-BinaryOperator 0x64afd68 <col:14, col:37> '_Bool' '=='
| | |       |-ImplicitCastExpr 0x64afd38 <col:14, col:24> 'int' <IntegralCast>
| | |       | `-CXXFunctionalCastExpr 0x64afc38 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
| | |       |   `-ImplicitCastExpr 0x64afc20 <col:19, col:20> '_Bool' <UserDefinedConversion>
| | |       |     `-CXXMemberCallExpr 0x64afbf8 <col:19, col:20> '_Bool'
| | |       |       `-MemberExpr 0x64afbc8 <col:19, col:20> '<bound member function type>' .operator bool 0x64ae0c0
| | |       |         `-UnaryOperator 0x64afba0 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
| | |       |           `-CXXThisExpr 0x64afb88 <col:20> 'const struct std::_Bit_reference *' this
| | |       `-ImplicitCastExpr 0x64afd50 <col:29, col:37> 'int' <IntegralCast>
| | |         `-CXXFunctionalCastExpr 0x64afd10 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
| | |           `-ImplicitCastExpr 0x64afcf8 <col:34> '_Bool' <UserDefinedConversion>
| | |             `-CXXMemberCallExpr 0x64afcd0 <col:34> '_Bool'
| | |               `-MemberExpr 0x64afca0 <col:34> '<bound member function type>' .operator bool 0x64ae0c0
| | |                 `-DeclRefExpr 0x64afc70 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0x64ae4e0 '__x' 'const struct std::_Bit_reference &'
| | |-CXXMethodDecl 0x64ae6e0 <line:101:5, line:103:41> operator< '_Bool (const struct std::_Bit_reference &) const'
| | | |-ParmVarDecl 0x64ae660 <line:102:15, col:37> __x 'const struct std::_Bit_reference &'
| | | `-CompoundStmt 0x64afff8 <line:103:5, col:41>
| | |   `-ReturnStmt 0x64affd8 <col:7, col:38>
| | |     `-BinaryOperator 0x64affb0 <col:14, col:38> '_Bool' '&&'
| | |       |-UnaryOperator 0x64afeb8 <col:14, col:25> '_Bool' prefix '!'
| | |       | `-CXXFunctionalCastExpr 0x64afe90 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
| | |       |   `-ImplicitCastExpr 0x64afe78 <col:20, col:21> '_Bool' <UserDefinedConversion>
| | |       |     `-CXXMemberCallExpr 0x64afe50 <col:20, col:21> '_Bool'
| | |       |       `-MemberExpr 0x64afe20 <col:20, col:21> '<bound member function type>' .operator bool 0x64ae0c0
| | |       |         `-UnaryOperator 0x64afdf8 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
| | |       |           `-CXXThisExpr 0x64afde0 <col:21> 'const struct std::_Bit_reference *' this
| | |       `-CXXFunctionalCastExpr 0x64aff88 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
| | |         `-ImplicitCastExpr 0x64aff70 <col:35> '_Bool' <UserDefinedConversion>
| | |           `-CXXMemberCallExpr 0x64aff48 <col:35> '_Bool'
| | |             `-MemberExpr 0x64aff18 <col:35> '<bound member function type>' .operator bool 0x64ae0c0
| | |               `-DeclRefExpr 0x64afee8 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0x64ae660 '__x' 'const struct std::_Bit_reference &'
| | |-CXXMethodDecl 0x64ae7b0 <line:105:5, line:107:25> flip 'void (void)'
| | | `-CompoundStmt 0x64b0130 <col:5, col:25>
| | |   `-CompoundAssignOperator 0x64b00f8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
| | |     |-UnaryOperator 0x64b0078 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
| | |     | `-ImplicitCastExpr 0x64b0060 <col:8> '_Bit_type *' <LValueToRValue>
| | |     |   `-MemberExpr 0x64b0030 <col:8> '_Bit_type *' lvalue ->_M_p 0x64adc60
| | |     |     `-CXXThisExpr 0x64b0018 <col:8> 'struct std::_Bit_reference *' this
| | |     `-ImplicitCastExpr 0x64b00e0 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
| | |       `-MemberExpr 0x64b00b0 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x64adcc0
| | |         `-CXXThisExpr 0x64b0098 <col:16> 'struct std::_Bit_reference *' this
| | |-CXXConstructorDecl 0x64af1d0 <line:70:10> _Bit_reference 'void (const struct std::_Bit_reference &) throw()' inline
| | | |-ParmVarDecl 0x64af310 <col:10> 'const struct std::_Bit_reference &'
| | | |-CXXCtorInitializer Field 0x64adc60 '_M_p' '_Bit_type *'
| | | | |-ImplicitCastExpr 0x64b5e80 <col:10> '_Bit_type *' <LValueToRValue>
| | | | | `-MemberExpr 0x64b5e50 <col:10> '_Bit_type *const' lvalue ._M_p 0x64adc60
| | | | |   `-DeclRefExpr 0x64b5e28 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x64af310 '' 'const struct std::_Bit_reference &'
| | | |-CXXCtorInitializer Field 0x64adcc0 '_M_mask' '_Bit_type':'unsigned long'
| | | | |-ImplicitCastExpr 0x64b5f18 <col:10> '_Bit_type':'unsigned long' <LValueToRValue>
| | | | | `-MemberExpr 0x64b5ee8 <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0x64adcc0
| | | | |   `-DeclRefExpr 0x64b5ec0 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x64af310 '' 'const struct std::_Bit_reference &'
| | | `-CompoundStmt 0x64b5f68 <col:10>
| | `-CXXDestructorDecl 0x64b5cf0 <col:10> ~_Bit_reference 'void (void) throw()' inline
| |   `-CompoundStmt 0x64b5dd8 <col:10>
| |-CXXRecordDecl 0x64b0150 <line:136:3, line:205:3> struct _Bit_iterator_base definition
| | |-public 'std::iterator<std::random_access_iterator_tag, _Bool>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>'
| | |-CXXRecordDecl 0x64b0a10 <line:136:3, col:10> struct _Bit_iterator_base
| | |-FieldDecl 0x64b0b10 <line:139:5, col:17> _M_p '_Bit_type *'
| | |-FieldDecl 0x64b0b70 <line:140:5, col:18> _M_offset 'unsigned int'
| | |-CXXConstructorDecl 0x64b0d70 <line:142:5, line:143:35> _Bit_iterator_base 'void (_Bit_type *, unsigned int)'
| | | |-ParmVarDecl 0x64b0bd0 <line:142:24, col:36> __x '_Bit_type *'
| | | |-ParmVarDecl 0x64b0c40 <col:41, col:54> __y 'unsigned int'
| | | |-CXXCtorInitializer 'std::iterator<std::random_access_iterator_tag, _Bool>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>'
| | | | |-CXXConstructExpr 0x64b1de8 <col:5> 'std::iterator<std::random_access_iterator_tag, _Bool>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>' 'void (void)'
| | | |-CXXCtorInitializer Field 0x64b0b10 '_M_p' '_Bit_type *'
| | | | |-ImplicitCastExpr 0x64b19f0 <line:143:12> '_Bit_type *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x64b1998 <col:12> '_Bit_type *' lvalue ParmVar 0x64b0bd0 '__x' '_Bit_type *'
| | | |-CXXCtorInitializer Field 0x64b0b70 '_M_offset' 'unsigned int'
| | | | |-ImplicitCastExpr 0x64b1a90 <col:28> 'unsigned int' <LValueToRValue>
| | | | | `-DeclRefExpr 0x64b1a38 <col:28> 'unsigned int' lvalue ParmVar 0x64b0c40 '__y' 'unsigned int'
| | | `-CompoundStmt 0x64b1ef0 <col:33, col:35>
| | |-CXXMethodDecl 0x64b0e60 <line:145:5, line:153:5> _M_bump_up 'void (void)'
| | | `-CompoundStmt 0x64b21d8 <line:147:5, line:153:5>
| | |   `-IfStmt 0x64b21a8 <line:148:7, line:152:2>
| | |     |-<<<NULL>>>
| | |     |-BinaryOperator 0x64b2048 <line:148:11, col:45> '_Bool' '=='
| | |     | |-UnaryOperator 0x64b1f50 <col:11, col:20> 'unsigned int' postfix '++'
| | |     | | `-MemberExpr 0x64b1f20 <col:11> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |     | |   `-CXXThisExpr 0x64b1f08 <col:11> 'struct std::_Bit_iterator_base *' this
| | |     | `-ImplicitCastExpr 0x64b2030 <col:26, col:45> 'unsigned int' <IntegralCast>
| | |     |   `-BinaryOperator 0x64b2008 <col:26, col:45> 'int' '-'
| | |     |     |-CXXFunctionalCastExpr 0x64b1fc0 <col:26, col:41> 'int' functional cast to int <NoOp>
| | |     |     | `-ImplicitCastExpr 0x64b1fa8 <col:30> 'int' <IntegralCast>
| | |     |     |   `-DeclRefExpr 0x64b1f80 <col:30> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| | |     |     `-IntegerLiteral 0x64b1fe8 <col:45> 'int' 1
| | |     |-CompoundStmt 0x64b2180 <line:149:2, line:152:2>
| | |     | |-BinaryOperator 0x64b20f0 <line:150:4, col:16> 'unsigned int' lvalue '='
| | |     | | |-MemberExpr 0x64b2088 <col:4> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |     | | | `-CXXThisExpr 0x64b2070 <col:4> 'struct std::_Bit_iterator_base *' this
| | |     | | `-ImplicitCastExpr 0x64b20d8 <col:16> 'unsigned int' <IntegralCast>
| | |     | |   `-IntegerLiteral 0x64b20b8 <col:16> 'int' 0
| | |     | `-UnaryOperator 0x64b2160 <line:151:4, col:6> '_Bit_type *' lvalue prefix '++'
| | |     |   `-MemberExpr 0x64b2130 <col:6> '_Bit_type *' lvalue ->_M_p 0x64b0b10
| | |     |     `-CXXThisExpr 0x64b2118 <col:6> 'struct std::_Bit_iterator_base *' this
| | |     `-<<<NULL>>>
| | |-CXXMethodDecl 0x64b0f20 <line:155:5, line:163:5> _M_bump_down 'void (void)'
| | | `-CompoundStmt 0x64b24c8 <line:157:5, line:163:5>
| | |   `-IfStmt 0x64b2498 <line:158:7, line:162:2>
| | |     |-<<<NULL>>>
| | |     |-BinaryOperator 0x64b2298 <line:158:11, col:26> '_Bool' '=='
| | |     | |-UnaryOperator 0x64b2240 <col:11, col:20> 'unsigned int' postfix '--'
| | |     | | `-MemberExpr 0x64b2210 <col:11> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |     | |   `-CXXThisExpr 0x64b21f8 <col:11> 'struct std::_Bit_iterator_base *' this
| | |     | `-ImplicitCastExpr 0x64b2280 <col:26> 'unsigned int' <IntegralCast>
| | |     |   `-IntegerLiteral 0x64b2260 <col:26> 'int' 0
| | |     |-CompoundStmt 0x64b2470 <line:159:2, line:162:2>
| | |     | |-BinaryOperator 0x64b23e0 <line:160:4, col:35> 'unsigned int' lvalue '='
| | |     | | |-MemberExpr 0x64b22d8 <col:4> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |     | | | `-CXXThisExpr 0x64b22c0 <col:4> 'struct std::_Bit_iterator_base *' this
| | |     | | `-ImplicitCastExpr 0x64b23c8 <col:16, col:35> 'unsigned int' <IntegralCast>
| | |     | |   `-BinaryOperator 0x64b23a0 <col:16, col:35> 'int' '-'
| | |     | |     |-CXXFunctionalCastExpr 0x64b2358 <col:16, col:31> 'int' functional cast to int <NoOp>
| | |     | |     | `-ImplicitCastExpr 0x64b2340 <col:20> 'int' <IntegralCast>
| | |     | |     |   `-DeclRefExpr 0x64b2318 <col:20> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| | |     | |     `-IntegerLiteral 0x64b2380 <col:35> 'int' 1
| | |     | `-UnaryOperator 0x64b2450 <line:161:4, col:6> '_Bit_type *' lvalue prefix '--'
| | |     |   `-MemberExpr 0x64b2420 <col:6> '_Bit_type *' lvalue ->_M_p 0x64b0b10
| | |     |     `-CXXThisExpr 0x64b2408 <col:6> 'struct std::_Bit_iterator_base *' this
| | |     `-<<<NULL>>>
| | |-CXXMethodDecl 0x64b10d0 <line:165:5, line:177:5> _M_incr 'void (ptrdiff_t)'
| | | |-ParmVarDecl 0x64b0fd0 <line:166:13, col:23> __i 'ptrdiff_t':'long'
| | | `-CompoundStmt 0x64b2cd0 <line:167:5, line:177:5>
| | |   |-DeclStmt 0x64b2658 <line:168:7, col:44>
| | |   | `-VarDecl 0x64b2520 <col:7, col:35> __n 'difference_type':'long'
| | |   |   `-BinaryOperator 0x64b2630 <col:29, col:35> 'long' '+'
| | |   |     |-ImplicitCastExpr 0x64b25e8 <col:29> 'ptrdiff_t':'long' <LValueToRValue>
| | |   |     | `-DeclRefExpr 0x64b2578 <col:29> 'ptrdiff_t':'long' lvalue ParmVar 0x64b0fd0 '__i' 'ptrdiff_t':'long'
| | |   |     `-ImplicitCastExpr 0x64b2618 <col:35> 'long' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x64b2600 <col:35> 'unsigned int' <LValueToRValue>
| | |   |         `-MemberExpr 0x64b25b8 <col:35> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |   |           `-CXXThisExpr 0x64b25a0 <col:35> 'struct std::_Bit_iterator_base *' this
| | |   |-CompoundAssignOperator 0x64b27b0 <line:169:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
| | |   | |-MemberExpr 0x64b2688 <col:7> '_Bit_type *' lvalue ->_M_p 0x64b0b10
| | |   | | `-CXXThisExpr 0x64b2670 <col:7> 'struct std::_Bit_iterator_base *' this
| | |   | `-BinaryOperator 0x64b2788 <col:15, col:36> 'long' '/'
| | |   |   |-ImplicitCastExpr 0x64b2758 <col:15> 'difference_type':'long' <LValueToRValue>
| | |   |   | `-DeclRefExpr 0x64b26b8 <col:15> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |   |   `-ImplicitCastExpr 0x64b2770 <col:21, col:36> 'long' <IntegralCast>
| | |   |     `-CXXFunctionalCastExpr 0x64b2730 <col:21, col:36> 'int' functional cast to int <NoOp>
| | |   |       `-ImplicitCastExpr 0x64b2718 <col:25> 'int' <IntegralCast>
| | |   |         `-DeclRefExpr 0x64b26f0 <col:25> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| | |   |-BinaryOperator 0x64b2908 <line:170:7, col:34> 'difference_type':'long' lvalue '='
| | |   | |-DeclRefExpr 0x64b27e8 <col:7> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |   | `-BinaryOperator 0x64b28e0 <col:13, col:34> 'long' '%'
| | |   |   |-ImplicitCastExpr 0x64b28b0 <col:13> 'difference_type':'long' <LValueToRValue>
| | |   |   | `-DeclRefExpr 0x64b2810 <col:13> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |   |   `-ImplicitCastExpr 0x64b28c8 <col:19, col:34> 'long' <IntegralCast>
| | |   |     `-CXXFunctionalCastExpr 0x64b2888 <col:19, col:34> 'int' functional cast to int <NoOp>
| | |   |       `-ImplicitCastExpr 0x64b2870 <col:23> 'int' <IntegralCast>
| | |   |         `-DeclRefExpr 0x64b2848 <col:23> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| | |   |-IfStmt 0x64b2b98 <line:171:7, line:175:2>
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x64b29a8 <line:171:11, col:17> '_Bool' '<'
| | |   | | |-ImplicitCastExpr 0x64b2978 <col:11> 'difference_type':'long' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x64b2930 <col:11> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |   | | `-ImplicitCastExpr 0x64b2990 <col:17> 'long' <IntegralCast>
| | |   | |   `-IntegerLiteral 0x64b2958 <col:17> 'int' 0
| | |   | |-CompoundStmt 0x64b2b70 <line:172:2, line:175:2>
| | |   | | |-CompoundAssignOperator 0x64b2a88 <line:173:4, col:26> 'difference_type':'long' lvalue '+=' ComputeLHSTy='long' ComputeResultTy='long'
| | |   | | | |-DeclRefExpr 0x64b29d0 <col:4> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |   | | | `-ImplicitCastExpr 0x64b2a70 <col:11, col:26> 'long' <IntegralCast>
| | |   | | |   `-CXXFunctionalCastExpr 0x64b2a48 <col:11, col:26> 'int' functional cast to int <NoOp>
| | |   | | |     `-ImplicitCastExpr 0x64b2a30 <col:15> 'int' <IntegralCast>
| | |   | | |       `-DeclRefExpr 0x64b2a08 <col:15> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| | |   | | `-UnaryOperator 0x64b2b50 <line:174:4, col:6> '_Bit_type *' lvalue prefix '--'
| | |   | |   `-MemberExpr 0x64b2b20 <col:6> '_Bit_type *' lvalue ->_M_p 0x64b0b10
| | |   | |     `-CXXThisExpr 0x64b2ac0 <col:6> 'struct std::_Bit_iterator_base *' this
| | |   | `-<<<NULL>>>
| | |   `-BinaryOperator 0x64b2ca8 <line:176:7, col:48> 'unsigned int' lvalue '='
| | |     |-MemberExpr 0x64b2be0 <col:7> 'unsigned int' lvalue ->_M_offset 0x64b0b70
| | |     | `-CXXThisExpr 0x64b2bc8 <col:7> 'struct std::_Bit_iterator_base *' this
| | |     `-CXXStaticCastExpr 0x64b2c78 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
| | |       `-ImplicitCastExpr 0x64b2c60 <col:45> 'unsigned int' <IntegralCast>
| | |         `-ImplicitCastExpr 0x64b2c48 <col:45> 'difference_type':'long' <LValueToRValue>
| | |           `-DeclRefExpr 0x64b2c10 <col:45> 'difference_type':'long' lvalue Var 0x64b2520 '__n' 'difference_type':'long'
| | |-CXXMethodDecl 0x64b1280 <line:179:5, line:181:62> operator== '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b11c0 <line:180:16, col:42> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b2f70 <line:181:5, col:62>
| | |   `-ReturnStmt 0x64b2f50 <col:7, col:51>
| | |     `-BinaryOperator 0x64b2f28 <col:14, col:51> '_Bool' '&&'
| | |       |-BinaryOperator 0x64b2e08 <col:14, col:26> '_Bool' '=='
| | |       | |-ImplicitCastExpr 0x64b2dd8 <col:14> '_Bit_type *' <LValueToRValue>
| | |       | | `-MemberExpr 0x64b2d50 <col:14> '_Bit_type *const' lvalue ->_M_p 0x64b0b10
| | |       | |   `-CXXThisExpr 0x64b2d38 <col:14> 'const struct std::_Bit_iterator_base *' this
| | |       | `-ImplicitCastExpr 0x64b2df0 <col:22, col:26> '_Bit_type *' <LValueToRValue>
| | |       |   `-MemberExpr 0x64b2da8 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| | |       |     `-DeclRefExpr 0x64b2d80 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b11c0 '__i' 'const struct std::_Bit_iterator_base &'
| | |       `-BinaryOperator 0x64b2f00 <col:34, col:51> '_Bool' '=='
| | |         |-ImplicitCastExpr 0x64b2ed0 <col:34> 'unsigned int' <LValueToRValue>
| | |         | `-MemberExpr 0x64b2e48 <col:34> 'const unsigned int' lvalue ->_M_offset 0x64b0b70
| | |         |   `-CXXThisExpr 0x64b2e30 <col:34> 'const struct std::_Bit_iterator_base *' this
| | |         `-ImplicitCastExpr 0x64b2ee8 <col:47, col:51> 'unsigned int' <LValueToRValue>
| | |           `-MemberExpr 0x64b2ea0 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| | |             `-DeclRefExpr 0x64b2e78 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b11c0 '__i' 'const struct std::_Bit_iterator_base &'
| | |-CXXMethodDecl 0x64b13c0 <line:183:5, line:188:5> operator< '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b1340 <line:184:15, col:41> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b3308 <line:185:5, line:188:5>
| | |   `-ReturnStmt 0x64b32e8 <line:186:7, line:187:56>
| | |     `-BinaryOperator 0x64b32c0 <line:186:14, line:187:56> '_Bool' '||'
| | |       |-BinaryOperator 0x64b3060 <line:186:14, col:25> '_Bool' '<'
| | |       | |-ImplicitCastExpr 0x64b3030 <col:14> '_Bit_type *' <LValueToRValue>
| | |       | | `-MemberExpr 0x64b2fa8 <col:14> '_Bit_type *const' lvalue ->_M_p 0x64b0b10
| | |       | |   `-CXXThisExpr 0x64b2f90 <col:14> 'const struct std::_Bit_iterator_base *' this
| | |       | `-ImplicitCastExpr 0x64b3048 <col:21, col:25> '_Bit_type *' <LValueToRValue>
| | |       |   `-MemberExpr 0x64b3000 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| | |       |     `-DeclRefExpr 0x64b2fd8 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1340 '__i' 'const struct std::_Bit_iterator_base &'
| | |       `-ParenExpr 0x64b32a0 <line:187:10, col:56> '_Bool'
| | |         `-BinaryOperator 0x64b3278 <col:11, col:47> '_Bool' '&&'
| | |           |-BinaryOperator 0x64b3158 <col:11, col:23> '_Bool' '=='
| | |           | |-ImplicitCastExpr 0x64b3128 <col:11> '_Bit_type *' <LValueToRValue>
| | |           | | `-MemberExpr 0x64b30a0 <col:11> '_Bit_type *const' lvalue ->_M_p 0x64b0b10
| | |           | |   `-CXXThisExpr 0x64b3088 <col:11> 'const struct std::_Bit_iterator_base *' this
| | |           | `-ImplicitCastExpr 0x64b3140 <col:19, col:23> '_Bit_type *' <LValueToRValue>
| | |           |   `-MemberExpr 0x64b30f8 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| | |           |     `-DeclRefExpr 0x64b30d0 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1340 '__i' 'const struct std::_Bit_iterator_base &'
| | |           `-BinaryOperator 0x64b3250 <col:31, col:47> '_Bool' '<'
| | |             |-ImplicitCastExpr 0x64b3220 <col:31> 'unsigned int' <LValueToRValue>
| | |             | `-MemberExpr 0x64b3198 <col:31> 'const unsigned int' lvalue ->_M_offset 0x64b0b70
| | |             |   `-CXXThisExpr 0x64b3180 <col:31> 'const struct std::_Bit_iterator_base *' this
| | |             `-ImplicitCastExpr 0x64b3238 <col:43, col:47> 'unsigned int' <LValueToRValue>
| | |               `-MemberExpr 0x64b31f0 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| | |                 `-DeclRefExpr 0x64b31c8 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1340 '__i' 'const struct std::_Bit_iterator_base &'
| | |-CXXMethodDecl 0x64b1500 <line:190:5, line:192:31> operator!= '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b1480 <line:191:16, col:42> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b35c8 <line:192:5, col:31>
| | |   `-ReturnStmt 0x64b35a8 <col:7, col:28>
| | |     `-UnaryOperator 0x64b3588 <col:14, col:28> '_Bool' prefix '!'
| | |       `-ParenExpr 0x64b3568 <col:15, col:28> '_Bool'
| | |         `-CXXOperatorCallExpr 0x64b3520 <col:16, col:25> '_Bool'
| | |           |-ImplicitCastExpr 0x64b3508 <col:22> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64b34b0 <col:22> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b1280 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'
| | |           |-UnaryOperator 0x64b3340 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
| | |           | `-CXXThisExpr 0x64b3328 <col:17> 'const struct std::_Bit_iterator_base *' this
| | |           `-DeclRefExpr 0x64b3360 <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1480 '__i' 'const struct std::_Bit_iterator_base &'
| | |-CXXMethodDecl 0x64b1640 <line:194:5, line:196:27> operator> '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b15c0 <line:195:15, col:41> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b37b8 <line:196:5, col:27>
| | |   `-ReturnStmt 0x64b3798 <col:7, col:21>
| | |     `-CXXOperatorCallExpr 0x64b3750 <col:14, col:21> '_Bool'
| | |       |-ImplicitCastExpr 0x64b3738 <col:18> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x64b3710 <col:18> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b13c0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'
| | |       |-DeclRefExpr 0x64b35e8 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b15c0 '__i' 'const struct std::_Bit_iterator_base &'
| | |       `-UnaryOperator 0x64b3628 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
| | |         `-CXXThisExpr 0x64b3610 <col:21> 'const struct std::_Bit_iterator_base *' this
| | |-CXXMethodDecl 0x64b1780 <line:198:5, line:200:30> operator<= '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b1700 <line:199:16, col:42> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b39e8 <line:200:5, col:30>
| | |   `-ReturnStmt 0x64b39c8 <col:7, col:27>
| | |     `-UnaryOperator 0x64b39a8 <col:14, col:27> '_Bool' prefix '!'
| | |       `-ParenExpr 0x64b3988 <col:15, col:27> '_Bool'
| | |         `-CXXOperatorCallExpr 0x64b3940 <col:16, col:23> '_Bool'
| | |           |-ImplicitCastExpr 0x64b3928 <col:20> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64b3900 <col:20> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b13c0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'
| | |           |-DeclRefExpr 0x64b37d8 <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1700 '__i' 'const struct std::_Bit_iterator_base &'
| | |           `-UnaryOperator 0x64b3818 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
| | |             `-CXXThisExpr 0x64b3800 <col:23> 'const struct std::_Bit_iterator_base *' this
| | |-CXXMethodDecl 0x64b18c0 <line:202:5, line:204:30> operator>= '_Bool (const struct std::_Bit_iterator_base &) const'
| | | |-ParmVarDecl 0x64b1840 <line:203:16, col:42> __i 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b3c18 <line:204:5, col:30>
| | |   `-ReturnStmt 0x64b3bf8 <col:7, col:27>
| | |     `-UnaryOperator 0x64b3bd8 <col:14, col:27> '_Bool' prefix '!'
| | |       `-ParenExpr 0x64b3bb8 <col:15, col:27> '_Bool'
| | |         `-CXXOperatorCallExpr 0x64b3b70 <col:16, col:24> '_Bool'
| | |           |-ImplicitCastExpr 0x64b3b58 <col:22> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64b3b30 <col:22> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b13c0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'
| | |           |-UnaryOperator 0x64b3a20 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
| | |           | `-CXXThisExpr 0x64b3a08 <col:17> 'const struct std::_Bit_iterator_base *' this
| | |           `-DeclRefExpr 0x64b3a40 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b1840 '__i' 'const struct std::_Bit_iterator_base &'
| | |-CXXConstructorDecl 0x64b5750 <line:136:10> _Bit_iterator_base 'void (const struct std::_Bit_iterator_base &) throw()' inline
| | | |-ParmVarDecl 0x64b5890 <col:10> 'const struct std::_Bit_iterator_base &'
| | | |-CXXCtorInitializer 'std::iterator<std::random_access_iterator_tag, _Bool>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>'
| | | | |-CXXConstructExpr 0x64b64a8 <col:10> 'std::iterator<std::random_access_iterator_tag, _Bool>':'struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>' 'void (const struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &> &) throw()'
| | | | | `-ImplicitCastExpr 0x64b6438 <col:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, long, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
| | | | |   `-DeclRefExpr 0x64b6410 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b5890 '' 'const struct std::_Bit_iterator_base &'
| | | |-CXXCtorInitializer Field 0x64b0b10 '_M_p' '_Bit_type *'
| | | | |-ImplicitCastExpr 0x64b6600 <col:10> '_Bit_type *' <LValueToRValue>
| | | | | `-MemberExpr 0x64b65d0 <col:10> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| | | | |   `-DeclRefExpr 0x64b65a8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b5890 '' 'const struct std::_Bit_iterator_base &'
| | | |-CXXCtorInitializer Field 0x64b0b70 '_M_offset' 'unsigned int'
| | | | |-ImplicitCastExpr 0x64b6698 <col:10> 'unsigned int' <LValueToRValue>
| | | | | `-MemberExpr 0x64b6668 <col:10> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| | | | |   `-DeclRefExpr 0x64b6640 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b5890 '' 'const struct std::_Bit_iterator_base &'
| | | `-CompoundStmt 0x64b66f0 <col:10>
| | `-CXXDestructorDecl 0x64b78f0 <col:10> ~_Bit_iterator_base 'void (void) throw()' inline
| |-FunctionDecl 0x64b3dd0 <line:207:3, line:212:3> operator- 'ptrdiff_t (const struct std::_Bit_iterator_base &, const struct std::_Bit_iterator_base &)' inline
| | |-ParmVarDecl 0x64b3c50 <line:208:13, col:39> __x 'const struct std::_Bit_iterator_base &'
| | |-ParmVarDecl 0x64b3cc0 <col:44, col:70> __y 'const struct std::_Bit_iterator_base &'
| | `-CompoundStmt 0x64b4200 <line:209:3, line:212:3>
| |   `-ReturnStmt 0x64b41e0 <line:210:5, line:211:37>
| |     `-ParenExpr 0x64b41c0 <line:210:12, line:211:37> 'long'
| |       `-BinaryOperator 0x64b4198 <line:210:13, line:211:28> 'long' '-'
| |         |-BinaryOperator 0x64b40e8 <line:210:13, line:211:12> 'long' '+'
| |         | |-BinaryOperator 0x64b4038 <line:210:13, col:52> 'long' '*'
| |         | | |-ImplicitCastExpr 0x64b4020 <col:13, col:28> 'long' <IntegralCast>
| |         | | | `-CXXFunctionalCastExpr 0x64b3ed0 <col:13, col:28> 'int' functional cast to int <NoOp>
| |         | | |   `-ImplicitCastExpr 0x64b3eb8 <col:17> 'int' <IntegralCast>
| |         | | |     `-DeclRefExpr 0x64b3e90 <col:17> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
| |         | | `-ParenExpr 0x64b4000 <col:32, col:52> 'long'
| |         | |   `-BinaryOperator 0x64b3fd8 <col:33, col:48> 'long' '-'
| |         | |     |-ImplicitCastExpr 0x64b3fa8 <col:33, col:37> '_Bit_type *' <LValueToRValue>
| |         | |     | `-MemberExpr 0x64b3f20 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| |         | |     |   `-DeclRefExpr 0x64b3ef8 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b3c50 '__x' 'const struct std::_Bit_iterator_base &'
| |         | |     `-ImplicitCastExpr 0x64b3fc0 <col:44, col:48> '_Bit_type *' <LValueToRValue>
| |         | |       `-MemberExpr 0x64b3f78 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| |         | |         `-DeclRefExpr 0x64b3f50 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b3cc0 '__y' 'const struct std::_Bit_iterator_base &'
| |         | `-ImplicitCastExpr 0x64b40d0 <line:211:8, col:12> 'long' <IntegralCast>
| |         |   `-ImplicitCastExpr 0x64b40b8 <col:8, col:12> 'unsigned int' <LValueToRValue>
| |         |     `-MemberExpr 0x64b4088 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| |         |       `-DeclRefExpr 0x64b4060 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b3c50 '__x' 'const struct std::_Bit_iterator_base &'
| |         `-ImplicitCastExpr 0x64b4180 <col:24, col:28> 'long' <IntegralCast>
| |           `-ImplicitCastExpr 0x64b4168 <col:24, col:28> 'unsigned int' <LValueToRValue>
| |             `-MemberExpr 0x64b4138 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| |               `-DeclRefExpr 0x64b4110 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x64b3cc0 '__y' 'const struct std::_Bit_iterator_base &'
| |-CXXRecordDecl 0x64b4220 <line:214:3, line:290:3> struct _Bit_iterator definition
| | |-public 'struct std::_Bit_iterator_base'
| | |-CXXRecordDecl 0x64b4370 <line:214:3, col:10> struct _Bit_iterator
| | |-TypedefDecl 0x64b4410 <line:216:5, col:29> reference 'struct std::_Bit_reference'
| | |-TypedefDecl 0x64b4470 <line:217:5, col:29> pointer 'struct std::_Bit_reference *'
| | |-TypedefDecl 0x64b44d0 <line:218:5, col:29> iterator 'struct std::_Bit_iterator'
| | |-CXXConstructorDecl 0x64b4560 <line:220:5, col:50> _Bit_iterator 'void (void)'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b5920 <col:23, col:46> 'struct std::_Bit_iterator_base' 'void (_Bit_type *, unsigned int)'
| | | | | |-ImplicitCastExpr 0x64b58f0 <col:42> '_Bit_type *' <NullToPointer>
| | | | | | `-IntegerLiteral 0x64b56c8 <col:42> 'int' 0
| | | | | `-ImplicitCastExpr 0x64b5908 <col:45> 'unsigned int' <IntegralCast>
| | | | |   `-IntegerLiteral 0x64b56e8 <col:45> 'int' 0
| | | `-CompoundStmt 0x64b5990 <col:48, col:50>
| | |-CXXConstructorDecl 0x64b4730 <line:222:5, line:223:38> _Bit_iterator 'void (_Bit_type *, unsigned int)'
| | | |-ParmVarDecl 0x64b4630 <line:222:19, col:31> __x '_Bit_type *'
| | | |-ParmVarDecl 0x64b46a0 <col:36, col:49> __y 'unsigned int'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b5a70 <line:223:7, col:34> 'struct std::_Bit_iterator_base' 'void (_Bit_type *, unsigned int)'
| | | | | |-ImplicitCastExpr 0x64b5a40 <col:26> '_Bit_type *' <LValueToRValue>
| | | | | | `-DeclRefExpr 0x64b59a8 <col:26> '_Bit_type *' lvalue ParmVar 0x64b4630 '__x' '_Bit_type *'
| | | | | `-ImplicitCastExpr 0x64b5a58 <col:31> 'unsigned int' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x64b59d0 <col:31> 'unsigned int' lvalue ParmVar 0x64b46a0 '__y' 'unsigned int'
| | | `-CompoundStmt 0x64b5ae0 <col:36, col:38>
| | |-CXXMethodDecl 0x64b48a0 <line:225:5, line:227:49> operator* 'reference (void) const'
| | | `-CompoundStmt 0x64b6010 <col:5, col:49>
| | |   `-ReturnStmt 0x64b5ff0 <col:7, col:46>
| | |     `-CXXConstructExpr 0x64b5fb8 <col:14, col:46> 'reference':'struct std::_Bit_reference' 'void (const struct std::_Bit_reference &) throw()' elidable
| | |       `-MaterializeTemporaryExpr 0x64b5e08 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
| | |         `-ImplicitCastExpr 0x64b5df0 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
| | |           `-CXXTemporaryObjectExpr 0x64b5c80 <col:14, col:46> 'reference':'struct std::_Bit_reference' 'void (_Bit_type *, _Bit_type)'
| | |             |-ImplicitCastExpr 0x64b5c68 <col:24> '_Bit_type *' <LValueToRValue>
| | |             | `-MemberExpr 0x64b5b70 <col:24> '_Bit_type *const' lvalue ->_M_p 0x64b0b10
| | |             |   `-ImplicitCastExpr 0x64b5b50 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |             |     `-CXXThisExpr 0x64b5b38 <col:24> 'const struct std::_Bit_iterator *' this
| | |             `-BinaryOperator 0x64b5c40 <col:30, col:37> 'unsigned long' '<<'
| | |               |-IntegerLiteral 0x64b5ba0 <col:30> 'unsigned long' 1
| | |               `-ImplicitCastExpr 0x64b5c28 <col:37> 'unsigned int' <LValueToRValue>
| | |                 `-MemberExpr 0x64b5bf8 <col:37> 'const unsigned int' lvalue ->_M_offset 0x64b0b70
| | |                   `-ImplicitCastExpr 0x64b5bd8 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |                     `-CXXThisExpr 0x64b5bc0 <col:37> 'const struct std::_Bit_iterator *' this
| | |-CXXMethodDecl 0x64b4a40 <line:229:5, line:234:5> operator++ 'iterator &(void)'
| | | `-CompoundStmt 0x64b6118 <line:231:5, line:234:5>
| | |   |-CXXMemberCallExpr 0x64b6078 <line:232:7, col:18> 'void'
| | |   | `-MemberExpr 0x64b6048 <col:7> '<bound member function type>' ->_M_bump_up 0x64b0e60
| | |   |   `-ImplicitCastExpr 0x64b60a0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64b6030 <col:7> 'struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b60f8 <line:233:7, col:15>
| | |     `-UnaryOperator 0x64b60d8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64b60c0 <col:15> 'struct std::_Bit_iterator *' this
| | |-CXXMethodDecl 0x64b4c30 <line:236:5, line:242:5> operator++ 'iterator (int)'
| | | |-ParmVarDecl 0x64b4b30 <line:237:16> 'int'
| | | `-CompoundStmt 0x64b6990 <line:238:5, line:242:5>
| | |   |-DeclStmt 0x64b6850 <line:239:7, col:29>
| | |   | `-VarDecl 0x64b6150 <col:7, col:25> __tmp 'iterator':'struct std::_Bit_iterator' nrvo
| | |   |   `-CXXConstructExpr 0x64b6818 <col:24, col:25> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |   |     `-ImplicitCastExpr 0x64b63b0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |   |       `-UnaryOperator 0x64b61c0 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |   |         `-CXXThisExpr 0x64b61a8 <col:25> 'struct std::_Bit_iterator *' this
| | |   |-CXXMemberCallExpr 0x64b68b0 <line:240:7, col:18> 'void'
| | |   | `-MemberExpr 0x64b6880 <col:7> '<bound member function type>' ->_M_bump_up 0x64b0e60
| | |   |   `-ImplicitCastExpr 0x64b68d8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64b6868 <col:7> 'struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b6970 <line:241:7, col:14>
| | |     `-CXXConstructExpr 0x64b6938 <col:14> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| | |       `-ImplicitCastExpr 0x64b6920 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |         `-DeclRefExpr 0x64b68f8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64b6150 '__tmp' 'iterator':'struct std::_Bit_iterator'
| | |-CXXMethodDecl 0x64b4d00 <line:244:5, line:249:5> operator-- 'iterator &(void)'
| | | `-CompoundStmt 0x64b6aa8 <line:246:5, line:249:5>
| | |   |-CXXMemberCallExpr 0x64b6a08 <line:247:7, col:20> 'void'
| | |   | `-MemberExpr 0x64b69d8 <col:7> '<bound member function type>' ->_M_bump_down 0x64b0f20
| | |   |   `-ImplicitCastExpr 0x64b6a30 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64b69c0 <col:7> 'struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b6a88 <line:248:7, col:15>
| | |     `-UnaryOperator 0x64b6a68 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64b6a50 <col:15> 'struct std::_Bit_iterator *' this
| | |-CXXMethodDecl 0x64b4e30 <line:251:5, line:257:5> operator-- 'iterator (int)'
| | | |-ParmVarDecl 0x64b4db0 <line:252:16> 'int'
| | | `-CompoundStmt 0x64b6d60 <line:253:5, line:257:5>
| | |   |-DeclStmt 0x64b6c20 <line:254:7, col:29>
| | |   | `-VarDecl 0x64b6b40 <col:7, col:25> __tmp 'iterator':'struct std::_Bit_iterator' nrvo
| | |   |   `-CXXConstructExpr 0x64b6be8 <col:24, col:25> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |   |     `-ImplicitCastExpr 0x64b6bd0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |   |       `-UnaryOperator 0x64b6bb0 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |   |         `-CXXThisExpr 0x64b6b98 <col:25> 'struct std::_Bit_iterator *' this
| | |   |-CXXMemberCallExpr 0x64b6c80 <line:255:7, col:20> 'void'
| | |   | `-MemberExpr 0x64b6c50 <col:7> '<bound member function type>' ->_M_bump_down 0x64b0f20
| | |   |   `-ImplicitCastExpr 0x64b6ca8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64b6c38 <col:7> 'struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b6d40 <line:256:7, col:14>
| | |     `-CXXConstructExpr 0x64b6d08 <col:14> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| | |       `-ImplicitCastExpr 0x64b6cf0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |         `-DeclRefExpr 0x64b6cc8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64b6b40 '__tmp' 'iterator':'struct std::_Bit_iterator'
| | |-CXXMethodDecl 0x64b4ff0 <line:259:5, line:264:5> operator+= 'iterator &(difference_type)'
| | | |-ParmVarDecl 0x64b4ef0 <line:260:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64b6ec0 <line:261:5, line:264:5>
| | |   |-CXXMemberCallExpr 0x64b6e00 <line:262:7, col:18> 'void'
| | |   | |-MemberExpr 0x64b6da8 <col:7> '<bound member function type>' ->_M_incr 0x64b10d0
| | |   | | `-ImplicitCastExpr 0x64b6e30 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   | |   `-CXXThisExpr 0x64b6d90 <col:7> 'struct std::_Bit_iterator *' this
| | |   | `-ImplicitCastExpr 0x64b6e50 <col:15> 'difference_type':'long' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x64b6dd8 <col:15> 'difference_type':'long' lvalue ParmVar 0x64b4ef0 '__i' 'difference_type':'long'
| | |   `-ReturnStmt 0x64b6ea0 <line:263:7, col:15>
| | |     `-UnaryOperator 0x64b6e80 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64b6e68 <col:15> 'struct std::_Bit_iterator *' this
| | |-CXXMethodDecl 0x64b5130 <line:266:5, line:271:5> operator-= 'iterator &(difference_type)'
| | | |-ParmVarDecl 0x64b50b0 <line:267:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64b70c0 <line:268:5, line:271:5>
| | |   |-CXXOperatorCallExpr 0x64b7020 <line:269:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
| | |   | |-ImplicitCastExpr 0x64b7008 <col:13> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x64b6f80 <col:13> 'iterator &(difference_type)' lvalue CXXMethod 0x64b4ff0 'operator+=' 'iterator &(difference_type)'
| | |   | |-UnaryOperator 0x64b6f00 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |   | | `-CXXThisExpr 0x64b6ee8 <col:8> 'struct std::_Bit_iterator *' this
| | |   | `-UnaryOperator 0x64b6f60 <col:16, col:17> 'difference_type':'long' prefix '-'
| | |   |   `-ImplicitCastExpr 0x64b6f48 <col:17> 'difference_type':'long' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x64b6f20 <col:17> 'difference_type':'long' lvalue ParmVar 0x64b50b0 '__i' 'difference_type':'long'
| | |   `-ReturnStmt 0x64b70a0 <line:270:7, col:15>
| | |     `-UnaryOperator 0x64b7080 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64b7068 <col:15> 'struct std::_Bit_iterator *' this
| | |-CXXMethodDecl 0x64b52f0 <line:273:5, line:278:5> operator+ 'iterator (difference_type) const'
| | | |-ParmVarDecl 0x64b51f0 <line:274:15, col:31> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64b7340 <line:275:5, line:278:5>
| | |   |-DeclStmt 0x64b71c8 <line:276:7, col:29>
| | |   | `-VarDecl 0x64b7100 <col:7, col:25> __tmp 'iterator':'struct std::_Bit_iterator'
| | |   |   `-CXXConstructExpr 0x64b7190 <col:24, col:25> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |   |     `-UnaryOperator 0x64b7170 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
| | |   |       `-CXXThisExpr 0x64b7158 <col:25> 'const struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b7320 <line:277:7, col:23>
| | |     `-CXXConstructExpr 0x64b72e8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |       `-ImplicitCastExpr 0x64b72d0 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |         `-CXXOperatorCallExpr 0x64b7288 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
| | |           |-ImplicitCastExpr 0x64b7270 <col:20> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64b7248 <col:20> 'iterator &(difference_type)' lvalue CXXMethod 0x64b4ff0 'operator+=' 'iterator &(difference_type)'
| | |           |-DeclRefExpr 0x64b71e0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64b7100 '__tmp' 'iterator':'struct std::_Bit_iterator'
| | |           `-ImplicitCastExpr 0x64b7230 <col:23> 'difference_type':'long' <LValueToRValue>
| | |             `-DeclRefExpr 0x64b7208 <col:23> 'difference_type':'long' lvalue ParmVar 0x64b51f0 '__i' 'difference_type':'long'
| | |-CXXMethodDecl 0x64b5430 <line:280:5, line:285:5> operator- 'iterator (difference_type) const'
| | | |-ParmVarDecl 0x64b53b0 <line:281:15, col:31> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64b75c0 <line:282:5, line:285:5>
| | |   |-DeclStmt 0x64b7448 <line:283:7, col:29>
| | |   | `-VarDecl 0x64b7380 <col:7, col:25> __tmp 'iterator':'struct std::_Bit_iterator'
| | |   |   `-CXXConstructExpr 0x64b7410 <col:24, col:25> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |   |     `-UnaryOperator 0x64b73f0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
| | |   |       `-CXXThisExpr 0x64b73d8 <col:25> 'const struct std::_Bit_iterator *' this
| | |   `-ReturnStmt 0x64b75a0 <line:284:7, col:23>
| | |     `-CXXConstructExpr 0x64b7568 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| | |       `-ImplicitCastExpr 0x64b7550 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
| | |         `-CXXOperatorCallExpr 0x64b7508 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
| | |           |-ImplicitCastExpr 0x64b74f0 <col:20> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64b74c8 <col:20> 'iterator &(difference_type)' lvalue CXXMethod 0x64b5130 'operator-=' 'iterator &(difference_type)'
| | |           |-DeclRefExpr 0x64b7460 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64b7380 '__tmp' 'iterator':'struct std::_Bit_iterator'
| | |           `-ImplicitCastExpr 0x64b74b0 <col:23> 'difference_type':'long' <LValueToRValue>
| | |             `-DeclRefExpr 0x64b7488 <col:23> 'difference_type':'long' lvalue ParmVar 0x64b53b0 '__i' 'difference_type':'long'
| | |-CXXMethodDecl 0x64b55f0 <line:287:5, line:289:30> operator[] 'reference (difference_type) const'
| | | |-ParmVarDecl 0x64b54f0 <line:288:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64b7c70 <line:289:5, col:30>
| | |   `-ReturnStmt 0x64b7c50 <col:7, col:27>
| | |     `-CXXConstructExpr 0x64b7c18 <col:14, col:27> 'reference':'struct std::_Bit_reference' 'void (const struct std::_Bit_reference &) throw()' elidable
| | |       `-MaterializeTemporaryExpr 0x64b7bf8 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
| | |         `-ImplicitCastExpr 0x64b7be0 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
| | |           `-CXXOperatorCallExpr 0x64b7ba0 <col:14, col:27> 'reference':'struct std::_Bit_reference'
| | |             |-ImplicitCastExpr 0x64b7b88 <col:14> 'reference (*)(void) const' <FunctionToPointerDecay>
| | |             | `-DeclRefExpr 0x64b7b00 <col:14> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
| | |             `-ImplicitCastExpr 0x64b7ae8 <col:15, col:27> 'const struct std::_Bit_iterator' <NoOp>
| | |               `-ParenExpr 0x64b7ac8 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
| | |                 `-CXXOperatorCallExpr 0x64b7730 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
| | |                   |-ImplicitCastExpr 0x64b7718 <col:22> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
| | |                   | `-DeclRefExpr 0x64b7698 <col:22> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
| | |                   |-UnaryOperator 0x64b7600 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
| | |                   | `-CXXThisExpr 0x64b75e8 <col:17> 'const struct std::_Bit_iterator *' this
| | |                   `-ImplicitCastExpr 0x64b7680 <col:24> 'difference_type':'long' <LValueToRValue>
| | |                     `-DeclRefExpr 0x64b7620 <col:24> 'difference_type':'long' lvalue ParmVar 0x64b54f0 '__i' 'difference_type':'long'
| | |-CXXConstructorDecl 0x64b6210 <line:214:10> _Bit_iterator 'void (const struct std::_Bit_iterator &) throw()' inline
| | | |-ParmVarDecl 0x64b6350 <col:10> 'const struct std::_Bit_iterator &'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b6748 <col:10> 'struct std::_Bit_iterator_base' 'void (const struct std::_Bit_iterator_base &) throw()'
| | | | | `-ImplicitCastExpr 0x64b63f0 <col:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| | | | |   `-DeclRefExpr 0x64b63c8 <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0x64b6350 '' 'const struct std::_Bit_iterator &'
| | | `-CompoundStmt 0x64b67c0 <col:10>
| | `-CXXDestructorDecl 0x64b77a0 <col:10> ~_Bit_iterator 'void (void) throw()' inline
| |   `-CompoundStmt 0x64b78d0 <col:10>
| |-FunctionDecl 0x64b7e20 <line:292:3, line:294:23> operator+ 'struct std::_Bit_iterator (ptrdiff_t, const struct std::_Bit_iterator &)' inline
| | |-ParmVarDecl 0x64b7ca0 <line:293:13, col:23> __n 'ptrdiff_t':'long'
| | |-ParmVarDecl 0x64b7d10 <col:28, col:49> __x 'const struct std::_Bit_iterator &'
| | `-CompoundStmt 0x64b8080 <line:294:3, col:23>
| |   `-ReturnStmt 0x64b8060 <col:5, col:18>
| |     `-CXXConstructExpr 0x64b8028 <col:12, col:18> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| |       `-MaterializeTemporaryExpr 0x64b8008 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
| |         `-ImplicitCastExpr 0x64b7ff0 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
| |           `-CXXOperatorCallExpr 0x64b7fa8 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
| |             |-ImplicitCastExpr 0x64b7f90 <col:16> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
| |             | `-DeclRefExpr 0x64b7f68 <col:16> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
| |             |-DeclRefExpr 0x64b7ed0 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0x64b7d10 '__x' 'const struct std::_Bit_iterator &'
| |             `-ImplicitCastExpr 0x64b7f50 <col:18> 'ptrdiff_t':'long' <LValueToRValue>
| |               `-DeclRefExpr 0x64b7ef8 <col:18> 'ptrdiff_t':'long' lvalue ParmVar 0x64b7ca0 '__n' 'ptrdiff_t':'long'
| |-CXXRecordDecl 0x64b80a0 <line:296:3, line:376:3> struct _Bit_const_iterator definition
| | |-public 'struct std::_Bit_iterator_base'
| | |-CXXRecordDecl 0x64b81f0 <line:296:3, col:10> struct _Bit_const_iterator
| | |-TypedefDecl 0x64b8290 <line:298:5, col:34> reference '_Bool'
| | |-TypedefDecl 0x64b82f0 <line:299:5, col:34> const_reference '_Bool'
| | |-TypedefDecl 0x64b8380 <line:300:5, col:34> pointer 'const _Bool *'
| | |-TypedefDecl 0x64b83e0 <line:301:5, col:34> const_iterator 'struct std::_Bit_const_iterator'
| | |-CXXConstructorDecl 0x64b8470 <line:303:5, col:56> _Bit_const_iterator 'void (void)'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b97a0 <col:29, col:52> 'struct std::_Bit_iterator_base' 'void (_Bit_type *, unsigned int)'
| | | | | |-ImplicitCastExpr 0x64b9770 <col:48> '_Bit_type *' <NullToPointer>
| | | | | | `-IntegerLiteral 0x64b96e8 <col:48> 'int' 0
| | | | | `-ImplicitCastExpr 0x64b9788 <col:51> 'unsigned int' <IntegralCast>
| | | | |   `-IntegerLiteral 0x64b9708 <col:51> 'int' 0
| | | `-CompoundStmt 0x64b9810 <col:54, col:56>
| | |-CXXConstructorDecl 0x64b8640 <line:305:5, line:306:38> _Bit_const_iterator 'void (_Bit_type *, unsigned int)'
| | | |-ParmVarDecl 0x64b8540 <line:305:25, col:37> __x '_Bit_type *'
| | | |-ParmVarDecl 0x64b85b0 <col:42, col:55> __y 'unsigned int'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b98f0 <line:306:7, col:34> 'struct std::_Bit_iterator_base' 'void (_Bit_type *, unsigned int)'
| | | | | |-ImplicitCastExpr 0x64b98c0 <col:26> '_Bit_type *' <LValueToRValue>
| | | | | | `-DeclRefExpr 0x64b9828 <col:26> '_Bit_type *' lvalue ParmVar 0x64b8540 '__x' '_Bit_type *'
| | | | | `-ImplicitCastExpr 0x64b98d8 <col:31> 'unsigned int' <LValueToRValue>
| | | | |   `-DeclRefExpr 0x64b9850 <col:31> 'unsigned int' lvalue ParmVar 0x64b85b0 '__y' 'unsigned int'
| | | `-CompoundStmt 0x64b9960 <col:36, col:38>
| | |-CXXConstructorDecl 0x64b87a0 <line:308:5, line:309:53> _Bit_const_iterator 'void (const struct std::_Bit_iterator &)'
| | | |-ParmVarDecl 0x64b8720 <line:308:25, col:46> __x 'const struct std::_Bit_iterator &'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64b9ae0 <line:309:7, col:49> 'struct std::_Bit_iterator_base' 'void (_Bit_type *, unsigned int)'
| | | | | |-ImplicitCastExpr 0x64b9ab0 <col:26, col:30> '_Bit_type *' <LValueToRValue>
| | | | | | `-MemberExpr 0x64b99c0 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0x64b0b10
| | | | | |   `-ImplicitCastExpr 0x64b99a0 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| | | | | |     `-DeclRefExpr 0x64b9978 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0x64b8720 '__x' 'const struct std::_Bit_iterator &'
| | | | | `-ImplicitCastExpr 0x64b9ac8 <col:36, col:40> 'unsigned int' <LValueToRValue>
| | | | |   `-MemberExpr 0x64b9a38 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0x64b0b70
| | | | |     `-ImplicitCastExpr 0x64b9a18 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| | | | |       `-DeclRefExpr 0x64b99f0 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0x64b8720 '__x' 'const struct std::_Bit_iterator &'
| | | `-CompoundStmt 0x64b9b50 <col:51, col:53>
| | |-CXXMethodDecl 0x64b88d0 <line:311:5, line:313:54> operator* 'const_reference (void) const'
| | | `-CompoundStmt 0x64b9de8 <col:5, col:54>
| | |   `-ReturnStmt 0x64b9dc8 <col:7, col:51>
| | |     `-ImplicitCastExpr 0x64b9db0 <col:14, col:51> '_Bool' <UserDefinedConversion>
| | |       `-CXXMemberCallExpr 0x64b9d88 <col:14, col:51> '_Bool'
| | |         `-MemberExpr 0x64b9d58 <col:14, col:51> '<bound member function type>' .operator bool 0x64ae0c0
| | |           `-ImplicitCastExpr 0x64b9d40 <col:14, col:51> 'const struct std::_Bit_reference' <NoOp>
| | |             `-CXXTemporaryObjectExpr 0x64b9cf0 <col:14, col:51> 'struct std::_Bit_reference' 'void (_Bit_type *, _Bit_type)'
| | |               |-ImplicitCastExpr 0x64b9cd8 <col:29> '_Bit_type *' <LValueToRValue>
| | |               | `-MemberExpr 0x64b9be0 <col:29> '_Bit_type *const' lvalue ->_M_p 0x64b0b10
| | |               |   `-ImplicitCastExpr 0x64b9bc0 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |               |     `-CXXThisExpr 0x64b9ba8 <col:29> 'const struct std::_Bit_const_iterator *' this
| | |               `-BinaryOperator 0x64b9cb0 <col:35, col:42> 'unsigned long' '<<'
| | |                 |-IntegerLiteral 0x64b9c10 <col:35> 'unsigned long' 1
| | |                 `-ImplicitCastExpr 0x64b9c98 <col:42> 'unsigned int' <LValueToRValue>
| | |                   `-MemberExpr 0x64b9c68 <col:42> 'const unsigned int' lvalue ->_M_offset 0x64b0b70
| | |                     `-ImplicitCastExpr 0x64b9c48 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |                       `-CXXThisExpr 0x64b9c30 <col:42> 'const struct std::_Bit_const_iterator *' this
| | |-CXXMethodDecl 0x64b8a70 <line:315:5, line:320:5> operator++ 'const_iterator &(void)'
| | | `-CompoundStmt 0x64b9ef0 <line:317:5, line:320:5>
| | |   |-CXXMemberCallExpr 0x64b9e50 <line:318:7, col:18> 'void'
| | |   | `-MemberExpr 0x64b9e20 <col:7> '<bound member function type>' ->_M_bump_up 0x64b0e60
| | |   |   `-ImplicitCastExpr 0x64b9e78 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64b9e08 <col:7> 'struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64b9ed0 <line:319:7, col:15>
| | |     `-UnaryOperator 0x64b9eb0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64b9e98 <col:15> 'struct std::_Bit_const_iterator *' this
| | |-CXXMethodDecl 0x64b8c50 <line:322:5, line:328:5> operator++ 'const_iterator (int)'
| | | |-ParmVarDecl 0x64b8b50 <line:323:16> 'int'
| | | `-CompoundStmt 0x64ba440 <line:324:5, line:328:5>
| | |   |-DeclStmt 0x64ba300 <line:325:7, col:35>
| | |   | `-VarDecl 0x64b9f30 <col:7, col:31> __tmp 'const_iterator':'struct std::_Bit_const_iterator' nrvo
| | |   |   `-CXXConstructExpr 0x64ba2c8 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |   |     `-ImplicitCastExpr 0x64ba190 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |   |       `-UnaryOperator 0x64b9fa0 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |   |         `-CXXThisExpr 0x64b9f88 <col:31> 'struct std::_Bit_const_iterator *' this
| | |   |-CXXMemberCallExpr 0x64ba360 <line:326:7, col:18> 'void'
| | |   | `-MemberExpr 0x64ba330 <col:7> '<bound member function type>' ->_M_bump_up 0x64b0e60
| | |   |   `-ImplicitCastExpr 0x64ba388 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64ba318 <col:7> 'struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64ba420 <line:327:7, col:14>
| | |     `-CXXConstructExpr 0x64ba3e8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()' elidable
| | |       `-ImplicitCastExpr 0x64ba3d0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |         `-DeclRefExpr 0x64ba3a8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x64b9f30 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator'
| | |-CXXMethodDecl 0x64b8d20 <line:330:5, line:335:5> operator-- 'const_iterator &(void)'
| | | `-CompoundStmt 0x64ba558 <line:332:5, line:335:5>
| | |   |-CXXMemberCallExpr 0x64ba4b8 <line:333:7, col:20> 'void'
| | |   | `-MemberExpr 0x64ba488 <col:7> '<bound member function type>' ->_M_bump_down 0x64b0f20
| | |   |   `-ImplicitCastExpr 0x64ba4e0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64ba470 <col:7> 'struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64ba538 <line:334:7, col:15>
| | |     `-UnaryOperator 0x64ba518 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64ba500 <col:15> 'struct std::_Bit_const_iterator *' this
| | |-CXXMethodDecl 0x64b8e50 <line:337:5, line:343:5> operator-- 'const_iterator (int)'
| | | |-ParmVarDecl 0x64b8dd0 <line:338:16> 'int'
| | | `-CompoundStmt 0x64ba7b0 <line:339:5, line:343:5>
| | |   |-DeclStmt 0x64ba670 <line:340:7, col:35>
| | |   | `-VarDecl 0x64ba590 <col:7, col:31> __tmp 'const_iterator':'struct std::_Bit_const_iterator' nrvo
| | |   |   `-CXXConstructExpr 0x64ba638 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |   |     `-ImplicitCastExpr 0x64ba620 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |   |       `-UnaryOperator 0x64ba600 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |   |         `-CXXThisExpr 0x64ba5e8 <col:31> 'struct std::_Bit_const_iterator *' this
| | |   |-CXXMemberCallExpr 0x64ba6d0 <line:341:7, col:20> 'void'
| | |   | `-MemberExpr 0x64ba6a0 <col:7> '<bound member function type>' ->_M_bump_down 0x64b0f20
| | |   |   `-ImplicitCastExpr 0x64ba6f8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   |     `-CXXThisExpr 0x64ba688 <col:7> 'struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64ba790 <line:342:7, col:14>
| | |     `-CXXConstructExpr 0x64ba758 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()' elidable
| | |       `-ImplicitCastExpr 0x64ba740 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |         `-DeclRefExpr 0x64ba718 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x64ba590 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator'
| | |-CXXMethodDecl 0x64b9010 <line:345:5, line:350:5> operator+= 'const_iterator &(difference_type)'
| | | |-ParmVarDecl 0x64b8f10 <line:346:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64ba910 <line:347:5, line:350:5>
| | |   |-CXXMemberCallExpr 0x64ba850 <line:348:7, col:18> 'void'
| | |   | |-MemberExpr 0x64ba7f8 <col:7> '<bound member function type>' ->_M_incr 0x64b10d0
| | |   | | `-ImplicitCastExpr 0x64ba880 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
| | |   | |   `-CXXThisExpr 0x64ba7e0 <col:7> 'struct std::_Bit_const_iterator *' this
| | |   | `-ImplicitCastExpr 0x64ba8a0 <col:15> 'difference_type':'long' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x64ba828 <col:15> 'difference_type':'long' lvalue ParmVar 0x64b8f10 '__i' 'difference_type':'long'
| | |   `-ReturnStmt 0x64ba8f0 <line:349:7, col:15>
| | |     `-UnaryOperator 0x64ba8d0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64ba8b8 <col:15> 'struct std::_Bit_const_iterator *' this
| | |-CXXMethodDecl 0x64b9150 <line:352:5, line:357:5> operator-= 'const_iterator &(difference_type)'
| | | |-ParmVarDecl 0x64b90d0 <line:353:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64bab10 <line:354:5, line:357:5>
| | |   |-CXXOperatorCallExpr 0x64baa70 <line:355:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
| | |   | |-ImplicitCastExpr 0x64baa58 <col:13> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x64ba9d0 <col:13> 'const_iterator &(difference_type)' lvalue CXXMethod 0x64b9010 'operator+=' 'const_iterator &(difference_type)'
| | |   | |-UnaryOperator 0x64ba950 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |   | | `-CXXThisExpr 0x64ba938 <col:8> 'struct std::_Bit_const_iterator *' this
| | |   | `-UnaryOperator 0x64ba9b0 <col:16, col:17> 'difference_type':'long' prefix '-'
| | |   |   `-ImplicitCastExpr 0x64ba998 <col:17> 'difference_type':'long' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x64ba970 <col:17> 'difference_type':'long' lvalue ParmVar 0x64b90d0 '__i' 'difference_type':'long'
| | |   `-ReturnStmt 0x64baaf0 <line:356:7, col:15>
| | |     `-UnaryOperator 0x64baad0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
| | |       `-CXXThisExpr 0x64baab8 <col:15> 'struct std::_Bit_const_iterator *' this
| | |-CXXMethodDecl 0x64b9310 <line:359:5, line:364:5> operator+ 'const_iterator (difference_type) const'
| | | |-ParmVarDecl 0x64b9210 <line:360:15, col:31> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64badb0 <line:361:5, line:364:5>
| | |   |-DeclStmt 0x64bac38 <line:362:7, col:35>
| | |   | `-VarDecl 0x64bab70 <col:7, col:31> __tmp 'const_iterator':'struct std::_Bit_const_iterator'
| | |   |   `-CXXConstructExpr 0x64bac00 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |   |     `-UnaryOperator 0x64babe0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
| | |   |       `-CXXThisExpr 0x64babc8 <col:31> 'const struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64bad90 <line:363:7, col:23>
| | |     `-CXXConstructExpr 0x64bad58 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |       `-ImplicitCastExpr 0x64bad40 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |         `-CXXOperatorCallExpr 0x64bacf8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
| | |           |-ImplicitCastExpr 0x64bace0 <col:20> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64bacb8 <col:20> 'const_iterator &(difference_type)' lvalue CXXMethod 0x64b9010 'operator+=' 'const_iterator &(difference_type)'
| | |           |-DeclRefExpr 0x64bac50 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x64bab70 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator'
| | |           `-ImplicitCastExpr 0x64baca0 <col:23> 'difference_type':'long' <LValueToRValue>
| | |             `-DeclRefExpr 0x64bac78 <col:23> 'difference_type':'long' lvalue ParmVar 0x64b9210 '__i' 'difference_type':'long'
| | |-CXXMethodDecl 0x64b9450 <line:366:5, line:371:5> operator- 'const_iterator (difference_type) const'
| | | |-ParmVarDecl 0x64b93d0 <line:367:15, col:31> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64bb030 <line:368:5, line:371:5>
| | |   |-DeclStmt 0x64baeb8 <line:369:7, col:35>
| | |   | `-VarDecl 0x64badf0 <col:7, col:31> __tmp 'const_iterator':'struct std::_Bit_const_iterator'
| | |   |   `-CXXConstructExpr 0x64bae80 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |   |     `-UnaryOperator 0x64bae60 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
| | |   |       `-CXXThisExpr 0x64bae48 <col:31> 'const struct std::_Bit_const_iterator *' this
| | |   `-ReturnStmt 0x64bb010 <line:370:7, col:23>
| | |     `-CXXConstructExpr 0x64bafd8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
| | |       `-ImplicitCastExpr 0x64bafc0 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
| | |         `-CXXOperatorCallExpr 0x64baf78 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
| | |           |-ImplicitCastExpr 0x64baf60 <col:20> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x64baf38 <col:20> 'const_iterator &(difference_type)' lvalue CXXMethod 0x64b9150 'operator-=' 'const_iterator &(difference_type)'
| | |           |-DeclRefExpr 0x64baed0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x64badf0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator'
| | |           `-ImplicitCastExpr 0x64baf20 <col:23> 'difference_type':'long' <LValueToRValue>
| | |             `-DeclRefExpr 0x64baef8 <col:23> 'difference_type':'long' lvalue ParmVar 0x64b93d0 '__i' 'difference_type':'long'
| | |-CXXMethodDecl 0x64b9610 <line:373:5, line:375:30> operator[] 'const_reference (difference_type) const'
| | | |-ParmVarDecl 0x64b9510 <line:374:16, col:32> __i 'difference_type':'long'
| | | `-CompoundStmt 0x64bb410 <line:375:5, col:30>
| | |   `-ReturnStmt 0x64bb3f0 <col:7, col:27>
| | |     `-CXXOperatorCallExpr 0x64bb3b0 <col:14, col:27> 'const_reference':'_Bool'
| | |       |-ImplicitCastExpr 0x64bb398 <col:14> 'const_reference (*)(void) const' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x64bb348 <col:14> 'const_reference (void) const' lvalue CXXMethod 0x64b88d0 'operator*' 'const_reference (void) const'
| | |       `-ImplicitCastExpr 0x64bb330 <col:15, col:27> 'const struct std::_Bit_const_iterator' <NoOp>
| | |         `-ParenExpr 0x64bb310 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
| | |           `-CXXOperatorCallExpr 0x64bb1a0 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
| | |             |-ImplicitCastExpr 0x64bb188 <col:22> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
| | |             | `-DeclRefExpr 0x64bb108 <col:22> 'const_iterator (difference_type) const' lvalue CXXMethod 0x64b9310 'operator+' 'const_iterator (difference_type) const'
| | |             |-UnaryOperator 0x64bb070 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
| | |             | `-CXXThisExpr 0x64bb058 <col:17> 'const struct std::_Bit_const_iterator *' this
| | |             `-ImplicitCastExpr 0x64bb0f0 <col:24> 'difference_type':'long' <LValueToRValue>
| | |               `-DeclRefExpr 0x64bb090 <col:24> 'difference_type':'long' lvalue ParmVar 0x64b9510 '__i' 'difference_type':'long'
| | |-CXXConstructorDecl 0x64b9ff0 <line:296:10> _Bit_const_iterator 'void (const struct std::_Bit_const_iterator &) throw()' inline
| | | |-ParmVarDecl 0x64ba130 <col:10> 'const struct std::_Bit_const_iterator &'
| | | |-CXXCtorInitializer 'struct std::_Bit_iterator_base'
| | | | |-CXXConstructExpr 0x64ba1f0 <col:10> 'struct std::_Bit_iterator_base' 'void (const struct std::_Bit_iterator_base &) throw()'
| | | | | `-ImplicitCastExpr 0x64ba1d0 <col:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| | | | |   `-DeclRefExpr 0x64ba1a8 <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x64ba130 '' 'const struct std::_Bit_const_iterator &'
| | | `-CompoundStmt 0x64ba270 <col:10>
| | `-CXXDestructorDecl 0x64bb210 <col:10> ~_Bit_const_iterator 'void (void) throw()' inline
| |   `-CompoundStmt 0x64bb2f8 <col:10>
| |-FunctionDecl 0x64bb5c0 <line:378:3, line:380:23> operator+ 'struct std::_Bit_const_iterator (ptrdiff_t, const struct std::_Bit_const_iterator &)' inline
| | |-ParmVarDecl 0x64bb440 <line:379:13, col:23> __n 'ptrdiff_t':'long'
| | |-ParmVarDecl 0x64bb4b0 <col:28, col:55> __x 'const struct std::_Bit_const_iterator &'
| | `-CompoundStmt 0x64bb820 <line:380:3, col:23>
| |   `-ReturnStmt 0x64bb800 <col:5, col:18>
| |     `-CXXConstructExpr 0x64bb7c8 <col:12, col:18> 'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()' elidable
| |       `-MaterializeTemporaryExpr 0x64bb7a8 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
| |         `-ImplicitCastExpr 0x64bb790 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
| |           `-CXXOperatorCallExpr 0x64bb748 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
| |             |-ImplicitCastExpr 0x64bb730 <col:16> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
| |             | `-DeclRefExpr 0x64bb708 <col:16> 'const_iterator (difference_type) const' lvalue CXXMethod 0x64b9310 'operator+' 'const_iterator (difference_type) const'
| |             |-DeclRefExpr 0x64bb670 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x64bb4b0 '__x' 'const struct std::_Bit_const_iterator &'
| |             `-ImplicitCastExpr 0x64bb6f0 <col:18> 'ptrdiff_t':'long' <LValueToRValue>
| |               `-DeclRefExpr 0x64bb698 <col:18> 'ptrdiff_t':'long' lvalue ParmVar 0x64bb440 '__n' 'ptrdiff_t':'long'
| |-FunctionDecl 0x64bba10 <line:382:3, line:387:3> __fill_bvector 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' inline
| | |-ParmVarDecl 0x64bb850 <line:383:18, col:32> __first 'struct std::_Bit_iterator'
| | |-ParmVarDecl 0x64bb8c0 <col:41, col:55> __last 'struct std::_Bit_iterator'
| | |-ParmVarDecl 0x64bb930 <col:63, col:68> __x '_Bool'
| | `-CompoundStmt 0x64bbfe8 <line:384:3, line:387:3>
| |   `-ForStmt 0x64bbfa8 <line:385:5, line:386:18>
| |     |-<<<NULL>>>
| |     |-<<<NULL>>>
| |     |-CXXOperatorCallExpr 0x64bbcd8 <line:385:12, col:23> '_Bool'
| |     | |-ImplicitCastExpr 0x64bbcc0 <col:20> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
| |     | | `-DeclRefExpr 0x64bbc98 <col:20> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b1500 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'
| |     | |-ImplicitCastExpr 0x64bbc78 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     | | `-DeclRefExpr 0x64bbac8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bb850 '__first' 'struct std::_Bit_iterator'
| |     | `-ImplicitCastExpr 0x64bbc60 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
| |     |   `-ImplicitCastExpr 0x64bbc40 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
| |     |     `-DeclRefExpr 0x64bbaf0 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bb8c0 '__last' 'struct std::_Bit_iterator'
| |     |-CXXOperatorCallExpr 0x64bbde0 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
| |     | |-ImplicitCastExpr 0x64bbdc8 <col:31> 'iterator &(*)(void)' <FunctionToPointerDecay>
| |     | | `-DeclRefExpr 0x64bbd48 <col:31> 'iterator &(void)' lvalue CXXMethod 0x64b4a40 'operator++' 'iterator &(void)'
| |     | `-DeclRefExpr 0x64bbd20 <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bb850 '__first' 'struct std::_Bit_iterator'
| |     `-CXXOperatorCallExpr 0x64bbf60 <line:386:7, col:18> 'struct std::_Bit_reference' lvalue
| |       |-ImplicitCastExpr 0x64bbf48 <col:16> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x64bbf20 <col:16> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x64ae270 'operator=' 'struct std::_Bit_reference &(_Bool)'
| |       |-CXXOperatorCallExpr 0x64bbea0 <col:7, col:8> 'reference':'struct std::_Bit_reference'
| |       | |-ImplicitCastExpr 0x64bbe88 <col:7> 'reference (*)(void) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x64bbe60 <col:7> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
| |       | `-ImplicitCastExpr 0x64bbe48 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       |   `-DeclRefExpr 0x64bbe20 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bb850 '__first' 'struct std::_Bit_iterator'
| |       `-ImplicitCastExpr 0x64bbf08 <col:18> '_Bool' <LValueToRValue>
| |         `-DeclRefExpr 0x64bbee0 <col:18> '_Bool' lvalue ParmVar 0x64bb930 '__x' '_Bool'
| |-FunctionDecl 0x64bc210 <line:389:3, line:400:3> fill 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' inline
| | |-ParmVarDecl 0x64bc020 <line:390:8, col:22> __first 'struct std::_Bit_iterator'
| | |-ParmVarDecl 0x64bc090 <col:31, col:45> __last 'struct std::_Bit_iterator'
| | |-ParmVarDecl 0x64bc130 <col:53, col:65> __x 'const _Bool &'
| | `-CompoundStmt 0x64bd850 <line:391:3, line:400:3>
| |   `-IfStmt 0x64bd820 <line:392:5, line:399:42>
| |     |-<<<NULL>>>
| |     |-BinaryOperator 0x64bc3e8 <line:392:9, col:32> '_Bool' '!='
| |     | |-ImplicitCastExpr 0x64bc3b8 <col:9, col:17> '_Bit_type *' <LValueToRValue>
| |     | | `-MemberExpr 0x64bc310 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     | |   `-ImplicitCastExpr 0x64bc2f0 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     | |     `-DeclRefExpr 0x64bc2c8 <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc020 '__first' 'struct std::_Bit_iterator'
| |     | `-ImplicitCastExpr 0x64bc3d0 <col:25, col:32> '_Bit_type *' <LValueToRValue>
| |     |   `-MemberExpr 0x64bc388 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     |     `-ImplicitCastExpr 0x64bc368 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     |       `-DeclRefExpr 0x64bc340 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc090 '__last' 'struct std::_Bit_iterator'
| |     |-CompoundStmt 0x64bd5e8 <line:393:7, line:397:7>
| |     | |-CallExpr 0x64bcec0 <line:394:2, col:55> 'void'
| |     | | |-ImplicitCastExpr 0x64bcea8 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
| |     | | | `-DeclRefExpr 0x64bce10 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0x64bcce0 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x641fa10 'fill')
| |     | | |-BinaryOperator 0x64bc758 <col:12, col:27> '_Bit_type *' '+'
| |     | | | |-ImplicitCastExpr 0x64bc740 <col:12, col:20> '_Bit_type *' <LValueToRValue>
| |     | | | | `-MemberExpr 0x64bc6f0 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     | | | |   `-ImplicitCastExpr 0x64bc6d0 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     | | | |     `-DeclRefExpr 0x64bc6a8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc020 '__first' 'struct std::_Bit_iterator'
| |     | | | `-IntegerLiteral 0x64bc720 <col:27> 'int' 1
| |     | | |-ImplicitCastExpr 0x64bcf00 <col:30, col:37> '_Bit_type *' <LValueToRValue>
| |     | | | `-MemberExpr 0x64bc7c8 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     | | |   `-ImplicitCastExpr 0x64bc7a8 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     | | |     `-DeclRefExpr 0x64bc780 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc090 '__last' 'struct std::_Bit_iterator'
| |     | | `-MaterializeTemporaryExpr 0x64bcf18 <col:43, col:54> 'const int':'const int' lvalue
| |     | |   `-ConditionalOperator 0x64bc898 <col:43, col:54> 'int'
| |     | |     |-ImplicitCastExpr 0x64bc880 <col:43> '_Bool' <LValueToRValue>
| |     | |     | `-DeclRefExpr 0x64bc7f8 <col:43> 'const _Bool' lvalue ParmVar 0x64bc130 '__x' 'const _Bool &'
| |     | |     |-UnaryOperator 0x64bc840 <col:49, col:50> 'int' prefix '~'
| |     | |     | `-IntegerLiteral 0x64bc820 <col:50> 'int' 0
| |     | |     `-IntegerLiteral 0x64bc860 <col:54> 'int' 0
| |     | |-CallExpr 0x64bd1b0 <line:395:2, col:65> 'void'
| |     | | |-ImplicitCastExpr 0x64bd198 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
| |     | | | `-DeclRefExpr 0x64bd148 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x64bba10 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'
| |     | | |-CXXConstructExpr 0x64bd208 <col:17> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |     | | | `-ImplicitCastExpr 0x64bd1f0 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |     | | |   `-DeclRefExpr 0x64bcf90 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc020 '__first' 'struct std::_Bit_iterator'
| |     | | |-CXXConstructExpr 0x64bd278 <col:26, col:59> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| |     | | | `-MaterializeTemporaryExpr 0x64bd258 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
| |     | | |   `-ImplicitCastExpr 0x64bd240 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
| |     | | |     `-CXXTemporaryObjectExpr 0x64bd0d8 <col:26, col:59> 'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |     | | |       |-BinaryOperator 0x64bd078 <col:40, col:55> '_Bit_type *' '+'
| |     | | |       | |-ImplicitCastExpr 0x64bd060 <col:40, col:48> '_Bit_type *' <LValueToRValue>
| |     | | |       | | `-MemberExpr 0x64bd010 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     | | |       | |   `-ImplicitCastExpr 0x64bcff0 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     | | |       | |     `-DeclRefExpr 0x64bcfc8 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc020 '__first' 'struct std::_Bit_iterator'
| |     | | |       | `-IntegerLiteral 0x64bd040 <col:55> 'int' 1
| |     | | |       `-ImplicitCastExpr 0x64bd0c0 <col:58> 'unsigned int' <IntegralCast>
| |     | | |         `-IntegerLiteral 0x64bd0a0 <col:58> 'int' 0
| |     | | `-ImplicitCastExpr 0x64bd2b0 <col:62> '_Bool' <LValueToRValue>
| |     | |   `-DeclRefExpr 0x64bd120 <col:62> 'const _Bool' lvalue ParmVar 0x64bc130 '__x' 'const _Bool &'
| |     | `-CallExpr 0x64bd4d0 <line:396:2, col:59> 'void'
| |     |   |-ImplicitCastExpr 0x64bd4b8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
| |     |   | `-DeclRefExpr 0x64bd490 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x64bba10 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'
| |     |   |-CXXConstructExpr 0x64bd548 <col:17, col:45> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| |     |   | `-MaterializeTemporaryExpr 0x64bd528 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
| |     |   |   `-ImplicitCastExpr 0x64bd510 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
| |     |   |     `-CXXTemporaryObjectExpr 0x64bd3f8 <col:17, col:45> 'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |     |   |       |-ImplicitCastExpr 0x64bd3c8 <col:31, col:38> '_Bit_type *' <LValueToRValue>
| |     |   |       | `-MemberExpr 0x64bd378 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0x64b0b10
| |     |   |       |   `-ImplicitCastExpr 0x64bd358 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
| |     |   |       |     `-DeclRefExpr 0x64bd330 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc090 '__last' 'struct std::_Bit_iterator'
| |     |   |       `-ImplicitCastExpr 0x64bd3e0 <col:44> 'unsigned int' <IntegralCast>
| |     |   |         `-IntegerLiteral 0x64bd3a8 <col:44> 'int' 0
| |     |   |-CXXConstructExpr 0x64bd598 <col:48> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |     |   | `-ImplicitCastExpr 0x64bd580 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |     |   |   `-DeclRefExpr 0x64bd440 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc090 '__last' 'struct std::_Bit_iterator'
| |     |   `-ImplicitCastExpr 0x64bd5d0 <col:56> '_Bool' <LValueToRValue>
| |     |     `-DeclRefExpr 0x64bd468 <col:56> 'const _Bool' lvalue ParmVar 0x64bc130 '__x' 'const _Bool &'
| |     `-CallExpr 0x64bd728 <line:399:7, col:42> 'void'
| |       |-ImplicitCastExpr 0x64bd710 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x64bd6e8 <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x64bba10 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'
| |       |-CXXConstructExpr 0x64bd780 <col:22> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |       | `-ImplicitCastExpr 0x64bd768 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       |   `-DeclRefExpr 0x64bd670 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc020 '__first' 'struct std::_Bit_iterator'
| |       |-CXXConstructExpr 0x64bd7d0 <col:31> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |       | `-ImplicitCastExpr 0x64bd7b8 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       |   `-DeclRefExpr 0x64bd698 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x64bc090 '__last' 'struct std::_Bit_iterator'
| |       `-ImplicitCastExpr 0x64bd808 <col:39> '_Bool' <LValueToRValue>
| |         `-DeclRefExpr 0x64bd6c0 <col:39> 'const _Bool' lvalue ParmVar 0x64bc130 '__x' 'const _Bool &'
| `-ClassTemplateDecl 0x64bd980 <line:402:3, line:486:5> _Bvector_base
|   |-TemplateTypeParmDecl 0x64bd870 <line:402:12, col:21> typename _Alloc
|   `-CXXRecordDecl 0x64bd8f0 <line:403:5, line:486:5> struct _Bvector_base definition
|     |-CXXRecordDecl 0x64bdc00 <line:403:5, col:12> struct _Bvector_base
|     |-TypedefDecl 0x64bdeb0 <line:405:7, line:406:9> _Bit_alloc_type 'typename _Alloc::template _Alloc::rebind<_Bit_type>::other'
|     |-CXXRecordDecl 0x64bdf00 <line:408:7, line:429:7> struct _Bvector_impl definition
|     | |-public '_Bit_alloc_type':'typename _Alloc::template _Alloc::rebind<_Bit_type>::other'
|     | |-CXXRecordDecl 0x64be070 <line:408:7, col:14> struct _Bvector_impl
|     | |-FieldDecl 0x64be110 <line:411:2, col:17> _M_start 'struct std::_Bit_iterator'
|     | |-FieldDecl 0x64be170 <line:412:2, col:17> _M_finish 'struct std::_Bit_iterator'
|     | |-FieldDecl 0x64be1d0 <line:413:2, col:14> _M_end_of_storage '_Bit_type *'
|     | |-CXXConstructorDecl 0x64be260 <line:415:2, line:417:4> _Bvector_impl 'void (void)'
|     | | |-CXXCtorInitializer '_Bit_alloc_type':'typename _Alloc::template _Alloc::rebind<_Bit_type>::other'
|     | | | |-ParenListExpr 0x64bf288 <line:416:19, col:20> 'NULL TYPE'
|     | | |-CXXCtorInitializer Field 0x64be110 '_M_start' 'struct std::_Bit_iterator'
|     | | | |-CXXConstructExpr 0x64bf310 <col:23, col:32> 'struct std::_Bit_iterator' 'void (void)'
|     | | |-CXXCtorInitializer Field 0x64be170 '_M_finish' 'struct std::_Bit_iterator'
|     | | | |-CXXConstructExpr 0x64bf390 <col:35, col:45> 'struct std::_Bit_iterator' 'void (void)'
|     | | |-CXXCtorInitializer Field 0x64be1d0 '_M_end_of_storage' '_Bit_type *'
|     | | | |-ImplicitCastExpr 0x64bf438 <col:66> '_Bit_type *' <NullToPointer>
|     | | | | `-IntegerLiteral 0x64bf3e8 <col:66> 'int' 0
|     | | `-CompoundStmt 0x64bf498 <line:417:2, col:4>
|     | `-CXXConstructorDecl 0x64be490 <line:419:2, line:421:4> _Bvector_impl 'void (const _Bit_alloc_type &)'
|     |   |-ParmVarDecl 0x64be390 <line:419:16, col:39> __a 'const _Bit_alloc_type &'
|     |   |-CXXCtorInitializer '_Bit_alloc_type':'typename _Alloc::template _Alloc::rebind<_Bit_type>::other'
|     |   | |-ParenListExpr 0x64bf4d8 <line:420:19, col:23> 'NULL TYPE'
|     |   | | `-DeclRefExpr 0x64bf4b0 <col:20> 'const _Bit_alloc_type':'const typename _Alloc::template _Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0x64be390 '__a' 'const _Bit_alloc_type &'
|     |   |-CXXCtorInitializer Field 0x64be110 '_M_start' 'struct std::_Bit_iterator'
|     |   | |-CXXConstructExpr 0x64bf570 <col:26, col:35> 'struct std::_Bit_iterator' 'void (void)'
|     |   |-CXXCtorInitializer Field 0x64be170 '_M_finish' 'struct std::_Bit_iterator'
|     |   | |-CXXConstructExpr 0x64bf5f0 <col:38, col:48> 'struct std::_Bit_iterator' 'void (void)'
|     |   |-CXXCtorInitializer Field 0x64be1d0 '_M_end_of_storage' '_Bit_type *'
|     |   | |-ImplicitCastExpr 0x64bf698 <col:69> '_Bit_type *' <NullToPointer>
|     |   | | `-IntegerLiteral 0x64bf648 <col:69> 'int' 0
|     |   `-CompoundStmt 0x64bf6f8 <line:421:2, col:4>
|     |-AccessSpecDecl 0x64be550 <line:431:5, col:11> public
|     |-TypedefDecl 0x64be590 <line:432:7, col:22> allocator_type '_Alloc'
|     |-CXXMethodDecl 0x64be6c0 <line:434:7, line:436:64> _M_get_Bit_allocator '_Bit_alloc_type &(void)'
|     | `-CompoundStmt 0x64bf878 <col:7, col:64>
|     |   `-ReturnStmt 0x64bf858 <col:9, col:61>
|     |     `-UnaryOperator 0x64bf838 <col:16, col:61> '<dependent type>' prefix '*'
|     |       `-CXXStaticCastExpr 0x64bf808 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
|     |         `-UnaryOperator 0x64bf780 <col:47, col:54> '<dependent type>' prefix '&'
|     |           `-CXXDependentScopeMemberExpr 0x64bf728 <col:48, col:54> '<dependent type>' lvalue
|     |             `-CXXThisExpr 0x64bf710 <col:48> '_Bvector_base<_Alloc> *' this
|     |-CXXMethodDecl 0x64be7e0 <line:438:7, line:440:70> _M_get_Bit_allocator 'const _Bit_alloc_type &(void) const'
|     | `-CompoundStmt 0x64bfa38 <col:7, col:70>
|     |   `-ReturnStmt 0x64bfa18 <col:9, col:67>
|     |     `-UnaryOperator 0x64bf9f8 <col:16, col:67> '<dependent type>' prefix '*'
|     |       `-CXXStaticCastExpr 0x64bf9c8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
|     |         `-UnaryOperator 0x64bf938 <col:53, col:60> '<dependent type>' prefix '&'
|     |           `-CXXDependentScopeMemberExpr 0x64bf8e0 <col:54, col:60> '<dependent type>' lvalue
|     |             `-CXXThisExpr 0x64bf8c8 <col:54> 'const _Bvector_base<_Alloc> *' this
|     |-CXXMethodDecl 0x64be8f0 <line:442:7, line:444:56> get_allocator 'allocator_type (void) const'
|     | `-CompoundStmt 0x64bfb68 <col:7, col:56>
|     |   `-ReturnStmt 0x64bfb48 <col:9, col:53>
|     |     `-CXXUnresolvedConstructExpr 0x64bfb18 <col:16, col:53> 'allocator_type':'_Alloc'
|     |       `-CallExpr 0x64bfaf0 <col:31, col:52> '<dependent type>'
|     |         `-UnresolvedMemberExpr 0x64bfa80 <col:31> '<bound member function type>' lvalue
|     |-CXXConstructorDecl 0x64be9d0 <line:446:7, line:447:21> _Bvector_base<_Alloc> 'void (void)'
|     | |-CXXCtorInitializer Field 0x64bede0 '_M_impl' 'struct std::_Bvector_base::_Bvector_impl'
|     | | |-ParenListExpr 0x64bfb88 <col:16, col:17> 'NULL TYPE'
|     | `-CompoundStmt 0x64bfbe0 <col:19, col:21>
|     |-CXXConstructorDecl 0x64bebe0 <line:449:7, line:450:24> _Bvector_base<_Alloc> 'void (const allocator_type &)'
|     | |-ParmVarDecl 0x64bead0 <line:449:21, col:43> __a 'const allocator_type &'
|     | |-CXXCtorInitializer Field 0x64bede0 '_M_impl' 'struct std::_Bvector_base::_Bvector_impl'
|     | | |-ParenListExpr 0x64bfc20 <line:450:16, col:20> 'NULL TYPE'
|     | | | `-DeclRefExpr 0x64bfbf8 <col:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x64bead0 '__a' 'const allocator_type &'
|     | `-CompoundStmt 0x64bfc80 <col:22, col:24>
|     |-CXXDestructorDecl 0x64becf0 <line:465:7, line:466:32> ~_Bvector_base<_Alloc> 'void (void)'
|     | `-CompoundStmt 0x64bfd30 <col:7, col:32>
|     |   `-CallExpr 0x64bfd08 <col:9, col:29> '<dependent type>'
|     |     `-CXXDependentScopeMemberExpr 0x64bfcb0 <col:9, col:15> '<dependent type>' lvalue
|     |       `-CXXThisExpr 0x64bfc98 <col:9> '_Bvector_base<_Alloc> *' this
|     |-AccessSpecDecl 0x64beda0 <line:468:5, col:14> protected
|     |-FieldDecl 0x64bede0 <line:469:7, col:21> _M_impl 'struct std::_Bvector_base::_Bvector_impl'
|     |-CXXMethodDecl 0x64bef40 <line:471:7, line:473:49> _M_allocate '_Bit_type *(size_t)'
|     | |-ParmVarDecl 0x64bee40 <line:472:19, col:26> __n 'size_t':'unsigned long'
|     | `-CompoundStmt 0x64bff48 <line:473:7, col:49>
|     |   `-ReturnStmt 0x64bff28 <col:9, col:46>
|     |     `-CallExpr 0x64bfef8 <col:16, col:46> '<dependent type>'
|     |       |-CXXDependentScopeMemberExpr 0x64bfd98 <col:16, col:24> '<dependent type>' lvalue
|     |       | `-MemberExpr 0x64bfd68 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |       |   `-CXXThisExpr 0x64bfd50 <col:16> '_Bvector_base<_Alloc> *' this
|     |       `-CallExpr 0x64bfeb0 <col:33, col:45> 'size_t':'unsigned long'
|     |         |-ImplicitCastExpr 0x64bfe98 <col:33> 'size_t (*)(size_t)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x64bfdf0 <col:33> 'size_t (size_t)' lvalue CXXMethod 0x64bf180 '_S_nword' 'size_t (size_t)'
|     |         `-ImplicitCastExpr 0x64bfee0 <col:42> 'size_t':'unsigned long' <LValueToRValue>
|     |           `-DeclRefExpr 0x64bfe18 <col:42> 'size_t':'unsigned long' lvalue ParmVar 0x64bee40 '__n' 'size_t':'unsigned long'
|     |-CXXMethodDecl 0x64bf010 <line:475:7, line:481:7> _M_deallocate 'void (void)'
|     | `-CompoundStmt 0x64c04a8 <line:477:7, line:481:7>
|     |   `-IfStmt 0x64c0478 <line:478:2, line:480:58>
|     |     |-<<<NULL>>>
|     |     |-CXXDependentScopeMemberExpr 0x64c0008 <line:478:6, col:23> '<dependent type>' lvalue
|     |     | `-CXXDependentScopeMemberExpr 0x64bffb0 <col:6, col:14> '<dependent type>' lvalue
|     |     |   `-MemberExpr 0x64bff80 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |     |     `-CXXThisExpr 0x64bff68 <col:6> '_Bvector_base<_Alloc> *' this
|     |     |-CallExpr 0x64c0440 <line:479:4, line:480:58> '<dependent type>'
|     |     | |-CXXDependentScopeMemberExpr 0x64c00a8 <line:479:4, col:12> '<dependent type>' lvalue
|     |     | | `-MemberExpr 0x64c0078 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |     | |   `-CXXThisExpr 0x64c0060 <col:4> '_Bvector_base<_Alloc> *' this
|     |     | |-CXXDependentScopeMemberExpr 0x64c01a0 <col:23, col:40> '<dependent type>' lvalue
|     |     | | `-CXXDependentScopeMemberExpr 0x64c0148 <col:23, col:31> '<dependent type>' lvalue
|     |     | |   `-MemberExpr 0x64c0118 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |     | |     `-CXXThisExpr 0x64c0100 <col:23> '_Bvector_base<_Alloc> *' this
|     |     | `-CXXOperatorCallExpr 0x64c03f8 <line:480:9, col:54> '<dependent type>'
|     |     |   |-UnresolvedLookupExpr 0x64c0390 <col:35> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x64b3dd0 0x63e8e00 0x63ecf00
|     |     |   |-CXXDependentScopeMemberExpr 0x64c0240 <col:9, col:17> '<dependent type>' lvalue
|     |     |   | `-MemberExpr 0x64c0210 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |     |   |   `-CXXThisExpr 0x64c01f8 <col:9> '_Bvector_base<_Alloc> *' this
|     |     |   `-CXXDependentScopeMemberExpr 0x64c0338 <col:37, col:54> '<dependent type>' lvalue
|     |     |     `-CXXDependentScopeMemberExpr 0x64c02e0 <col:37, col:45> '<dependent type>' lvalue
|     |     |       `-MemberExpr 0x64c02b0 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x64bede0
|     |     |         `-CXXThisExpr 0x64c0298 <col:37> '_Bvector_base<_Alloc> *' this
|     |     `-<<<NULL>>>
|     `-CXXMethodDecl 0x64bf180 <line:483:7, line:485:65> _S_nword 'size_t (size_t)' static
|       |-ParmVarDecl 0x64bf0c0 <line:484:16, col:23> __n 'size_t':'unsigned long'
|       `-CompoundStmt 0x64c0718 <line:485:7, col:65>
|         `-ReturnStmt 0x64c06f8 <col:9, col:62>
|           `-BinaryOperator 0x64c06d0 <col:16, col:62> 'unsigned long' '/'
|             |-ParenExpr 0x64c0620 <col:16, col:43> 'unsigned long'
|             | `-BinaryOperator 0x64c05f8 <col:17, col:42> 'unsigned long' '-'
|             |   |-BinaryOperator 0x64c0598 <col:17, col:38> 'unsigned long' '+'
|             |   | |-ImplicitCastExpr 0x64c0568 <col:17> 'size_t':'unsigned long' <LValueToRValue>
|             |   | | `-DeclRefExpr 0x64c04c8 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x64bf0c0 '__n' 'size_t':'unsigned long'
|             |   | `-ImplicitCastExpr 0x64c0580 <col:23, col:38> 'unsigned long' <IntegralCast>
|             |   |   `-CXXFunctionalCastExpr 0x64c0540 <col:23, col:38> 'int' functional cast to int <NoOp>
|             |   |     `-ImplicitCastExpr 0x64c0528 <col:27> 'int' <IntegralCast>
|             |   |       `-DeclRefExpr 0x64c0500 <col:27> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|             |   `-ImplicitCastExpr 0x64c05e0 <col:42> 'unsigned long' <IntegralCast>
|             |     `-IntegerLiteral 0x64c05c0 <col:42> 'int' 1
|             `-ImplicitCastExpr 0x64c06b8 <col:47, col:62> 'unsigned long' <IntegralCast>
|               `-CXXFunctionalCastExpr 0x64c0690 <col:47, col:62> 'int' functional cast to int <NoOp>
|                 `-ImplicitCastExpr 0x64c0678 <col:51> 'int' <IntegralCast>
|                   `-DeclRefExpr 0x64c0650 <col:51> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|-NamespaceDecl 0x64c0770 prev 0x64ad730 <line:494:1, line:1130:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x64c07d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| `-ClassTemplatePartialSpecializationDecl 0x64c09e0 parent 0x6481070 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:517:1, line:1127:3> class vector definition
|   |-protected '_Bvector_base<_Alloc>'
|   |-TemplateArgument type '_Bool'
|   |-TemplateArgument type 'type-parameter-0-0'
|   |-TemplateTypeParmDecl 0x64c0810 <line:517:10, col:19> typename _Alloc
|   |-CXXRecordDecl 0x64c0dd0 <line:518:3, col:9> class vector
|   |-TypedefDecl 0x64c0f70 <line:520:5, col:38> _Base '_Bvector_base<_Alloc>'
|   |-AccessSpecDecl 0x64c0fc0 <line:526:3, col:9> public
|   |-TypedefDecl 0x64c1000 <line:527:5, col:58> value_type '_Bool'
|   |-TypedefDecl 0x64c1060 <line:528:5, col:58> size_type 'size_t':'unsigned long'
|   |-TypedefDecl 0x64c10c0 <line:529:5, col:58> difference_type 'ptrdiff_t':'long'
|   |-TypedefDecl 0x64c1120 <line:530:5, col:58> reference 'struct std::_Bit_reference'
|   |-TypedefDecl 0x64c1180 <line:531:5, col:58> const_reference '_Bool'
|   |-TypedefDecl 0x64c11e0 <line:532:5, col:58> pointer 'struct std::_Bit_reference *'
|   |-TypedefDecl 0x64c1240 <line:533:5, col:58> const_pointer 'const _Bool *'
|   |-TypedefDecl 0x64c12a0 <line:534:5, col:58> iterator 'struct std::_Bit_iterator'
|   |-TypedefDecl 0x64c1300 <line:535:5, col:58> const_iterator 'struct std::_Bit_const_iterator'
|   |-TypedefDecl 0x64c15d0 <line:536:5, col:58> const_reverse_iterator 'std::reverse_iterator<const_iterator>':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
|   |-TypedefDecl 0x64c1870 <line:537:5, col:58> reverse_iterator 'std::reverse_iterator<iterator>':'class std::reverse_iterator<struct std::_Bit_iterator>'
|   |-TypedefDecl 0x64c18d0 <line:538:5, col:46> allocator_type '_Alloc'
|   |-CXXMethodDecl 0x64c1990 <line:540:5, line:541:38> get_allocator 'allocator_type (void) const'
|   | `-CompoundStmt 0x64d2a68 <col:5, col:38>
|   |   `-ReturnStmt 0x64d2a48 <col:7, col:35>
|   |     `-CallExpr 0x64d2a20 <col:14, col:35> '<dependent type>'
|   |       `-CXXDependentScopeMemberExpr 0x64d29c8 <col:14, col:21> '<dependent type>' lvalue
|   |-AccessSpecDecl 0x64c1a30 <line:543:3, col:12> protected
|   |-UnresolvedUsingValueDecl 0x64c1ab0 <line:544:5, col:18> _Base::_M_allocate '<dependent type>'
|   |-UnresolvedUsingValueDecl 0x64c1b20 <line:545:5, col:18> _Base::_M_deallocate '<dependent type>'
|   |-UnresolvedUsingValueDecl 0x64c1b90 <line:546:5, col:18> _Base::_S_nword '<dependent type>'
|   |-UnresolvedUsingValueDecl 0x64c1c00 <line:547:5, col:18> _Base::_M_get_Bit_allocator '<dependent type>'
|   |-AccessSpecDecl 0x64c1c50 <line:549:3, col:9> public
|   |-CXXConstructorDecl 0x64c1cc0 <line:550:5, line:551:17> vector<_Bool, type-parameter-0-0> 'void (void)'
|   | |-CXXCtorInitializer '_Base':'_Bvector_base<_Alloc>'
|   | | |-ParenListExpr 0x64d2a88 <col:12, col:13> 'NULL TYPE'
|   | `-CompoundStmt 0x64d2af0 <col:15, col:17>
|   |-CXXConstructorDecl 0x64c1e80 <line:553:5, line:555:20> vector<_Bool, type-parameter-0-0> 'void (const allocator_type &)'
|   | |-ParmVarDecl 0x64c1dc0 <line:554:12, col:34> __a 'const allocator_type &'
|   | |-CXXCtorInitializer '_Base':'_Bvector_base<_Alloc>'
|   | | |-ParenListExpr 0x64d2b30 <line:555:12, col:16> 'NULL TYPE'
|   | | | `-DeclRefExpr 0x64d2b08 <col:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x64c1dc0 '__a' 'const allocator_type &'
|   | `-CompoundStmt 0x64d2ba0 <col:18, col:20>
|   |-CXXConstructorDecl 0x64c2180 <line:572:5, line:580:5> vector<_Bool, type-parameter-0-0> 'void (size_type, const _Bool &, const allocator_type &)'
|   | |-ParmVarDecl 0x64c1f70 <line:573:12, col:22> __n 'size_type':'unsigned long'
|   | |-ParmVarDecl 0x64c1fe0 <col:27, col:54> __value 'const _Bool &'
|   | | `-MaterializeTemporaryExpr 0x64d2828 <col:49, col:54> 'const _Bool' lvalue
|   | |   `-CXXScalarValueInitExpr 0x64d2808 <col:49, col:54> '_Bool'
|   | |-ParmVarDecl 0x64c2050 <line:574:5, col:48> __a 'const allocator_type &'
|   | | `-CXXUnresolvedConstructExpr 0x64d2858 <col:33, col:48> 'allocator_type':'_Alloc'
|   | |-CXXCtorInitializer '_Base':'_Bvector_base<_Alloc>'
|   | | |-ParenListExpr 0x64d2be0 <line:575:12, col:16> 'NULL TYPE'
|   | | | `-DeclRefExpr 0x64d2bb8 <col:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x64c2050 '__a' 'const allocator_type &'
|   | `-CompoundStmt 0x64d3068 <line:576:5, line:580:5>
|   |   |-CallExpr 0x64d2cc0 <line:577:7, col:24> '<dependent type>'
|   |   | |-MemberExpr 0x64d2c68 <col:7> '<bound member function type>' ->_M_initialize 0x64c69a0
|   |   | | `-CXXThisExpr 0x64d2c50 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-DeclRefExpr 0x64d2c98 <col:21> 'size_type':'unsigned long' lvalue ParmVar 0x64c1f70 '__n' 'size_type':'unsigned long'
|   |   `-CallExpr 0x64d3028 <line:578:7, line:579:19> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x64d2d10 <line:578:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
|   |     |-CXXDependentScopeMemberExpr 0x64d2e38 <col:17, col:40> '<dependent type>' lvalue
|   |     | `-CXXDependentScopeMemberExpr 0x64d2de0 <col:17, col:31> '<dependent type>' lvalue
|   |     |   `-CXXDependentScopeMemberExpr 0x64d2d88 <col:17, col:23> '<dependent type>' lvalue
|   |     |     `-CXXThisExpr 0x64d2d70 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-CXXDependentScopeMemberExpr 0x64d2f00 <col:46, col:60> '<dependent type>' lvalue
|   |     | `-CXXDependentScopeMemberExpr 0x64d2ea8 <col:46, col:52> '<dependent type>' lvalue
|   |     |   `-CXXThisExpr 0x64d2e90 <col:46> 'vector<_Bool, type-parameter-0-0> *' this
|   |     `-ConditionalOperator 0x64d2ff8 <line:579:3, col:18> 'int'
|   |       |-ImplicitCastExpr 0x64d2fe0 <col:3> '_Bool' <LValueToRValue>
|   |       | `-DeclRefExpr 0x64d2f58 <col:3> 'const _Bool' lvalue ParmVar 0x64c1fe0 '__value' 'const _Bool &'
|   |       |-UnaryOperator 0x64d2fa0 <col:13, col:14> 'int' prefix '~'
|   |       | `-IntegerLiteral 0x64d2f80 <col:14> 'int' 0
|   |       `-IntegerLiteral 0x64d2fc0 <col:18> 'int' 0
|   |-CXXConstructorDecl 0x64c2350 <line:583:5, line:588:5> vector<_Bool, type-parameter-0-0> 'void (const vector<_Bool, type-parameter-0-0> &)'
|   | |-ParmVarDecl 0x64c2290 <line:583:12, col:26> __x 'const vector<_Bool, type-parameter-0-0> &'
|   | |-CXXCtorInitializer '_Base':'_Bvector_base<_Alloc>'
|   | | |-ParenListExpr 0x64d3138 <line:584:12, col:39> 'NULL TYPE'
|   | | | `-CallExpr 0x64d3110 <col:13, col:38> '<dependent type>'
|   | | |   `-CXXDependentScopeMemberExpr 0x64d30b8 <col:13, col:17> '<dependent type>' lvalue
|   | | |     `-DeclRefExpr 0x64d3090 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c2290 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   | `-CompoundStmt 0x64d4928 <line:585:5, line:588:5>
|   |   |-CallExpr 0x64d32a0 <line:586:7, col:31> '<dependent type>'
|   |   | |-MemberExpr 0x64d31c8 <col:7> '<bound member function type>' ->_M_initialize 0x64c69a0
|   |   | | `-CXXThisExpr 0x64d31b0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CallExpr 0x64d3278 <col:21, col:30> '<dependent type>'
|   |   |   `-CXXDependentScopeMemberExpr 0x64d3220 <col:21, col:25> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x64d31f8 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c2290 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   `-CallExpr 0x64d48e8 <line:587:7, col:69> '<dependent type>'
|   |     |-MemberExpr 0x64d32e8 <col:7> '<bound member function type>' ->_M_copy_aligned 0x64c6850
|   |     | `-CXXThisExpr 0x64d32d0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-CallExpr 0x64d3398 <col:23, col:33> '<dependent type>'
|   |     | `-CXXDependentScopeMemberExpr 0x64d3340 <col:23, col:27> '<dependent type>' lvalue
|   |     |   `-DeclRefExpr 0x64d3318 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c2290 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |     |-CallExpr 0x64d3440 <col:36, col:44> '<dependent type>'
|   |     | `-CXXDependentScopeMemberExpr 0x64d33e8 <col:36, col:40> '<dependent type>' lvalue
|   |     |   `-DeclRefExpr 0x64d33c0 <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c2290 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |     `-CXXDependentScopeMemberExpr 0x64d4890 <col:47, col:61> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64d3480 <col:47, col:53> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64d3468 <col:47> 'vector<_Bool, type-parameter-0-0> *' this
|   |-FunctionTemplateDecl 0x64c2770 <line:611:5, line:618:7> vector<_Bool, type-parameter-0-0>
|   | |-TemplateTypeParmDecl 0x64c2410 <line:611:14, col:23> typename _InputIterator
|   | |-CXXConstructorDecl 0x64c26b0 <line:612:7, line:618:7> vector<_Bool, type-parameter-0-0> 'void (_InputIterator, _InputIterator, const allocator_type &)'
|   | | |-ParmVarDecl 0x64c24a0 <line:612:14, col:29> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64c2510 <col:38, col:53> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64c2580 <line:613:7, col:50> __a 'const allocator_type &'
|   | | | `-CXXUnresolvedConstructExpr 0x64d2890 <col:35, col:50> 'allocator_type':'_Alloc'
|   | | |-CXXCtorInitializer '_Base':'_Bvector_base<_Alloc>'
|   | | | |-ParenListExpr 0x64d4978 <line:614:14, col:18> 'NULL TYPE'
|   | | | | `-DeclRefExpr 0x64d4950 <col:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x64c2580 '__a' 'const allocator_type &'
|   | | `-CompoundStmt 0x64d4d58 <line:615:7, line:618:7>
|   | |   |-DeclStmt 0x64d4bc8 <line:616:2, col:70>
|   | |   | `-TypedefDecl 0x64d4b80 <col:2, col:61> _Integral 'typename std::__is_integer<_InputIterator>::__type'
|   | |   `-CallExpr 0x64d4d18 <line:617:2, col:53> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64d4bf8 <col:2> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64d4c68 <col:25> '_InputIterator' lvalue ParmVar 0x64c24a0 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64d4c90 <col:34> '_InputIterator' lvalue ParmVar 0x64c2510 '__last' '_InputIterator'
|   | |     `-CXXUnresolvedConstructExpr 0x64d4cf0 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
|   |-CXXDestructorDecl 0x64c2820 <line:621:5, col:35> ~vector<_Bool, type-parameter-0-0> 'void (void)'
|   | `-CompoundStmt 0x64d4d80 <col:33, col:35>
|   |-CXXMethodDecl 0x64c29d0 <line:623:5, line:636:5> operator= 'vector<_Bool, type-parameter-0-0> &(const vector<_Bool, type-parameter-0-0> &)'
|   | |-ParmVarDecl 0x64c28e0 <line:624:15, col:29> __x 'const vector<_Bool, type-parameter-0-0> &'
|   | `-CompoundStmt 0x64d56f8 <line:625:5, line:636:5>
|   |   |-IfStmt 0x64d4f18 <line:626:7, line:627:10>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64d4e78 <line:626:11, col:19> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64d4df8 <col:16> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
|   |   | | |-UnaryOperator 0x64d4dc0 <col:11, col:12> '<dependent type>' prefix '&'
|   |   | | | `-DeclRefExpr 0x64d4d98 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c28e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   | | `-CXXThisExpr 0x64d4de0 <col:19> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | |-ReturnStmt 0x64d4ef8 <line:627:2, col:10>
|   |   | | `-UnaryOperator 0x64d4ed8 <col:9, col:10> '<dependent type>' prefix '*'
|   |   | |   `-CXXThisExpr 0x64d4ec0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-<<<NULL>>>
|   |   |-IfStmt 0x64d52f8 <line:628:7, line:632:2>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64d50d0 <line:628:11, col:33> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64d5060 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
|   |   | | |-CallExpr 0x64d4fc8 <col:11, col:20> '<dependent type>'
|   |   | | | `-CXXDependentScopeMemberExpr 0x64d4f70 <col:11, col:15> '<dependent type>' lvalue
|   |   | | |   `-DeclRefExpr 0x64d4f48 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c28e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   | | `-CallExpr 0x64d5038 <col:24, col:33> '<dependent type>'
|   |   | |   `-MemberExpr 0x64d5008 <col:24> '<bound member function type>' ->capacity 0x64c3960
|   |   | |     `-CXXThisExpr 0x64d4ff0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | |-CompoundStmt 0x64d52d0 <line:629:2, line:632:2>
|   |   | | |-CallExpr 0x64d5188 <line:630:4, col:24> '<dependent type>'
|   |   | | | `-CXXDependentScopeMemberExpr 0x64d5130 <col:4, col:10> '<dependent type>' lvalue
|   |   | | |   `-CXXThisExpr 0x64d5118 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | | `-CallExpr 0x64d52a0 <line:631:4, col:28> '<dependent type>'
|   |   | |   |-MemberExpr 0x64d51c8 <col:4> '<bound member function type>' ->_M_initialize 0x64c69a0
|   |   | |   | `-CXXThisExpr 0x64d51b0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | |   `-CallExpr 0x64d5278 <col:18, col:27> '<dependent type>'
|   |   | |     `-CXXDependentScopeMemberExpr 0x64d5220 <col:18, col:22> '<dependent type>' lvalue
|   |   | |       `-DeclRefExpr 0x64d51f8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c28e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   | `-<<<NULL>>>
|   |   |-BinaryOperator 0x64d5678 <line:633:7, line:634:14> '<dependent type>' '='
|   |   | |-CXXDependentScopeMemberExpr 0x64d5398 <line:633:7, col:21> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64d5340 <col:7, col:13> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64d5328 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CallExpr 0x64d5638 <col:33, line:634:14> '<dependent type>'
|   |   |   |-MemberExpr 0x64d5408 <line:633:33> '<bound member function type>' ->_M_copy_aligned 0x64c6850
|   |   |   | `-CXXThisExpr 0x64d53f0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this
|   |   |   |-CallExpr 0x64d54b8 <col:49, col:59> '<dependent type>'
|   |   |   | `-CXXDependentScopeMemberExpr 0x64d5460 <col:49, col:53> '<dependent type>' lvalue
|   |   |   |   `-DeclRefExpr 0x64d5438 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c28e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   |   |-CallExpr 0x64d5560 <col:62, col:70> '<dependent type>'
|   |   |   | `-CXXDependentScopeMemberExpr 0x64d5508 <col:62, col:66> '<dependent type>' lvalue
|   |   |   |   `-DeclRefExpr 0x64d54e0 <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c28e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'
|   |   |   `-CallExpr 0x64d5610 <line:634:7, col:13> '<dependent type>'
|   |   |     `-UnresolvedMemberExpr 0x64d55a0 <col:7> '<bound member function type>' lvalue
|   |   `-ReturnStmt 0x64d56d8 <line:635:7, col:15>
|   |     `-UnaryOperator 0x64d56b8 <col:14, col:15> '<dependent type>' prefix '*'
|   |       `-CXXThisExpr 0x64d56a0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c2c50 <line:661:5, line:663:33> assign 'void (size_type, const _Bool &)'
|   | |-ParmVarDecl 0x64c2a90 <line:662:12, col:22> __n 'size_type':'unsigned long'
|   | |-ParmVarDecl 0x64c2b00 <col:27, col:39> __x 'const _Bool &'
|   | `-CompoundStmt 0x64d5800 <line:663:5, col:33>
|   |   `-CallExpr 0x64d57c8 <col:7, col:30> '<dependent type>'
|   |     |-MemberExpr 0x64d5748 <col:7> '<bound member function type>' ->_M_fill_assign 0x64cd100
|   |     | `-CXXThisExpr 0x64d5730 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-DeclRefExpr 0x64d5778 <col:22> 'size_type':'unsigned long' lvalue ParmVar 0x64c2a90 '__n' 'size_type':'unsigned long'
|   |     `-DeclRefExpr 0x64d57a0 <col:27> 'const _Bool' lvalue ParmVar 0x64c2b00 '__x' 'const _Bool &'
|   |-FunctionTemplateDecl 0x64c2f70 <line:672:5, line:678:7> assign
|   | |-TemplateTypeParmDecl 0x64c2d00 <line:672:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64c2ed0 <line:673:7, line:678:7> assign 'void (_InputIterator, _InputIterator)'
|   | | |-ParmVarDecl 0x64c2d90 <line:674:14, col:29> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64c2e00 <col:38, col:53> __last '_InputIterator'
|   | | `-CompoundStmt 0x64d5b68 <line:675:7, line:678:7>
|   | |   |-DeclStmt 0x64d59d8 <line:676:2, col:70>
|   | |   | `-TypedefDecl 0x64d5990 <col:2, col:61> _Integral 'typename std::__is_integer<_InputIterator>::__type'
|   | |   `-CallExpr 0x64d5b28 <line:677:2, col:49> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64d5a08 <col:2> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64d5a78 <col:21> '_InputIterator' lvalue ParmVar 0x64c2d90 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64d5aa0 <col:30> '_InputIterator' lvalue ParmVar 0x64c2e00 '__last' '_InputIterator'
|   | |     `-CXXUnresolvedConstructExpr 0x64d5b00 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
|   |-CXXMethodDecl 0x64c3050 <line:687:5, line:689:38> begin 'iterator (void)'
|   | `-CompoundStmt 0x64d5c78 <col:5, col:38>
|   |   `-ReturnStmt 0x64d5c58 <col:7, col:28>
|   |     `-CXXDependentScopeMemberExpr 0x64d5c00 <col:14, col:28> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64d5ba8 <col:14, col:20> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64d5b90 <col:14> 'vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c3170 <line:691:5, line:693:38> begin 'const_iterator (void) const'
|   | `-CompoundStmt 0x64d5d80 <col:5, col:38>
|   |   `-ReturnStmt 0x64d5d60 <col:7, col:28>
|   |     `-CXXDependentScopeMemberExpr 0x64d5d08 <col:14, col:28> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64d5cb0 <col:14, col:20> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64d5c98 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c3230 <line:695:5, line:697:39> end 'iterator (void)'
|   | `-CompoundStmt 0x64d5e88 <col:5, col:39>
|   |   `-ReturnStmt 0x64d5e68 <col:7, col:28>
|   |     `-CXXDependentScopeMemberExpr 0x64d5e10 <col:14, col:28> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64d5db8 <col:14, col:20> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64d5da0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c32f0 <line:699:5, line:701:39> end 'const_iterator (void) const'
|   | `-CompoundStmt 0x64d5f90 <col:5, col:39>
|   |   `-ReturnStmt 0x64d5f70 <col:7, col:28>
|   |     `-CXXDependentScopeMemberExpr 0x64d5f18 <col:14, col:28> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64d5ec0 <col:14, col:20> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64d5ea8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c3430 <line:703:5, line:705:39> rbegin 'reverse_iterator (void)'
|   | `-CompoundStmt 0x64dac10 <col:5, col:39>
|   |   `-ReturnStmt 0x64dabf0 <col:7, col:36>
|   |     `-CXXConstructExpr 0x64dabb8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>' 'void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
|   |       `-MaterializeTemporaryExpr 0x64dab98 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
|   |         `-ImplicitCastExpr 0x64dab80 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
|   |           `-CXXUnresolvedConstructExpr 0x64da818 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
|   |             `-CallExpr 0x64da7f0 <col:31, col:35> '<dependent type>'
|   |               `-UnresolvedMemberExpr 0x64da780 <col:31> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c3570 <line:707:5, line:709:45> rbegin 'const_reverse_iterator (void) const'
|   | `-CompoundStmt 0x64e0130 <col:5, col:45>
|   |   `-ReturnStmt 0x64e0110 <col:7, col:42>
|   |     `-CXXConstructExpr 0x64e00d8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>' 'void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
|   |       `-MaterializeTemporaryExpr 0x64e00b8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
|   |         `-ImplicitCastExpr 0x64e00a0 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
|   |           `-CXXUnresolvedConstructExpr 0x64dfd38 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
|   |             `-CallExpr 0x64dfd10 <col:37, col:41> '<dependent type>'
|   |               `-UnresolvedMemberExpr 0x64dfca0 <col:37> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c3630 <line:711:5, line:713:41> rend 'reverse_iterator (void)'
|   | `-CompoundStmt 0x64e0340 <col:5, col:41>
|   |   `-ReturnStmt 0x64e0320 <col:7, col:38>
|   |     `-CXXConstructExpr 0x64e02e8 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>' 'void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
|   |       `-MaterializeTemporaryExpr 0x64e02c8 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
|   |         `-ImplicitCastExpr 0x64e02b0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
|   |           `-CXXUnresolvedConstructExpr 0x64e0210 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
|   |             `-CallExpr 0x64e01e8 <col:31, col:37> '<dependent type>'
|   |               `-UnresolvedMemberExpr 0x64e0178 <col:31> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c36f0 <line:715:5, line:717:47> rend 'const_reverse_iterator (void) const'
|   | `-CompoundStmt 0x64e0550 <col:5, col:47>
|   |   `-ReturnStmt 0x64e0530 <col:7, col:44>
|   |     `-CXXConstructExpr 0x64e04f8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>' 'void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
|   |       `-MaterializeTemporaryExpr 0x64e04d8 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
|   |         `-ImplicitCastExpr 0x64e04c0 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
|   |           `-CXXUnresolvedConstructExpr 0x64e0420 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
|   |             `-CallExpr 0x64e03f8 <col:37, col:43> '<dependent type>'
|   |               `-UnresolvedMemberExpr 0x64e0388 <col:37> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c37e0 <line:737:5, line:739:42> size 'size_type (void) const'
|   | `-CompoundStmt 0x64e07e0 <col:5, col:42>
|   |   `-ReturnStmt 0x64e07c0 <col:7, col:39>
|   |     `-CXXUnresolvedConstructExpr 0x64e0790 <col:14, col:39> 'size_type':'unsigned long'
|   |       `-CXXOperatorCallExpr 0x64e0748 <col:24, col:38> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x64e06e0 <col:30> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |         |-CallExpr 0x64e0608 <col:24, col:28> '<dependent type>'
|   |         | `-UnresolvedMemberExpr 0x64e0598 <col:24> '<bound member function type>' lvalue
|   |         `-CallExpr 0x64e06b8 <col:32, col:38> '<dependent type>'
|   |           `-UnresolvedMemberExpr 0x64e0648 <col:32> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c38a0 <line:741:5, line:750:5> max_size 'size_type (void) const'
|   | `-CompoundStmt 0x64e33c8 <line:743:5, line:750:5>
|   |   |-DeclStmt 0x64e2f18 <line:744:7, line:746:24>
|   |   | `-VarDecl 0x64e0810 <line:744:7, line:746:23> __isize 'const size_type':'const unsigned long'
|   |   |   `-ImplicitCastExpr 0x64e2f00 <line:745:2, line:746:23> 'const size_type':'const unsigned long' <IntegralCast>
|   |   |     `-BinaryOperator 0x64e2ed8 <line:745:2, line:746:23> 'long' '+'
|   |   |       |-BinaryOperator 0x64e2e78 <line:745:2, line:746:19> 'long' '-'
|   |   |       | |-ImplicitCastExpr 0x64e2e48 <line:745:2, col:48> 'long':'long' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x64e2d98 <col:2, col:48> 'const long':'const long' lvalue Var 0x64e1890 '__max' 'const long':'const long'
|   |   |       | `-ImplicitCastExpr 0x64e2e60 <line:746:4, col:19> 'long' <IntegralCast>
|   |   |       |   `-CXXFunctionalCastExpr 0x64e2e20 <col:4, col:19> 'int' functional cast to int <NoOp>
|   |   |       |     `-ImplicitCastExpr 0x64e2e08 <col:8> 'int' <IntegralCast>
|   |   |       |       `-DeclRefExpr 0x64e2de0 <col:8> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |   |       `-ImplicitCastExpr 0x64e2ec0 <col:23> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x64e2ea0 <col:23> 'int' 1
|   |   |-DeclStmt 0x64e30a8 <line:747:7, col:66>
|   |   | `-VarDecl 0x64e2f40 <col:7, col:65> __asize 'const size_type':'const unsigned long'
|   |   |   `-CallExpr 0x64e3080 <col:33, col:65> '<dependent type>'
|   |   |     `-CXXDependentScopeMemberExpr 0x64e3028 <col:33, col:56> '<dependent type>' lvalue
|   |   |       `-CallExpr 0x64e3000 <col:33, col:54> '<dependent type>'
|   |   |         `-UnresolvedMemberExpr 0x64e2f98 <col:33> '<dependent type>' lvalue
|   |   `-ReturnStmt 0x64e33a8 <line:748:7, line:749:46>
|   |     `-ParenExpr 0x64e3388 <line:748:14, line:749:46> 'unsigned long'
|   |       `-ConditionalOperator 0x64e3358 <line:748:15, line:749:39> 'unsigned long'
|   |         |-BinaryOperator 0x64e31f8 <line:748:15, col:51> '_Bool' '<='
|   |         | |-ImplicitCastExpr 0x64e31e0 <col:15> 'size_type':'unsigned long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x64e30c0 <col:15> 'const size_type':'const unsigned long' lvalue Var 0x64e2f40 '__asize' 'const size_type':'const unsigned long'
|   |         | `-BinaryOperator 0x64e31b8 <col:26, col:51> 'unsigned long' '/'
|   |         |   |-ImplicitCastExpr 0x64e3188 <col:26> 'size_type':'unsigned long' <LValueToRValue>
|   |         |   | `-DeclRefExpr 0x64e30e8 <col:26> 'const size_type':'const unsigned long' lvalue Var 0x64e0810 '__isize' 'const size_type':'const unsigned long'
|   |         |   `-ImplicitCastExpr 0x64e31a0 <col:36, col:51> 'unsigned long' <IntegralCast>
|   |         |     `-CXXFunctionalCastExpr 0x64e3160 <col:36, col:51> 'int' functional cast to int <NoOp>
|   |         |       `-ImplicitCastExpr 0x64e3148 <col:40> 'int' <IntegralCast>
|   |         |         `-DeclRefExpr 0x64e3120 <col:40> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |         |-BinaryOperator 0x64e32f0 <line:749:10, col:35> 'unsigned long' '*'
|   |         | |-ImplicitCastExpr 0x64e32c0 <col:10> 'size_type':'unsigned long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x64e3220 <col:10> 'const size_type':'const unsigned long' lvalue Var 0x64e2f40 '__asize' 'const size_type':'const unsigned long'
|   |         | `-ImplicitCastExpr 0x64e32d8 <col:20, col:35> 'unsigned long' <IntegralCast>
|   |         |   `-CXXFunctionalCastExpr 0x64e3298 <col:20, col:35> 'int' functional cast to int <NoOp>
|   |         |     `-ImplicitCastExpr 0x64e3280 <col:24> 'int' <IntegralCast>
|   |         |       `-DeclRefExpr 0x64e3258 <col:24> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |         `-ImplicitCastExpr 0x64e3340 <col:39> 'size_type':'unsigned long' <LValueToRValue>
|   |           `-DeclRefExpr 0x64e3318 <col:39> 'const size_type':'const unsigned long' lvalue Var 0x64e0810 '__isize' 'const size_type':'const unsigned long'
|   |-CXXMethodDecl 0x64c3960 <line:752:5, line:755:22> capacity 'size_type (void) const'
|   | `-CompoundStmt 0x64e36e8 <line:754:5, line:755:22>
|   |   `-ReturnStmt 0x64e36c8 <line:754:7, line:755:19>
|   |     `-CXXUnresolvedConstructExpr 0x64e3698 <line:754:14, line:755:19> 'size_type':'unsigned long'
|   |       `-CXXOperatorCallExpr 0x64e3650 <line:754:24, line:755:18> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x64e35e8 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |         |-CXXUnresolvedConstructExpr 0x64e3500 <line:754:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
|   |         | |-CXXDependentScopeMemberExpr 0x64e3488 <col:39, col:53> '<dependent type>' lvalue
|   |         | | `-CXXDependentScopeMemberExpr 0x64e3430 <col:39, col:45> '<dependent type>' lvalue
|   |         | |   `-CXXThisExpr 0x64e3418 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this
|   |         | `-IntegerLiteral 0x64e34e0 <col:72> 'int' 0
|   |         `-CallExpr 0x64e35c0 <line:755:12, col:18> '<dependent type>'
|   |           `-UnresolvedMemberExpr 0x64e3550 <col:12> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c3a20 <line:757:5, line:759:32> empty '_Bool (void) const'
|   | `-CompoundStmt 0x64e3950 <col:5, col:32>
|   |   `-ReturnStmt 0x64e3930 <col:7, col:29>
|   |     `-CXXOperatorCallExpr 0x64e38e8 <col:14, col:29> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x64e3868 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
|   |       |-CallExpr 0x64e3790 <col:14, col:20> '<dependent type>'
|   |       | `-UnresolvedMemberExpr 0x64e3720 <col:14> '<bound member function type>' lvalue
|   |       `-CallExpr 0x64e3840 <col:25, col:29> '<dependent type>'
|   |         `-UnresolvedMemberExpr 0x64e37d0 <col:25> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c3bf0 <line:761:5, line:766:5> operator[] 'reference (size_type)'
|   | |-ParmVarDecl 0x64c3af0 <line:762:16, col:26> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e3ea0 <line:763:5, line:766:5>
|   |   `-ReturnStmt 0x64e3e80 <line:764:7, line:765:58>
|   |     `-CXXConstructExpr 0x64e3e48 <line:764:14, line:765:58> 'reference':'struct std::_Bit_reference' 'void (const struct std::_Bit_reference &) throw()' elidable
|   |       `-MaterializeTemporaryExpr 0x64e3e28 <line:764:14, line:765:58> 'const struct std::_Bit_reference' lvalue
|   |         `-ImplicitCastExpr 0x64e3e10 <line:764:14, line:765:58> 'const struct std::_Bit_reference' <NoOp>
|   |           `-CXXOperatorCallExpr 0x64e3dd0 <line:764:14, line:765:58> 'reference':'struct std::_Bit_reference'
|   |             |-ImplicitCastExpr 0x64e3db8 <line:764:14> 'reference (*)(void) const' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x64e3d90 <col:14> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
|   |             `-ImplicitCastExpr 0x64e3d78 <col:15, line:765:58> 'const struct std::_Bit_iterator' <NoOp>
|   |               `-CXXUnresolvedConstructExpr 0x64e3d40 <line:764:15, line:765:58> 'iterator':'struct std::_Bit_iterator'
|   |                 |-CXXOperatorCallExpr 0x64e3c00 <line:764:24, line:765:33> '<dependent type>'
|   |                 | |-UnresolvedLookupExpr 0x64e3b98 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |                 | |-CXXDependentScopeMemberExpr 0x64e3a48 <line:764:24, col:47> '<dependent type>' lvalue
|   |                 | | `-CXXDependentScopeMemberExpr 0x64e39f0 <col:24, col:38> '<dependent type>' lvalue
|   |                 | |   `-CXXDependentScopeMemberExpr 0x64e3998 <col:24, col:30> '<dependent type>' lvalue
|   |                 | |     `-CXXThisExpr 0x64e3980 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
|   |                 | `-BinaryOperator 0x64e3b70 <line:765:12, col:33> 'unsigned long' '/'
|   |                 |   |-ImplicitCastExpr 0x64e3b40 <col:12> 'size_type':'unsigned long' <LValueToRValue>
|   |                 |   | `-DeclRefExpr 0x64e3aa0 <col:12> 'size_type':'unsigned long' lvalue ParmVar 0x64c3af0 '__n' 'size_type':'unsigned long'
|   |                 |   `-ImplicitCastExpr 0x64e3b58 <col:18, col:33> 'unsigned long' <IntegralCast>
|   |                 |     `-CXXFunctionalCastExpr 0x64e3b18 <col:18, col:33> 'int' functional cast to int <NoOp>
|   |                 |       `-ImplicitCastExpr 0x64e3b00 <col:22> 'int' <IntegralCast>
|   |                 |         `-DeclRefExpr 0x64e3ad8 <col:22> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |                 `-BinaryOperator 0x64e3d18 <col:36, col:57> 'unsigned long' '%'
|   |                   |-ImplicitCastExpr 0x64e3ce8 <col:36> 'size_type':'unsigned long' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x64e3c48 <col:36> 'size_type':'unsigned long' lvalue ParmVar 0x64c3af0 '__n' 'size_type':'unsigned long'
|   |                   `-ImplicitCastExpr 0x64e3d00 <col:42, col:57> 'unsigned long' <IntegralCast>
|   |                     `-CXXFunctionalCastExpr 0x64e3cc0 <col:42, col:57> 'int' functional cast to int <NoOp>
|   |                       `-ImplicitCastExpr 0x64e3ca8 <col:46> 'int' <IntegralCast>
|   |                         `-DeclRefExpr 0x64e3c80 <col:46> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |-CXXMethodDecl 0x64c3dd0 <line:768:5, line:773:5> operator[] 'const_reference (size_type) const'
|   | |-ParmVarDecl 0x64c3cd0 <line:769:16, col:26> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e4380 <line:770:5, line:773:5>
|   |   `-ReturnStmt 0x64e4360 <line:771:7, line:772:57>
|   |     `-CXXOperatorCallExpr 0x64e4320 <line:771:14, line:772:57> 'const_reference':'_Bool'
|   |       |-ImplicitCastExpr 0x64e4308 <line:771:14> 'const_reference (*)(void) const' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x64e42e0 <col:14> 'const_reference (void) const' lvalue CXXMethod 0x64b88d0 'operator*' 'const_reference (void) const'
|   |       `-ImplicitCastExpr 0x64e42c8 <col:15, line:772:57> 'const struct std::_Bit_const_iterator' <NoOp>
|   |         `-CXXUnresolvedConstructExpr 0x64e4290 <line:771:15, line:772:57> 'const_iterator':'struct std::_Bit_const_iterator'
|   |           |-CXXOperatorCallExpr 0x64e4150 <line:771:30, line:772:32> '<dependent type>'
|   |           | |-UnresolvedLookupExpr 0x64e40e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |           | |-CXXDependentScopeMemberExpr 0x64e3f98 <line:771:30, col:53> '<dependent type>' lvalue
|   |           | | `-CXXDependentScopeMemberExpr 0x64e3f40 <col:30, col:44> '<dependent type>' lvalue
|   |           | |   `-CXXDependentScopeMemberExpr 0x64e3ee8 <col:30, col:36> '<dependent type>' lvalue
|   |           | |     `-CXXThisExpr 0x64e3ed0 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this
|   |           | `-BinaryOperator 0x64e40c0 <line:772:11, col:32> 'unsigned long' '/'
|   |           |   |-ImplicitCastExpr 0x64e4090 <col:11> 'size_type':'unsigned long' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x64e3ff0 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x64c3cd0 '__n' 'size_type':'unsigned long'
|   |           |   `-ImplicitCastExpr 0x64e40a8 <col:17, col:32> 'unsigned long' <IntegralCast>
|   |           |     `-CXXFunctionalCastExpr 0x64e4068 <col:17, col:32> 'int' functional cast to int <NoOp>
|   |           |       `-ImplicitCastExpr 0x64e4050 <col:21> 'int' <IntegralCast>
|   |           |         `-DeclRefExpr 0x64e4028 <col:21> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |           `-BinaryOperator 0x64e4268 <col:35, col:56> 'unsigned long' '%'
|   |             |-ImplicitCastExpr 0x64e4238 <col:35> 'size_type':'unsigned long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x64e4198 <col:35> 'size_type':'unsigned long' lvalue ParmVar 0x64c3cd0 '__n' 'size_type':'unsigned long'
|   |             `-ImplicitCastExpr 0x64e4250 <col:41, col:56> 'unsigned long' <IntegralCast>
|   |               `-CXXFunctionalCastExpr 0x64e4210 <col:41, col:56> 'int' functional cast to int <NoOp>
|   |                 `-ImplicitCastExpr 0x64e41f8 <col:45> 'int' <IntegralCast>
|   |                   `-DeclRefExpr 0x64e41d0 <col:45> 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>' EnumConstant 0x64ad9e0 '_S_word_bit' 'enum std::<anonymous at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:68:3>'
|   |-AccessSpecDecl 0x64c3e80 <line:775:3, col:12> protected
|   |-CXXMethodDecl 0x64c3f80 <line:776:5, line:781:5> _M_range_check 'void (size_type) const'
|   | |-ParmVarDecl 0x64c3ec0 <line:777:20, col:30> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e4ca0 <line:778:5, line:781:5>
|   |   `-IfStmt 0x64e4c70 <line:779:7, line:780:65>
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64e44d0 <line:779:11, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64e4460 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630 0x64acd30
|   |     | |-DeclRefExpr 0x64e43a0 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x64c3ec0 '__n' 'size_type':'unsigned long'
|   |     | `-CallExpr 0x64e4438 <col:18, col:29> '<dependent type>'
|   |     |   `-CXXDependentScopeMemberExpr 0x64e43e0 <col:18, col:24> '<dependent type>' lvalue
|   |     |     `-CXXThisExpr 0x64e43c8 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this
|   |     |-CallExpr 0x64e4690 <line:780:9, col:65> 'void'
|   |     | |-ImplicitCastExpr 0x64e4678 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x64e4650 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a180 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'
|   |     | `-ImplicitCastExpr 0x64e46c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <ArrayToPointerDecay>
|   |     |   `-ParenExpr 0x64e4630 <col:24, col:30> 'const char [29]' lvalue
|   |     |     `-StringLiteral 0x64e45e8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:780:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"
|   |     `-<<<NULL>>>
|   |-AccessSpecDecl 0x64c4030 <line:783:3, col:9> public
|   |-CXXMethodDecl 0x64c40f0 <line:784:5, line:786:49> at 'reference (size_type)'
|   | |-ParmVarDecl 0x64c4070 <line:785:8, col:18> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e4e28 <line:786:5, col:49>
|   |   |-CallExpr 0x64e4d30 <col:7, col:25> '<dependent type>'
|   |   | |-MemberExpr 0x64e4cd8 <col:7> '<bound member function type>' ->_M_range_check 0x64c3f80
|   |   | | `-CXXThisExpr 0x64e4cc0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-DeclRefExpr 0x64e4d08 <col:22> 'size_type':'unsigned long' lvalue ParmVar 0x64c4070 '__n' 'size_type':'unsigned long'
|   |   `-ReturnStmt 0x64e4e08 <col:28, col:46>
|   |     `-ArraySubscriptExpr 0x64e4de0 <col:35, col:46> '<dependent type>' lvalue
|   |       |-ParenExpr 0x64e4d98 <col:35, col:41> '<dependent type>'
|   |       | `-UnaryOperator 0x64e4d78 <col:36, col:37> '<dependent type>' prefix '*'
|   |       |   `-CXXThisExpr 0x64e4d60 <col:37> 'vector<_Bool, type-parameter-0-0> *' this
|   |       `-DeclRefExpr 0x64e4db8 <col:43> 'size_type':'unsigned long' lvalue ParmVar 0x64c4070 '__n' 'size_type':'unsigned long'
|   |-CXXMethodDecl 0x64c4230 <line:788:5, line:790:49> at 'const_reference (size_type) const'
|   | |-ParmVarDecl 0x64c41b0 <line:789:8, col:18> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e4fb8 <line:790:5, col:49>
|   |   |-CallExpr 0x64e4ec0 <col:7, col:25> '<dependent type>'
|   |   | |-MemberExpr 0x64e4e68 <col:7> '<bound member function type>' ->_M_range_check 0x64c3f80
|   |   | | `-CXXThisExpr 0x64e4e50 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this
|   |   | `-DeclRefExpr 0x64e4e98 <col:22> 'size_type':'unsigned long' lvalue ParmVar 0x64c41b0 '__n' 'size_type':'unsigned long'
|   |   `-ReturnStmt 0x64e4f98 <col:28, col:46>
|   |     `-ArraySubscriptExpr 0x64e4f70 <col:35, col:46> '<dependent type>' lvalue
|   |       |-ParenExpr 0x64e4f28 <col:35, col:41> '<dependent type>'
|   |       | `-UnaryOperator 0x64e4f08 <col:36, col:37> '<dependent type>' prefix '*'
|   |       |   `-CXXThisExpr 0x64e4ef0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this
|   |       `-DeclRefExpr 0x64e4f48 <col:43> 'size_type':'unsigned long' lvalue ParmVar 0x64c41b0 '__n' 'size_type':'unsigned long'
|   |-CXXMethodDecl 0x64c43b0 <line:792:5, line:799:5> reserve 'void (size_type)'
|   | |-ParmVarDecl 0x64c42f0 <line:793:13, col:23> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64e5538 <line:794:5, line:799:5>
|   |   |-IfStmt 0x64e52e8 <line:795:7, line:796:45>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64e50e8 <line:795:11, col:26> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64e5078 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
|   |   | | |-DeclRefExpr 0x64e4fe0 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x64c42f0 '__n' 'size_type':'unsigned long'
|   |   | | `-CallExpr 0x64e5050 <col:17, col:26> '<dependent type>'
|   |   | |   `-MemberExpr 0x64e5020 <col:17> '<bound member function type>' ->max_size 0x64c38a0
|   |   | |     `-CXXThisExpr 0x64e5008 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | |-CallExpr 0x64e52a0 <line:796:2, col:45> 'void'
|   |   | | |-ImplicitCastExpr 0x64e5288 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x64e5260 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a040 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
|   |   | | `-ImplicitCastExpr 0x64e52d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <ArrayToPointerDecay>
|   |   | |   `-ParenExpr 0x64e5240 <col:24, col:30> 'const char [16]' lvalue
|   |   | |     `-StringLiteral 0x64e5208 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:796:27> 'const char [16]' lvalue "vector::reserve"
|   |   | `-<<<NULL>>>
|   |   `-IfStmt 0x64e5508 <line:797:7, line:798:19>
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64e5420 <line:797:11, col:24> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64e53b0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
|   |     | |-CallExpr 0x64e5360 <col:11, col:20> '<dependent type>'
|   |     | | `-MemberExpr 0x64e5330 <col:11> '<bound member function type>' ->capacity 0x64c3960
|   |     | |   `-CXXThisExpr 0x64e5318 <col:11> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | `-DeclRefExpr 0x64e5388 <col:24> 'size_type':'unsigned long' lvalue ParmVar 0x64c42f0 '__n' 'size_type':'unsigned long'
|   |     |-CallExpr 0x64e54d8 <line:798:2, col:19> '<dependent type>'
|   |     | |-MemberExpr 0x64e5480 <col:2> '<bound member function type>' ->_M_reallocate 0x64c6ae0
|   |     | | `-CXXThisExpr 0x64e5468 <col:2> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | `-DeclRefExpr 0x64e54b0 <col:16> 'size_type':'unsigned long' lvalue ParmVar 0x64c42f0 '__n' 'size_type':'unsigned long'
|   |     `-<<<NULL>>>
|   |-CXXMethodDecl 0x64c44e0 <line:801:5, line:803:24> front 'reference (void)'
|   | `-CompoundStmt 0x64e5650 <col:5, col:24>
|   |   `-ReturnStmt 0x64e5630 <col:7, col:21>
|   |     `-UnaryOperator 0x64e5610 <col:14, col:21> '<dependent type>' prefix '*'
|   |       `-CallExpr 0x64e55e8 <col:15, col:21> '<dependent type>'
|   |         `-UnresolvedMemberExpr 0x64e5578 <col:15> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c45d0 <line:805:5, line:807:24> front 'const_reference (void) const'
|   | `-CompoundStmt 0x64e5760 <col:5, col:24>
|   |   `-ReturnStmt 0x64e5740 <col:7, col:21>
|   |     `-UnaryOperator 0x64e5720 <col:14, col:21> '<dependent type>' prefix '*'
|   |       `-CallExpr 0x64e56f8 <col:15, col:21> '<dependent type>'
|   |         `-UnresolvedMemberExpr 0x64e5688 <col:15> '<bound member function type>' lvalue
|   |-CXXMethodDecl 0x64c4690 <line:809:5, line:811:28> back 'reference (void)'
|   | `-CompoundStmt 0x64e5960 <col:5, col:28>
|   |   `-ReturnStmt 0x64e5940 <col:7, col:25>
|   |     `-UnaryOperator 0x64e5920 <col:14, col:25> '<dependent type>' prefix '*'
|   |       `-ParenExpr 0x64e5900 <col:15, col:25> '<dependent type>'
|   |         `-CXXOperatorCallExpr 0x64e58b8 <col:16, col:24> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x64e5850 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |           |-CallExpr 0x64e5808 <col:16, col:20> '<dependent type>'
|   |           | `-UnresolvedMemberExpr 0x64e5798 <col:16> '<bound member function type>' lvalue
|   |           `-IntegerLiteral 0x64e5830 <col:24> 'int' 1
|   |-CXXMethodDecl 0x64c4750 <line:813:5, line:815:28> back 'const_reference (void) const'
|   | `-CompoundStmt 0x64e5b60 <col:5, col:28>
|   |   `-ReturnStmt 0x64e5b40 <col:7, col:25>
|   |     `-UnaryOperator 0x64e5b20 <col:14, col:25> '<dependent type>' prefix '*'
|   |       `-ParenExpr 0x64e5b00 <col:15, col:25> '<dependent type>'
|   |         `-CXXOperatorCallExpr 0x64e5ab8 <col:16, col:24> '<dependent type>'
|   |           |-UnresolvedLookupExpr 0x64e5a50 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |           |-CallExpr 0x64e5a08 <col:16, col:20> '<dependent type>'
|   |           | `-UnresolvedMemberExpr 0x64e5998 <col:16> '<bound member function type>' lvalue
|   |           `-IntegerLiteral 0x64e5a30 <col:24> 'int' 1
|   |-CXXMethodDecl 0x64c4810 <line:822:5, line:823:32> data 'void (void)'
|   | `-CompoundStmt 0x64e5b80 <col:30, col:32>
|   |-CXXMethodDecl 0x64c4980 <line:825:5, line:832:5> push_back 'void (_Bool)'
|   | |-ParmVarDecl 0x64c48c0 <line:826:15, col:20> __x '_Bool'
|   | `-CompoundStmt 0x64e6148 <line:827:5, line:832:5>
|   |   `-IfStmt 0x64e6118 <line:828:7, line:831:33>
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64e5e00 <line:828:11, col:57> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64e5d80 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   |     | |-CXXDependentScopeMemberExpr 0x64e5c60 <col:11, col:35> '<dependent type>' lvalue
|   |     | | `-CXXDependentScopeMemberExpr 0x64e5c08 <col:11, col:25> '<dependent type>' lvalue
|   |     | |   `-CXXDependentScopeMemberExpr 0x64e5bb0 <col:11, col:17> '<dependent type>' lvalue
|   |     | |     `-CXXThisExpr 0x64e5b98 <col:11> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | `-CXXDependentScopeMemberExpr 0x64e5d28 <col:43, col:57> '<dependent type>' lvalue
|   |     |   `-CXXDependentScopeMemberExpr 0x64e5cd0 <col:43, col:49> '<dependent type>' lvalue
|   |     |     `-CXXThisExpr 0x64e5cb8 <col:43> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-BinaryOperator 0x64e5f98 <line:829:9, col:38> '<dependent type>' '='
|   |     | |-UnaryOperator 0x64e5f50 <col:9, col:33> '<dependent type>' prefix '*'
|   |     | | `-UnaryOperator 0x64e5f30 <col:10, col:33> '<dependent type>' postfix '++'
|   |     | |   `-CXXDependentScopeMemberExpr 0x64e5eb8 <col:10, col:24> '<dependent type>' lvalue
|   |     | |     `-CXXDependentScopeMemberExpr 0x64e5e60 <col:10, col:16> '<dependent type>' lvalue
|   |     | |       `-CXXThisExpr 0x64e5e48 <col:10> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | `-DeclRefExpr 0x64e5f70 <col:38> '_Bool' lvalue ParmVar 0x64c48c0 '__x' '_Bool'
|   |     `-CallExpr 0x64e60e0 <line:831:9, col:33> '<dependent type>'
|   |       |-MemberExpr 0x64e5fd8 <col:9> '<bound member function type>' ->_M_insert_aux 0x64d2390
|   |       | `-CXXThisExpr 0x64e5fc0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   |       |-CallExpr 0x64e6090 <col:23, col:27> '<dependent type>'
|   |       | `-UnresolvedMemberExpr 0x64e6020 <col:23> '<bound member function type>' lvalue
|   |       `-DeclRefExpr 0x64e60b8 <col:30> '_Bool' lvalue ParmVar 0x64c48c0 '__x' '_Bool'
|   |-CXXMethodDecl 0x64c51d0 <line:834:5, line:846:5> swap 'void (vector<_Bool, type-parameter-0-0> &)'
|   | |-ParmVarDecl 0x64c4a40 <line:835:10, col:18> __x 'vector<_Bool, type-parameter-0-0> &'
|   | `-CompoundStmt 0x64e6fd0 <line:836:5, line:846:5>
|   |   |-CallExpr 0x64e6390 <line:837:7, col:61> '<dependent type>'
|   |   | |-UnresolvedLookupExpr 0x64e6188 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0 0x64ad5b0
|   |   | |-CXXDependentScopeMemberExpr 0x64e6260 <col:17, col:31> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64e6208 <col:17, col:23> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64e61f0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CXXDependentScopeMemberExpr 0x64e6338 <col:41, col:53> '<dependent type>' lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x64e62e0 <col:41, col:45> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x64e62b8 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c4a40 '__x' 'vector<_Bool, type-parameter-0-0> &'
|   |   |-CallExpr 0x64e65f0 <line:838:7, col:63> '<dependent type>'
|   |   | |-UnresolvedLookupExpr 0x64e63e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0 0x64ad5b0
|   |   | |-CXXDependentScopeMemberExpr 0x64e64c0 <col:17, col:31> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64e6468 <col:17, col:23> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64e6450 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CXXDependentScopeMemberExpr 0x64e6598 <col:42, col:54> '<dependent type>' lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x64e6540 <col:42, col:46> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x64e6518 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c4a40 '__x' 'vector<_Bool, type-parameter-0-0> &'
|   |   |-CallExpr 0x64e6850 <line:839:7, line:840:32> '<dependent type>'
|   |   | |-UnresolvedLookupExpr 0x64e6648 <line:839:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'swap' 0x63bc770 0x634ceb0 0x64ad5b0
|   |   | |-CXXDependentScopeMemberExpr 0x64e6720 <col:17, col:31> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64e66c8 <col:17, col:23> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64e66b0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CXXDependentScopeMemberExpr 0x64e67f8 <line:840:3, col:15> '<dependent type>' lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x64e67a0 <col:3, col:7> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x64e6778 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c4a40 '__x' 'vector<_Bool, type-parameter-0-0> &'
|   |   `-CallExpr 0x64e6f98 <line:844:7, line:845:61> '<dependent type>'
|   |     |-CXXDependentScopeMemberExpr 0x64e6b78 <line:844:7, line:845:2> '<dependent type>' lvalue
|   |     |-CallExpr 0x64e6c38 <col:11, col:32> '<dependent type>'
|   |     | `-UnresolvedMemberExpr 0x64e6bd0 <col:11> '<dependent type>' lvalue
|   |     `-CallExpr 0x64e6f70 <col:35, col:60> '<dependent type>'
|   |       `-CXXDependentScopeMemberExpr 0x64e6f18 <col:35, col:39> '<dependent type>' lvalue
|   |         `-DeclRefExpr 0x64e6ef0 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x64c4a40 '__x' 'vector<_Bool, type-parameter-0-0> &'
|   |-CXXMethodDecl 0x64c5410 <line:849:5, line:855:5> swap 'void (reference, reference)' static
|   | |-ParmVarDecl 0x64c5290 <line:850:10, col:20> __x 'reference':'struct std::_Bit_reference'
|   | |-ParmVarDecl 0x64c5300 <col:25, col:35> __y 'reference':'struct std::_Bit_reference'
|   | `-CompoundStmt 0x64e7358 <line:851:5, line:855:5>
|   |   |-DeclStmt 0x64e7130 <line:852:7, col:23>
|   |   | `-VarDecl 0x64e7020 <col:7, col:20> __tmp '_Bool'
|   |   |   `-ImplicitCastExpr 0x64e7118 <col:20> '_Bool' <UserDefinedConversion>
|   |   |     `-CXXMemberCallExpr 0x64e70f0 <col:20> '_Bool'
|   |   |       `-MemberExpr 0x64e70c0 <col:20> '<bound member function type>' .operator bool 0x64ae0c0
|   |   |         `-ImplicitCastExpr 0x64e70a8 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
|   |   |           `-DeclRefExpr 0x64e7078 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x64c5290 '__x' 'reference':'struct std::_Bit_reference'
|   |   |-CXXOperatorCallExpr 0x64e7220 <line:853:7, col:13> 'struct std::_Bit_reference' lvalue
|   |   | |-ImplicitCastExpr 0x64e7208 <col:11> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x64e71b8 <col:11> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0x64ae420 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'
|   |   | |-DeclRefExpr 0x64e7148 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x64c5290 '__x' 'reference':'struct std::_Bit_reference'
|   |   | `-ImplicitCastExpr 0x64e71a0 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
|   |   |   `-DeclRefExpr 0x64e7170 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x64c5300 '__y' 'reference':'struct std::_Bit_reference'
|   |   `-CXXOperatorCallExpr 0x64e7310 <line:854:7, col:13> 'struct std::_Bit_reference' lvalue
|   |     |-ImplicitCastExpr 0x64e72f8 <col:11> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x64e72d0 <col:11> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x64ae270 'operator=' 'struct std::_Bit_reference &(_Bool)'
|   |     |-DeclRefExpr 0x64e7268 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x64c5300 '__y' 'reference':'struct std::_Bit_reference'
|   |     `-ImplicitCastExpr 0x64e72b8 <col:13> '_Bool' <LValueToRValue>
|   |       `-DeclRefExpr 0x64e7290 <col:13> '_Bool' lvalue Var 0x64e7020 '__tmp' '_Bool'
|   |-CXXMethodDecl 0x64c5650 <line:857:5, line:867:5> insert 'iterator (iterator, const _Bool &)'
|   | |-ParmVarDecl 0x64c54d0 <line:858:12, col:21> __position 'iterator':'struct std::_Bit_iterator'
|   | |-ParmVarDecl 0x64c5540 <col:33, col:56> __x 'const _Bool &'
|   | | `-MaterializeTemporaryExpr 0x64d28e8 <col:51, col:56> 'const _Bool' lvalue
|   | |   `-CXXScalarValueInitExpr 0x64d28c8 <col:51, col:56> '_Bool'
|   | `-CompoundStmt 0x64e7e30 <line:859:5, line:867:5>
|   |   |-DeclStmt 0x64e7580 <line:860:7, col:55>
|   |   | `-VarDecl 0x64e73a0 <col:7, col:54> __n 'const difference_type':'const long'
|   |   |   `-CXXOperatorCallExpr 0x64e7538 <col:35, col:54> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x64e74d0 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |   |     |-DeclRefExpr 0x64e73f8 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c54d0 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   |     `-CallExpr 0x64e74a8 <col:48, col:54> '<dependent type>'
|   |   |       `-UnresolvedMemberExpr 0x64e7438 <col:48> '<bound member function type>' lvalue
|   |   |-IfStmt 0x64e7c58 <line:861:7, line:865:38>
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x64e79e8 <line:861:11, line:862:25> '<dependent type>' '&&'
|   |   | | |-CXXOperatorCallExpr 0x64e7800 <line:861:11, col:57> '<dependent type>'
|   |   | | | |-UnresolvedLookupExpr 0x64e7780 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   |   | | | |-CXXDependentScopeMemberExpr 0x64e7660 <col:11, col:35> '<dependent type>' lvalue
|   |   | | | | `-CXXDependentScopeMemberExpr 0x64e7608 <col:11, col:25> '<dependent type>' lvalue
|   |   | | | |   `-CXXDependentScopeMemberExpr 0x64e75b0 <col:11, col:17> '<dependent type>' lvalue
|   |   | | | |     `-CXXThisExpr 0x64e7598 <col:11> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | | | `-CXXDependentScopeMemberExpr 0x64e7728 <col:43, col:57> '<dependent type>' lvalue
|   |   | | |   `-CXXDependentScopeMemberExpr 0x64e76d0 <col:43, col:49> '<dependent type>' lvalue
|   |   | | |     `-CXXThisExpr 0x64e76b8 <col:43> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | | `-CXXOperatorCallExpr 0x64e79a0 <line:862:7, col:25> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x64e7920 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
|   |   | |   |-DeclRefExpr 0x64e7848 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c54d0 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   | |   `-CallExpr 0x64e78f8 <col:21, col:25> '<dependent type>'
|   |   | |     `-UnresolvedMemberExpr 0x64e7888 <col:21> '<bound member function type>' lvalue
|   |   | |-BinaryOperator 0x64e7b60 <line:863:9, col:38> '<dependent type>' '='
|   |   | | |-UnaryOperator 0x64e7b18 <col:9, col:33> '<dependent type>' prefix '*'
|   |   | | | `-UnaryOperator 0x64e7af8 <col:10, col:33> '<dependent type>' postfix '++'
|   |   | | |   `-CXXDependentScopeMemberExpr 0x64e7a80 <col:10, col:24> '<dependent type>' lvalue
|   |   | | |     `-CXXDependentScopeMemberExpr 0x64e7a28 <col:10, col:16> '<dependent type>' lvalue
|   |   | | |       `-CXXThisExpr 0x64e7a10 <col:10> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | | `-DeclRefExpr 0x64e7b38 <col:38> 'const _Bool' lvalue ParmVar 0x64c5540 '__x' 'const _Bool &'
|   |   | `-CallExpr 0x64e7c20 <line:865:9, col:38> '<dependent type>'
|   |   |   |-MemberExpr 0x64e7ba0 <col:9> '<bound member function type>' ->_M_insert_aux 0x64d2390
|   |   |   | `-CXXThisExpr 0x64e7b88 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   |   |   |-DeclRefExpr 0x64e7bd0 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c54d0 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   |   `-DeclRefExpr 0x64e7bf8 <col:35> 'const _Bool' lvalue ParmVar 0x64c5540 '__x' 'const _Bool &'
|   |   `-ReturnStmt 0x64e7e10 <line:866:7, col:24>
|   |     `-CXXOperatorCallExpr 0x64e7dc8 <col:14, col:24> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x64e7d60 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |       |-CallExpr 0x64e7d10 <col:14, col:20> '<dependent type>'
|   |       | `-UnresolvedMemberExpr 0x64e7ca0 <col:14> '<bound member function type>' lvalue
|   |       `-DeclRefExpr 0x64e7d38 <col:24> 'const difference_type':'const long' lvalue Var 0x64e73a0 '__n' 'const difference_type':'const long'
|   |-FunctionTemplateDecl 0x64c5a40 <line:877:5, line:884:7> insert
|   | |-TemplateTypeParmDecl 0x64c5700 <line:877:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64c59a0 <line:878:7, line:884:7> insert 'void (iterator, _InputIterator, _InputIterator)'
|   | | |-ParmVarDecl 0x64c5790 <line:879:14, col:23> __position 'iterator':'struct std::_Bit_iterator'
|   | | |-ParmVarDecl 0x64c5800 <line:880:7, col:22> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64c5870 <col:31, col:46> __last '_InputIterator'
|   | | `-CompoundStmt 0x64e81d0 <line:881:7, line:884:7>
|   | |   |-DeclStmt 0x64e8018 <line:882:2, col:70>
|   | |   | `-TypedefDecl 0x64e7fd0 <col:2, col:61> _Integral 'typename std::__is_integer<_InputIterator>::__type'
|   | |   `-CallExpr 0x64e8188 <line:883:2, col:61> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64e8048 <col:2> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64e80b8 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5790 '__position' 'iterator':'struct std::_Bit_iterator'
|   | |     |-DeclRefExpr 0x64e80e0 <col:33> '_InputIterator' lvalue ParmVar 0x64c5800 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64e8108 <col:42> '_InputIterator' lvalue ParmVar 0x64c5870 '__last' '_InputIterator'
|   | |     `-CXXUnresolvedConstructExpr 0x64e8160 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type'
|   |-CXXMethodDecl 0x64c5cc0 <line:887:5, line:889:45> insert 'void (iterator, size_type, const _Bool &)'
|   | |-ParmVarDecl 0x64c5ab0 <line:888:12, col:21> __position 'iterator':'struct std::_Bit_iterator'
|   | |-ParmVarDecl 0x64c5b20 <col:33, col:43> __n 'size_type':'unsigned long'
|   | |-ParmVarDecl 0x64c5b90 <col:48, col:60> __x 'const _Bool &'
|   | `-CompoundStmt 0x64e82f8 <line:889:5, col:45>
|   |   `-CallExpr 0x64e82b8 <col:7, col:42> '<dependent type>'
|   |     |-MemberExpr 0x64e8210 <col:7> '<bound member function type>' ->_M_fill_insert 0x64d1860
|   |     | `-CXXThisExpr 0x64e81f8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-DeclRefExpr 0x64e8240 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5ab0 '__position' 'iterator':'struct std::_Bit_iterator'
|   |     |-DeclRefExpr 0x64e8268 <col:34> 'size_type':'unsigned long' lvalue ParmVar 0x64c5b20 '__n' 'size_type':'unsigned long'
|   |     `-DeclRefExpr 0x64e8290 <col:39> 'const _Bool' lvalue ParmVar 0x64c5b90 '__x' 'const _Bool &'
|   |-CXXMethodDecl 0x64c5da0 <line:896:5, line:898:34> pop_back 'void (void)'
|   | `-CompoundStmt 0x64e8400 <col:5, col:34>
|   |   `-UnaryOperator 0x64e83e0 <col:7, col:23> '<dependent type>' prefix '--'
|   |     `-CXXDependentScopeMemberExpr 0x64e8388 <col:9, col:23> '<dependent type>' lvalue
|   |       `-CXXDependentScopeMemberExpr 0x64e8330 <col:9, col:15> '<dependent type>' lvalue
|   |         `-CXXThisExpr 0x64e8318 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   |-CXXMethodDecl 0x64c5f50 <line:900:5, line:907:5> erase 'iterator (iterator)'
|   | |-ParmVarDecl 0x64c5e50 <line:901:11, col:20> __position 'iterator':'struct std::_Bit_iterator'
|   | `-CompoundStmt 0x64e8b40 <line:902:5, line:907:5>
|   |   |-IfStmt 0x64e8990 <line:903:7, line:904:52>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64e8688 <line:903:11, col:33> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64e8608 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   |   | | |-CXXOperatorCallExpr 0x64e8510 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
|   |   | | | |-ImplicitCastExpr 0x64e84f8 <col:22> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x64e84d0 <col:22> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
|   |   | | | |-ImplicitCastExpr 0x64e84b8 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
|   |   | | | | `-DeclRefExpr 0x64e8420 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5e50 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   | | | `-ImplicitCastExpr 0x64e84a0 <col:24> 'difference_type':'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x64e8448 <col:24> 'int' 1
|   |   | | `-CallExpr 0x64e85e0 <col:29, col:33> '<dependent type>'
|   |   | |   `-UnresolvedMemberExpr 0x64e8570 <col:29> '<bound member function type>' lvalue
|   |   | |-CallExpr 0x64e8950 <line:904:9, col:52> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64e86f0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|   |   | | |-CXXOperatorCallExpr 0x64e8830 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
|   |   | | | |-ImplicitCastExpr 0x64e8818 <col:30> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x64e87f0 <col:30> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
|   |   | | | |-ImplicitCastExpr 0x64e87d8 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
|   |   | | | | `-DeclRefExpr 0x64e8748 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5e50 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   | | | `-ImplicitCastExpr 0x64e87c0 <col:32> 'difference_type':'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x64e8770 <col:32> 'int' 1
|   |   | | |-CallExpr 0x64e8900 <col:35, col:39> '<dependent type>'
|   |   | | | `-UnresolvedMemberExpr 0x64e8890 <col:35> '<bound member function type>' lvalue
|   |   | | `-DeclRefExpr 0x64e8928 <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5e50 '__position' 'iterator':'struct std::_Bit_iterator'
|   |   | `-<<<NULL>>>
|   |   |-UnaryOperator 0x64e8a88 <line:905:7, col:23> '<dependent type>' prefix '--'
|   |   | `-CXXDependentScopeMemberExpr 0x64e8a30 <col:9, col:23> '<dependent type>' lvalue
|   |   |   `-CXXDependentScopeMemberExpr 0x64e89d8 <col:9, col:15> '<dependent type>' lvalue
|   |   |     `-CXXThisExpr 0x64e89c0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   |   `-ReturnStmt 0x64e8b20 <line:906:7, col:14>
|   |     `-CXXConstructExpr 0x64e8ae8 <col:14> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
|   |       `-ImplicitCastExpr 0x64e8ad0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
|   |         `-DeclRefExpr 0x64e8aa8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c5e50 '__position' 'iterator':'struct std::_Bit_iterator'
|   |-CXXMethodDecl 0x64c6190 <line:909:5, line:915:5> erase 'iterator (iterator, iterator)'
|   | |-ParmVarDecl 0x64c6010 <line:910:11, col:20> __first 'iterator':'struct std::_Bit_iterator'
|   | |-ParmVarDecl 0x64c6080 <col:29, col:38> __last 'iterator':'struct std::_Bit_iterator'
|   | `-CompoundStmt 0x64e94e8 <line:911:5, line:915:5>
|   |   |-IfStmt 0x64e9420 <line:912:7, line:913:51>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64e8d78 <line:912:11, col:22> '_Bool'
|   |   | | |-ImplicitCastExpr 0x64e8d60 <col:19> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x64e8d38 <col:19> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x64b1500 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'
|   |   | | |-ImplicitCastExpr 0x64e8d18 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
|   |   | | | `-DeclRefExpr 0x64e8b70 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6010 '__first' 'iterator':'struct std::_Bit_iterator'
|   |   | | `-ImplicitCastExpr 0x64e8d00 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
|   |   | |   `-ImplicitCastExpr 0x64e8ce0 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
|   |   | |     `-DeclRefExpr 0x64e8b98 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6080 '__last' 'iterator':'struct std::_Bit_iterator'
|   |   | |-CallExpr 0x64e93f0 <line:913:2, col:51> '<dependent type>'
|   |   | | |-MemberExpr 0x64e8dd8 <col:2> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   |   | | | `-CXXThisExpr 0x64e8dc0 <col:2> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | | `-CallExpr 0x64e93b0 <col:18, col:50> '<dependent type>'
|   |   | |   |-UnresolvedLookupExpr 0x64e8e28 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|   |   | |   |-DeclRefExpr 0x64e8e80 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6080 '__last' 'iterator':'struct std::_Bit_iterator'
|   |   | |   |-CallExpr 0x64e9360 <col:36, col:40> '<dependent type>'
|   |   | |   | `-UnresolvedMemberExpr 0x64e92f0 <col:36> '<bound member function type>' lvalue
|   |   | |   `-DeclRefExpr 0x64e9388 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6010 '__first' 'iterator':'struct std::_Bit_iterator'
|   |   | `-<<<NULL>>>
|   |   `-ReturnStmt 0x64e94c8 <line:914:7, col:14>
|   |     `-CXXConstructExpr 0x64e9490 <col:14> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
|   |       `-ImplicitCastExpr 0x64e9478 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
|   |         `-DeclRefExpr 0x64e9450 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6010 '__first' 'iterator':'struct std::_Bit_iterator'
|   |-CXXMethodDecl 0x64c63d0 <line:917:5, line:924:5> resize 'void (size_type, _Bool)'
|   | |-ParmVarDecl 0x64c6250 <line:918:12, col:22> __new_size 'size_type':'unsigned long'
|   | |-ParmVarDecl 0x64c62c0 <col:34, col:50> __x '_Bool'
|   | | `-CXXScalarValueInitExpr 0x64d2918 <col:45, col:50> '_Bool'
|   | `-CompoundStmt 0x64e9be8 <line:919:5, line:924:5>
|   |   `-IfStmt 0x64e9bb8 <line:920:7, line:923:47>
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64e9618 <line:920:11, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64e95a8 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
|   |     | |-DeclRefExpr 0x64e9510 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x64c6250 '__new_size' 'size_type':'unsigned long'
|   |     | `-CallExpr 0x64e9580 <col:24, col:29> '<dependent type>'
|   |     |   `-MemberExpr 0x64e9550 <col:24> '<bound member function type>' ->size 0x64c37e0
|   |     |     `-CXXThisExpr 0x64e9538 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-CallExpr 0x64e9898 <line:921:9, col:62> '<dependent type>'
|   |     | |-MemberExpr 0x64e9678 <col:9> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   |     | | `-CXXThisExpr 0x64e9660 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | `-CXXOperatorCallExpr 0x64e9850 <col:25, col:61> '<dependent type>'
|   |     |   |-UnresolvedLookupExpr 0x64e97e8 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |     |   |-CallExpr 0x64e9730 <col:25, col:31> '<dependent type>'
|   |     |   | `-UnresolvedMemberExpr 0x64e96c0 <col:25> '<bound member function type>' lvalue
|   |     |   `-CXXFunctionalCastExpr 0x64e97c0 <col:35, col:61> 'difference_type':'long' functional cast to difference_type <NoOp>
|   |     |     `-ImplicitCastExpr 0x64e97a8 <col:51> 'difference_type':'long' <IntegralCast>
|   |     |       `-ImplicitCastExpr 0x64e9790 <col:51> 'size_type':'unsigned long' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x64e9768 <col:51> 'size_type':'unsigned long' lvalue ParmVar 0x64c6250 '__new_size' 'size_type':'unsigned long'
|   |     `-CallExpr 0x64e9b78 <line:923:9, col:47> '<dependent type>'
|   |       |-UnresolvedMemberExpr 0x64e98e0 <col:9> '<bound member function type>' lvalue
|   |       |-CallExpr 0x64e99e0 <col:16, col:20> '<dependent type>'
|   |       | `-UnresolvedMemberExpr 0x64e9970 <col:16> '<bound member function type>' lvalue
|   |       |-CXXOperatorCallExpr 0x64e9b08 <col:23, col:41> '<dependent type>'
|   |       | |-UnresolvedLookupExpr 0x64e9aa0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |       | |-DeclRefExpr 0x64e9a08 <col:23> 'size_type':'unsigned long' lvalue ParmVar 0x64c6250 '__new_size' 'size_type':'unsigned long'
|   |       | `-CallExpr 0x64e9a78 <col:36, col:41> '<dependent type>'
|   |       |   `-MemberExpr 0x64e9a48 <col:36> '<bound member function type>' ->size 0x64c37e0
|   |       |     `-CXXThisExpr 0x64e9a30 <col:36> 'vector<_Bool, type-parameter-0-0> *' this
|   |       `-DeclRefExpr 0x64e9b50 <col:44> '_Bool' lvalue ParmVar 0x64c62c0 '__x' '_Bool'
|   |-CXXMethodDecl 0x64c64a0 <line:932:5, line:938:5> flip 'void (void)'
|   | `-CompoundStmt 0x64ea110 <line:934:5, line:938:5>
|   |   `-ForStmt 0x64ea0d0 <line:935:7, line:937:18>
|   |     |-DeclStmt 0x64e9d98 <line:935:12, col:57>
|   |     | `-VarDecl 0x64e9c20 <col:12, col:53> __p '_Bit_type *'
|   |     |   `-CXXDependentScopeMemberExpr 0x64e9d40 <col:30, col:53> '<dependent type>' lvalue
|   |     |     `-CXXDependentScopeMemberExpr 0x64e9ce8 <col:30, col:44> '<dependent type>' lvalue
|   |     |       `-CXXDependentScopeMemberExpr 0x64e9c90 <col:30, col:36> '<dependent type>' lvalue
|   |     |         `-CXXThisExpr 0x64e9c78 <col:30> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64e9f20 <line:936:5, col:26> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64e9ea0 <col:9> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   |     | |-DeclRefExpr 0x64e9db0 <col:5> '_Bit_type *' lvalue Var 0x64e9c20 '__p' '_Bit_type *'
|   |     | `-CXXDependentScopeMemberExpr 0x64e9e48 <col:12, col:26> '<dependent type>' lvalue
|   |     |   `-CXXDependentScopeMemberExpr 0x64e9df0 <col:12, col:18> '<dependent type>' lvalue
|   |     |     `-CXXThisExpr 0x64e9dd8 <col:12> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-UnaryOperator 0x64e9f90 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
|   |     | `-DeclRefExpr 0x64e9f68 <col:47> '_Bit_type *' lvalue Var 0x64e9c20 '__p' '_Bit_type *'
|   |     `-BinaryOperator 0x64ea0a8 <line:937:9, col:18> '_Bit_type':'unsigned long' lvalue '='
|   |       |-UnaryOperator 0x64e9ff0 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
|   |       | `-ImplicitCastExpr 0x64e9fd8 <col:10> '_Bit_type *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x64e9fb0 <col:10> '_Bit_type *' lvalue Var 0x64e9c20 '__p' '_Bit_type *'
|   |       `-UnaryOperator 0x64ea088 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
|   |         `-ImplicitCastExpr 0x64ea070 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
|   |           `-UnaryOperator 0x64ea050 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
|   |             `-ImplicitCastExpr 0x64ea038 <col:18> '_Bit_type *' <LValueToRValue>
|   |               `-DeclRefExpr 0x64ea010 <col:18> '_Bit_type *' lvalue Var 0x64e9c20 '__p' '_Bit_type *'
|   |-CXXMethodDecl 0x64c6560 <line:940:5, line:942:33> clear 'void (void)'
|   | `-CompoundStmt 0x64ea258 <col:5, col:33>
|   |   `-CallExpr 0x64ea228 <col:7, col:30> '<dependent type>'
|   |     |-MemberExpr 0x64ea148 <col:7> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   |     | `-CXXThisExpr 0x64ea130 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     `-CallExpr 0x64ea200 <col:23, col:29> '<dependent type>'
|   |       `-UnresolvedMemberExpr 0x64ea190 <col:23> '<bound member function type>' lvalue
|   |-AccessSpecDecl 0x64c6600 <line:945:3, col:12> protected
|   |-CXXMethodDecl 0x64c6850 <line:947:5, line:954:5> _M_copy_aligned 'iterator (const_iterator, const_iterator, iterator)'
|   | |-ParmVarDecl 0x64c6640 <line:948:21, col:36> __first 'const_iterator':'struct std::_Bit_const_iterator'
|   | |-ParmVarDecl 0x64c66b0 <col:45, col:60> __last 'const_iterator':'struct std::_Bit_const_iterator'
|   | |-ParmVarDecl 0x64c6720 <line:949:7, col:16> __result 'iterator':'struct std::_Bit_iterator'
|   | `-CompoundStmt 0x64eb880 <line:950:5, line:954:5>
|   |   |-DeclStmt 0x64eaab8 <line:951:7, col:75>
|   |   | `-VarDecl 0x64ea290 <col:7, col:74> __q '_Bit_type *'
|   |   |   `-CallExpr 0x64eaa30 <col:24, col:74> 'unsigned long *':'unsigned long *'
|   |   |     |-ImplicitCastExpr 0x64eaa18 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x64ea980 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0x64ea850 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x6416ba0 'copy')
|   |   |     |-ImplicitCastExpr 0x64eaa70 <col:34, col:42> '_Bit_type *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x64ea3a8 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0x64b0b10
|   |   |     |   `-ImplicitCastExpr 0x64ea388 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
|   |   |     |     `-DeclRefExpr 0x64ea360 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x64c6640 '__first' 'const_iterator':'struct std::_Bit_const_iterator'
|   |   |     |-ImplicitCastExpr 0x64eaa88 <col:48, col:55> '_Bit_type *' <LValueToRValue>
|   |   |     | `-MemberExpr 0x64ea420 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0x64b0b10
|   |   |     |   `-ImplicitCastExpr 0x64ea400 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
|   |   |     |     `-DeclRefExpr 0x64ea3d8 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x64c66b0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'
|   |   |     `-ImplicitCastExpr 0x64eaaa0 <col:61, col:70> '_Bit_type *' <LValueToRValue>
|   |   |       `-MemberExpr 0x64ea498 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0x64b0b10
|   |   |         `-ImplicitCastExpr 0x64ea478 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
|   |   |           `-DeclRefExpr 0x64ea450 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64c6720 '__result' 'iterator':'struct std::_Bit_iterator'
|   |   `-ReturnStmt 0x64eb860 <line:952:7, line:953:26>
|   |     `-CXXConstructExpr 0x64eb828 <line:952:14, line:953:26> 'iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
|   |       `-MaterializeTemporaryExpr 0x64eb808 <line:952:14, line:953:26> 'const struct std::_Bit_iterator' lvalue
|   |         `-ImplicitCastExpr 0x64eb7f0 <line:952:14, line:953:26> 'const struct std::_Bit_iterator' <NoOp>
|   |           `-CallExpr 0x64eb1d0 <line:952:14, line:953:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
|   |             |-ImplicitCastExpr 0x64eb1b8 <line:952:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x64eb120 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0x64eaff0 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x6416ba0 'copy')
|   |             |-CXXConstructExpr 0x64eb248 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()' elidable
|   |             | `-MaterializeTemporaryExpr 0x64eb228 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
|   |             |   `-ImplicitCastExpr 0x64eb210 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
|   |             |     `-CXXTemporaryObjectExpr 0x64eac20 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator' 'void (_Bit_type *, unsigned int)'
|   |             |       |-ImplicitCastExpr 0x64eabf0 <col:39, col:46> '_Bit_type *' <LValueToRValue>
|   |             |       | `-MemberExpr 0x64eaba0 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0x64b0b10
|   |             |       |   `-ImplicitCastExpr 0x64eab80 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
|   |             |       |     `-DeclRefExpr 0x64eab58 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x64c66b0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'
|   |             |       `-ImplicitCastExpr 0x64eac08 <col:52> 'unsigned int' <IntegralCast>
|   |             |         `-IntegerLiteral 0x64eabd0 <col:52> 'int' 0
|   |             |-CXXConstructExpr 0x64eb298 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator' 'void (const struct std::_Bit_const_iterator &) throw()'
|   |             | `-ImplicitCastExpr 0x64eb280 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
|   |             |   `-DeclRefExpr 0x64eac68 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x64c66b0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'
|   |             `-CXXConstructExpr 0x64eb7b8 <line:953:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
|   |               `-MaterializeTemporaryExpr 0x64eb798 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
|   |                 `-ImplicitCastExpr 0x64eb780 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
|   |                   `-CXXTemporaryObjectExpr 0x64ead18 <col:10, col:25> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
|   |                     |-ImplicitCastExpr 0x64eace8 <col:19> '_Bit_type *' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x64eaca0 <col:19> '_Bit_type *' lvalue Var 0x64ea290 '__q' '_Bit_type *'
|   |                     `-ImplicitCastExpr 0x64ead00 <col:24> 'unsigned int' <IntegralCast>
|   |                       `-IntegerLiteral 0x64eacc8 <col:24> 'int' 0
|   |-CXXMethodDecl 0x64c69a0 <line:956:5, line:963:5> _M_initialize 'void (size_type)'
|   | |-ParmVarDecl 0x64c6920 <line:957:19, col:29> __n 'size_type':'unsigned long'
|   | `-CompoundStmt 0x64ec138 <line:958:5, line:963:5>
|   |   |-DeclStmt 0x64eb9e0 <line:959:7, col:46>
|   |   | `-VarDecl 0x64eb8c0 <col:7, col:45> __q '_Bit_type *'
|   |   |   `-CallExpr 0x64eb9b0 <col:24, col:45> '<dependent type>'
|   |   |     |-CXXDependentScopeMemberExpr 0x64eb930 <col:24, col:30> '<dependent type>' lvalue
|   |   |     | `-CXXThisExpr 0x64eb918 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
|   |   |     `-DeclRefExpr 0x64eb988 <col:42> 'size_type':'unsigned long' lvalue ParmVar 0x64c6920 '__n' 'size_type':'unsigned long'
|   |   |-BinaryOperator 0x64ebc58 <line:960:7, col:59> '<dependent type>' '='
|   |   | |-CXXDependentScopeMemberExpr 0x64eba68 <col:7, col:21> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64eba10 <col:7, col:13> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64eb9f8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CXXOperatorCallExpr 0x64ebc10 <col:41, col:59> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x64ebba8 <col:45> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |   |   |-DeclRefExpr 0x64ebac0 <col:41> '_Bit_type *' lvalue Var 0x64eb8c0 '__q' '_Bit_type *'
|   |   |   `-CallExpr 0x64ebb78 <col:47, col:59> '<dependent type>'
|   |   |     |-UnresolvedMemberExpr 0x64ebae8 <col:47> '<dependent type>' lvalue
|   |   |     `-DeclRefExpr 0x64ebb50 <col:56> 'size_type':'unsigned long' lvalue ParmVar 0x64c6920 '__n' 'size_type':'unsigned long'
|   |   |-BinaryOperator 0x64ebe18 <line:961:7, col:47> '<dependent type>' '='
|   |   | |-CXXDependentScopeMemberExpr 0x64ebcf0 <col:7, col:21> '<dependent type>' lvalue
|   |   | | `-CXXDependentScopeMemberExpr 0x64ebc98 <col:7, col:13> '<dependent type>' lvalue
|   |   | |   `-CXXThisExpr 0x64ebc80 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |   | `-CXXTemporaryObjectExpr 0x64ebdd0 <col:32, col:47> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
|   |   |   |-ImplicitCastExpr 0x64ebda0 <col:41> '_Bit_type *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x64ebd58 <col:41> '_Bit_type *' lvalue Var 0x64eb8c0 '__q' '_Bit_type *'
|   |   |   `-ImplicitCastExpr 0x64ebdb8 <col:46> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x64ebd80 <col:46> 'int' 0
|   |   `-BinaryOperator 0x64ec110 <line:962:7, col:77> '<dependent type>' '='
|   |     |-CXXDependentScopeMemberExpr 0x64ebeb0 <col:7, col:21> '<dependent type>' lvalue
|   |     | `-CXXDependentScopeMemberExpr 0x64ebe58 <col:7, col:13> '<dependent type>' lvalue
|   |     |   `-CXXThisExpr 0x64ebe40 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     `-CXXOperatorCallExpr 0x64ec0c8 <col:33, col:77> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x64ec060 <col:56> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |       |-CXXDependentScopeMemberExpr 0x64ebf78 <col:33, col:47> '<dependent type>' lvalue
|   |       | `-CXXDependentScopeMemberExpr 0x64ebf20 <col:33, col:39> '<dependent type>' lvalue
|   |       |   `-CXXThisExpr 0x64ebf08 <col:33> 'vector<_Bool, type-parameter-0-0> *' this
|   |       `-CXXFunctionalCastExpr 0x64ec038 <col:58, col:77> 'difference_type':'long' functional cast to difference_type <NoOp>
|   |         `-ImplicitCastExpr 0x64ec020 <col:74> 'difference_type':'long' <IntegralCast>
|   |           `-ImplicitCastExpr 0x64ec008 <col:74> 'size_type':'unsigned long' <LValueToRValue>
|   |             `-DeclRefExpr 0x64ebfe0 <col:74> 'size_type':'unsigned long' lvalue ParmVar 0x64c6920 '__n' 'size_type':'unsigned long'
|   |-CXXMethodDecl 0x64c6ae0 <line:965:5, line:966:32> _M_reallocate 'void (size_type)'
|   | `-ParmVarDecl 0x64c6a60 <col:19, col:29> __n 'size_type':'unsigned long'
|   |-FunctionTemplateDecl 0x64c6e80 <line:977:5, line:984:7> _M_initialize_dispatch
|   | |-TemplateTypeParmDecl 0x64c6b90 <line:977:14, col:23> typename _Integer
|   | |-CXXMethodDecl 0x64c6de0 <line:978:7, line:984:7> _M_initialize_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
|   | | |-ParmVarDecl 0x64c6c20 <line:979:30, col:39> __n '_Integer'
|   | | |-ParmVarDecl 0x64c6c90 <col:44, col:53> __x '_Integer'
|   | | |-ParmVarDecl 0x64c6d00 <col:58> 'struct std::__true_type'
|   | | `-CompoundStmt 0x64ec5b0 <line:980:7, line:984:7>
|   | |   |-CallExpr 0x64ec220 <line:981:2, col:43> '<dependent type>'
|   | |   | |-MemberExpr 0x64ec188 <col:2> '<bound member function type>' ->_M_initialize 0x64c69a0
|   | |   | | `-CXXThisExpr 0x64ec170 <col:2> 'vector<_Bool, type-parameter-0-0> *' this
|   | |   | `-CXXStaticCastExpr 0x64ec1f0 <col:16, col:42> 'size_type':'unsigned long' static_cast<size_type> <Dependent>
|   | |   |   `-DeclRefExpr 0x64ec1b8 <col:39> '_Integer' lvalue ParmVar 0x64c6c20 '__n' '_Integer'
|   | |   `-CallExpr 0x64ec570 <line:982:2, line:983:50> '<dependent type>'
|   | |     |-UnresolvedLookupExpr 0x64ec270 <line:982:2, col:7> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
|   | |     |-CXXDependentScopeMemberExpr 0x64ec398 <col:12, col:35> '<dependent type>' lvalue
|   | |     | `-CXXDependentScopeMemberExpr 0x64ec340 <col:12, col:26> '<dependent type>' lvalue
|   | |     |   `-CXXDependentScopeMemberExpr 0x64ec2e8 <col:12, col:18> '<dependent type>' lvalue
|   | |     |     `-CXXThisExpr 0x64ec2d0 <col:12> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     |-CXXDependentScopeMemberExpr 0x64ec460 <line:983:5, col:19> '<dependent type>' lvalue
|   | |     | `-CXXDependentScopeMemberExpr 0x64ec408 <col:5, col:11> '<dependent type>' lvalue
|   | |     |   `-CXXThisExpr 0x64ec3f0 <col:5> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     `-ConditionalOperator 0x64ec540 <col:38, col:49> 'int'
|   | |       |-DeclRefExpr 0x64ec4b8 <col:38> '_Integer' lvalue ParmVar 0x64c6c90 '__x' '_Integer'
|   | |       |-UnaryOperator 0x64ec500 <col:44, col:45> 'int' prefix '~'
|   | |       | `-IntegerLiteral 0x64ec4e0 <col:45> 'int' 0
|   | |       `-IntegerLiteral 0x64ec520 <col:49> 'int' 0
|   |-FunctionTemplateDecl 0x64cc130 <line:986:5, line:991:44> _M_initialize_dispatch
|   | |-TemplateTypeParmDecl 0x64c6ee0 <line:986:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64cc090 <line:987:7, line:991:44> _M_initialize_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
|   | | |-ParmVarDecl 0x64c6f70 <line:988:30, col:45> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64c6fe0 <col:54, col:69> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64c7050 <line:989:9> 'struct std::__false_type'
|   | | `-CompoundStmt 0x64ec7c0 <line:990:7, line:991:44>
|   | |   `-CallExpr 0x64ec780 <line:990:9, line:991:41> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64ec5f0 <line:990:9> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64ec660 <col:29> '_InputIterator' lvalue ParmVar 0x64c6f70 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64ec688 <col:38> '_InputIterator' lvalue ParmVar 0x64c6fe0 '__last' '_InputIterator'
|   | |     `-CallExpr 0x64ec750 <line:991:8, col:40> '<dependent type>'
|   | |       |-UnresolvedLookupExpr 0x64ec6d0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x63d1da0
|   | |       `-DeclRefExpr 0x64ec728 <col:33> '_InputIterator' lvalue ParmVar 0x64c6f70 '__first' '_InputIterator'
|   |-FunctionTemplateDecl 0x64cc4f0 <line:993:5, line:1000:7> _M_initialize_range
|   | |-TemplateTypeParmDecl 0x64cc190 <line:993:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64cc450 <line:994:7, line:1000:7> _M_initialize_range 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
|   | | |-ParmVarDecl 0x64cc220 <line:995:27, col:42> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64cc290 <col:51, col:66> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64cc370 <line:996:6, col:11> 'std::input_iterator_tag':'struct std::input_iterator_tag'
|   | | `-CompoundStmt 0x64eca40 <line:997:7, line:1000:7>
|   | |   `-ForStmt 0x64eca00 <line:998:2, line:999:22>
|   | |     |-<<<NULL>>>
|   | |     |-<<<NULL>>>
|   | |     |-CXXOperatorCallExpr 0x64ec8b0 <line:998:9, col:20> '<dependent type>'
|   | |     | |-UnresolvedLookupExpr 0x64ec830 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   | |     | |-DeclRefExpr 0x64ec7e0 <col:9> '_InputIterator' lvalue ParmVar 0x64cc220 '__first' '_InputIterator'
|   | |     | `-DeclRefExpr 0x64ec808 <col:20> '_InputIterator' lvalue ParmVar 0x64cc290 '__last' '_InputIterator'
|   | |     |-UnaryOperator 0x64ec920 <col:28, col:30> '<dependent type>' prefix '++'
|   | |     | `-DeclRefExpr 0x64ec8f8 <col:30> '_InputIterator' lvalue ParmVar 0x64cc220 '__first' '_InputIterator'
|   | |     `-CallExpr 0x64ec9d0 <line:999:4, col:22> '<dependent type>'
|   | |       |-MemberExpr 0x64ec958 <col:4> '<bound member function type>' ->push_back 0x64c4980
|   | |       | `-CXXThisExpr 0x64ec940 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   | |       `-UnaryOperator 0x64ec9b0 <col:14, col:15> '<dependent type>' prefix '*'
|   | |         `-DeclRefExpr 0x64ec988 <col:15> '_InputIterator' lvalue ParmVar 0x64cc220 '__first' '_InputIterator'
|   |-FunctionTemplateDecl 0x64cc8b0 <line:1002:5, line:1010:7> _M_initialize_range
|   | |-TemplateTypeParmDecl 0x64cc550 <line:1002:14, col:23> typename _ForwardIterator
|   | |-CXXMethodDecl 0x64cc810 <line:1003:7, line:1010:7> _M_initialize_range 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
|   | | |-ParmVarDecl 0x64cc5e0 <line:1004:27, col:44> __first '_ForwardIterator'
|   | | |-ParmVarDecl 0x64cc650 <col:53, col:70> __last '_ForwardIterator'
|   | | |-ParmVarDecl 0x64cc730 <line:1005:6, col:11> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
|   | | `-CompoundStmt 0x64ece50 <line:1006:7, line:1010:7>
|   | |   |-DeclStmt 0x64ecbc8 <line:1007:2, col:54>
|   | |   | `-VarDecl 0x64eca70 <col:2, col:53> __n 'const size_type':'const unsigned long'
|   | |   |   `-CallExpr 0x64ecb90 <col:24, col:53> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr 0x64ecae8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
|   | |   |     |-DeclRefExpr 0x64ecb40 <col:38> '_ForwardIterator' lvalue ParmVar 0x64cc5e0 '__first' '_ForwardIterator'
|   | |   |     `-DeclRefExpr 0x64ecb68 <col:47> '_ForwardIterator' lvalue ParmVar 0x64cc650 '__last' '_ForwardIterator'
|   | |   |-CallExpr 0x64ecc50 <line:1008:2, col:19> '<dependent type>'
|   | |   | |-MemberExpr 0x64ecbf8 <col:2> '<bound member function type>' ->_M_initialize 0x64c69a0
|   | |   | | `-CXXThisExpr 0x64ecbe0 <col:2> 'vector<_Bool, type-parameter-0-0> *' this
|   | |   | `-DeclRefExpr 0x64ecc28 <col:16> 'const size_type':'const unsigned long' lvalue Var 0x64eca70 '__n' 'const size_type':'const unsigned long'
|   | |   `-CallExpr 0x64ece10 <line:1009:2, col:51> '<dependent type>'
|   | |     |-UnresolvedLookupExpr 0x64ecca0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|   | |     |-DeclRefExpr 0x64eccf8 <col:12> '_ForwardIterator' lvalue ParmVar 0x64cc5e0 '__first' '_ForwardIterator'
|   | |     |-DeclRefExpr 0x64ecd20 <col:21> '_ForwardIterator' lvalue ParmVar 0x64cc650 '__last' '_ForwardIterator'
|   | |     `-CXXDependentScopeMemberExpr 0x64ecdb8 <col:29, col:43> '<dependent type>' lvalue
|   | |       `-CXXDependentScopeMemberExpr 0x64ecd60 <col:29, col:35> '<dependent type>' lvalue
|   | |         `-CXXThisExpr 0x64ecd48 <col:29> 'vector<_Bool, type-parameter-0-0> *' this
|   |-FunctionTemplateDecl 0x64ccc00 <line:1014:5, line:1017:37> _M_assign_dispatch
|   | |-TemplateTypeParmDecl 0x64cc910 <line:1014:14, col:23> typename _Integer
|   | |-CXXMethodDecl 0x64ccb60 <line:1015:7, line:1017:37> _M_assign_dispatch 'void (_Integer, _Integer, struct std::__true_type)'
|   | | |-ParmVarDecl 0x64cc9a0 <line:1016:26, col:35> __n '_Integer'
|   | | |-ParmVarDecl 0x64cca10 <col:40, col:49> __val '_Integer'
|   | | |-ParmVarDecl 0x64cca80 <col:56> 'struct std::__true_type'
|   | | `-CompoundStmt 0x64ecf50 <line:1017:7, col:37>
|   | |   `-CallExpr 0x64ecf18 <col:9, col:34> '<dependent type>'
|   | |     |-MemberExpr 0x64ece98 <col:9> '<bound member function type>' ->_M_fill_assign 0x64cd100
|   | |     | `-CXXThisExpr 0x64ece80 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     |-DeclRefExpr 0x64ecec8 <col:24> '_Integer' lvalue ParmVar 0x64cc9a0 '__n' '_Integer'
|   | |     `-DeclRefExpr 0x64ecef0 <col:29> '_Integer' lvalue ParmVar 0x64cca10 '__val' '_Integer'
|   |-FunctionTemplateDecl 0x64ccf50 <line:1019:5, line:1023:76> _M_assign_dispatch
|   | |-TemplateTypeParmDecl 0x64ccc60 <line:1019:14, col:20> class _InputIterator
|   | |-CXXMethodDecl 0x64cceb0 <line:1020:7, line:1023:76> _M_assign_dispatch 'void (_InputIterator, _InputIterator, struct std::__false_type)'
|   | | |-ParmVarDecl 0x64cccf0 <line:1021:26, col:41> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64ccd60 <col:50, col:65> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64ccdd0 <line:1022:5> 'struct std::__false_type'
|   | | `-CompoundStmt 0x64ed158 <line:1023:7, col:76>
|   | |   `-CallExpr 0x64ed118 <col:9, col:73> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64ecf88 <col:9> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64ecff8 <col:23> '_InputIterator' lvalue ParmVar 0x64cccf0 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64ed020 <col:32> '_InputIterator' lvalue ParmVar 0x64ccd60 '__last' '_InputIterator'
|   | |     `-CallExpr 0x64ed0e8 <col:40, col:72> '<dependent type>'
|   | |       |-UnresolvedLookupExpr 0x64ed068 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x63d1da0
|   | |       `-DeclRefExpr 0x64ed0c0 <col:65> '_InputIterator' lvalue ParmVar 0x64cccf0 '__first' '_InputIterator'
|   |-CXXMethodDecl 0x64cd100 <line:1025:5, line:1040:5> _M_fill_assign 'void (size_t, _Bool)'
|   | |-ParmVarDecl 0x64ccfc0 <line:1026:20, col:27> __n 'size_t':'unsigned long'
|   | |-ParmVarDecl 0x64cd030 <col:32, col:37> __x '_Bool'
|   | `-CompoundStmt 0x64ee720 <line:1027:5, line:1040:5>
|   |   `-IfStmt 0x64ee6f0 <line:1028:7, line:1039:2>
|   |     |-<<<NULL>>>
|   |     |-CXXOperatorCallExpr 0x64ed280 <line:1028:11, col:22> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x64ed210 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
|   |     | |-DeclRefExpr 0x64ed178 <col:11> 'size_t':'unsigned long' lvalue ParmVar 0x64ccfc0 '__n' 'size_t':'unsigned long'
|   |     | `-CallExpr 0x64ed1e8 <col:17, col:22> '<dependent type>'
|   |     |   `-MemberExpr 0x64ed1b8 <col:17> '<bound member function type>' ->size 0x64c37e0
|   |     |     `-CXXThisExpr 0x64ed1a0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |-CompoundStmt 0x64ee128 <line:1029:2, line:1033:2>
|   |     | |-CallExpr 0x64ed600 <line:1030:4, line:1031:52> '<dependent type>'
|   |     | | |-UnresolvedLookupExpr 0x64ed2e8 <line:1030:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
|   |     | | |-CXXDependentScopeMemberExpr 0x64ed410 <col:14, col:37> '<dependent type>' lvalue
|   |     | | | `-CXXDependentScopeMemberExpr 0x64ed3b8 <col:14, col:28> '<dependent type>' lvalue
|   |     | | |   `-CXXDependentScopeMemberExpr 0x64ed360 <col:14, col:20> '<dependent type>' lvalue
|   |     | | |     `-CXXThisExpr 0x64ed348 <col:14> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | | |-CXXDependentScopeMemberExpr 0x64ed4d8 <line:1031:7, col:21> '<dependent type>' lvalue
|   |     | | | `-CXXDependentScopeMemberExpr 0x64ed480 <col:7, col:13> '<dependent type>' lvalue
|   |     | | |   `-CXXThisExpr 0x64ed468 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |     | | `-ConditionalOperator 0x64ed5d0 <col:40, col:51> 'int'
|   |     | |   |-ImplicitCastExpr 0x64ed5b8 <col:40> '_Bool' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x64ed530 <col:40> '_Bool' lvalue ParmVar 0x64cd030 '__x' '_Bool'
|   |     | |   |-UnaryOperator 0x64ed578 <col:46, col:47> 'int' prefix '~'
|   |     | |   | `-IntegerLiteral 0x64ed558 <col:47> 'int' 0
|   |     | |   `-IntegerLiteral 0x64ed598 <col:51> 'int' 0
|   |     | `-CallExpr 0x64ee0e8 <line:1032:4, col:35> '<dependent type>'
|   |     |   |-UnresolvedMemberExpr 0x64ed658 <col:4> '<bound member function type>' lvalue
|   |     |   |-CallExpr 0x64edf50 <col:11, col:15> '<dependent type>'
|   |     |   | `-UnresolvedMemberExpr 0x64ed6e8 <col:11> '<bound member function type>' lvalue
|   |     |   |-CXXOperatorCallExpr 0x64ee078 <col:18, col:29> '<dependent type>'
|   |     |   | |-UnresolvedLookupExpr 0x64ee010 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |     |   | |-DeclRefExpr 0x64edf78 <col:18> 'size_t':'unsigned long' lvalue ParmVar 0x64ccfc0 '__n' 'size_t':'unsigned long'
|   |     |   | `-CallExpr 0x64edfe8 <col:24, col:29> '<dependent type>'
|   |     |   |   `-MemberExpr 0x64edfb8 <col:24> '<bound member function type>' ->size 0x64c37e0
|   |     |   |     `-CXXThisExpr 0x64edfa0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
|   |     |   `-DeclRefExpr 0x64ee0c0 <col:32> '_Bool' lvalue ParmVar 0x64cd030 '__x' '_Bool'
|   |     `-CompoundStmt 0x64ee6c8 <line:1035:2, line:1039:2>
|   |       |-CallExpr 0x64ee320 <line:1036:4, col:33> '<dependent type>'
|   |       | |-MemberExpr 0x64ee168 <col:4> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   |       | | `-CXXThisExpr 0x64ee150 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   |       | `-CXXOperatorCallExpr 0x64ee2d8 <col:20, col:30> '<dependent type>'
|   |       |   |-UnresolvedLookupExpr 0x64ee270 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |       |   |-CallExpr 0x64ee220 <col:20, col:26> '<dependent type>'
|   |       |   | `-UnresolvedMemberExpr 0x64ee1b0 <col:20> '<bound member function type>' lvalue
|   |       |   `-DeclRefExpr 0x64ee248 <col:30> 'size_t':'unsigned long' lvalue ParmVar 0x64ccfc0 '__n' 'size_t':'unsigned long'
|   |       `-CallExpr 0x64ee688 <line:1037:4, line:1038:52> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x64ee370 <line:1037:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
|   |         |-CXXDependentScopeMemberExpr 0x64ee498 <col:14, col:37> '<dependent type>' lvalue
|   |         | `-CXXDependentScopeMemberExpr 0x64ee440 <col:14, col:28> '<dependent type>' lvalue
|   |         |   `-CXXDependentScopeMemberExpr 0x64ee3e8 <col:14, col:20> '<dependent type>' lvalue
|   |         |     `-CXXThisExpr 0x64ee3d0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this
|   |         |-CXXDependentScopeMemberExpr 0x64ee560 <line:1038:7, col:21> '<dependent type>' lvalue
|   |         | `-CXXDependentScopeMemberExpr 0x64ee508 <col:7, col:13> '<dependent type>' lvalue
|   |         |   `-CXXThisExpr 0x64ee4f0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|   |         `-ConditionalOperator 0x64ee658 <col:40, col:51> 'int'
|   |           |-ImplicitCastExpr 0x64ee640 <col:40> '_Bool' <LValueToRValue>
|   |           | `-DeclRefExpr 0x64ee5b8 <col:40> '_Bool' lvalue ParmVar 0x64cd030 '__x' '_Bool'
|   |           |-UnaryOperator 0x64ee600 <col:46, col:47> 'int' prefix '~'
|   |           | `-IntegerLiteral 0x64ee5e0 <col:47> 'int' 0
|   |           `-IntegerLiteral 0x64ee620 <col:51> 'int' 0
|   |-FunctionTemplateDecl 0x64cd4e0 <line:1042:5, line:1054:7> _M_assign_aux
|   | |-TemplateTypeParmDecl 0x64cd1b0 <line:1042:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64cd440 <line:1043:7, line:1054:7> _M_assign_aux 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
|   | | |-ParmVarDecl 0x64cd240 <line:1044:21, col:36> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64cd2b0 <col:45, col:60> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64cd360 <line:1045:7, col:12> 'std::input_iterator_tag':'struct std::input_iterator_tag'
|   | | `-CompoundStmt 0x64ef190 <line:1046:7, line:1054:7>
|   | |   |-DeclStmt 0x64ee858 <line:1047:2, col:26>
|   | |   | `-VarDecl 0x64ee750 <col:2, col:25> __cur 'iterator':'struct std::_Bit_iterator'
|   | |   |   `-CallExpr 0x64ee830 <col:19, col:25> '<dependent type>'
|   | |   |     `-UnresolvedMemberExpr 0x64ee7c0 <col:19> '<bound member function type>' lvalue
|   | |   |-ForStmt 0x64eed98 <line:1048:2, line:1049:14>
|   | |   | |-<<<NULL>>>
|   | |   | |-<<<NULL>>>
|   | |   | |-BinaryOperator 0x64eeb28 <line:1048:9, col:43> '<dependent type>' '&&'
|   | |   | | |-CXXOperatorCallExpr 0x64ee940 <col:9, col:20> '<dependent type>'
|   | |   | | | |-UnresolvedLookupExpr 0x64ee8c0 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   | |   | | | |-DeclRefExpr 0x64ee870 <col:9> '_InputIterator' lvalue ParmVar 0x64cd240 '__first' '_InputIterator'
|   | |   | | | `-DeclRefExpr 0x64ee898 <col:20> '_InputIterator' lvalue ParmVar 0x64cd2b0 '__last' '_InputIterator'
|   | |   | | `-CXXOperatorCallExpr 0x64eeae0 <col:30, col:43> '<dependent type>'
|   | |   | |   |-UnresolvedLookupExpr 0x64eea60 <col:36> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   | |   | |   |-DeclRefExpr 0x64ee988 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64ee750 '__cur' 'iterator':'struct std::_Bit_iterator'
|   | |   | |   `-CallExpr 0x64eea38 <col:39, col:43> '<dependent type>'
|   | |   | |     `-UnresolvedMemberExpr 0x64ee9c8 <col:39> '<bound member function type>' lvalue
|   | |   | |-BinaryOperator 0x64eec40 <col:46, col:57> '<dependent type>' ','
|   | |   | | |-CXXOperatorCallExpr 0x64eebb8 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
|   | |   | | | |-ImplicitCastExpr 0x64eeba0 <col:46> 'iterator &(*)(void)' <FunctionToPointerDecay>
|   | |   | | | | `-DeclRefExpr 0x64eeb78 <col:46> 'iterator &(void)' lvalue CXXMethod 0x64b4a40 'operator++' 'iterator &(void)'
|   | |   | | | `-DeclRefExpr 0x64eeb50 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64ee750 '__cur' 'iterator':'struct std::_Bit_iterator'
|   | |   | | `-UnaryOperator 0x64eec20 <col:55, col:57> '<dependent type>' prefix '++'
|   | |   | |   `-DeclRefExpr 0x64eebf8 <col:57> '_InputIterator' lvalue ParmVar 0x64cd240 '__first' '_InputIterator'
|   | |   | `-BinaryOperator 0x64eed70 <line:1049:4, col:14> '<dependent type>' '='
|   | |   |   |-CXXOperatorCallExpr 0x64eece8 <col:4, col:5> 'reference':'struct std::_Bit_reference'
|   | |   |   | |-ImplicitCastExpr 0x64eecd0 <col:4> 'reference (*)(void) const' <FunctionToPointerDecay>
|   | |   |   | | `-DeclRefExpr 0x64eeca8 <col:4> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
|   | |   |   | `-ImplicitCastExpr 0x64eec90 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
|   | |   |   |   `-DeclRefExpr 0x64eec68 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64ee750 '__cur' 'iterator':'struct std::_Bit_iterator'
|   | |   |   `-UnaryOperator 0x64eed50 <col:13, col:14> '<dependent type>' prefix '*'
|   | |   |     `-DeclRefExpr 0x64eed28 <col:14> '_InputIterator' lvalue ParmVar 0x64cd240 '__first' '_InputIterator'
|   | |   `-IfStmt 0x64ef160 <line:1050:2, line:1053:33>
|   | |     |-<<<NULL>>>
|   | |     |-CXXOperatorCallExpr 0x64eeea8 <line:1050:6, col:17> '<dependent type>'
|   | |     | |-UnresolvedLookupExpr 0x64eee28 <col:14> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
|   | |     | |-DeclRefExpr 0x64eedd8 <col:6> '_InputIterator' lvalue ParmVar 0x64cd240 '__first' '_InputIterator'
|   | |     | `-DeclRefExpr 0x64eee00 <col:17> '_InputIterator' lvalue ParmVar 0x64cd2b0 '__last' '_InputIterator'
|   | |     |-CallExpr 0x64eef60 <line:1051:4, col:25> '<dependent type>'
|   | |     | |-MemberExpr 0x64eef08 <col:4> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   | |     | | `-CXXThisExpr 0x64eeef0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     | `-DeclRefExpr 0x64eef38 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x64ee750 '__cur' 'iterator':'struct std::_Bit_iterator'
|   | |     `-CallExpr 0x64ef120 <line:1053:4, col:33> '<dependent type>'
|   | |       |-UnresolvedMemberExpr 0x64eefa8 <col:4> '<bound member function type>' lvalue
|   | |       |-CallExpr 0x64ef0a8 <col:11, col:15> '<dependent type>'
|   | |       | `-UnresolvedMemberExpr 0x64ef038 <col:11> '<bound member function type>' lvalue
|   | |       |-DeclRefExpr 0x64ef0d0 <col:18> '_InputIterator' lvalue ParmVar 0x64cd240 '__first' '_InputIterator'
|   | |       `-DeclRefExpr 0x64ef0f8 <col:27> '_InputIterator' lvalue ParmVar 0x64cd2b0 '__last' '_InputIterator'
|   |-FunctionTemplateDecl 0x64cd870 <line:1056:5, line:1071:7> _M_assign_aux
|   | |-TemplateTypeParmDecl 0x64cd540 <line:1056:14, col:23> typename _ForwardIterator
|   | |-CXXMethodDecl 0x64cd7d0 <line:1057:7, line:1071:7> _M_assign_aux 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
|   | | |-ParmVarDecl 0x64cd5d0 <line:1058:21, col:38> __first '_ForwardIterator'
|   | | |-ParmVarDecl 0x64cd640 <col:47, col:64> __last '_ForwardIterator'
|   | | |-ParmVarDecl 0x64cd6f0 <line:1059:7, col:12> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
|   | | `-CompoundStmt 0x64efca0 <line:1060:7, line:1071:7>
|   | |   |-DeclStmt 0x64ef328 <line:1061:2, col:56>
|   | |   | `-VarDecl 0x64ef1d0 <col:2, col:55> __len 'const size_type':'const unsigned long'
|   | |   |   `-CallExpr 0x64ef2f0 <col:26, col:55> '<dependent type>'
|   | |   |     |-UnresolvedLookupExpr 0x64ef248 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
|   | |   |     |-DeclRefExpr 0x64ef2a0 <col:40> '_ForwardIterator' lvalue ParmVar 0x64cd5d0 '__first' '_ForwardIterator'
|   | |   |     `-DeclRefExpr 0x64ef2c8 <col:49> '_ForwardIterator' lvalue ParmVar 0x64cd640 '__last' '_ForwardIterator'
|   | |   `-IfStmt 0x64efc70 <line:1062:2, line:1070:4>
|   | |     |-<<<NULL>>>
|   | |     |-CXXOperatorCallExpr 0x64ef448 <line:1062:6, col:19> '<dependent type>'
|   | |     | |-UnresolvedLookupExpr 0x64ef3d8 <col:12> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
|   | |     | |-DeclRefExpr 0x64ef340 <col:6> 'const size_type':'const unsigned long' lvalue Var 0x64ef1d0 '__len' 'const size_type':'const unsigned long'
|   | |     | `-CallExpr 0x64ef3b0 <col:14, col:19> '<dependent type>'
|   | |     |   `-MemberExpr 0x64ef380 <col:14> '<bound member function type>' ->size 0x64c37e0
|   | |     |     `-CXXThisExpr 0x64ef368 <col:14> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     |-CallExpr 0x64ef690 <line:1063:4, col:55> '<dependent type>'
|   | |     | |-MemberExpr 0x64ef4a8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x64d2750
|   | |     | | `-CXXThisExpr 0x64ef490 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     | `-CallExpr 0x64ef650 <col:20, col:54> '<dependent type>'
|   | |     |   |-UnresolvedLookupExpr 0x64ef4f8 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|   | |     |   |-DeclRefExpr 0x64ef550 <col:30> '_ForwardIterator' lvalue ParmVar 0x64cd5d0 '__first' '_ForwardIterator'
|   | |     |   |-DeclRefExpr 0x64ef578 <col:39> '_ForwardIterator' lvalue ParmVar 0x64cd640 '__last' '_ForwardIterator'
|   | |     |   `-CallExpr 0x64ef628 <col:47, col:53> '<dependent type>'
|   | |     |     `-UnresolvedMemberExpr 0x64ef5b8 <col:47> '<bound member function type>' lvalue
|   | |     `-CompoundStmt 0x64efc38 <line:1065:4, line:1070:4>
|   | |       |-DeclStmt 0x64ef750 <line:1066:6, col:38>
|   | |       | `-VarDecl 0x64ef6d0 <col:6, col:31> __mid '_ForwardIterator'
|   | |       |   `-DeclRefExpr 0x64ef728 <col:31> '_ForwardIterator' lvalue ParmVar 0x64cd5d0 '__first' '_ForwardIterator'
|   | |       |-CallExpr 0x64ef878 <line:1067:6, col:32> '<dependent type>'
|   | |       | |-UnresolvedLookupExpr 0x64ef788 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x63dd690
|   | |       | |-DeclRefExpr 0x64ef7e0 <col:19> '_ForwardIterator' lvalue Var 0x64ef6d0 '__mid' '_ForwardIterator'
|   | |       | `-CallExpr 0x64ef850 <col:26, col:31> '<dependent type>'
|   | |       |   `-MemberExpr 0x64ef820 <col:26> '<bound member function type>' ->size 0x64c37e0
|   | |       |     `-CXXThisExpr 0x64ef808 <col:26> 'vector<_Bool, type-parameter-0-0> *' this
|   | |       |-CallExpr 0x64efa28 <line:1068:6, col:39> '<dependent type>'
|   | |       | |-UnresolvedLookupExpr 0x64ef8d0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|   | |       | |-DeclRefExpr 0x64ef928 <col:16> '_ForwardIterator' lvalue ParmVar 0x64cd5d0 '__first' '_ForwardIterator'
|   | |       | |-DeclRefExpr 0x64ef950 <col:25> '_ForwardIterator' lvalue Var 0x64ef6d0 '__mid' '_ForwardIterator'
|   | |       | `-CallExpr 0x64efa00 <col:32, col:38> '<dependent type>'
|   | |       |   `-UnresolvedMemberExpr 0x64ef990 <col:32> '<bound member function type>' lvalue
|   | |       `-CallExpr 0x64efbf8 <line:1069:6, col:33> '<dependent type>'
|   | |         |-UnresolvedMemberExpr 0x64efa80 <col:6> '<bound member function type>' lvalue
|   | |         |-CallExpr 0x64efb80 <col:13, col:17> '<dependent type>'
|   | |         | `-UnresolvedMemberExpr 0x64efb10 <col:13> '<bound member function type>' lvalue
|   | |         |-DeclRefExpr 0x64efba8 <col:20> '_ForwardIterator' lvalue Var 0x64ef6d0 '__mid' '_ForwardIterator'
|   | |         `-DeclRefExpr 0x64efbd0 <col:27> '_ForwardIterator' lvalue ParmVar 0x64cd640 '__last' '_ForwardIterator'
|   |-FunctionTemplateDecl 0x64cdc90 <line:1077:5, line:1081:42> _M_insert_dispatch
|   | |-TemplateTypeParmDecl 0x64cd8d0 <line:1077:14, col:23> typename _Integer
|   | |-CXXMethodDecl 0x64cdbf0 <line:1078:7, line:1081:42> _M_insert_dispatch 'void (iterator, _Integer, _Integer, struct std::__true_type)'
|   | | |-ParmVarDecl 0x64cd960 <line:1079:26, col:35> __pos 'iterator':'struct std::_Bit_iterator'
|   | | |-ParmVarDecl 0x64cd9d0 <col:42, col:51> __n '_Integer'
|   | | |-ParmVarDecl 0x64cda40 <col:56, col:65> __x '_Integer'
|   | | |-ParmVarDecl 0x64cdab0 <line:1080:5> 'struct std::__true_type'
|   | | `-CompoundStmt 0x64efdc8 <line:1081:7, col:42>
|   | |   `-CallExpr 0x64efd88 <col:9, col:39> '<dependent type>'
|   | |     |-MemberExpr 0x64efce0 <col:9> '<bound member function type>' ->_M_fill_insert 0x64d1860
|   | |     | `-CXXThisExpr 0x64efcc8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|   | |     |-DeclRefExpr 0x64efd10 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64cd960 '__pos' 'iterator':'struct std::_Bit_iterator'
|   | |     |-DeclRefExpr 0x64efd38 <col:31> '_Integer' lvalue ParmVar 0x64cd9d0 '__n' '_Integer'
|   | |     `-DeclRefExpr 0x64efd60 <col:36> '_Integer' lvalue ParmVar 0x64cda40 '__x' '_Integer'
|   |-FunctionTemplateDecl 0x64d15d0 <line:1083:5, line:1089:40> _M_insert_dispatch
|   | |-TemplateTypeParmDecl 0x64cdd00 <line:1083:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64d1530 <line:1084:7, line:1089:40> _M_insert_dispatch 'void (iterator, _InputIterator, _InputIterator, struct std::__false_type)'
|   | | |-ParmVarDecl 0x64cdd90 <line:1085:26, col:35> __pos 'iterator':'struct std::_Bit_iterator'
|   | | |-ParmVarDecl 0x64cde00 <line:1086:5, col:20> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64cde70 <col:29, col:44> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64cdee0 <line:1087:5> 'struct std::__false_type'
|   | | `-CompoundStmt 0x64f1d08 <line:1088:7, line:1089:40>
|   | |   `-CallExpr 0x64f1cc0 <line:1088:9, line:1089:37> '<dependent type>'
|   | |     |-UnresolvedMemberExpr 0x64efe00 <line:1088:9> '<bound member function type>' lvalue
|   | |     |-DeclRefExpr 0x64efe70 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64cdd90 '__pos' 'iterator':'struct std::_Bit_iterator'
|   | |     |-DeclRefExpr 0x64efe98 <col:32> '_InputIterator' lvalue ParmVar 0x64cde00 '__first' '_InputIterator'
|   | |     |-DeclRefExpr 0x64efec0 <col:41> '_InputIterator' lvalue ParmVar 0x64cde70 '__last' '_InputIterator'
|   | |     `-CallExpr 0x64f1c90 <line:1089:4, col:36> '<dependent type>'
|   | |       |-UnresolvedLookupExpr 0x64f1c10 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x63d1da0
|   | |       `-DeclRefExpr 0x64f1c68 <col:29> '_InputIterator' lvalue ParmVar 0x64cde00 '__first' '_InputIterator'
|   |-CXXMethodDecl 0x64d1860 <line:1091:5, line:1092:64> _M_fill_insert 'void (iterator, size_type, _Bool)'
|   | |-ParmVarDecl 0x64d1650 <col:20, col:29> __position 'iterator':'struct std::_Bit_iterator'
|   | |-ParmVarDecl 0x64d16c0 <col:41, col:51> __n 'size_type':'unsigned long'
|   | `-ParmVarDecl 0x64d1730 <col:56, col:61> __x '_Bool'
|   |-FunctionTemplateDecl 0x64d1d20 <line:1094:5, line:1104:7> _M_insert_range
|   | |-TemplateTypeParmDecl 0x64d1920 <line:1094:14, col:23> typename _InputIterator
|   | |-CXXMethodDecl 0x64d1c80 <line:1095:7, line:1104:7> _M_insert_range 'void (iterator, _InputIterator, _InputIterator, std::input_iterator_tag)'
|   | | |-ParmVarDecl 0x64d19b0 <line:1096:23, col:32> __pos 'iterator':'struct std::_Bit_iterator'
|   | | |-ParmVarDecl 0x64d1a20 <col:39, col:54> __first '_InputIterator'
|   | | |-ParmVarDecl 0x64d1a90 <line:1097:9, col:24> __last '_InputIterator'
|   | | |-ParmVarDecl 0x64d1b40 <col:32, col:37> 'std::input_iterator_tag':'struct std::input_iterator_tag'
|   | | `-CompoundStmt 0x64f2120 <line:1098:7, line:1104:7>
|   | |   `-ForStmt 0x64f20e0 <line:1099:2, line:1103:4>
|   | |     |-<<<NULL>>>
|   | |     |-<<<NULL>>>
|   | |     |-CXXOperatorCallExpr 0x64f1df8 <line:1099:9, col:20> '<dependent type>'
|   | |     | |-UnresolvedLookupExpr 0x64f1d78 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|   | |     | |-DeclRefExpr 0x64f1d28 <col:9> '_InputIterator' lvalue ParmVar 0x64d1a20 '__first' '_InputIterator'
|   | |     | `-DeclRefExpr 0x64f1d50 <col:20> '_InputIterator' lvalue ParmVar 0x64d1a90 '__last' '_InputIterator'
|   | |     |-UnaryOperator 0x64f1e68 <col:28, col:30> '<dependent type>' prefix '++'
|   | |     | `-DeclRefExpr 0x64f1e40 <col:30> '_InputIterator' lvalue ParmVar 0x64d1a20 '__first' '_InputIterator'
|   | |     `-CompoundStmt 0x64f20b8 <line:1100:4, line:1103:4>
|   | |       |-BinaryOperator 0x64f1fe8 <line:1101:6, col:36> '<dependent type>' '='
|   | |       | |-DeclRefExpr 0x64f1e88 <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64d19b0 '__pos' 'iterator':'struct std::_Bit_iterator'
|   | |       | `-CallExpr 0x64f1fb0 <col:14, col:36> '<dependent type>'
|   | |       |   |-UnresolvedMemberExpr 0x64f1ec8 <col:14> '<bound member function type>' lvalue
|   | |       |   |-DeclRefExpr 0x64f1f40 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64d19b0 '__pos' 'iterator':'struct std::_Bit_iterator'
|   | |       |   `-UnaryOperator 0x64f1f90 <col:28, col:29> '<dependent type>' prefix '*'
|   | |       |     `-DeclRefExpr 0x64f1f68 <col:29> '_InputIterator' lvalue ParmVar 0x64d1a20 '__first' '_InputIterator'
|   | |       `-CXXOperatorCallExpr 0x64f2078 <line:1102:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
|   | |         |-ImplicitCastExpr 0x64f2060 <col:6> 'iterator &(*)(void)' <FunctionToPointerDecay>
|   | |         | `-DeclRefExpr 0x64f2038 <col:6> 'iterator &(void)' lvalue CXXMethod 0x64b4a40 'operator++' 'iterator &(void)'
|   | |         `-DeclRefExpr 0x64f2010 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64d19b0 '__pos' 'iterator':'struct std::_Bit_iterator'
|   |-FunctionTemplateDecl 0x64d2190 <line:1106:5, line:1109:59> _M_insert_range
|   | |-TemplateTypeParmDecl 0x64d1d90 <line:1106:14, col:23> typename _ForwardIterator
|   | |-CXXMethodDecl 0x64d20f0 <line:1107:7, line:1109:59> _M_insert_range 'void (iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
|   | | |-ParmVarDecl 0x64d1e20 <line:1108:23, col:32> __position 'iterator':'struct std::_Bit_iterator'
|   | | |-ParmVarDecl 0x64d1e90 <col:44, col:61> __first '_ForwardIterator'
|   | | |-ParmVarDecl 0x64d1f00 <line:1109:9, col:26> __last '_ForwardIterator'
|   | | `-ParmVarDecl 0x64d1fb0 <col:34, col:39> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
|   |-CXXMethodDecl 0x64d2390 <line:1111:5, line:1112:48> _M_insert_aux 'void (iterator, _Bool)'
|   | |-ParmVarDecl 0x64d2210 <col:19, col:28> __position 'iterator':'struct std::_Bit_iterator'
|   | `-ParmVarDecl 0x64d2280 <col:40, col:45> __x '_Bool'
|   |-CXXMethodDecl 0x64d2590 <line:1114:5, line:1122:5> _M_check_len 'size_type (size_type, const char *) const'
|   | |-ParmVarDecl 0x64d2450 <line:1115:18, col:28> __n 'size_type':'unsigned long'
|   | |-ParmVarDecl 0x64d24c0 <col:33, col:45> __s 'const char *'
|   | `-CompoundStmt 0x64f2bd0 <line:1116:5, line:1122:5>
|   |   |-IfStmt 0x64f24d8 <line:1117:7, line:1118:31>
|   |   | |-<<<NULL>>>
|   |   | |-CXXOperatorCallExpr 0x64f2368 <line:1117:11, col:33> '<dependent type>'
|   |   | | |-UnresolvedLookupExpr 0x64f22f8 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
|   |   | | |-CXXOperatorCallExpr 0x64f2288 <col:11, col:29> '<dependent type>'
|   |   | | | |-UnresolvedLookupExpr 0x64f2220 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
|   |   | | | |-CallExpr 0x64f2188 <col:11, col:20> '<dependent type>'
|   |   | | | | `-MemberExpr 0x64f2158 <col:11> '<bound member function type>' ->max_size 0x64c38a0
|   |   | | | |   `-CXXThisExpr 0x64f2140 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this
|   |   | | | `-CallExpr 0x64f21f8 <col:24, col:29> '<dependent type>'
|   |   | | |   `-MemberExpr 0x64f21c8 <col:24> '<bound member function type>' ->size 0x64c37e0
|   |   | | |     `-CXXThisExpr 0x64f21b0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this
|   |   | | `-DeclRefExpr 0x64f22d0 <col:33> 'size_type':'unsigned long' lvalue ParmVar 0x64d2450 '__n' 'size_type':'unsigned long'
|   |   | |-CallExpr 0x64f2490 <line:1118:2, col:31> 'void'
|   |   | | |-ImplicitCastExpr 0x64f2478 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x64f2450 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a040 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
|   |   | | `-ImplicitCastExpr 0x64f24c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <LValueToRValue>
|   |   | |   `-ParenExpr 0x64f2430 <col:24, col:30> 'const char *' lvalue
|   |   | |     `-DeclRefExpr 0x64f2408 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_bvector.h:1118:27> 'const char *' lvalue ParmVar 0x64d24c0 '__s' 'const char *'
|   |   | `-<<<NULL>>>
|   |   |-DeclStmt 0x64f27e8 <line:1120:7, col:61>
|   |   | `-VarDecl 0x64f2520 <col:7, col:60> __len 'const size_type':'const unsigned long'
|   |   |   `-CXXOperatorCallExpr 0x64f27a0 <col:31, col:60> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x64f2738 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|   |   |     |-CallExpr 0x64f25c0 <col:31, col:36> '<dependent type>'
|   |   |     | `-MemberExpr 0x64f2590 <col:31> '<bound member function type>' ->size 0x64c37e0
|   |   |     |   `-CXXThisExpr 0x64f2578 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this
|   |   |     `-CallExpr 0x64f2700 <col:40, col:60> '<dependent type>'
|   |   |       |-UnresolvedLookupExpr 0x64f2608 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = 'max' 0x6409aa0 0x640a690
|   |   |       |-CallExpr 0x64f26b0 <col:49, col:54> '<dependent type>'
|   |   |       | `-MemberExpr 0x64f2680 <col:49> '<bound member function type>' ->size 0x64c37e0
|   |   |       |   `-CXXThisExpr 0x64f2668 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this
|   |   |       `-DeclRefExpr 0x64f26d8 <col:57> 'size_type':'unsigned long' lvalue ParmVar 0x64d2450 '__n' 'size_type':'unsigned long'
|   |   `-ReturnStmt 0x64f2bb0 <line:1121:7, col:68>
|   |     `-ConditionalOperator 0x64f2b80 <col:14, col:68> '<dependent type>'
|   |       |-ParenExpr 0x64f2ac8 <col:14, col:51> '<dependent type>'
|   |       | `-BinaryOperator 0x64f2aa0 <col:15, col:50> '<dependent type>' '||'
|   |       |   |-CXXOperatorCallExpr 0x64f2908 <col:15, col:28> '<dependent type>'
|   |       |   | |-UnresolvedLookupExpr 0x64f2898 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
|   |       |   | |-DeclRefExpr 0x64f2800 <col:15> 'const size_type':'const unsigned long' lvalue Var 0x64f2520 '__len' 'const size_type':'const unsigned long'
|   |       |   | `-CallExpr 0x64f2870 <col:23, col:28> '<dependent type>'
|   |       |   |   `-MemberExpr 0x64f2840 <col:23> '<bound member function type>' ->size 0x64c37e0
|   |       |   |     `-CXXThisExpr 0x64f2828 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this
|   |       |   `-CXXOperatorCallExpr 0x64f2a58 <col:33, col:50> '<dependent type>'
|   |       |     |-UnresolvedLookupExpr 0x64f29e8 <col:39> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
|   |       |     |-DeclRefExpr 0x64f2950 <col:33> 'const size_type':'const unsigned long' lvalue Var 0x64f2520 '__len' 'const size_type':'const unsigned long'
|   |       |     `-CallExpr 0x64f29c0 <col:41, col:50> '<dependent type>'
|   |       |       `-MemberExpr 0x64f2990 <col:41> '<bound member function type>' ->max_size 0x64c38a0
|   |       |         `-CXXThisExpr 0x64f2978 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this
|   |       |-CallExpr 0x64f2b30 <col:55, col:64> '<dependent type>'
|   |       | `-MemberExpr 0x64f2b00 <col:55> '<bound member function type>' ->max_size 0x64c38a0
|   |       |   `-CXXThisExpr 0x64f2ae8 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this
|   |       `-DeclRefExpr 0x64f2b58 <col:68> 'const size_type':'const unsigned long' lvalue Var 0x64f2520 '__len' 'const size_type':'const unsigned long'
|   `-CXXMethodDecl 0x64d2750 <line:1124:5, line:1126:40> _M_erase_at_end 'void (iterator)'
|     |-ParmVarDecl 0x64d2650 <line:1125:21, col:30> __pos 'iterator':'struct std::_Bit_iterator'
|     `-CompoundStmt 0x64f2d18 <line:1126:5, col:40>
|       `-BinaryOperator 0x64f2cf0 <col:7, col:33> '<dependent type>' '='
|         |-CXXDependentScopeMemberExpr 0x64f2c70 <col:7, col:21> '<dependent type>' lvalue
|         | `-CXXDependentScopeMemberExpr 0x64f2c18 <col:7, col:13> '<dependent type>' lvalue
|         |   `-CXXThisExpr 0x64f2c00 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
|         `-DeclRefExpr 0x64f2cc8 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x64d2650 '__pos' 'iterator':'struct std::_Bit_iterator'
|-NamespaceDecl 0x64f2d70 prev 0x64c0770 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:59:1, line:812:1> std
| |-original Namespace 0x62eacf0 'std'
| |-VisibilityAttr 0x64f2dd0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:67:49, col:67> Default
| |-CXXMethodDecl 0x64f3240 parent 0x6489700 prev 0x648d8b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:63:3, line:85:5> reserve 'void (size_type)'
| | |-ParmVarDecl 0x64f31c0 <line:66:13, col:23> __n 'size_type':'unsigned long'
| | `-CompoundStmt 0x64f48b0 <line:67:5, line:85:5>
| |   |-IfStmt 0x64f35d8 <line:68:7, line:69:45>
| |   | |-<<<NULL>>>
| |   | |-CXXOperatorCallExpr 0x64f3458 <line:68:11, col:32> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x64f33e8 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
| |   | | |-DeclRefExpr 0x64f3328 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x64f31c0 '__n' 'size_type':'unsigned long'
| |   | | `-CallExpr 0x64f33c0 <col:17, col:32> '<dependent type>'
| |   | |   `-CXXDependentScopeMemberExpr 0x64f3368 <col:17, col:23> '<dependent type>' lvalue
| |   | |     `-CXXThisExpr 0x64f3350 <col:17> 'vector<_Tp, _Alloc> *' this
| |   | |-CallExpr 0x64f3590 <line:69:2, col:45> 'void'
| |   | | |-ImplicitCastExpr 0x64f3578 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
| |   | | | `-DeclRefExpr 0x64f3550 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x636a040 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'
| |   | | `-ImplicitCastExpr 0x64f35c0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/x86_64-linux-gnu/c++/4.8/bits/c++config.h:453:24, col:30> 'const char *' <ArrayToPointerDecay>
| |   | |   `-ParenExpr 0x64f3530 <col:24, col:30> 'const char [16]' lvalue
| |   | |     `-StringLiteral 0x64f34f8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:69:27> 'const char [16]' lvalue "vector::reserve"
| |   | `-<<<NULL>>>
| |   `-IfStmt 0x64f4880 <line:70:7, line:84:2>
| |     |-<<<NULL>>>
| |     |-CXXOperatorCallExpr 0x64f3738 <line:70:11, col:30> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x64f36c8 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x63c85a0 0x63e4aa0 0x63ea880 0x64aaae0
| |     | |-CallExpr 0x64f3678 <col:11, col:26> '<dependent type>'
| |     | | `-CXXDependentScopeMemberExpr 0x64f3620 <col:11, col:17> '<dependent type>' lvalue
| |     | |   `-CXXThisExpr 0x64f3608 <col:11> 'vector<_Tp, _Alloc> *' this
| |     | `-DeclRefExpr 0x64f36a0 <col:30> 'size_type':'unsigned long' lvalue ParmVar 0x64f31c0 '__n' 'size_type':'unsigned long'
| |     |-CompoundStmt 0x64f4830 <line:71:2, line:84:2>
| |     | |-DeclStmt 0x64f3858 <line:72:4, col:39>
| |     | | `-VarDecl 0x64f3790 <col:4, col:38> __old_size 'const size_type':'const unsigned long'
| |     | |   `-CallExpr 0x64f3830 <col:33, col:38> '<dependent type>'
| |     | |     `-MemberExpr 0x64f3800 <col:33> '<bound member function type>' ->size 0x648d290
| |     | |       `-CXXThisExpr 0x64f37e8 <col:33> 'vector<_Tp, _Alloc> *' this
| |     | |-DeclStmt 0x64f3b90 <line:73:4, line:75:71>
| |     | | `-VarDecl 0x64f3880 <line:73:4, line:75:70> __tmp 'pointer':'typename _Base::pointer'
| |     | |   `-CallExpr 0x64f3b50 <line:73:20, line:75:70> '<dependent type>'
| |     | |     |-UnresolvedMemberExpr 0x64f38f0 <line:73:20> '<bound member function type>' lvalue
| |     | |     |-DeclRefExpr 0x64f3958 <col:41> 'size_type':'unsigned long' lvalue ParmVar 0x64f31c0 '__n' 'size_type':'unsigned long'
| |     | |     |-ParenExpr 0x64f3a48 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1145:56, col:62> '<dependent type>' lvalue
| |     | |     | `-CXXDependentScopeMemberExpr 0x64f39f0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:74:46, col:60> '<dependent type>' lvalue
| |     | |     |   `-CXXDependentScopeMemberExpr 0x64f3998 <col:46, col:52> '<dependent type>' lvalue
| |     | |     |     `-CXXThisExpr 0x64f3980 <col:46> 'vector<_Tp, _Alloc> *' this
| |     | |     `-ParenExpr 0x64f3b30 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_iterator.h:1145:56, col:62> '<dependent type>' lvalue
| |     | |       `-CXXDependentScopeMemberExpr 0x64f3ad8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:75:46, col:60> '<dependent type>' lvalue
| |     | |         `-CXXDependentScopeMemberExpr 0x64f3a80 <col:46, col:52> '<dependent type>' lvalue
| |     | |           `-CXXThisExpr 0x64f3a68 <col:46> 'vector<_Tp, _Alloc> *' this
| |     | |-CallExpr 0x64f3eb0 <line:76:4, line:77:25> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x64f3c20 <line:76:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |     | | |-CXXDependentScopeMemberExpr 0x64f3d00 <col:18, col:32> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x64f3ca8 <col:18, col:24> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x64f3c90 <col:18> 'vector<_Tp, _Alloc> *' this
| |     | | |-CXXDependentScopeMemberExpr 0x64f3dc8 <col:42, col:56> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x64f3d70 <col:42, col:48> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x64f3d58 <col:42> 'vector<_Tp, _Alloc> *' this
| |     | | `-CallExpr 0x64f3e88 <line:77:4, col:24> '<dependent type>'
| |     | |   `-UnresolvedMemberExpr 0x64f3e20 <col:4> '<dependent type>' lvalue
| |     | |-CallExpr 0x64f4260 <line:78:4, line:80:28> '<dependent type>'
| |     | | |-UnresolvedMemberExpr 0x64f3ef0 <line:78:4> '<dependent type>' lvalue
| |     | | |-CXXDependentScopeMemberExpr 0x64f3fc8 <col:18, col:32> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x64f3f70 <col:18, col:24> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x64f3f58 <col:18> 'vector<_Tp, _Alloc> *' this
| |     | | `-CXXOperatorCallExpr 0x64f4218 <line:79:4, line:80:20> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x64f41b0 <col:4> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     | |   |-CXXDependentScopeMemberExpr 0x64f4090 <line:79:4, col:18> '<dependent type>' lvalue
| |     | |   | `-CXXDependentScopeMemberExpr 0x64f4038 <col:4, col:10> '<dependent type>' lvalue
| |     | |   |   `-CXXThisExpr 0x64f4020 <col:4> 'vector<_Tp, _Alloc> *' this
| |     | |   `-CXXDependentScopeMemberExpr 0x64f4158 <line:80:6, col:20> '<dependent type>' lvalue
| |     | |     `-CXXDependentScopeMemberExpr 0x64f4100 <col:6, col:12> '<dependent type>' lvalue
| |     | |       `-CXXThisExpr 0x64f40e8 <col:6> 'vector<_Tp, _Alloc> *' this
| |     | |-BinaryOperator 0x64f4388 <line:81:4, col:29> '<dependent type>' '='
| |     | | |-CXXDependentScopeMemberExpr 0x64f4308 <col:4, col:18> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x64f42b0 <col:4, col:10> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x64f4298 <col:4> 'vector<_Tp, _Alloc> *' this
| |     | | `-DeclRefExpr 0x64f4360 <col:29> 'pointer':'typename _Base::pointer' lvalue Var 0x64f3880 '__tmp' 'pointer':'typename _Base::pointer'
| |     | |-BinaryOperator 0x64f4578 <line:82:4, col:38> '<dependent type>' '='
| |     | | |-CXXDependentScopeMemberExpr 0x64f4420 <col:4, col:18> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x64f43c8 <col:4, col:10> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x64f43b0 <col:4> 'vector<_Tp, _Alloc> *' this
| |     | | `-CXXOperatorCallExpr 0x64f4530 <col:30, col:38> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x64f44c8 <col:36> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     | |   |-DeclRefExpr 0x64f4478 <col:30> 'pointer':'typename _Base::pointer' lvalue Var 0x64f3880 '__tmp' 'pointer':'typename _Base::pointer'
| |     | |   `-DeclRefExpr 0x64f44a0 <col:38> 'const size_type':'const unsigned long' lvalue Var 0x64f3790 '__old_size' 'const size_type':'const unsigned long'
| |     | `-BinaryOperator 0x64f4808 <line:83:4, col:63> '<dependent type>' '='
| |     |   |-CXXDependentScopeMemberExpr 0x64f4610 <col:4, col:18> '<dependent type>' lvalue
| |     |   | `-CXXDependentScopeMemberExpr 0x64f45b8 <col:4, col:10> '<dependent type>' lvalue
| |     |   |   `-CXXThisExpr 0x64f45a0 <col:4> 'vector<_Tp, _Alloc> *' this
| |     |   `-CXXOperatorCallExpr 0x64f47c0 <col:38, col:63> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x64f4758 <col:61> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |     |-CXXDependentScopeMemberExpr 0x64f46d8 <col:38, col:52> '<dependent type>' lvalue
| |     |     | `-CXXDependentScopeMemberExpr 0x64f4680 <col:38, col:44> '<dependent type>' lvalue
| |     |     |   `-CXXThisExpr 0x64f4668 <col:38> 'vector<_Tp, _Alloc> *' this
| |     |     `-DeclRefExpr 0x64f4730 <col:63> 'size_type':'unsigned long' lvalue ParmVar 0x64f31c0 '__n' 'size_type':'unsigned long'
| |     `-<<<NULL>>>
| |-CXXMethodDecl 0x64f5160 parent 0x6489700 prev 0x6492ca0 <line:105:3, line:130:5> insert 'typename vector<_Tp, _Alloc>::iterator (iterator, const value_type &)'
| | |-ParmVarDecl 0x64f4e70 <line:108:12, col:21> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |-ParmVarDecl 0x64f4ee0 <col:33, col:51> __x 'const value_type &'
| | `-CompoundStmt 0x64f5f38 <line:109:5, line:130:5>
| |   |-DeclStmt 0x64f5440 <line:110:7, col:49>
| |   | `-VarDecl 0x64f5260 <col:7, col:48> __n 'const size_type':'const unsigned long'
| |   |   `-CXXOperatorCallExpr 0x64f53f8 <col:29, col:48> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x64f5390 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |   |     |-DeclRefExpr 0x64f52b8 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f4e70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   |     `-CallExpr 0x64f5368 <col:42, col:48> '<dependent type>'
| |   |       `-UnresolvedMemberExpr 0x64f52f8 <col:42> '<bound member function type>' lvalue
| |   |-IfStmt 0x64f5d08 <line:111:7, line:128:2>
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x64f5850 <line:111:11, line:112:25> '<dependent type>' '&&'
| |   | | |-CXXOperatorCallExpr 0x64f5668 <line:111:11, col:52> '<dependent type>'
| |   | | | |-UnresolvedLookupExpr 0x64f55e8 <col:35> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |   | | | |-CXXDependentScopeMemberExpr 0x64f54c8 <col:11, col:25> '<dependent type>' lvalue
| |   | | | | `-CXXDependentScopeMemberExpr 0x64f5470 <col:11, col:17> '<dependent type>' lvalue
| |   | | | |   `-CXXThisExpr 0x64f5458 <col:11> 'vector<_Tp, _Alloc> *' this
| |   | | | `-CXXDependentScopeMemberExpr 0x64f5590 <col:38, col:52> '<dependent type>' lvalue
| |   | | |   `-CXXDependentScopeMemberExpr 0x64f5538 <col:38, col:44> '<dependent type>' lvalue
| |   | | |     `-CXXThisExpr 0x64f5520 <col:38> 'vector<_Tp, _Alloc> *' this
| |   | | `-CXXOperatorCallExpr 0x64f5808 <line:112:7, col:25> '<dependent type>'
| |   | |   |-UnresolvedLookupExpr 0x64f5788 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
| |   | |   |-DeclRefExpr 0x64f56b0 <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f4e70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | |   `-CallExpr 0x64f5760 <col:21, col:25> '<dependent type>'
| |   | |     `-UnresolvedMemberExpr 0x64f56f0 <col:21> '<bound member function type>' lvalue
| |   | |-CompoundStmt 0x64f5ba8 <line:113:2, line:116:2>
| |   | | |-CallExpr 0x64f5a80 <line:114:4, col:72> '<dependent type>'
| |   | | | |-CXXDependentScopeMemberExpr 0x64f58c8 <col:4, col:19> '<dependent type>' lvalue
| |   | | | |-CXXDependentScopeMemberExpr 0x64f5938 <col:29, col:35> '<dependent type>' lvalue
| |   | | | | `-CXXThisExpr 0x64f5920 <col:29> 'vector<_Tp, _Alloc> *' this
| |   | | | |-CXXDependentScopeMemberExpr 0x64f5a00 <col:44, col:58> '<dependent type>' lvalue
| |   | | | | `-CXXDependentScopeMemberExpr 0x64f59a8 <col:44, col:50> '<dependent type>' lvalue
| |   | | | |   `-CXXThisExpr 0x64f5990 <col:44> 'vector<_Tp, _Alloc> *' this
| |   | | | `-DeclRefExpr 0x64f5a58 <col:69> 'const value_type':'const _Tp' lvalue ParmVar 0x64f4ee0 '__x' 'const value_type &'
| |   | | `-UnaryOperator 0x64f5b88 <line:115:4, col:20> '<dependent type>' prefix '++'
| |   | |   `-CXXDependentScopeMemberExpr 0x64f5b30 <col:6, col:20> '<dependent type>' lvalue
| |   | |     `-CXXDependentScopeMemberExpr 0x64f5ad8 <col:6, col:12> '<dependent type>' lvalue
| |   | |       `-CXXThisExpr 0x64f5ac0 <col:6> 'vector<_Tp, _Alloc> *' this
| |   | `-CompoundStmt 0x64f5ce8 <line:118:2, line:128:2>
| |   |   `-CallExpr 0x64f5cb0 <line:127:6, col:35> '<dependent type>'
| |   |     |-MemberExpr 0x64f5c30 <col:6> '<bound member function type>' ->_M_insert_aux 0x649d570
| |   |     | `-CXXThisExpr 0x64f5bd0 <col:6> 'vector<_Tp, _Alloc> *' this
| |   |     |-DeclRefExpr 0x64f5c60 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f4e70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   |     `-DeclRefExpr 0x64f5c88 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0x64f4ee0 '__x' 'const value_type &'
| |   `-ReturnStmt 0x64f5f18 <line:129:7, col:51>
| |     `-CXXUnresolvedConstructExpr 0x64f5ee8 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |       `-CXXOperatorCallExpr 0x64f5ea0 <col:23, col:48> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x64f5e38 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |         |-CXXDependentScopeMemberExpr 0x64f5db8 <col:23, col:37> '<dependent type>' lvalue
| |         | `-CXXDependentScopeMemberExpr 0x64f5d60 <col:23, col:29> '<dependent type>' lvalue
| |         |   `-CXXThisExpr 0x64f5d48 <col:23> 'vector<_Tp, _Alloc> *' this
| |         `-DeclRefExpr 0x64f5e10 <col:48> 'const size_type':'const unsigned long' lvalue Var 0x64f5260 '__n' 'const size_type':'const unsigned long'
| |-CXXMethodDecl 0x64f6730 parent 0x6489700 prev 0x64934e0 <line:132:3, line:142:5> erase 'typename vector<_Tp, _Alloc>::iterator (iterator)'
| | |-ParmVarDecl 0x64f64c0 <line:135:11, col:20> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | `-CompoundStmt 0x64f7088 <line:136:5, line:142:5>
| |   |-IfStmt 0x64f6d10 <line:137:7, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:497:62>
| |   | |-<<<NULL>>>
| |   | |-CXXOperatorCallExpr 0x64f6a40 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:137:11, col:33> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x64f69c0 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |   | | |-CXXOperatorCallExpr 0x64f68c8 <col:11, col:24> '<dependent type>'
| |   | | | |-UnresolvedLookupExpr 0x64f6860 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | | | |-DeclRefExpr 0x64f6818 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f64c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | | `-IntegerLiteral 0x64f6840 <col:24> 'int' 1
| |   | | `-CallExpr 0x64f6998 <col:29, col:33> '<dependent type>'
| |   | |   `-UnresolvedMemberExpr 0x64f6928 <col:29> '<bound member function type>' lvalue
| |   | |-CallExpr 0x64f6cd0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:497:39, col:62> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x64f6aa8 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |   | | |-CXXOperatorCallExpr 0x64f6bb0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:138:17, col:30> '<dependent type>'
| |   | | | |-UnresolvedLookupExpr 0x64f6b48 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | | | |-DeclRefExpr 0x64f6b00 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f64c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | | `-IntegerLiteral 0x64f6b28 <col:30> 'int' 1
| |   | | |-CallExpr 0x64f6c80 <col:33, col:37> '<dependent type>'
| |   | | | `-UnresolvedMemberExpr 0x64f6c10 <col:33> '<bound member function type>' lvalue
| |   | | `-DeclRefExpr 0x64f6ca8 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f64c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | `-<<<NULL>>>
| |   |-UnaryOperator 0x64f6e08 <line:139:7, col:23> '<dependent type>' prefix '--'
| |   | `-CXXDependentScopeMemberExpr 0x64f6db0 <col:9, col:23> '<dependent type>' lvalue
| |   |   `-CXXDependentScopeMemberExpr 0x64f6d58 <col:9, col:15> '<dependent type>' lvalue
| |   |     `-CXXThisExpr 0x64f6d40 <col:9> 'vector<_Tp, _Alloc> *' this
| |   |-CallExpr 0x64f7008 <line:140:7, col:68> '<dependent type>'
| |   | |-CXXDependentScopeMemberExpr 0x64f6e78 <col:7, col:22> '<dependent type>' lvalue
| |   | |-CXXDependentScopeMemberExpr 0x64f6ee8 <col:30, col:36> '<dependent type>' lvalue
| |   | | `-CXXThisExpr 0x64f6ed0 <col:30> 'vector<_Tp, _Alloc> *' this
| |   | `-CXXDependentScopeMemberExpr 0x64f6fb0 <col:45, col:59> '<dependent type>' lvalue
| |   |   `-CXXDependentScopeMemberExpr 0x64f6f58 <col:45, col:51> '<dependent type>' lvalue
| |   |     `-CXXThisExpr 0x64f6f40 <col:45> 'vector<_Tp, _Alloc> *' this
| |   `-ReturnStmt 0x64f7068 <line:141:7, col:14>
| |     `-DeclRefExpr 0x64f7040 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f64c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |-CXXMethodDecl 0x64f7900 parent 0x6489700 prev 0x6493720 <line:144:3, line:156:5> erase 'typename vector<_Tp, _Alloc>::iterator (iterator, iterator)'
| | |-ParmVarDecl 0x64f7610 <line:147:11, col:20> __first 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |-ParmVarDecl 0x64f7680 <col:29, col:38> __last 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | `-CompoundStmt 0x64f8308 <line:148:5, line:156:5>
| |   |-IfStmt 0x64f8290 <line:149:7, line:154:2>
| |   | |-<<<NULL>>>
| |   | |-CXXOperatorCallExpr 0x64f7ac0 <line:149:11, col:22> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x64f7a40 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |   | | |-DeclRefExpr 0x64f79f0 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7610 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | `-DeclRefExpr 0x64f7a18 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7680 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | |-CompoundStmt 0x64f8268 <line:150:2, line:154:2>
| |   | | |-IfStmt 0x64f7ec0 <line:151:4, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:497:62>
| |   | | | |-<<<NULL>>>
| |   | | | |-CXXOperatorCallExpr 0x64f7cc0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:151:8, col:22> '<dependent type>'
| |   | | | | |-UnresolvedLookupExpr 0x64f7c40 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |   | | | | |-DeclRefExpr 0x64f7b08 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7680 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | | | `-CallExpr 0x64f7bb8 <col:18, col:22> '<dependent type>'
| |   | | | |   `-UnresolvedMemberExpr 0x64f7b48 <col:18> '<bound member function type>' lvalue
| |   | | | |-CallExpr 0x64f7e80 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:497:39, col:62> '<dependent type>'
| |   | | | | |-UnresolvedLookupExpr 0x64f7d28 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |   | | | | |-DeclRefExpr 0x64f7d80 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:152:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7680 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | | | |-CallExpr 0x64f7e30 <col:29, col:33> '<dependent type>'
| |   | | | | | `-UnresolvedMemberExpr 0x64f7dc0 <col:29> '<bound member function type>' lvalue
| |   | | | | `-DeclRefExpr 0x64f7e58 <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7610 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | | | `-<<<NULL>>>
| |   | | `-CallExpr 0x64f8238 <line:153:4, col:53> '<dependent type>'
| |   | |   |-MemberExpr 0x64f7f08 <col:4> '<bound member function type>' ->_M_erase_at_end 0x649d970
| |   | |   | `-CXXThisExpr 0x64f7ef0 <col:4> 'vector<_Tp, _Alloc> *' this
| |   | |   `-CXXOperatorCallExpr 0x64f81f0 <col:20, col:52> '<dependent type>'
| |   | |     |-UnresolvedLookupExpr 0x64f8188 <col:35> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | |     |-CallExpr 0x64f7fb8 <col:20, col:33> '<dependent type>'
| |   | |     | `-CXXDependentScopeMemberExpr 0x64f7f60 <col:20, col:28> '<dependent type>' lvalue
| |   | |     |   `-DeclRefExpr 0x64f7f38 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7610 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | |     `-ParenExpr 0x64f8168 <col:37, col:52> '<dependent type>'
| |   | |       `-CXXOperatorCallExpr 0x64f8120 <col:38, col:46> '<dependent type>'
| |   | |         |-UnresolvedLookupExpr 0x64f80b8 <col:44> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |   | |         |-CallExpr 0x64f8068 <col:38, col:42> '<dependent type>'
| |   | |         | `-UnresolvedMemberExpr 0x64f7ff8 <col:38> '<bound member function type>' lvalue
| |   | |         `-DeclRefExpr 0x64f8090 <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7680 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |   | `-<<<NULL>>>
| |   `-ReturnStmt 0x64f82e8 <line:155:7, col:14>
| |     `-DeclRefExpr 0x64f82c0 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x64f7610 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |-CXXMethodDecl 0x64f8c10 parent 0x6489700 prev 0x648c460 <line:158:3, line:214:5> operator= 'vector<_Tp, _Alloc> &(const vector<_Tp, _Alloc> &)'
| | |-ParmVarDecl 0x64f89b0 <line:161:15, col:42> __x 'const vector<_Tp, _Alloc> &'
| | `-CompoundStmt 0x63c4cc8 <line:162:5, line:214:5>
| |   |-IfStmt 0x63c4c40 <line:163:7, line:212:2>
| |   | |-<<<NULL>>>
| |   | |-CXXOperatorCallExpr 0x64f8dd8 <line:163:11, col:19> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x64f8d58 <col:16> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |   | | |-UnaryOperator 0x64f8d20 <col:11, col:12> '<dependent type>' prefix '&'
| |   | | | `-DeclRefExpr 0x64f8cf8 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | `-CXXThisExpr 0x64f8d40 <col:19> 'vector<_Tp, _Alloc> *' this
| |   | |-CompoundStmt 0x63c4c10 <line:164:2, line:212:2>
| |   | | |-DeclStmt 0x64f8f30 <line:184:4, col:39>
| |   | | | `-VarDecl 0x64f8e30 <col:4, col:38> __xlen 'const size_type':'const unsigned long'
| |   | | |   `-CallExpr 0x64f8f08 <col:29, col:38> '<dependent type>'
| |   | | |     `-CXXDependentScopeMemberExpr 0x64f8eb0 <col:29, col:33> '<dependent type>' lvalue
| |   | | |       `-DeclRefExpr 0x64f8e88 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |-IfStmt 0x63c4950 <line:185:4, line:210:6>
| |   | | | |-<<<NULL>>>
| |   | | | |-CXXOperatorCallExpr 0x64f9050 <line:185:8, col:26> '<dependent type>'
| |   | | | | |-UnresolvedLookupExpr 0x64f8fe0 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
| |   | | | | |-DeclRefExpr 0x64f8f48 <col:8> 'const size_type':'const unsigned long' lvalue Var 0x64f8e30 '__xlen' 'const size_type':'const unsigned long'
| |   | | | | `-CallExpr 0x64f8fb8 <col:17, col:26> '<dependent type>'
| |   | | | |   `-MemberExpr 0x64f8f88 <col:17> '<bound member function type>' ->capacity 0x648d650
| |   | | | |     `-CXXThisExpr 0x64f8f70 <col:17> 'vector<_Tp, _Alloc> *' this
| |   | | | |-CompoundStmt 0x63c3940 <line:186:6, line:196:6>
| |   | | | | |-DeclStmt 0x64f9340 <line:187:8, line:188:20>
| |   | | | | | `-VarDecl 0x64f90b0 <line:187:8, line:188:19> __tmp 'pointer':'typename _Base::pointer'
| |   | | | | |   `-CallExpr 0x64f9300 <line:187:24, line:188:19> '<dependent type>'
| |   | | | | |     |-UnresolvedMemberExpr 0x64f9120 <line:187:24> '<bound member function type>' lvalue
| |   | | | | |     |-DeclRefExpr 0x64f9188 <col:45> 'const size_type':'const unsigned long' lvalue Var 0x64f8e30 '__xlen' 'const size_type':'const unsigned long'
| |   | | | | |     |-CallExpr 0x64f9230 <col:53, col:63> '<dependent type>'
| |   | | | | |     | `-CXXDependentScopeMemberExpr 0x64f91d8 <col:53, col:57> '<dependent type>' lvalue
| |   | | | | |     |   `-DeclRefExpr 0x64f91b0 <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | | | |     `-CallExpr 0x64f92d8 <line:188:10, col:18> '<dependent type>'
| |   | | | | |       `-CXXDependentScopeMemberExpr 0x64f9280 <col:10, col:14> '<dependent type>' lvalue
| |   | | | | |         `-DeclRefExpr 0x64f9258 <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | | | |-CallExpr 0x64f9608 <line:189:8, line:190:29> '<dependent type>'
| |   | | | | | |-UnresolvedLookupExpr 0x64f9378 <line:189:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |   | | | | | |-CXXDependentScopeMemberExpr 0x64f9458 <col:22, col:36> '<dependent type>' lvalue
| |   | | | | | | `-CXXDependentScopeMemberExpr 0x64f9400 <col:22, col:28> '<dependent type>' lvalue
| |   | | | | | |   `-CXXThisExpr 0x64f93e8 <col:22> 'vector<_Tp, _Alloc> *' this
| |   | | | | | |-CXXDependentScopeMemberExpr 0x64f9520 <col:46, col:60> '<dependent type>' lvalue
| |   | | | | | | `-CXXDependentScopeMemberExpr 0x64f94c8 <col:46, col:52> '<dependent type>' lvalue
| |   | | | | | |   `-CXXThisExpr 0x64f94b0 <col:46> 'vector<_Tp, _Alloc> *' this
| |   | | | | | `-CallExpr 0x64f95e0 <line:190:8, col:28> '<dependent type>'
| |   | | | | |   `-UnresolvedMemberExpr 0x64f9578 <col:8> '<dependent type>' lvalue
| |   | | | | |-CallExpr 0x64f99b8 <line:191:8, line:193:32> '<dependent type>'
| |   | | | | | |-UnresolvedMemberExpr 0x64f9648 <line:191:8> '<dependent type>' lvalue
| |   | | | | | |-CXXDependentScopeMemberExpr 0x64f9720 <col:22, col:36> '<dependent type>' lvalue
| |   | | | | | | `-CXXDependentScopeMemberExpr 0x64f96c8 <col:22, col:28> '<dependent type>' lvalue
| |   | | | | | |   `-CXXThisExpr 0x64f96b0 <col:22> 'vector<_Tp, _Alloc> *' this
| |   | | | | | `-CXXOperatorCallExpr 0x64f9970 <line:192:8, line:193:24> '<dependent type>'
| |   | | | | |   |-UnresolvedLookupExpr 0x64f9908 <col:8> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |   | | | | |   |-CXXDependentScopeMemberExpr 0x64f97e8 <line:192:8, col:22> '<dependent type>' lvalue
| |   | | | | |   | `-CXXDependentScopeMemberExpr 0x64f9790 <col:8, col:14> '<dependent type>' lvalue
| |   | | | | |   |   `-CXXThisExpr 0x64f9778 <col:8> 'vector<_Tp, _Alloc> *' this
| |   | | | | |   `-CXXDependentScopeMemberExpr 0x64f98b0 <line:193:10, col:24> '<dependent type>' lvalue
| |   | | | | |     `-CXXDependentScopeMemberExpr 0x64f9858 <col:10, col:16> '<dependent type>' lvalue
| |   | | | | |       `-CXXThisExpr 0x64f9840 <col:10> 'vector<_Tp, _Alloc> *' this
| |   | | | | |-BinaryOperator 0x64f9ae0 <line:194:8, col:33> '<dependent type>' '='
| |   | | | | | |-CXXDependentScopeMemberExpr 0x64f9a60 <col:8, col:22> '<dependent type>' lvalue
| |   | | | | | | `-CXXDependentScopeMemberExpr 0x64f9a08 <col:8, col:14> '<dependent type>' lvalue
| |   | | | | | |   `-CXXThisExpr 0x64f99f0 <col:8> 'vector<_Tp, _Alloc> *' this
| |   | | | | | `-DeclRefExpr 0x64f9ab8 <col:33> 'pointer':'typename _Base::pointer' lvalue Var 0x64f90b0 '__tmp' 'pointer':'typename _Base::pointer'
| |   | | | | `-BinaryOperator 0x63c3918 <line:195:8, col:67> '<dependent type>' '='
| |   | | | |   |-CXXDependentScopeMemberExpr 0x64f9b78 <col:8, col:22> '<dependent type>' lvalue
| |   | | | |   | `-CXXDependentScopeMemberExpr 0x64f9b20 <col:8, col:14> '<dependent type>' lvalue
| |   | | | |   |   `-CXXThisExpr 0x64f9b08 <col:8> 'vector<_Tp, _Alloc> *' this
| |   | | | |   `-CXXOperatorCallExpr 0x63c38d0 <col:42, col:67> '<dependent type>'
| |   | | | |     |-UnresolvedLookupExpr 0x63c3868 <col:65> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | | | |     |-CXXDependentScopeMemberExpr 0x63c37e8 <col:42, col:56> '<dependent type>' lvalue
| |   | | | |     | `-CXXDependentScopeMemberExpr 0x63c3790 <col:42, col:48> '<dependent type>' lvalue
| |   | | | |     |   `-CXXThisExpr 0x64f9bd0 <col:42> 'vector<_Tp, _Alloc> *' this
| |   | | | |     `-DeclRefExpr 0x63c3840 <col:67> 'const size_type':'const unsigned long' lvalue Var 0x64f8e30 '__xlen' 'const size_type':'const unsigned long'
| |   | | | `-IfStmt 0x63c4920 <line:197:9, line:210:6>
| |   | | |   |-<<<NULL>>>
| |   | | |   |-CXXOperatorCallExpr 0x63c3a88 <line:197:13, col:23> '<dependent type>'
| |   | | |   | |-UnresolvedLookupExpr 0x63c3a18 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630 0x64acd30
| |   | | |   | |-CallExpr 0x63c39c8 <col:13, col:18> '<dependent type>'
| |   | | |   | | `-MemberExpr 0x63c3998 <col:13> '<bound member function type>' ->size 0x648d290
| |   | | |   | |   `-CXXThisExpr 0x63c3980 <col:13> 'vector<_Tp, _Alloc> *' this
| |   | | |   | `-DeclRefExpr 0x63c39f0 <col:23> 'const size_type':'const unsigned long' lvalue Var 0x64f8e30 '__xlen' 'const size_type':'const unsigned long'
| |   | | |   |-CompoundStmt 0x63c3f98 <line:198:6, line:201:6>
| |   | | |   | `-CallExpr 0x63c3f58 <line:199:8, line:200:36> '<dependent type>'
| |   | | |   |   |-UnresolvedLookupExpr 0x63c3af0 <line:199:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |   | | |   |   |-CallExpr 0x63c3dd8 <col:22, col:63> '<dependent type>'
| |   | | |   |   | |-UnresolvedLookupExpr 0x63c3b80 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |   | | |   |   | |-CallExpr 0x63c3c58 <col:32, col:42> '<dependent type>'
| |   | | |   |   | | `-CXXDependentScopeMemberExpr 0x63c3c00 <col:32, col:36> '<dependent type>' lvalue
| |   | | |   |   | |   `-DeclRefExpr 0x63c3bd8 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |   |   | |-CallExpr 0x63c3d00 <col:45, col:53> '<dependent type>'
| |   | | |   |   | | `-CXXDependentScopeMemberExpr 0x63c3ca8 <col:45, col:49> '<dependent type>' lvalue
| |   | | |   |   | |   `-DeclRefExpr 0x63c3c80 <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |   |   | `-CallExpr 0x63c3db0 <col:56, col:62> '<dependent type>'
| |   | | |   |   |   `-UnresolvedMemberExpr 0x63c3d40 <col:56> '<bound member function type>' lvalue
| |   | | |   |   |-CallExpr 0x63c3ea0 <line:200:8, col:12> '<dependent type>'
| |   | | |   |   | `-UnresolvedMemberExpr 0x63c3e30 <col:8> '<bound member function type>' lvalue
| |   | | |   |   `-CallExpr 0x63c3f30 <col:15, col:35> '<dependent type>'
| |   | | |   |     `-UnresolvedMemberExpr 0x63c3ec8 <col:15> '<dependent type>' lvalue
| |   | | |   `-CompoundStmt 0x63c48f8 <line:203:6, line:210:6>
| |   | | |     |-CallExpr 0x63c43c8 <line:204:8, line:205:26> '<dependent type>'
| |   | | |     | |-UnresolvedLookupExpr 0x63c3fd8 <line:204:8, col:13> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |   | | |     | |-CXXDependentScopeMemberExpr 0x63c40b0 <col:18, col:30> '<dependent type>' lvalue
| |   | | |     | | `-CXXDependentScopeMemberExpr 0x63c4058 <col:18, col:22> '<dependent type>' lvalue
| |   | | |     | |   `-DeclRefExpr 0x63c4030 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |     | |-CXXOperatorCallExpr 0x63c42b8 <col:40, col:68> '<dependent type>'
| |   | | |     | | |-UnresolvedLookupExpr 0x63c4250 <col:61> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | | |     | | |-CXXDependentScopeMemberExpr 0x63c4188 <col:40, col:52> '<dependent type>' lvalue
| |   | | |     | | | `-CXXDependentScopeMemberExpr 0x63c4130 <col:40, col:44> '<dependent type>' lvalue
| |   | | |     | | |   `-DeclRefExpr 0x63c4108 <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |     | | `-CallExpr 0x63c4228 <col:63, col:68> '<dependent type>'
| |   | | |     | |   `-MemberExpr 0x63c41f8 <col:63> '<bound member function type>' ->size 0x648d290
| |   | | |     | |     `-CXXThisExpr 0x63c41e0 <col:63> 'vector<_Tp, _Alloc> *' this
| |   | | |     | `-CXXDependentScopeMemberExpr 0x63c4370 <line:205:4, col:18> '<dependent type>' lvalue
| |   | | |     |   `-CXXDependentScopeMemberExpr 0x63c4318 <col:4, col:10> '<dependent type>' lvalue
| |   | | |     |     `-CXXThisExpr 0x63c4300 <col:4> 'vector<_Tp, _Alloc> *' this
| |   | | |     `-CallExpr 0x63c48b0 <line:206:8, line:209:29> '<dependent type>'
| |   | | |       |-UnresolvedLookupExpr 0x63c4428 <line:206:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| |   | | |       |-CXXOperatorCallExpr 0x63c4638 <col:36, col:64> '<dependent type>'
| |   | | |       | |-UnresolvedLookupExpr 0x63c45d0 <col:57> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | | |       | |-CXXDependentScopeMemberExpr 0x63c4508 <col:36, col:48> '<dependent type>' lvalue
| |   | | |       | | `-CXXDependentScopeMemberExpr 0x63c44b0 <col:36, col:40> '<dependent type>' lvalue
| |   | | |       | |   `-DeclRefExpr 0x63c4488 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |       | `-CallExpr 0x63c45a8 <col:59, col:64> '<dependent type>'
| |   | | |       |   `-MemberExpr 0x63c4578 <col:59> '<bound member function type>' ->size 0x648d290
| |   | | |       |     `-CXXThisExpr 0x63c4560 <col:59> 'vector<_Tp, _Alloc> *' this
| |   | | |       |-CXXDependentScopeMemberExpr 0x63c4700 <line:207:8, col:20> '<dependent type>' lvalue
| |   | | |       | `-CXXDependentScopeMemberExpr 0x63c46a8 <col:8, col:12> '<dependent type>' lvalue
| |   | | |       |   `-DeclRefExpr 0x63c4680 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x64f89b0 '__x' 'const vector<_Tp, _Alloc> &'
| |   | | |       |-CXXDependentScopeMemberExpr 0x63c47c8 <line:208:8, col:22> '<dependent type>' lvalue
| |   | | |       | `-CXXDependentScopeMemberExpr 0x63c4770 <col:8, col:14> '<dependent type>' lvalue
| |   | | |       |   `-CXXThisExpr 0x63c4758 <col:8> 'vector<_Tp, _Alloc> *' this
| |   | | |       `-CallExpr 0x63c4888 <line:209:8, col:28> '<dependent type>'
| |   | | |         `-UnresolvedMemberExpr 0x63c4820 <col:8> '<dependent type>' lvalue
| |   | | `-BinaryOperator 0x63c4be8 <line:211:4, col:55> '<dependent type>' '='
| |   | |   |-CXXDependentScopeMemberExpr 0x63c49f0 <col:4, col:18> '<dependent type>' lvalue
| |   | |   | `-CXXDependentScopeMemberExpr 0x63c4998 <col:4, col:10> '<dependent type>' lvalue
| |   | |   |   `-CXXThisExpr 0x63c4980 <col:4> 'vector<_Tp, _Alloc> *' this
| |   | |   `-CXXOperatorCallExpr 0x63c4ba0 <col:30, col:55> '<dependent type>'
| |   | |     |-UnresolvedLookupExpr 0x63c4b38 <col:53> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |   | |     |-CXXDependentScopeMemberExpr 0x63c4ab8 <col:30, col:44> '<dependent type>' lvalue
| |   | |     | `-CXXDependentScopeMemberExpr 0x63c4a60 <col:30, col:36> '<dependent type>' lvalue
| |   | |     |   `-CXXThisExpr 0x63c4a48 <col:30> 'vector<_Tp, _Alloc> *' this
| |   | |     `-DeclRefExpr 0x63c4b10 <col:55> 'const size_type':'const unsigned long' lvalue Var 0x64f8e30 '__xlen' 'const size_type':'const unsigned long'
| |   | `-<<<NULL>>>
| |   `-ReturnStmt 0x63c4ca8 <line:213:7, col:15>
| |     `-UnaryOperator 0x63c4c88 <col:14, col:15> '<dependent type>' prefix '*'
| |       `-CXXThisExpr 0x63c4c70 <col:15> 'vector<_Tp, _Alloc> *' this
| |-CXXMethodDecl 0x63c51e0 parent 0x6489700 prev 0x649bfb0 <line:216:3, line:236:5> _M_fill_assign 'void (size_t, const value_type &)'
| | |-ParmVarDecl 0x63c50a0 <line:219:20, col:27> __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x63c5110 <col:32, col:50> __val 'const value_type &'
| | `-CompoundStmt 0x6500868 <line:220:5, line:236:5>
| |   `-IfStmt 0x6500838 <line:221:7, line:235:72>
| |     |-<<<NULL>>>
| |     |-CXXOperatorCallExpr 0x63c53d8 <line:221:11, col:26> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x63c5368 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
| |     | |-DeclRefExpr 0x63c52d0 <col:11> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |     | `-CallExpr 0x63c5340 <col:17, col:26> '<dependent type>'
| |     |   `-MemberExpr 0x63c5310 <col:17> '<bound member function type>' ->capacity 0x648d650
| |     |     `-CXXThisExpr 0x63c52f8 <col:17> 'vector<_Tp, _Alloc> *' this
| |     |-CompoundStmt 0x63c56f0 <line:222:2, line:225:2>
| |     | |-DeclStmt 0x63c55f0 <line:223:4, col:51>
| |     | | `-VarDecl 0x63c5460 <col:4, col:50> __tmp 'vector<_Tp, _Alloc>'
| |     | |   `-ParenListExpr 0x63c55b0 <col:16, col:50> 'NULL TYPE'
| |     | |     |-DeclRefExpr 0x63c5420 <col:17> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |     | |     |-DeclRefExpr 0x63c54b8 <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0x63c5110 '__val' 'const value_type &'
| |     | |     `-CallExpr 0x63c5548 <col:29, col:49> '<dependent type>'
| |     | |       `-UnresolvedMemberExpr 0x63c54e0 <col:29> '<dependent type>' lvalue
| |     | `-CallExpr 0x63c56c0 <line:224:4, col:20> '<dependent type>'
| |     |   |-CXXDependentScopeMemberExpr 0x63c5630 <col:4, col:10> '<dependent type>' lvalue
| |     |   | `-DeclRefExpr 0x63c5608 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0x63c5460 '__tmp' 'vector<_Tp, _Alloc>'
| |     |   `-UnaryOperator 0x63c56a0 <col:15, col:16> '<dependent type>' prefix '*'
| |     |     `-CXXThisExpr 0x63c5688 <col:16> 'vector<_Tp, _Alloc> *' this
| |     `-IfStmt 0x6500808 <line:226:12, line:235:72>
| |       |-<<<NULL>>>
| |       |-CXXOperatorCallExpr 0x64ffd28 <line:226:16, col:27> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x64ffcb8 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
| |       | |-DeclRefExpr 0x63c5718 <col:16> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |       | `-CallExpr 0x64ffc90 <col:22, col:27> '<dependent type>'
| |       |   `-MemberExpr 0x64ffc60 <col:22> '<bound member function type>' ->size 0x648d290
| |       |     `-CXXThisExpr 0x63c5740 <col:22> 'vector<_Tp, _Alloc> *' this
| |       |-CompoundStmt 0x6500590 <line:227:2, line:233:2>
| |       | |-CallExpr 0x64fff78 <line:228:4, col:35> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x64ffd90 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
| |       | | |-CallExpr 0x64ffe78 <col:14, col:20> '<dependent type>'
| |       | | | `-UnresolvedMemberExpr 0x64ffe08 <col:14> '<bound member function type>' lvalue
| |       | | |-CallExpr 0x64fff28 <col:23, col:27> '<dependent type>'
| |       | | | `-UnresolvedMemberExpr 0x64ffeb8 <col:23> '<bound member function type>' lvalue
| |       | | `-DeclRefExpr 0x64fff50 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x63c5110 '__val' 'const value_type &'
| |       | |-CallExpr 0x6500300 <line:229:4, line:231:27> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x64fffd8 <line:229:4, col:9> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_n_a' 0x647cbe0 0x647dd20
| |       | | |-CXXDependentScopeMemberExpr 0x65000a8 <col:34, col:48> '<dependent type>' lvalue
| |       | | | `-CXXDependentScopeMemberExpr 0x6500050 <col:34, col:40> '<dependent type>' lvalue
| |       | | |   `-CXXThisExpr 0x6500038 <col:34> 'vector<_Tp, _Alloc> *' this
| |       | | |-CXXOperatorCallExpr 0x6500200 <line:230:6, col:17> '<dependent type>'
| |       | | | |-UnresolvedLookupExpr 0x6500198 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |       | | | |-DeclRefExpr 0x6500100 <col:6> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |       | | | `-CallExpr 0x6500170 <col:12, col:17> '<dependent type>'
| |       | | |   `-MemberExpr 0x6500140 <col:12> '<bound member function type>' ->size 0x648d290
| |       | | |     `-CXXThisExpr 0x6500128 <col:12> 'vector<_Tp, _Alloc> *' this
| |       | | |-DeclRefExpr 0x6500248 <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0x63c5110 '__val' 'const value_type &'
| |       | | `-CallExpr 0x65002d8 <line:231:6, col:26> '<dependent type>'
| |       | |   `-UnresolvedMemberExpr 0x6500270 <col:6> '<dependent type>' lvalue
| |       | `-CompoundAssignOperator 0x6500558 <line:232:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |       |   |-CXXDependentScopeMemberExpr 0x65003b8 <col:4, col:18> '<dependent type>' lvalue
| |       |   | `-CXXDependentScopeMemberExpr 0x6500360 <col:4, col:10> '<dependent type>' lvalue
| |       |   |   `-CXXThisExpr 0x6500348 <col:4> 'vector<_Tp, _Alloc> *' this
| |       |   `-CXXOperatorCallExpr 0x6500510 <col:31, col:42> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x65004a8 <col:35> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |       |     |-DeclRefExpr 0x6500410 <col:31> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |       |     `-CallExpr 0x6500480 <col:37, col:42> '<dependent type>'
| |       |       `-MemberExpr 0x6500450 <col:37> '<bound member function type>' ->size 0x648d290
| |       |         `-CXXThisExpr 0x6500438 <col:37> 'vector<_Tp, _Alloc> *' this
| |       `-CallExpr 0x65007d8 <line:235:9, col:72> '<dependent type>'
| |         |-MemberExpr 0x65005d8 <col:9> '<bound member function type>' ->_M_erase_at_end 0x649d970
| |         | `-CXXThisExpr 0x65005c0 <col:9> 'vector<_Tp, _Alloc> *' this
| |         `-CallExpr 0x6500798 <col:25, col:71> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x6500628 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = 'fill_n' 0x64229e0
| |           |-CXXDependentScopeMemberExpr 0x65006f0 <col:37, col:51> '<dependent type>' lvalue
| |           | `-CXXDependentScopeMemberExpr 0x6500698 <col:37, col:43> '<dependent type>' lvalue
| |           |   `-CXXThisExpr 0x6500680 <col:37> 'vector<_Tp, _Alloc> *' this
| |           |-DeclRefExpr 0x6500748 <col:61> 'size_t':'unsigned long' lvalue ParmVar 0x63c50a0 '__n' 'size_t':'unsigned long'
| |           `-DeclRefExpr 0x6500770 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0x63c5110 '__val' 'const value_type &'
| |-FunctionTemplateDecl 0x6500fd0 parent 0x6489700 prev 0x6499060 <line:239:5, line:253:7> _M_assign_aux
| | |-TemplateTypeParmDecl 0x6500990 <line:239:14, col:23> typename _InputIterator
| | |-CXXMethodDecl 0x6500ef0 parent 0x6489700 prev 0x6498fc0 <line:238:3, line:253:7> _M_assign_aux 'void (_InputIterator, _InputIterator, std::input_iterator_tag)'
| | | |-ParmVarDecl 0x6500cc0 <line:242:21, col:36> __first '_InputIterator'
| | | |-ParmVarDecl 0x6500d30 <col:45, col:60> __last '_InputIterator'
| | | |-ParmVarDecl 0x6500e10 <line:243:7, col:12> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| | | `-CompoundStmt 0x6501a58 <line:244:7, line:253:7>
| | |   |-DeclStmt 0x65011e0 <line:245:2, col:39>
| | |   | `-VarDecl 0x6501060 <col:2, col:38> __cur 'pointer':'typename _Base::pointer'
| | |   |   `-ParenListExpr 0x65011b0 <col:15, col:38> 'NULL TYPE'
| | |   |     `-CXXDependentScopeMemberExpr 0x6501128 <col:16, col:30> '<dependent type>' lvalue
| | |   |       `-CXXDependentScopeMemberExpr 0x65010d0 <col:16, col:22> '<dependent type>' lvalue
| | |   |         `-CXXThisExpr 0x65010b8 <col:16> 'vector<_Tp, _Alloc> *' this
| | |   |-ForStmt 0x6501660 <line:246:2, line:248:14>
| | |   | |-<<<NULL>>>
| | |   | |-<<<NULL>>>
| | |   | |-BinaryOperator 0x65014c8 <line:246:9, col:53> '<dependent type>' '&&'
| | |   | | |-CXXOperatorCallExpr 0x65012c8 <col:9, col:20> '<dependent type>'
| | |   | | | |-UnresolvedLookupExpr 0x6501248 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| | |   | | | |-DeclRefExpr 0x65011f8 <col:9> '_InputIterator' lvalue ParmVar 0x6500cc0 '__first' '_InputIterator'
| | |   | | | `-DeclRefExpr 0x6501220 <col:20> '_InputIterator' lvalue ParmVar 0x6500d30 '__last' '_InputIterator'
| | |   | | `-CXXOperatorCallExpr 0x6501480 <col:30, col:53> '<dependent type>'
| | |   | |   |-UnresolvedLookupExpr 0x6501400 <col:36> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| | |   | |   |-DeclRefExpr 0x6501310 <col:30> 'pointer':'typename _Base::pointer' lvalue Var 0x6501060 '__cur' 'pointer':'typename _Base::pointer'
| | |   | |   `-CXXDependentScopeMemberExpr 0x65013a8 <col:39, col:53> '<dependent type>' lvalue
| | |   | |     `-CXXDependentScopeMemberExpr 0x6501350 <col:39, col:45> '<dependent type>' lvalue
| | |   | |       `-CXXThisExpr 0x6501338 <col:39> 'vector<_Tp, _Alloc> *' this
| | |   | |-BinaryOperator 0x6501580 <line:247:7, col:18> '<dependent type>' ','
| | |   | | |-UnaryOperator 0x6501518 <col:7, col:9> '<dependent type>' prefix '++'
| | |   | | | `-DeclRefExpr 0x65014f0 <col:9> 'pointer':'typename _Base::pointer' lvalue Var 0x6501060 '__cur' 'pointer':'typename _Base::pointer'
| | |   | | `-UnaryOperator 0x6501560 <col:16, col:18> '<dependent type>' prefix '++'
| | |   | |   `-DeclRefExpr 0x6501538 <col:18> '_InputIterator' lvalue ParmVar 0x6500cc0 '__first' '_InputIterator'
| | |   | `-BinaryOperator 0x6501638 <line:248:4, col:14> '<dependent type>' '='
| | |   |   |-UnaryOperator 0x65015d0 <col:4, col:5> '<dependent type>' prefix '*'
| | |   |   | `-DeclRefExpr 0x65015a8 <col:5> 'pointer':'typename _Base::pointer' lvalue Var 0x6501060 '__cur' 'pointer':'typename _Base::pointer'
| | |   |   `-UnaryOperator 0x6501618 <col:13, col:14> '<dependent type>' prefix '*'
| | |   |     `-DeclRefExpr 0x65015f0 <col:14> '_InputIterator' lvalue ParmVar 0x6500cc0 '__first' '_InputIterator'
| | |   `-IfStmt 0x6501a28 <line:249:2, line:252:33>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x6501770 <line:249:6, col:17> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x65016f0 <col:14> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x63c7b70 0x63e4340 0x63ea090 0x63f2c60 0x63f3650 0x64a9e60
| | |     | |-DeclRefExpr 0x65016a0 <col:6> '_InputIterator' lvalue ParmVar 0x6500cc0 '__first' '_InputIterator'
| | |     | `-DeclRefExpr 0x65016c8 <col:17> '_InputIterator' lvalue ParmVar 0x6500d30 '__last' '_InputIterator'
| | |     |-CallExpr 0x6501828 <line:250:4, col:25> '<dependent type>'
| | |     | |-MemberExpr 0x65017d0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x649d970
| | |     | | `-CXXThisExpr 0x65017b8 <col:4> 'vector<_Tp, _Alloc> *' this
| | |     | `-DeclRefExpr 0x6501800 <col:20> 'pointer':'typename _Base::pointer' lvalue Var 0x6501060 '__cur' 'pointer':'typename _Base::pointer'
| | |     `-CallExpr 0x65019e8 <line:252:4, col:33> '<dependent type>'
| | |       |-UnresolvedMemberExpr 0x6501870 <col:4> '<bound member function type>' lvalue
| | |       |-CallExpr 0x6501970 <col:11, col:15> '<dependent type>'
| | |       | `-UnresolvedMemberExpr 0x6501900 <col:11> '<bound member function type>' lvalue
| | |       |-DeclRefExpr 0x6501998 <col:18> '_InputIterator' lvalue ParmVar 0x6500cc0 '__first' '_InputIterator'
| | |       `-DeclRefExpr 0x65019c0 <col:27> '_InputIterator' lvalue ParmVar 0x6500d30 '__last' '_InputIterator'
| |-FunctionTemplateDecl 0x6502210 parent 0x6489700 prev 0x64993f0 <line:256:5, line:288:7> _M_assign_aux
| | |-TemplateTypeParmDecl 0x6501b90 <line:256:14, col:23> typename _ForwardIterator
| | |-CXXMethodDecl 0x6502130 parent 0x6489700 prev 0x6499350 <line:255:3, line:288:7> _M_assign_aux 'void (_ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | |-ParmVarDecl 0x6501f00 <line:259:21, col:38> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6501f70 <col:47, col:64> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x6502050 <line:260:7, col:12> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | `-CompoundStmt 0x6503f30 <line:261:7, line:288:7>
| | |   |-DeclStmt 0x65023f8 <line:262:2, col:56>
| | |   | `-VarDecl 0x65022a0 <col:2, col:55> __len 'const size_type':'const unsigned long'
| | |   |   `-CallExpr 0x65023c0 <col:26, col:55> '<dependent type>'
| | |   |     |-UnresolvedLookupExpr 0x6502318 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
| | |   |     |-DeclRefExpr 0x6502370 <col:40> '_ForwardIterator' lvalue ParmVar 0x6501f00 '__first' '_ForwardIterator'
| | |   |     `-DeclRefExpr 0x6502398 <col:49> '_ForwardIterator' lvalue ParmVar 0x6501f70 '__last' '_ForwardIterator'
| | |   `-IfStmt 0x6503f00 <line:264:2, line:287:4>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x6502518 <line:264:6, col:23> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x65024a8 <col:12> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x63c9a70 0x63e7850 0x63eb7f0 0x64abd30
| | |     | |-DeclRefExpr 0x6502410 <col:6> 'const size_type':'const unsigned long' lvalue Var 0x65022a0 '__len' 'const size_type':'const unsigned long'
| | |     | `-CallExpr 0x6502480 <col:14, col:23> '<dependent type>'
| | |     |   `-MemberExpr 0x6502450 <col:14> '<bound member function type>' ->capacity 0x648d650
| | |     |     `-CXXThisExpr 0x6502438 <col:14> 'vector<_Tp, _Alloc> *' this
| | |     |-CompoundStmt 0x6503370 <line:265:4, line:275:4>
| | |     | |-DeclStmt 0x6502760 <line:266:6, col:65>
| | |     | | `-VarDecl 0x65025f0 <col:6, col:64> __tmp 'pointer':'typename _Base::pointer'
| | |     | |   `-ParenListExpr 0x6502730 <col:19, col:64> 'NULL TYPE'
| | |     | |     `-CallExpr 0x65026c0 <col:20, col:63> '<dependent type>'
| | |     | |       |-UnresolvedMemberExpr 0x6502578 <col:20> '<bound member function type>' lvalue
| | |     | |       |-DeclRefExpr 0x6502648 <col:41> 'const size_type':'const unsigned long' lvalue Var 0x65022a0 '__len' 'const size_type':'const unsigned long'
| | |     | |       |-DeclRefExpr 0x6502670 <col:48> '_ForwardIterator' lvalue ParmVar 0x6501f00 '__first' '_ForwardIterator'
| | |     | |       `-DeclRefExpr 0x6502698 <col:57> '_ForwardIterator' lvalue ParmVar 0x6501f70 '__last' '_ForwardIterator'
| | |     | |-CallExpr 0x6502a28 <line:267:6, line:268:27> '<dependent type>'
| | |     | | |-UnresolvedLookupExpr 0x6502798 <line:267:6, col:11> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |     | | |-CXXDependentScopeMemberExpr 0x6502878 <col:20, col:34> '<dependent type>' lvalue
| | |     | | | `-CXXDependentScopeMemberExpr 0x6502820 <col:20, col:26> '<dependent type>' lvalue
| | |     | | |   `-CXXThisExpr 0x6502808 <col:20> 'vector<_Tp, _Alloc> *' this
| | |     | | |-CXXDependentScopeMemberExpr 0x6502940 <col:44, col:58> '<dependent type>' lvalue
| | |     | | | `-CXXDependentScopeMemberExpr 0x65028e8 <col:44, col:50> '<dependent type>' lvalue
| | |     | | |   `-CXXThisExpr 0x65028d0 <col:44> 'vector<_Tp, _Alloc> *' this
| | |     | | `-CallExpr 0x6502a00 <line:268:6, col:26> '<dependent type>'
| | |     | |   `-UnresolvedMemberExpr 0x6502998 <col:6> '<dependent type>' lvalue
| | |     | |-CallExpr 0x6502dd8 <line:269:6, line:271:30> '<dependent type>'
| | |     | | |-UnresolvedMemberExpr 0x6502a68 <line:269:6> '<dependent type>' lvalue
| | |     | | |-CXXDependentScopeMemberExpr 0x6502b40 <col:20, col:34> '<dependent type>' lvalue
| | |     | | | `-CXXDependentScopeMemberExpr 0x6502ae8 <col:20, col:26> '<dependent type>' lvalue
| | |     | | |   `-CXXThisExpr 0x6502ad0 <col:20> 'vector<_Tp, _Alloc> *' this
| | |     | | `-CXXOperatorCallExpr 0x6502d90 <line:270:6, line:271:22> '<dependent type>'
| | |     | |   |-UnresolvedLookupExpr 0x6502d28 <col:6> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     | |   |-CXXDependentScopeMemberExpr 0x6502c08 <line:270:6, col:20> '<dependent type>' lvalue
| | |     | |   | `-CXXDependentScopeMemberExpr 0x6502bb0 <col:6, col:12> '<dependent type>' lvalue
| | |     | |   |   `-CXXThisExpr 0x6502b98 <col:6> 'vector<_Tp, _Alloc> *' this
| | |     | |   `-CXXDependentScopeMemberExpr 0x6502cd0 <line:271:8, col:22> '<dependent type>' lvalue
| | |     | |     `-CXXDependentScopeMemberExpr 0x6502c78 <col:8, col:14> '<dependent type>' lvalue
| | |     | |       `-CXXThisExpr 0x6502c60 <col:8> 'vector<_Tp, _Alloc> *' this
| | |     | |-BinaryOperator 0x6502f00 <line:272:6, col:31> '<dependent type>' '='
| | |     | | |-CXXDependentScopeMemberExpr 0x6502e80 <col:6, col:20> '<dependent type>' lvalue
| | |     | | | `-CXXDependentScopeMemberExpr 0x6502e28 <col:6, col:12> '<dependent type>' lvalue
| | |     | | |   `-CXXThisExpr 0x6502e10 <col:6> 'vector<_Tp, _Alloc> *' this
| | |     | | `-DeclRefExpr 0x6502ed8 <col:31> 'pointer':'typename _Base::pointer' lvalue Var 0x65025f0 '__tmp' 'pointer':'typename _Base::pointer'
| | |     | |-BinaryOperator 0x6503190 <line:273:6, col:57> '<dependent type>' '='
| | |     | | |-CXXDependentScopeMemberExpr 0x6502f98 <col:6, col:20> '<dependent type>' lvalue
| | |     | | | `-CXXDependentScopeMemberExpr 0x6502f40 <col:6, col:12> '<dependent type>' lvalue
| | |     | | |   `-CXXThisExpr 0x6502f28 <col:6> 'vector<_Tp, _Alloc> *' this
| | |     | | `-CXXOperatorCallExpr 0x6503148 <col:32, col:57> '<dependent type>'
| | |     | |   |-UnresolvedLookupExpr 0x65030e0 <col:55> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| | |     | |   |-CXXDependentScopeMemberExpr 0x6503060 <col:32, col:46> '<dependent type>' lvalue
| | |     | |   | `-CXXDependentScopeMemberExpr 0x6503008 <col:32, col:38> '<dependent type>' lvalue
| | |     | |   |   `-CXXThisExpr 0x6502ff0 <col:32> 'vector<_Tp, _Alloc> *' this
| | |     | |   `-DeclRefExpr 0x65030b8 <col:57> 'const size_type':'const unsigned long' lvalue Var 0x65022a0 '__len' 'const size_type':'const unsigned long'
| | |     | `-BinaryOperator 0x6503348 <line:274:6, col:54> '<dependent type>' '='
| | |     |   |-CXXDependentScopeMemberExpr 0x6503228 <col:6, col:20> '<dependent type>' lvalue
| | |     |   | `-CXXDependentScopeMemberExpr 0x65031d0 <col:6, col:12> '<dependent type>' lvalue
| | |     |   |   `-CXXThisExpr 0x65031b8 <col:6> 'vector<_Tp, _Alloc> *' this
| | |     |   `-CXXDependentScopeMemberExpr 0x65032f0 <col:40, col:54> '<dependent type>' lvalue
| | |     |     `-CXXDependentScopeMemberExpr 0x6503298 <col:40, col:46> '<dependent type>' lvalue
| | |     |       `-CXXThisExpr 0x6503280 <col:40> 'vector<_Tp, _Alloc> *' this
| | |     `-IfStmt 0x6503ed0 <line:276:7, line:287:4>
| | |       |-<<<NULL>>>
| | |       |-CXXOperatorCallExpr 0x65034c0 <line:276:11, col:21> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x6503450 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630 0x64acd30
| | |       | |-CallExpr 0x6503400 <col:11, col:16> '<dependent type>'
| | |       | | `-MemberExpr 0x65033d0 <col:11> '<bound member function type>' ->size 0x648d290
| | |       | |   `-CXXThisExpr 0x65033b8 <col:11> 'vector<_Tp, _Alloc> *' this
| | |       | `-DeclRefExpr 0x6503428 <col:21> 'const size_type':'const unsigned long' lvalue Var 0x65022a0 '__len' 'const size_type':'const unsigned long'
| | |       |-CallExpr 0x6503720 <line:277:4, col:70> '<dependent type>'
| | |       | |-MemberExpr 0x6503520 <col:4> '<bound member function type>' ->_M_erase_at_end 0x649d970
| | |       | | `-CXXThisExpr 0x6503508 <col:4> 'vector<_Tp, _Alloc> *' this
| | |       | `-CallExpr 0x65036e0 <col:20, col:69> '<dependent type>'
| | |       |   |-UnresolvedLookupExpr 0x6503570 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |       |   |-DeclRefExpr 0x65035c8 <col:30> '_ForwardIterator' lvalue ParmVar 0x6501f00 '__first' '_ForwardIterator'
| | |       |   |-DeclRefExpr 0x65035f0 <col:39> '_ForwardIterator' lvalue ParmVar 0x6501f70 '__last' '_ForwardIterator'
| | |       |   `-CXXDependentScopeMemberExpr 0x6503688 <col:47, col:61> '<dependent type>' lvalue
| | |       |     `-CXXDependentScopeMemberExpr 0x6503630 <col:47, col:53> '<dependent type>' lvalue
| | |       |       `-CXXThisExpr 0x6503618 <col:47> 'vector<_Tp, _Alloc> *' this
| | |       `-CompoundStmt 0x6503e98 <line:279:4, line:287:4>
| | |         |-DeclStmt 0x65037e0 <line:280:6, col:38>
| | |         | `-VarDecl 0x6503760 <col:6, col:31> __mid '_ForwardIterator'
| | |         |   `-DeclRefExpr 0x65037b8 <col:31> '_ForwardIterator' lvalue ParmVar 0x6501f00 '__first' '_ForwardIterator'
| | |         |-CallExpr 0x6503908 <line:281:6, col:32> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6503818 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x63dd690
| | |         | |-DeclRefExpr 0x6503870 <col:19> '_ForwardIterator' lvalue Var 0x6503760 '__mid' '_ForwardIterator'
| | |         | `-CallExpr 0x65038e0 <col:26, col:31> '<dependent type>'
| | |         |   `-MemberExpr 0x65038b0 <col:26> '<bound member function type>' ->size 0x648d290
| | |         |     `-CXXThisExpr 0x6503898 <col:26> 'vector<_Tp, _Alloc> *' this
| | |         |-CallExpr 0x6503ad0 <line:282:6, col:54> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x6503960 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |         | |-DeclRefExpr 0x65039b8 <col:16> '_ForwardIterator' lvalue ParmVar 0x6501f00 '__first' '_ForwardIterator'
| | |         | |-DeclRefExpr 0x65039e0 <col:25> '_ForwardIterator' lvalue Var 0x6503760 '__mid' '_ForwardIterator'
| | |         | `-CXXDependentScopeMemberExpr 0x6503a78 <col:32, col:46> '<dependent type>' lvalue
| | |         |   `-CXXDependentScopeMemberExpr 0x6503a20 <col:32, col:38> '<dependent type>' lvalue
| | |         |     `-CXXThisExpr 0x6503a08 <col:32> 'vector<_Tp, _Alloc> *' this
| | |         `-BinaryOperator 0x6503e70 <line:283:6, line:286:29> '<dependent type>' '='
| | |           |-CXXDependentScopeMemberExpr 0x6503b80 <line:283:6, col:20> '<dependent type>' lvalue
| | |           | `-CXXDependentScopeMemberExpr 0x6503b28 <col:6, col:12> '<dependent type>' lvalue
| | |           |   `-CXXThisExpr 0x6503b10 <col:6> 'vector<_Tp, _Alloc> *' this
| | |           `-CallExpr 0x6503e28 <line:284:8, line:286:29> '<dependent type>'
| | |             |-UnresolvedLookupExpr 0x6503bf8 <line:284:8, col:13> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |             |-DeclRefExpr 0x6503c80 <col:36> '_ForwardIterator' lvalue Var 0x6503760 '__mid' '_ForwardIterator'
| | |             |-DeclRefExpr 0x6503ca8 <col:43> '_ForwardIterator' lvalue ParmVar 0x6501f70 '__last' '_ForwardIterator'
| | |             |-CXXDependentScopeMemberExpr 0x6503d40 <line:285:8, col:22> '<dependent type>' lvalue
| | |             | `-CXXDependentScopeMemberExpr 0x6503ce8 <col:8, col:14> '<dependent type>' lvalue
| | |             |   `-CXXThisExpr 0x6503cd0 <col:8> 'vector<_Tp, _Alloc> *' this
| | |             `-CallExpr 0x6503e00 <line:286:8, col:28> '<dependent type>'
| | |               `-UnresolvedMemberExpr 0x6503d98 <col:8> '<dependent type>' lvalue
| |-CXXMethodDecl 0x6504480 parent 0x6489700 prev 0x649d570 <line:316:3, line:393:5> _M_insert_aux 'void (iterator, const _Tp &)'
| | |-ParmVarDecl 0x6504310 <line:319:19, col:28> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |-ParmVarDecl 0x65043b0 <col:40, col:51> __x 'const _Tp &'
| | `-CompoundStmt 0x6507540 <line:321:5, line:393:5>
| |   `-IfStmt 0x6507510 <line:322:7, line:392:2>
| |     |-<<<NULL>>>
| |     |-CXXOperatorCallExpr 0x6504780 <line:322:11, col:52> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x6504700 <col:35> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| |     | |-CXXDependentScopeMemberExpr 0x65045e0 <col:11, col:25> '<dependent type>' lvalue
| |     | | `-CXXDependentScopeMemberExpr 0x6504588 <col:11, col:17> '<dependent type>' lvalue
| |     | |   `-CXXThisExpr 0x6504570 <col:11> 'vector<_Tp, _Alloc> *' this
| |     | `-CXXDependentScopeMemberExpr 0x65046a8 <col:38, col:52> '<dependent type>' lvalue
| |     |   `-CXXDependentScopeMemberExpr 0x6504650 <col:38, col:44> '<dependent type>' lvalue
| |     |     `-CXXThisExpr 0x6504638 <col:38> 'vector<_Tp, _Alloc> *' this
| |     |-CompoundStmt 0x65052a0 <line:323:2, line:339:2>
| |     | |-CallExpr 0x6504ba0 <line:324:4, line:326:29> '<dependent type>'
| |     | | |-CXXDependentScopeMemberExpr 0x6504818 <line:324:4, col:19> '<dependent type>' lvalue
| |     | | |-CXXDependentScopeMemberExpr 0x6504888 <col:29, col:35> '<dependent type>' lvalue
| |     | | | `-CXXThisExpr 0x6504870 <col:29> 'vector<_Tp, _Alloc> *' this
| |     | | |-CXXDependentScopeMemberExpr 0x6504950 <col:44, col:58> '<dependent type>' lvalue
| |     | | | `-CXXDependentScopeMemberExpr 0x65048f8 <col:44, col:50> '<dependent type>' lvalue
| |     | | |   `-CXXThisExpr 0x65048e0 <col:44> 'vector<_Tp, _Alloc> *' this
| |     | | `-ParenExpr 0x6504b80 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/move.h:145:30, col:36> '<dependent type>'
| |     | |   `-UnaryOperator 0x6504b60 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:325:29, line:326:27> '<dependent type>' prefix '*'
| |     | |     `-ParenExpr 0x6504b40 <line:325:30, line:326:27> '<dependent type>'
| |     | |       `-CXXOperatorCallExpr 0x6504af8 <line:325:31, line:326:26> '<dependent type>'
| |     | |         |-UnresolvedLookupExpr 0x6504a90 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     | |         |-CXXDependentScopeMemberExpr 0x6504a18 <line:325:31, col:45> '<dependent type>' lvalue
| |     | |         | `-CXXDependentScopeMemberExpr 0x65049c0 <col:31, col:37> '<dependent type>' lvalue
| |     | |         |   `-CXXThisExpr 0x65049a8 <col:31> 'vector<_Tp, _Alloc> *' this
| |     | |         `-IntegerLiteral 0x6504a70 <line:326:26> 'int' 1
| |     | |-UnaryOperator 0x6504ca8 <line:327:4, col:20> '<dependent type>' prefix '++'
| |     | | `-CXXDependentScopeMemberExpr 0x6504c50 <col:6, col:20> '<dependent type>' lvalue
| |     | |   `-CXXDependentScopeMemberExpr 0x6504bf8 <col:6, col:12> '<dependent type>' lvalue
| |     | |     `-CXXThisExpr 0x6504be0 <col:6> 'vector<_Tp, _Alloc> *' this
| |     | |-DeclStmt 0x6504d60 <line:329:4, col:22>
| |     | | `-VarDecl 0x6504ce0 <col:4, col:19> __x_copy '_Tp'
| |     | |   `-DeclRefExpr 0x6504d38 <col:19> 'const _Tp' lvalue ParmVar 0x65043b0 '__x' 'const _Tp &'
| |     | |-CallExpr 0x65051c8 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:672:48, col:80> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x6504d98 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
| |     | | |-CallExpr 0x6504e70 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:331:28, col:44> '<dependent type>'
| |     | | | `-CXXDependentScopeMemberExpr 0x6504e18 <col:28, col:39> '<dependent type>' lvalue
| |     | | |   `-DeclRefExpr 0x6504df0 <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6504310 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     | | |-CXXOperatorCallExpr 0x6504fe8 <line:332:7, col:33> '<dependent type>'
| |     | | | |-UnresolvedLookupExpr 0x6504f80 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     | | | |-CXXDependentScopeMemberExpr 0x6504f08 <col:7, col:21> '<dependent type>' lvalue
| |     | | | | `-CXXDependentScopeMemberExpr 0x6504eb0 <col:7, col:13> '<dependent type>' lvalue
| |     | | | |   `-CXXThisExpr 0x6504e98 <col:7> 'vector<_Tp, _Alloc> *' this
| |     | | | `-IntegerLiteral 0x6504f60 <col:33> 'int' 2
| |     | | `-CXXOperatorCallExpr 0x6505180 <line:333:7, col:33> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x6505118 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     | |   |-CXXDependentScopeMemberExpr 0x65050a0 <col:7, col:21> '<dependent type>' lvalue
| |     | |   | `-CXXDependentScopeMemberExpr 0x6505048 <col:7, col:13> '<dependent type>' lvalue
| |     | |   |   `-CXXThisExpr 0x6505030 <col:7> 'vector<_Tp, _Alloc> *' this
| |     | |   `-IntegerLiteral 0x65050f8 <col:33> 'int' 1
| |     | `-BinaryOperator 0x6505278 <line:335:4, col:18> '<dependent type>' '='
| |     |   |-UnaryOperator 0x6505230 <col:4, col:5> '<dependent type>' prefix '*'
| |     |   | `-DeclRefExpr 0x6505208 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6504310 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   `-DeclRefExpr 0x6505250 <col:18> '_Tp' lvalue Var 0x6504ce0 '__x_copy' '_Tp'
| |     `-CompoundStmt 0x65074a8 <line:341:2, line:392:2>
| |       |-DeclStmt 0x65054f0 <line:342:4, line:343:57>
| |       | `-VarDecl 0x65052f0 <line:342:4, line:343:56> __len 'const size_type':'const unsigned long'
| |       |   `-CallExpr 0x65054b8 <col:6, col:56> '<dependent type>'
| |       |     |-MemberExpr 0x6505360 <col:6> '<bound member function type>' ->_M_check_len 0x649d7b0
| |       |     | `-CXXThisExpr 0x6505348 <col:6> 'vector<_Tp, _Alloc> *' this
| |       |     |-CXXFunctionalCastExpr 0x65053d8 <col:19, col:30> 'size_type':'unsigned long' functional cast to size_type <NoOp>
| |       |     | `-ImplicitCastExpr 0x65053c0 <col:29> 'size_type':'unsigned long' <IntegralCast>
| |       |     |   `-IntegerLiteral 0x65053a0 <col:29> 'int' 1
| |       |     `-StringLiteral 0x6505478 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"
| |       |-DeclStmt 0x6505700 <line:344:4, col:57>
| |       | `-VarDecl 0x6505520 <col:4, col:56> __elems_before 'const size_type':'const unsigned long'
| |       |   `-CXXOperatorCallExpr 0x65056b8 <col:37, col:56> '<dependent type>'
| |       |     |-UnresolvedLookupExpr 0x6505650 <col:48> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |       |     |-DeclRefExpr 0x6505578 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6504310 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |       |     `-CallExpr 0x6505628 <col:50, col:56> '<dependent type>'
| |       |       `-UnresolvedMemberExpr 0x65055b8 <col:50> '<bound member function type>' lvalue
| |       |-DeclStmt 0x65058b0 <line:345:4, col:49>
| |       | `-VarDecl 0x6505730 <col:4, col:48> __new_start 'pointer':'typename _Base::pointer'
| |       |   `-ParenListExpr 0x6505880 <col:23, col:48> 'NULL TYPE'
| |       |     `-CallExpr 0x6505820 <col:24, col:47> '<dependent type>'
| |       |       |-CXXDependentScopeMemberExpr 0x65057a0 <col:24, col:30> '<dependent type>' lvalue
| |       |       | `-CXXThisExpr 0x6505788 <col:24> 'vector<_Tp, _Alloc> *' this
| |       |       `-DeclRefExpr 0x65057f8 <col:42> 'const size_type':'const unsigned long' lvalue Var 0x65052f0 '__len' 'const size_type':'const unsigned long'
| |       |-DeclStmt 0x65059b8 <line:346:4, col:37>
| |       | `-VarDecl 0x6505900 <col:4, col:36> __new_finish 'pointer':'typename _Base::pointer'
| |       |   `-ParenListExpr 0x6505988 <col:24, col:36> 'NULL TYPE'
| |       |     `-DeclRefExpr 0x65058c8 <col:25> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       |-CXXTryStmt 0x65069d0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:383:6>
| |       | |-CompoundStmt 0x65063b8 <line:348:6, line:373:6>
| |       | | |-CallExpr 0x6505c10 <line:353:8, line:358:36> '<dependent type>'
| |       | | | |-CXXDependentScopeMemberExpr 0x6505a20 <line:353:8, col:23> '<dependent type>' lvalue
| |       | | | |-CXXDependentScopeMemberExpr 0x6505a90 <col:33, col:39> '<dependent type>' lvalue
| |       | | | | `-CXXThisExpr 0x6505a78 <col:33> 'vector<_Tp, _Alloc> *' this
| |       | | | |-CXXOperatorCallExpr 0x6505ba0 <line:354:26, col:40> '<dependent type>'
| |       | | | | |-UnresolvedLookupExpr 0x6505b38 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |       | | | | |-DeclRefExpr 0x6505ae8 <col:26> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       | | | | `-DeclRefExpr 0x6505b10 <col:40> 'const size_type':'const unsigned long' lvalue Var 0x6505520 '__elems_before' 'const size_type':'const unsigned long'
| |       | | | `-DeclRefExpr 0x6505be8 <line:358:33> 'const _Tp' lvalue ParmVar 0x65043b0 '__x' 'const _Tp &'
| |       | | |-BinaryOperator 0x6505cd8 <line:360:8, col:23> '<dependent type>' '='
| |       | | | |-DeclRefExpr 0x6505c90 <col:8> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       | | | `-IntegerLiteral 0x6505cb8 <col:23> 'int' 0
| |       | | |-BinaryOperator 0x6506010 <line:362:8, line:365:38> '<dependent type>' '='
| |       | | | |-DeclRefExpr 0x6505d00 <line:362:8> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       | | | `-CallExpr 0x6505fc8 <line:363:5, line:365:38> '<dependent type>'
| |       | | |   |-UnresolvedLookupExpr 0x6505d48 <line:363:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| |       | | |   |-CXXDependentScopeMemberExpr 0x6505e10 <line:364:4, col:18> '<dependent type>' lvalue
| |       | | |   | `-CXXDependentScopeMemberExpr 0x6505db8 <col:4, col:10> '<dependent type>' lvalue
| |       | | |   |   `-CXXThisExpr 0x6505da0 <col:4> 'vector<_Tp, _Alloc> *' this
| |       | | |   |-CallExpr 0x6505ee8 <col:28, col:44> '<dependent type>'
| |       | | |   | `-CXXDependentScopeMemberExpr 0x6505e90 <col:28, col:39> '<dependent type>' lvalue
| |       | | |   |   `-DeclRefExpr 0x6505e68 <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6504310 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |       | | |   |-DeclRefExpr 0x6505f10 <line:365:4> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       | | |   `-CallExpr 0x6505fa0 <col:17, col:37> '<dependent type>'
| |       | | |     `-UnresolvedMemberExpr 0x6505f38 <col:17> '<dependent type>' lvalue
| |       | | |-UnaryOperator 0x6506060 <line:367:8, col:10> '<dependent type>' prefix '++'
| |       | | | `-DeclRefExpr 0x6506038 <col:10> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       | | `-BinaryOperator 0x6506390 <line:369:8, line:372:39> '<dependent type>' '='
| |       | |   |-DeclRefExpr 0x6506080 <line:369:8> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       | |   `-CallExpr 0x6506348 <line:370:5, line:372:39> '<dependent type>'
| |       | |     |-UnresolvedLookupExpr 0x65060c8 <line:370:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| |       | |     |-CallExpr 0x65061a0 <line:371:4, col:20> '<dependent type>'
| |       | |     | `-CXXDependentScopeMemberExpr 0x6506148 <col:4, col:15> '<dependent type>' lvalue
| |       | |     |   `-DeclRefExpr 0x6506120 <col:4> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6504310 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |       | |     |-CXXDependentScopeMemberExpr 0x6506238 <col:23, col:37> '<dependent type>' lvalue
| |       | |     | `-CXXDependentScopeMemberExpr 0x65061e0 <col:23, col:29> '<dependent type>' lvalue
| |       | |     |   `-CXXThisExpr 0x65061c8 <col:23> 'vector<_Tp, _Alloc> *' this
| |       | |     |-DeclRefExpr 0x6506290 <line:372:4> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       | |     `-CallExpr 0x6506320 <col:18, col:38> '<dependent type>'
| |       | |       `-UnresolvedMemberExpr 0x65062b8 <col:18> '<dependent type>' lvalue
| |       | `-CXXCatchStmt 0x65069b0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:383:6>
| |       |   |-<<<NULL>>>
| |       |   `-CompoundStmt 0x6506980 <line:375:6, line:383:6>
| |       |     |-IfStmt 0x6506840 <line:376:8, line:380:65>
| |       |     | |-<<<NULL>>>
| |       |     | |-UnaryOperator 0x6506420 <line:376:12, col:13> '<dependent type>' prefix '!'
| |       |     | | `-DeclRefExpr 0x65063f8 <col:13> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       |     | |-CallExpr 0x6506658 <line:377:3, line:378:54> '<dependent type>'
| |       |     | | |-CXXDependentScopeMemberExpr 0x6506490 <line:377:3, col:18> '<dependent type>' lvalue
| |       |     | | |-CXXDependentScopeMemberExpr 0x6506500 <col:26, col:32> '<dependent type>' lvalue
| |       |     | | | `-CXXThisExpr 0x65064e8 <col:26> 'vector<_Tp, _Alloc> *' this
| |       |     | | `-CXXOperatorCallExpr 0x6506610 <line:378:26, col:40> '<dependent type>'
| |       |     | |   |-UnresolvedLookupExpr 0x65065a8 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |       |     | |   |-DeclRefExpr 0x6506558 <col:26> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       |     | |   `-DeclRefExpr 0x6506580 <col:40> 'const size_type':'const unsigned long' lvalue Var 0x6505520 '__elems_before' 'const size_type':'const unsigned long'
| |       |     | `-CallExpr 0x6506800 <line:380:3, col:65> '<dependent type>'
| |       |     |   |-UnresolvedLookupExpr 0x65066b0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |       |     |   |-DeclRefExpr 0x6506720 <col:17> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       |     |   |-DeclRefExpr 0x6506748 <col:30> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       |     |   `-CallExpr 0x65067d8 <col:44, col:64> '<dependent type>'
| |       |     |     `-UnresolvedMemberExpr 0x6506770 <col:44> '<dependent type>' lvalue
| |       |     |-CallExpr 0x6506928 <line:381:8, col:40> '<dependent type>'
| |       |     | |-UnresolvedMemberExpr 0x6506870 <col:8> '<dependent type>' lvalue
| |       |     | |-DeclRefExpr 0x65068d8 <col:22> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       |     | `-DeclRefExpr 0x6506900 <col:35> 'const size_type':'const unsigned long' lvalue Var 0x65052f0 '__len' 'const size_type':'const unsigned long'
| |       |     `-CXXThrowExpr 0x6506960 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |       |-CallExpr 0x6506ca0 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:384:4, line:385:25> '<dependent type>'
| |       | |-UnresolvedLookupExpr 0x6506a10 <line:384:4, col:9> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |       | |-CXXDependentScopeMemberExpr 0x6506af0 <col:18, col:32> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x6506a98 <col:18, col:24> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x6506a80 <col:18> 'vector<_Tp, _Alloc> *' this
| |       | |-CXXDependentScopeMemberExpr 0x6506bb8 <col:42, col:56> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x6506b60 <col:42, col:48> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x6506b48 <col:42> 'vector<_Tp, _Alloc> *' this
| |       | `-CallExpr 0x6506c78 <line:385:4, col:24> '<dependent type>'
| |       |   `-UnresolvedMemberExpr 0x6506c10 <col:4> '<dependent type>' lvalue
| |       |-CallExpr 0x6507050 <line:386:4, line:388:28> '<dependent type>'
| |       | |-UnresolvedMemberExpr 0x6506ce0 <line:386:4> '<dependent type>' lvalue
| |       | |-CXXDependentScopeMemberExpr 0x6506db8 <col:18, col:32> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x6506d60 <col:18, col:24> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x6506d48 <col:18> 'vector<_Tp, _Alloc> *' this
| |       | `-CXXOperatorCallExpr 0x6507008 <line:387:4, line:388:20> '<dependent type>'
| |       |   |-UnresolvedLookupExpr 0x6506fa0 <col:4> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |       |   |-CXXDependentScopeMemberExpr 0x6506e80 <line:387:4, col:18> '<dependent type>' lvalue
| |       |   | `-CXXDependentScopeMemberExpr 0x6506e28 <col:4, col:10> '<dependent type>' lvalue
| |       |   |   `-CXXThisExpr 0x6506e10 <col:4> 'vector<_Tp, _Alloc> *' this
| |       |   `-CXXDependentScopeMemberExpr 0x6506f48 <line:388:6, col:20> '<dependent type>' lvalue
| |       |     `-CXXDependentScopeMemberExpr 0x6506ef0 <col:6, col:12> '<dependent type>' lvalue
| |       |       `-CXXThisExpr 0x6506ed8 <col:6> 'vector<_Tp, _Alloc> *' this
| |       |-BinaryOperator 0x6507178 <line:389:4, col:29> '<dependent type>' '='
| |       | |-CXXDependentScopeMemberExpr 0x65070f8 <col:4, col:18> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x65070a0 <col:4, col:10> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x6507088 <col:4> 'vector<_Tp, _Alloc> *' this
| |       | `-DeclRefExpr 0x6507150 <col:29> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |       |-BinaryOperator 0x6507290 <line:390:4, col:30> '<dependent type>' '='
| |       | |-CXXDependentScopeMemberExpr 0x6507210 <col:4, col:18> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x65071b8 <col:4, col:10> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x65071a0 <col:4> 'vector<_Tp, _Alloc> *' this
| |       | `-DeclRefExpr 0x6507268 <col:30> 'pointer':'typename _Base::pointer' lvalue Var 0x6505900 '__new_finish' 'pointer':'typename _Base::pointer'
| |       `-BinaryOperator 0x6507480 <line:391:4, col:52> '<dependent type>' '='
| |         |-CXXDependentScopeMemberExpr 0x6507328 <col:4, col:18> '<dependent type>' lvalue
| |         | `-CXXDependentScopeMemberExpr 0x65072d0 <col:4, col:10> '<dependent type>' lvalue
| |         |   `-CXXThisExpr 0x65072b8 <col:4> 'vector<_Tp, _Alloc> *' this
| |         `-CXXOperatorCallExpr 0x6507438 <col:38, col:52> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x65073d0 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |           |-DeclRefExpr 0x6507380 <col:38> 'pointer':'typename _Base::pointer' lvalue Var 0x6505730 '__new_start' 'pointer':'typename _Base::pointer'
| |           `-DeclRefExpr 0x65073a8 <col:52> 'const size_type':'const unsigned long' lvalue Var 0x65052f0 '__len' 'const size_type':'const unsigned long'
| |-CXXMethodDecl 0x6507a80 parent 0x6489700 prev 0x649d320 <line:439:3, line:527:5> _M_fill_insert 'void (iterator, size_type, const value_type &)'
| | |-ParmVarDecl 0x6507910 <line:442:20, col:29> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |-ParmVarDecl 0x6507980 <col:41, col:51> __n 'size_type':'unsigned long'
| | |-ParmVarDecl 0x65079f0 <col:56, col:74> __x 'const value_type &'
| | `-CompoundStmt 0x650bf80 <line:443:5, line:527:5>
| |   `-IfStmt 0x650bf50 <line:444:7, line:526:2>
| |     |-<<<NULL>>>
| |     |-BinaryOperator 0x6507bf0 <line:444:11, col:18> '_Bool' '!='
| |     | |-ImplicitCastExpr 0x6507bc0 <col:11> 'size_type':'unsigned long' <LValueToRValue>
| |     | | `-DeclRefExpr 0x6507b78 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     | `-ImplicitCastExpr 0x6507bd8 <col:18> 'unsigned long' <IntegralCast>
| |     |   `-IntegerLiteral 0x6507ba0 <col:18> 'int' 0
| |     |-CompoundStmt 0x650bf30 <line:445:2, line:526:2>
| |     | `-IfStmt 0x650bf00 <line:446:4, line:525:6>
| |     |   |-<<<NULL>>>
| |     |   |-BinaryOperator 0x6507f38 <line:446:8, line:447:34> '_Bool' '>='
| |     |   | |-CXXUnresolvedConstructExpr 0x6507ec8 <line:446:8, line:447:29> 'size_type':'unsigned long'
| |     |   | | `-CXXOperatorCallExpr 0x6507e80 <line:446:18, line:447:20> '<dependent type>'
| |     |   | |   |-UnresolvedLookupExpr 0x6507e18 <col:4> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |   | |   |-CXXDependentScopeMemberExpr 0x6507cf8 <line:446:18, col:32> '<dependent type>' lvalue
| |     |   | |   | `-CXXDependentScopeMemberExpr 0x6507ca0 <col:18, col:24> '<dependent type>' lvalue
| |     |   | |   |   `-CXXThisExpr 0x6507c28 <col:18> 'vector<_Tp, _Alloc> *' this
| |     |   | |   `-CXXDependentScopeMemberExpr 0x6507dc0 <line:447:6, col:20> '<dependent type>' lvalue
| |     |   | |     `-CXXDependentScopeMemberExpr 0x6507d68 <col:6, col:12> '<dependent type>' lvalue
| |     |   | |       `-CXXThisExpr 0x6507d50 <col:6> 'vector<_Tp, _Alloc> *' this
| |     |   | `-ImplicitCastExpr 0x6507f20 <col:34> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |   `-DeclRefExpr 0x6507ef8 <col:34> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |-CompoundStmt 0x6509ab8 <line:448:6, line:477:6>
| |     |   | |-DeclStmt 0x6507ff0 <line:449:8, col:33>
| |     |   | | `-VarDecl 0x6507f70 <col:8, col:30> __x_copy 'value_type':'_Tp'
| |     |   | |   `-DeclRefExpr 0x6507fc8 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x65079f0 '__x' 'const value_type &'
| |     |   | |-DeclStmt 0x6508200 <line:450:8, col:58>
| |     |   | | `-VarDecl 0x6508020 <col:8, col:48> __elems_after 'const size_type':'const unsigned long'
| |     |   | |   `-CXXOperatorCallExpr 0x65081b8 <col:40, col:48> '<dependent type>'
| |     |   | |     |-UnresolvedLookupExpr 0x6508150 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |   | |     |-CallExpr 0x6508100 <col:40, col:44> '<dependent type>'
| |     |   | |     | `-UnresolvedMemberExpr 0x6508090 <col:40> '<bound member function type>' lvalue
| |     |   | |     `-DeclRefExpr 0x6508128 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   | |-DeclStmt 0x65083b0 <line:451:8, col:53>
| |     |   | | `-VarDecl 0x6508230 <col:8, col:52> __old_finish 'pointer':'typename _Base::pointer'
| |     |   | |   `-ParenListExpr 0x6508380 <col:28, col:52> 'NULL TYPE'
| |     |   | |     `-CXXDependentScopeMemberExpr 0x65082f8 <col:29, col:43> '<dependent type>' lvalue
| |     |   | |       `-CXXDependentScopeMemberExpr 0x65082a0 <col:29, col:35> '<dependent type>' lvalue
| |     |   | |         `-CXXThisExpr 0x6508288 <col:29> 'vector<_Tp, _Alloc> *' this
| |     |   | `-IfStmt 0x6509a88 <line:452:8, line:476:3>
| |     |   |   |-<<<NULL>>>
| |     |   |   |-BinaryOperator 0x6508448 <line:452:12, col:28> '_Bool' '>'
| |     |   |   | |-ImplicitCastExpr 0x6508418 <col:12> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |   | | `-DeclRefExpr 0x65083c8 <col:12> 'const size_type':'const unsigned long' lvalue Var 0x6508020 '__elems_after' 'const size_type':'const unsigned long'
| |     |   |   | `-ImplicitCastExpr 0x6508430 <col:28> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |   |   `-DeclRefExpr 0x65083f0 <col:28> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |   |-CompoundStmt 0x6508fb0 <line:453:3, line:463:3>
| |     |   |   | |-CallExpr 0x65088a8 <line:454:5, line:457:33> '<dependent type>'
| |     |   |   | | |-UnresolvedLookupExpr 0x6508490 <line:454:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| |     |   |   | | |-CXXOperatorCallExpr 0x6508640 <col:33, col:59> '<dependent type>'
| |     |   |   | | | |-UnresolvedLookupExpr 0x65085d8 <col:57> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |   |   | | | |-CXXDependentScopeMemberExpr 0x6508558 <col:33, col:47> '<dependent type>' lvalue
| |     |   |   | | | | `-CXXDependentScopeMemberExpr 0x6508500 <col:33, col:39> '<dependent type>' lvalue
| |     |   |   | | | |   `-CXXThisExpr 0x65084e8 <col:33> 'vector<_Tp, _Alloc> *' this
| |     |   |   | | | `-DeclRefExpr 0x65085b0 <col:59> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |   | | |-CXXDependentScopeMemberExpr 0x65086f8 <line:455:12, col:26> '<dependent type>' lvalue
| |     |   |   | | | `-CXXDependentScopeMemberExpr 0x65086a0 <col:12, col:18> '<dependent type>' lvalue
| |     |   |   | | |   `-CXXThisExpr 0x6508688 <col:12> 'vector<_Tp, _Alloc> *' this
| |     |   |   | | |-CXXDependentScopeMemberExpr 0x65087c0 <line:456:12, col:26> '<dependent type>' lvalue
| |     |   |   | | | `-CXXDependentScopeMemberExpr 0x6508768 <col:12, col:18> '<dependent type>' lvalue
| |     |   |   | | |   `-CXXThisExpr 0x6508750 <col:12> 'vector<_Tp, _Alloc> *' this
| |     |   |   | | `-CallExpr 0x6508880 <line:457:12, col:32> '<dependent type>'
| |     |   |   | |   `-UnresolvedMemberExpr 0x6508818 <col:12> '<dependent type>' lvalue
| |     |   |   | |-CompoundAssignOperator 0x65089e0 <line:458:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |     |   |   | | |-CXXDependentScopeMemberExpr 0x6508960 <col:5, col:19> '<dependent type>' lvalue
| |     |   |   | | | `-CXXDependentScopeMemberExpr 0x6508908 <col:5, col:11> '<dependent type>' lvalue
| |     |   |   | | |   `-CXXThisExpr 0x65088f0 <col:5> 'vector<_Tp, _Alloc> *' this
| |     |   |   | | `-DeclRefExpr 0x65089b8 <col:32> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |   | |-CallExpr 0x6508c60 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:672:48, col:80> '<dependent type>'
| |     |   |   | | |-UnresolvedLookupExpr 0x6508a38 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
| |     |   |   | | |-CallExpr 0x6508b10 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:459:29, col:45> '<dependent type>'
| |     |   |   | | | `-CXXDependentScopeMemberExpr 0x6508ab8 <col:29, col:40> '<dependent type>' lvalue
| |     |   |   | | |   `-DeclRefExpr 0x6508a90 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   |   | | |-CXXOperatorCallExpr 0x6508bf0 <line:460:8, col:23> '<dependent type>'
| |     |   |   | | | |-UnresolvedLookupExpr 0x6508b88 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |   |   | | | |-DeclRefExpr 0x6508b38 <col:8> 'pointer':'typename _Base::pointer' lvalue Var 0x6508230 '__old_finish' 'pointer':'typename _Base::pointer'
| |     |   |   | | | `-DeclRefExpr 0x6508b60 <col:23> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |   | | `-DeclRefExpr 0x6508c38 <col:28> 'pointer':'typename _Base::pointer' lvalue Var 0x6508230 '__old_finish' 'pointer':'typename _Base::pointer'
| |     |   |   | `-CallExpr 0x6508f70 <line:461:5, line:462:16> '<dependent type>'
| |     |   |   |   |-UnresolvedLookupExpr 0x6508cc0 <line:461:5, col:10> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
| |     |   |   |   |-CallExpr 0x6508da0 <col:15, col:31> '<dependent type>'
| |     |   |   |   | `-CXXDependentScopeMemberExpr 0x6508d48 <col:15, col:26> '<dependent type>' lvalue
| |     |   |   |   |   `-DeclRefExpr 0x6508d20 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   |   |   |-CXXOperatorCallExpr 0x6508f00 <col:34, col:54> '<dependent type>'
| |     |   |   |   | |-UnresolvedLookupExpr 0x6508e98 <col:52> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |   |   |   | |-CallExpr 0x6508e48 <col:34, col:50> '<dependent type>'
| |     |   |   |   | | `-CXXDependentScopeMemberExpr 0x6508df0 <col:34, col:45> '<dependent type>' lvalue
| |     |   |   |   | |   `-DeclRefExpr 0x6508dc8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   |   |   | `-DeclRefExpr 0x6508e70 <col:54> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |   |   `-DeclRefExpr 0x6508f48 <line:462:8> 'value_type':'_Tp' lvalue Var 0x6507f70 '__x_copy' 'value_type':'_Tp'
| |     |   |   `-CompoundStmt 0x6509a48 <line:465:3, line:476:3>
| |     |   |     |-CallExpr 0x6509290 <line:466:5, line:469:28> '<dependent type>'
| |     |   |     | |-UnresolvedLookupExpr 0x6509008 <line:466:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_n_a' 0x647cbe0 0x647dd20
| |     |   |     | |-CXXDependentScopeMemberExpr 0x65090d8 <col:35, col:49> '<dependent type>' lvalue
| |     |   |     | | `-CXXDependentScopeMemberExpr 0x6509080 <col:35, col:41> '<dependent type>' lvalue
| |     |   |     | |   `-CXXThisExpr 0x6509068 <col:35> 'vector<_Tp, _Alloc> *' this
| |     |   |     | |-BinaryOperator 0x65091b0 <line:467:7, col:13> 'unsigned long' '-'
| |     |   |     | | |-ImplicitCastExpr 0x6509180 <col:7> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |     | | | `-DeclRefExpr 0x6509130 <col:7> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |     | | `-ImplicitCastExpr 0x6509198 <col:13> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |     | |   `-DeclRefExpr 0x6509158 <col:13> 'const size_type':'const unsigned long' lvalue Var 0x6508020 '__elems_after' 'const size_type':'const unsigned long'
| |     |   |     | |-DeclRefExpr 0x65091d8 <line:468:7> 'value_type':'_Tp' lvalue Var 0x6507f70 '__x_copy' 'value_type':'_Tp'
| |     |   |     | `-CallExpr 0x6509268 <line:469:7, col:27> '<dependent type>'
| |     |   |     |   `-UnresolvedMemberExpr 0x6509200 <col:7> '<dependent type>' lvalue
| |     |   |     |-CompoundAssignOperator 0x6509448 <line:470:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |     |   |     | |-CXXDependentScopeMemberExpr 0x6509348 <col:5, col:19> '<dependent type>' lvalue
| |     |   |     | | `-CXXDependentScopeMemberExpr 0x65092f0 <col:5, col:11> '<dependent type>' lvalue
| |     |   |     | |   `-CXXThisExpr 0x65092d8 <col:5> 'vector<_Tp, _Alloc> *' this
| |     |   |     | `-BinaryOperator 0x6509420 <col:32, col:38> 'unsigned long' '-'
| |     |   |     |   |-ImplicitCastExpr 0x65093f0 <col:32> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |     |   | `-DeclRefExpr 0x65093a0 <col:32> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |   |     |   `-ImplicitCastExpr 0x6509408 <col:38> 'size_type':'unsigned long' <LValueToRValue>
| |     |   |     |     `-DeclRefExpr 0x65093c8 <col:38> 'const size_type':'const unsigned long' lvalue Var 0x6508020 '__elems_after' 'const size_type':'const unsigned long'
| |     |   |     |-CallExpr 0x6509720 <line:471:5, line:473:33> '<dependent type>'
| |     |   |     | |-UnresolvedLookupExpr 0x65094a0 <line:471:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| |     |   |     | |-CallExpr 0x6509578 <col:33, col:49> '<dependent type>'
| |     |   |     | | `-CXXDependentScopeMemberExpr 0x6509520 <col:33, col:44> '<dependent type>' lvalue
| |     |   |     | |   `-DeclRefExpr 0x65094f8 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   |     | |-DeclRefExpr 0x65095a0 <col:52> 'pointer':'typename _Base::pointer' lvalue Var 0x6508230 '__old_finish' 'pointer':'typename _Base::pointer'
| |     |   |     | |-CXXDependentScopeMemberExpr 0x6509638 <line:472:12, col:26> '<dependent type>' lvalue
| |     |   |     | | `-CXXDependentScopeMemberExpr 0x65095e0 <col:12, col:18> '<dependent type>' lvalue
| |     |   |     | |   `-CXXThisExpr 0x65095c8 <col:12> 'vector<_Tp, _Alloc> *' this
| |     |   |     | `-CallExpr 0x65096f8 <line:473:12, col:32> '<dependent type>'
| |     |   |     |   `-UnresolvedMemberExpr 0x6509690 <col:12> '<dependent type>' lvalue
| |     |   |     |-CompoundAssignOperator 0x6509858 <line:474:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |     |   |     | |-CXXDependentScopeMemberExpr 0x65097d8 <col:5, col:19> '<dependent type>' lvalue
| |     |   |     | | `-CXXDependentScopeMemberExpr 0x6509780 <col:5, col:11> '<dependent type>' lvalue
| |     |   |     | |   `-CXXThisExpr 0x6509768 <col:5> 'vector<_Tp, _Alloc> *' this
| |     |   |     | `-DeclRefExpr 0x6509830 <col:32> 'const size_type':'const unsigned long' lvalue Var 0x6508020 '__elems_after' 'const size_type':'const unsigned long'
| |     |   |     `-CallExpr 0x6509a08 <line:475:5, col:56> '<dependent type>'
| |     |   |       |-UnresolvedLookupExpr 0x65098b0 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = 'fill' 0x641fa10 0x64bc210
| |     |   |       |-CallExpr 0x6509990 <col:15, col:31> '<dependent type>'
| |     |   |       | `-CXXDependentScopeMemberExpr 0x6509938 <col:15, col:26> '<dependent type>' lvalue
| |     |   |       |   `-DeclRefExpr 0x6509910 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |   |       |-DeclRefExpr 0x65099b8 <col:34> 'pointer':'typename _Base::pointer' lvalue Var 0x6508230 '__old_finish' 'pointer':'typename _Base::pointer'
| |     |   |       `-DeclRefExpr 0x65099e0 <col:48> 'value_type':'_Tp' lvalue Var 0x6507f70 '__x_copy' 'value_type':'_Tp'
| |     |   `-CompoundStmt 0x650be98 <line:479:6, line:525:6>
| |     |     |-DeclStmt 0x6509c40 <line:480:8, line:481:46>
| |     |     | `-VarDecl 0x6509b00 <line:480:8, line:481:45> __len 'const size_type':'const unsigned long'
| |     |     |   `-CallExpr 0x6509c08 <col:3, col:45> '<dependent type>'
| |     |     |     |-MemberExpr 0x6509b70 <col:3> '<bound member function type>' ->_M_check_len 0x649d7b0
| |     |     |     | `-CXXThisExpr 0x6509b58 <col:3> 'vector<_Tp, _Alloc> *' this
| |     |     |     |-DeclRefExpr 0x6509ba0 <col:16> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |     |     `-StringLiteral 0x6509bc8 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"
| |     |     |-DeclStmt 0x6509e90 <line:482:8, col:61>
| |     |     | `-VarDecl 0x6509cb0 <col:8, col:60> __elems_before 'const size_type':'const unsigned long'
| |     |     |   `-CXXOperatorCallExpr 0x6509e48 <col:41, col:60> '<dependent type>'
| |     |     |     |-UnresolvedLookupExpr 0x6509de0 <col:52> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |     |     |-DeclRefExpr 0x6509d08 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |     |     `-CallExpr 0x6509db8 <col:54, col:60> '<dependent type>'
| |     |     |       `-UnresolvedMemberExpr 0x6509d48 <col:54> '<bound member function type>' lvalue
| |     |     |-DeclStmt 0x650a040 <line:483:8, col:53>
| |     |     | `-VarDecl 0x6509ec0 <col:8, col:52> __new_start 'pointer':'typename _Base::pointer'
| |     |     |   `-ParenListExpr 0x650a010 <col:27, col:52> 'NULL TYPE'
| |     |     |     `-CallExpr 0x6509fb0 <col:28, col:51> '<dependent type>'
| |     |     |       |-CXXDependentScopeMemberExpr 0x6509f30 <col:28, col:34> '<dependent type>' lvalue
| |     |     |       | `-CXXThisExpr 0x6509f18 <col:28> 'vector<_Tp, _Alloc> *' this
| |     |     |       `-DeclRefExpr 0x6509f88 <col:46> 'const size_type':'const unsigned long' lvalue Var 0x6509b00 '__len' 'const size_type':'const unsigned long'
| |     |     |-DeclStmt 0x650a148 <line:484:8, col:41>
| |     |     | `-VarDecl 0x650a090 <col:8, col:40> __new_finish 'pointer':'typename _Base::pointer'
| |     |     |   `-ParenListExpr 0x650a118 <col:28, col:40> 'NULL TYPE'
| |     |     |     `-DeclRefExpr 0x650a058 <col:29> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |-CXXTryStmt 0x650b370 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:516:3>
| |     |     | |-CompoundStmt 0x650ab70 <line:486:3, line:504:3>
| |     |     | | |-CallExpr 0x650a3c0 <line:488:5, line:490:28> '<dependent type>'
| |     |     | | | |-UnresolvedLookupExpr 0x650a180 <line:488:5, col:10> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_fill_n_a' 0x647cbe0 0x647dd20
| |     |     | | | |-CXXOperatorCallExpr 0x650a298 <col:35, col:49> '<dependent type>'
| |     |     | | | | |-UnresolvedLookupExpr 0x650a230 <col:47> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |     | | | | |-DeclRefExpr 0x650a1e0 <col:35> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     | | | | `-DeclRefExpr 0x650a208 <col:49> 'const size_type':'const unsigned long' lvalue Var 0x6509cb0 '__elems_before' 'const size_type':'const unsigned long'
| |     |     | | | |-DeclRefExpr 0x650a2e0 <line:489:7> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |     | | | |-DeclRefExpr 0x650a308 <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0x65079f0 '__x' 'const value_type &'
| |     |     | | | `-CallExpr 0x650a398 <line:490:7, col:27> '<dependent type>'
| |     |     | | |   `-UnresolvedMemberExpr 0x650a330 <col:7> '<dependent type>' lvalue
| |     |     | | |-BinaryOperator 0x650a450 <line:491:5, col:20> '<dependent type>' '='
| |     |     | | | |-DeclRefExpr 0x650a408 <col:5> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     | | | `-IntegerLiteral 0x650a430 <col:20> 'int' 0
| |     |     | | |-BinaryOperator 0x650a788 <line:493:5, line:496:42> '<dependent type>' '='
| |     |     | | | |-DeclRefExpr 0x650a478 <line:493:5> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     | | | `-CallExpr 0x650a740 <line:494:9, line:496:42> '<dependent type>'
| |     |     | | |   |-UnresolvedLookupExpr 0x650a4c0 <line:494:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| |     |     | | |   |-CXXDependentScopeMemberExpr 0x650a588 <line:495:8, col:22> '<dependent type>' lvalue
| |     |     | | |   | `-CXXDependentScopeMemberExpr 0x650a530 <col:8, col:14> '<dependent type>' lvalue
| |     |     | | |   |   `-CXXThisExpr 0x650a518 <col:8> 'vector<_Tp, _Alloc> *' this
| |     |     | | |   |-CallExpr 0x650a660 <col:32, col:48> '<dependent type>'
| |     |     | | |   | `-CXXDependentScopeMemberExpr 0x650a608 <col:32, col:43> '<dependent type>' lvalue
| |     |     | | |   |   `-DeclRefExpr 0x650a5e0 <col:32> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |     | | |   |-DeclRefExpr 0x650a688 <line:496:8> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     | | |   `-CallExpr 0x650a718 <col:21, col:41> '<dependent type>'
| |     |     | | |     `-UnresolvedMemberExpr 0x650a6b0 <col:21> '<dependent type>' lvalue
| |     |     | | |-CompoundAssignOperator 0x650a800 <line:498:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |     |     | | | |-DeclRefExpr 0x650a7b0 <col:5> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     | | | `-DeclRefExpr 0x650a7d8 <col:21> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |     | | `-BinaryOperator 0x650ab48 <line:500:5, line:503:43> '<dependent type>' '='
| |     |     | |   |-DeclRefExpr 0x650a838 <line:500:5> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     | |   `-CallExpr 0x650ab00 <line:501:9, line:503:43> '<dependent type>'
| |     |     | |     |-UnresolvedLookupExpr 0x650a880 <line:501:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| |     |     | |     |-CallExpr 0x650a958 <line:502:8, col:24> '<dependent type>'
| |     |     | |     | `-CXXDependentScopeMemberExpr 0x650a900 <col:8, col:19> '<dependent type>' lvalue
| |     |     | |     |   `-DeclRefExpr 0x650a8d8 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x6507910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |     |     | |     |-CXXDependentScopeMemberExpr 0x650a9f0 <col:27, col:41> '<dependent type>' lvalue
| |     |     | |     | `-CXXDependentScopeMemberExpr 0x650a998 <col:27, col:33> '<dependent type>' lvalue
| |     |     | |     |   `-CXXThisExpr 0x650a980 <col:27> 'vector<_Tp, _Alloc> *' this
| |     |     | |     |-DeclRefExpr 0x650aa48 <line:503:8> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     | |     `-CallExpr 0x650aad8 <col:22, col:42> '<dependent type>'
| |     |     | |       `-UnresolvedMemberExpr 0x650aa70 <col:22> '<dependent type>' lvalue
| |     |     | `-CXXCatchStmt 0x650b350 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:516:3>
| |     |     |   |-<<<NULL>>>
| |     |     |   `-CompoundStmt 0x650b320 <line:506:3, line:516:3>
| |     |     |     |-IfStmt 0x650b1e0 <line:507:5, line:513:28>
| |     |     |     | |-<<<NULL>>>
| |     |     |     | |-UnaryOperator 0x650abd8 <line:507:9, col:10> '<dependent type>' prefix '!'
| |     |     |     | | `-DeclRefExpr 0x650abb0 <col:10> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     |     | |-CallExpr 0x650aff0 <line:508:7, line:510:28> '<dependent type>'
| |     |     |     | | |-UnresolvedLookupExpr 0x650ac18 <line:508:7, col:12> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |     |     |     | | |-CXXOperatorCallExpr 0x650ad40 <col:21, col:35> '<dependent type>'
| |     |     |     | | | |-UnresolvedLookupExpr 0x650acd8 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |     |     | | | |-DeclRefExpr 0x650ac88 <col:21> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |     | | | `-DeclRefExpr 0x650acb0 <col:35> 'const size_type':'const unsigned long' lvalue Var 0x6509cb0 '__elems_before' 'const size_type':'const unsigned long'
| |     |     |     | | |-CXXOperatorCallExpr 0x650af18 <line:509:7, col:38> '<dependent type>'
| |     |     |     | | | |-UnresolvedLookupExpr 0x650aeb0 <col:36> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |     |     | | | |-CXXOperatorCallExpr 0x650ae40 <col:7, col:21> '<dependent type>'
| |     |     |     | | | | |-UnresolvedLookupExpr 0x650add8 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |     |     | | | | |-DeclRefExpr 0x650ad88 <col:7> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |     | | | | `-DeclRefExpr 0x650adb0 <col:21> 'const size_type':'const unsigned long' lvalue Var 0x6509cb0 '__elems_before' 'const size_type':'const unsigned long'
| |     |     |     | | | `-DeclRefExpr 0x650ae88 <col:38> 'size_type':'unsigned long' lvalue ParmVar 0x6507980 '__n' 'size_type':'unsigned long'
| |     |     |     | | `-CallExpr 0x650afc8 <line:510:7, col:27> '<dependent type>'
| |     |     |     | |   `-UnresolvedMemberExpr 0x650af60 <col:7> '<dependent type>' lvalue
| |     |     |     | `-CallExpr 0x650b1a0 <line:512:7, line:513:28> '<dependent type>'
| |     |     |     |   |-UnresolvedLookupExpr 0x650b050 <line:512:7, col:12> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |     |     |     |   |-DeclRefExpr 0x650b0c0 <col:21> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |     |   |-DeclRefExpr 0x650b0e8 <col:34> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     |     |   `-CallExpr 0x650b178 <line:513:7, col:27> '<dependent type>'
| |     |     |     |     `-UnresolvedMemberExpr 0x650b110 <col:7> '<dependent type>' lvalue
| |     |     |     |-CallExpr 0x650b2c8 <line:514:5, col:37> '<dependent type>'
| |     |     |     | |-UnresolvedMemberExpr 0x650b210 <col:5> '<dependent type>' lvalue
| |     |     |     | |-DeclRefExpr 0x650b278 <col:19> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |     | `-DeclRefExpr 0x650b2a0 <col:32> 'const size_type':'const unsigned long' lvalue Var 0x6509b00 '__len' 'const size_type':'const unsigned long'
| |     |     |     `-CXXThrowExpr 0x650b300 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| |     |     |-CallExpr 0x650b640 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:517:8, line:518:29> '<dependent type>'
| |     |     | |-UnresolvedLookupExpr 0x650b3b0 <line:517:8, col:13> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| |     |     | |-CXXDependentScopeMemberExpr 0x650b490 <col:22, col:36> '<dependent type>' lvalue
| |     |     | | `-CXXDependentScopeMemberExpr 0x650b438 <col:22, col:28> '<dependent type>' lvalue
| |     |     | |   `-CXXThisExpr 0x650b420 <col:22> 'vector<_Tp, _Alloc> *' this
| |     |     | |-CXXDependentScopeMemberExpr 0x650b558 <col:46, col:60> '<dependent type>' lvalue
| |     |     | | `-CXXDependentScopeMemberExpr 0x650b500 <col:46, col:52> '<dependent type>' lvalue
| |     |     | |   `-CXXThisExpr 0x650b4e8 <col:46> 'vector<_Tp, _Alloc> *' this
| |     |     | `-CallExpr 0x650b618 <line:518:8, col:28> '<dependent type>'
| |     |     |   `-UnresolvedMemberExpr 0x650b5b0 <col:8> '<dependent type>' lvalue
| |     |     |-CallExpr 0x650b9f0 <line:519:8, line:521:32> '<dependent type>'
| |     |     | |-UnresolvedMemberExpr 0x650b680 <line:519:8> '<dependent type>' lvalue
| |     |     | |-CXXDependentScopeMemberExpr 0x650b758 <col:22, col:36> '<dependent type>' lvalue
| |     |     | | `-CXXDependentScopeMemberExpr 0x650b700 <col:22, col:28> '<dependent type>' lvalue
| |     |     | |   `-CXXThisExpr 0x650b6e8 <col:22> 'vector<_Tp, _Alloc> *' this
| |     |     | `-CXXOperatorCallExpr 0x650b9a8 <line:520:8, line:521:24> '<dependent type>'
| |     |     |   |-UnresolvedLookupExpr 0x650b940 <col:8> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     |     |   |-CXXDependentScopeMemberExpr 0x650b820 <line:520:8, col:22> '<dependent type>' lvalue
| |     |     |   | `-CXXDependentScopeMemberExpr 0x650b7c8 <col:8, col:14> '<dependent type>' lvalue
| |     |     |   |   `-CXXThisExpr 0x650b7b0 <col:8> 'vector<_Tp, _Alloc> *' this
| |     |     |   `-CXXDependentScopeMemberExpr 0x650b8e8 <line:521:10, col:24> '<dependent type>' lvalue
| |     |     |     `-CXXDependentScopeMemberExpr 0x650b890 <col:10, col:16> '<dependent type>' lvalue
| |     |     |       `-CXXThisExpr 0x650b878 <col:10> 'vector<_Tp, _Alloc> *' this
| |     |     |-BinaryOperator 0x650bb18 <line:522:8, col:33> '<dependent type>' '='
| |     |     | |-CXXDependentScopeMemberExpr 0x650ba98 <col:8, col:22> '<dependent type>' lvalue
| |     |     | | `-CXXDependentScopeMemberExpr 0x650ba40 <col:8, col:14> '<dependent type>' lvalue
| |     |     | |   `-CXXThisExpr 0x650ba28 <col:8> 'vector<_Tp, _Alloc> *' this
| |     |     | `-DeclRefExpr 0x650baf0 <col:33> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |     |-BinaryOperator 0x650bc30 <line:523:8, col:34> '<dependent type>' '='
| |     |     | |-CXXDependentScopeMemberExpr 0x650bbb0 <col:8, col:22> '<dependent type>' lvalue
| |     |     | | `-CXXDependentScopeMemberExpr 0x650bb58 <col:8, col:14> '<dependent type>' lvalue
| |     |     | |   `-CXXThisExpr 0x650bb40 <col:8> 'vector<_Tp, _Alloc> *' this
| |     |     | `-DeclRefExpr 0x650bc08 <col:34> 'pointer':'typename _Base::pointer' lvalue Var 0x650a090 '__new_finish' 'pointer':'typename _Base::pointer'
| |     |     `-BinaryOperator 0x650be70 <line:524:8, col:56> '<dependent type>' '='
| |     |       |-CXXDependentScopeMemberExpr 0x650bd18 <col:8, col:22> '<dependent type>' lvalue
| |     |       | `-CXXDependentScopeMemberExpr 0x650bcc0 <col:8, col:14> '<dependent type>' lvalue
| |     |       |   `-CXXThisExpr 0x650bc58 <col:8> 'vector<_Tp, _Alloc> *' this
| |     |       `-CXXOperatorCallExpr 0x650be28 <col:42, col:56> '<dependent type>'
| |     |         |-UnresolvedLookupExpr 0x650bdc0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     |         |-DeclRefExpr 0x650bd70 <col:42> 'pointer':'typename _Base::pointer' lvalue Var 0x6509ec0 '__new_start' 'pointer':'typename _Base::pointer'
| |     |         `-DeclRefExpr 0x650bd98 <col:56> 'const size_type':'const unsigned long' lvalue Var 0x6509b00 '__len' 'const size_type':'const unsigned long'
| |     `-<<<NULL>>>
| |-FunctionTemplateDecl 0x650c730 parent 0x6489700 prev 0x649ccc0 <line:592:5, line:603:7> _M_range_insert
| | |-TemplateTypeParmDecl 0x650c0a0 <line:592:14, col:23> typename _InputIterator
| | |-CXXMethodDecl 0x650c650 parent 0x6489700 prev 0x649cc20 <line:591:3, line:603:7> _M_range_insert 'void (iterator, _InputIterator, _InputIterator, std::input_iterator_tag)'
| | | |-ParmVarDecl 0x650c3d0 <line:595:23, col:32> __pos 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |-ParmVarDecl 0x650c440 <col:39, col:54> __first '_InputIterator'
| | | |-ParmVarDecl 0x650c4b0 <line:596:9, col:24> __last '_InputIterator'
| | | |-ParmVarDecl 0x650c560 <col:32, col:37> 'std::input_iterator_tag':'struct std::input_iterator_tag'
| | | `-CompoundStmt 0x650cb50 <line:597:7, line:603:7>
| | |   `-ForStmt 0x650cb10 <line:598:2, line:602:4>
| | |     |-<<<NULL>>>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x650c888 <line:598:9, col:20> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x650c808 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| | |     | |-DeclRefExpr 0x650c7b8 <col:9> '_InputIterator' lvalue ParmVar 0x650c440 '__first' '_InputIterator'
| | |     | `-DeclRefExpr 0x650c7e0 <col:20> '_InputIterator' lvalue ParmVar 0x650c4b0 '__last' '_InputIterator'
| | |     |-UnaryOperator 0x650c8f8 <col:28, col:30> '<dependent type>' prefix '++'
| | |     | `-DeclRefExpr 0x650c8d0 <col:30> '_InputIterator' lvalue ParmVar 0x650c440 '__first' '_InputIterator'
| | |     `-CompoundStmt 0x650cae8 <line:599:4, line:602:4>
| | |       |-BinaryOperator 0x650ca78 <line:600:6, col:36> '<dependent type>' '='
| | |       | |-DeclRefExpr 0x650c918 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650c3d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |       | `-CallExpr 0x650ca40 <col:14, col:36> '<dependent type>'
| | |       |   |-UnresolvedMemberExpr 0x650c958 <col:14> '<bound member function type>' lvalue
| | |       |   |-DeclRefExpr 0x650c9d0 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650c3d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |       |   `-UnaryOperator 0x650ca20 <col:28, col:29> '<dependent type>' prefix '*'
| | |       |     `-DeclRefExpr 0x650c9f8 <col:29> '_InputIterator' lvalue ParmVar 0x650c440 '__first' '_InputIterator'
| | |       `-UnaryOperator 0x650cac8 <line:601:6, col:8> '<dependent type>' prefix '++'
| | |         `-DeclRefExpr 0x650caa0 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650c3d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| |-FunctionTemplateDecl 0x650d300 parent 0x6489700 prev 0x649d130 <line:606:5, line:685:7> _M_range_insert
| | |-TemplateTypeParmDecl 0x650cc70 <line:606:14, col:23> typename _ForwardIterator
| | |-CXXMethodDecl 0x650d220 parent 0x6489700 prev 0x649d090 <line:605:3, line:685:7> _M_range_insert 'void (iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | |-ParmVarDecl 0x650cfa0 <line:609:23, col:32> __position 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | | |-ParmVarDecl 0x650d010 <col:44, col:61> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x650d080 <line:610:9, col:26> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x650d130 <col:34, col:39> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | `-CompoundStmt 0x6510f40 <line:611:7, line:685:7>
| | |   `-IfStmt 0x6510f10 <line:612:2, line:684:4>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x650d458 <line:612:6, col:17> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x650d3d8 <col:14> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| | |     | |-DeclRefExpr 0x650d388 <col:6> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     | `-DeclRefExpr 0x650d3b0 <col:17> '_ForwardIterator' lvalue ParmVar 0x650d080 '__last' '_ForwardIterator'
| | |     |-CompoundStmt 0x6510ee8 <line:613:4, line:684:4>
| | |     | |-DeclStmt 0x650d608 <line:614:6, col:58>
| | |     | | `-VarDecl 0x650d4b0 <col:6, col:57> __n 'const size_type':'const unsigned long'
| | |     | |   `-CallExpr 0x650d5d0 <col:28, col:57> '<dependent type>'
| | |     | |     |-UnresolvedLookupExpr 0x650d528 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
| | |     | |     |-DeclRefExpr 0x650d580 <col:42> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     | |     `-DeclRefExpr 0x650d5a8 <col:51> '_ForwardIterator' lvalue ParmVar 0x650d080 '__last' '_ForwardIterator'
| | |     | `-IfStmt 0x6510eb8 <line:615:6, line:683:8>
| | |     |   |-<<<NULL>>>
| | |     |   |-BinaryOperator 0x650d8e0 <line:615:10, line:616:36> '_Bool' '>='
| | |     |   | |-CXXUnresolvedConstructExpr 0x650d870 <line:615:10, line:616:31> 'size_type':'unsigned long'
| | |     |   | | `-CXXOperatorCallExpr 0x650d828 <line:615:20, line:616:22> '<dependent type>'
| | |     |   | |   |-UnresolvedLookupExpr 0x650d7c0 <col:6> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |   | |   |-CXXDependentScopeMemberExpr 0x650d6a0 <line:615:20, col:34> '<dependent type>' lvalue
| | |     |   | |   | `-CXXDependentScopeMemberExpr 0x650d648 <col:20, col:26> '<dependent type>' lvalue
| | |     |   | |   |   `-CXXThisExpr 0x650d630 <col:20> 'vector<_Tp, _Alloc> *' this
| | |     |   | |   `-CXXDependentScopeMemberExpr 0x650d768 <line:616:8, col:22> '<dependent type>' lvalue
| | |     |   | |     `-CXXDependentScopeMemberExpr 0x650d710 <col:8, col:14> '<dependent type>' lvalue
| | |     |   | |       `-CXXThisExpr 0x650d6f8 <col:8> 'vector<_Tp, _Alloc> *' this
| | |     |   | `-ImplicitCastExpr 0x650d8c8 <col:36> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |   `-DeclRefExpr 0x650d8a0 <col:36> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |-CompoundStmt 0x650f2b0 <line:617:8, line:646:8>
| | |     |   | |-DeclStmt 0x650db00 <line:618:3, col:53>
| | |     |   | | `-VarDecl 0x650d920 <col:3, col:43> __elems_after 'const size_type':'const unsigned long'
| | |     |   | |   `-CXXOperatorCallExpr 0x650dab8 <col:35, col:43> '<dependent type>'
| | |     |   | |     |-UnresolvedLookupExpr 0x650da50 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |   | |     |-CallExpr 0x650da00 <col:35, col:39> '<dependent type>'
| | |     |   | |     | `-UnresolvedMemberExpr 0x650d990 <col:35> '<bound member function type>' lvalue
| | |     |   | |     `-DeclRefExpr 0x650da28 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |   | |-DeclStmt 0x650dcd0 <line:619:3, col:48>
| | |     |   | | `-VarDecl 0x650db30 <col:3, col:47> __old_finish 'pointer':'typename _Base::pointer'
| | |     |   | |   `-ParenListExpr 0x650dc80 <col:23, col:47> 'NULL TYPE'
| | |     |   | |     `-CXXDependentScopeMemberExpr 0x650dbf8 <col:24, col:38> '<dependent type>' lvalue
| | |     |   | |       `-CXXDependentScopeMemberExpr 0x650dba0 <col:24, col:30> '<dependent type>' lvalue
| | |     |   | |         `-CXXThisExpr 0x650db88 <col:24> 'vector<_Tp, _Alloc> *' this
| | |     |   | `-IfStmt 0x650f280 <line:620:3, line:645:5>
| | |     |   |   |-<<<NULL>>>
| | |     |   |   |-BinaryOperator 0x650dd68 <line:620:7, col:23> '_Bool' '>'
| | |     |   |   | |-ImplicitCastExpr 0x650dd38 <col:7> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |   | | `-DeclRefExpr 0x650dce8 <col:7> 'const size_type':'const unsigned long' lvalue Var 0x650d920 '__elems_after' 'const size_type':'const unsigned long'
| | |     |   |   | `-ImplicitCastExpr 0x650dd50 <col:23> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |   |   `-DeclRefExpr 0x650dd10 <col:23> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |   |-CompoundStmt 0x650e6f0 <line:621:5, line:630:5>
| | |     |   |   | |-CallExpr 0x650e1c8 <line:622:7, line:625:28> '<dependent type>'
| | |     |   |   | | |-UnresolvedLookupExpr 0x650ddb0 <line:622:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| | |     |   |   | | |-CXXOperatorCallExpr 0x650df60 <col:35, col:61> '<dependent type>'
| | |     |   |   | | | |-UnresolvedLookupExpr 0x650def8 <col:59> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |   |   | | | |-CXXDependentScopeMemberExpr 0x650de78 <col:35, col:49> '<dependent type>' lvalue
| | |     |   |   | | | | `-CXXDependentScopeMemberExpr 0x650de20 <col:35, col:41> '<dependent type>' lvalue
| | |     |   |   | | | |   `-CXXThisExpr 0x650de08 <col:35> 'vector<_Tp, _Alloc> *' this
| | |     |   |   | | | `-DeclRefExpr 0x650ded0 <col:61> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |   | | |-CXXDependentScopeMemberExpr 0x650e018 <line:623:7, col:21> '<dependent type>' lvalue
| | |     |   |   | | | `-CXXDependentScopeMemberExpr 0x650dfc0 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |   | | |   `-CXXThisExpr 0x650dfa8 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |   | | |-CXXDependentScopeMemberExpr 0x650e0e0 <line:624:7, col:21> '<dependent type>' lvalue
| | |     |   |   | | | `-CXXDependentScopeMemberExpr 0x650e088 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |   | | |   `-CXXThisExpr 0x650e070 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |   | | `-CallExpr 0x650e1a0 <line:625:7, col:27> '<dependent type>'
| | |     |   |   | |   `-UnresolvedMemberExpr 0x650e138 <col:7> '<dependent type>' lvalue
| | |     |   |   | |-CompoundAssignOperator 0x650e300 <line:626:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |     |   |   | | |-CXXDependentScopeMemberExpr 0x650e280 <col:7, col:21> '<dependent type>' lvalue
| | |     |   |   | | | `-CXXDependentScopeMemberExpr 0x650e228 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |   | | |   `-CXXThisExpr 0x650e210 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |   | | `-DeclRefExpr 0x650e2d8 <col:34> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |   | |-CallExpr 0x650e580 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/stl_algobase.h:672:48, col:80> '<dependent type>'
| | |     |   |   | | |-UnresolvedLookupExpr 0x650e358 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
| | |     |   |   | | |-CallExpr 0x650e430 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:627:31, col:47> '<dependent type>'
| | |     |   |   | | | `-CXXDependentScopeMemberExpr 0x650e3d8 <col:31, col:42> '<dependent type>' lvalue
| | |     |   |   | | |   `-DeclRefExpr 0x650e3b0 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |   |   | | |-CXXOperatorCallExpr 0x650e510 <line:628:10, col:25> '<dependent type>'
| | |     |   |   | | | |-UnresolvedLookupExpr 0x650e4a8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |   |   | | | |-DeclRefExpr 0x650e458 <col:10> 'pointer':'typename _Base::pointer' lvalue Var 0x650db30 '__old_finish' 'pointer':'typename _Base::pointer'
| | |     |   |   | | | `-DeclRefExpr 0x650e480 <col:25> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |   | | `-DeclRefExpr 0x650e558 <col:30> 'pointer':'typename _Base::pointer' lvalue Var 0x650db30 '__old_finish' 'pointer':'typename _Base::pointer'
| | |     |   |   | `-CallExpr 0x650e6b0 <line:629:7, col:44> '<dependent type>'
| | |     |   |   |   |-UnresolvedLookupExpr 0x650e5e0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |     |   |   |   |-DeclRefExpr 0x650e638 <col:17> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     |   |   |   |-DeclRefExpr 0x650e660 <col:26> '_ForwardIterator' lvalue ParmVar 0x650d080 '__last' '_ForwardIterator'
| | |     |   |   |   `-DeclRefExpr 0x650e688 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |   |   `-CompoundStmt 0x650f230 <line:632:5, line:645:5>
| | |     |   |     |-DeclStmt 0x650e7c0 <line:633:7, col:39>
| | |     |   |     | `-VarDecl 0x650e740 <col:7, col:32> __mid '_ForwardIterator'
| | |     |   |     |   `-DeclRefExpr 0x650e798 <col:32> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     |   |     |-CallExpr 0x650e8a0 <line:634:7, col:40> '<dependent type>'
| | |     |   |     | |-UnresolvedLookupExpr 0x650e7f8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x63dd690
| | |     |   |     | |-DeclRefExpr 0x650e850 <col:20> '_ForwardIterator' lvalue Var 0x650e740 '__mid' '_ForwardIterator'
| | |     |   |     | `-DeclRefExpr 0x650e878 <col:27> 'const size_type':'const unsigned long' lvalue Var 0x650d920 '__elems_after' 'const size_type':'const unsigned long'
| | |     |   |     |-CallExpr 0x650eb00 <line:635:7, line:637:28> '<dependent type>'
| | |     |   |     | |-UnresolvedLookupExpr 0x650e8f8 <line:635:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |     |   |     | |-DeclRefExpr 0x650e958 <col:35> '_ForwardIterator' lvalue Var 0x650e740 '__mid' '_ForwardIterator'
| | |     |   |     | |-DeclRefExpr 0x650e980 <col:42> '_ForwardIterator' lvalue ParmVar 0x650d080 '__last' '_ForwardIterator'
| | |     |   |     | |-CXXDependentScopeMemberExpr 0x650ea18 <line:636:7, col:21> '<dependent type>' lvalue
| | |     |   |     | | `-CXXDependentScopeMemberExpr 0x650e9c0 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |     | |   `-CXXThisExpr 0x650e9a8 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |     | `-CallExpr 0x650ead8 <line:637:7, col:27> '<dependent type>'
| | |     |   |     |   `-UnresolvedMemberExpr 0x650ea70 <col:7> '<dependent type>' lvalue
| | |     |   |     |-CompoundAssignOperator 0x650ecb8 <line:638:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |     |   |     | |-CXXDependentScopeMemberExpr 0x650ebb8 <col:7, col:21> '<dependent type>' lvalue
| | |     |   |     | | `-CXXDependentScopeMemberExpr 0x650eb60 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |     | |   `-CXXThisExpr 0x650eb48 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |     | `-BinaryOperator 0x650ec90 <col:34, col:40> 'unsigned long' '-'
| | |     |   |     |   |-ImplicitCastExpr 0x650ec60 <col:34> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |     |   | `-DeclRefExpr 0x650ec10 <col:34> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |   |     |   `-ImplicitCastExpr 0x650ec78 <col:40> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |     |     `-DeclRefExpr 0x650ec38 <col:40> 'const size_type':'const unsigned long' lvalue Var 0x650d920 '__elems_after' 'const size_type':'const unsigned long'
| | |     |   |     |-CallExpr 0x650ef90 <line:639:7, line:642:28> '<dependent type>'
| | |     |   |     | |-UnresolvedLookupExpr 0x650ed10 <line:639:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_a' 0x647a6d0
| | |     |   |     | |-CallExpr 0x650ede8 <col:35, col:51> '<dependent type>'
| | |     |   |     | | `-CXXDependentScopeMemberExpr 0x650ed90 <col:35, col:46> '<dependent type>' lvalue
| | |     |   |     | |   `-DeclRefExpr 0x650ed68 <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |   |     | |-DeclRefExpr 0x650ee10 <line:640:7> 'pointer':'typename _Base::pointer' lvalue Var 0x650db30 '__old_finish' 'pointer':'typename _Base::pointer'
| | |     |   |     | |-CXXDependentScopeMemberExpr 0x650eea8 <line:641:7, col:21> '<dependent type>' lvalue
| | |     |   |     | | `-CXXDependentScopeMemberExpr 0x650ee50 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |     | |   `-CXXThisExpr 0x650ee38 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |     | `-CallExpr 0x650ef68 <line:642:7, col:27> '<dependent type>'
| | |     |   |     |   `-UnresolvedMemberExpr 0x650ef00 <col:7> '<dependent type>' lvalue
| | |     |   |     |-CompoundAssignOperator 0x650f0c8 <line:643:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |     |   |     | |-CXXDependentScopeMemberExpr 0x650f048 <col:7, col:21> '<dependent type>' lvalue
| | |     |   |     | | `-CXXDependentScopeMemberExpr 0x650eff0 <col:7, col:13> '<dependent type>' lvalue
| | |     |   |     | |   `-CXXThisExpr 0x650efd8 <col:7> 'vector<_Tp, _Alloc> *' this
| | |     |   |     | `-DeclRefExpr 0x650f0a0 <col:34> 'const size_type':'const unsigned long' lvalue Var 0x650d920 '__elems_after' 'const size_type':'const unsigned long'
| | |     |   |     `-CallExpr 0x650f1f0 <line:644:7, col:43> '<dependent type>'
| | |     |   |       |-UnresolvedLookupExpr 0x650f120 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |     |   |       |-DeclRefExpr 0x650f178 <col:17> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     |   |       |-DeclRefExpr 0x650f1a0 <col:26> '_ForwardIterator' lvalue Var 0x650e740 '__mid' '_ForwardIterator'
| | |     |   |       `-DeclRefExpr 0x650f1c8 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |   `-CompoundStmt 0x6510e58 <line:648:8, line:683:8>
| | |     |     |-DeclStmt 0x650f4b0 <line:649:3, line:650:49>
| | |     |     | `-VarDecl 0x650f2f0 <line:649:3, line:650:48> __len 'const size_type':'const unsigned long'
| | |     |     |   `-CallExpr 0x650f478 <col:5, col:48> '<dependent type>'
| | |     |     |     |-MemberExpr 0x650f360 <col:5> '<bound member function type>' ->_M_check_len 0x649d7b0
| | |     |     |     | `-CXXThisExpr 0x650f348 <col:5> 'vector<_Tp, _Alloc> *' this
| | |     |     |     |-DeclRefExpr 0x650f390 <col:18> 'const size_type':'const unsigned long' lvalue Var 0x650d4b0 '__n' 'const size_type':'const unsigned long'
| | |     |     |     `-StringLiteral 0x650f438 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"
| | |     |     |-DeclStmt 0x650f660 <line:651:3, col:48>
| | |     |     | `-VarDecl 0x650f4e0 <col:3, col:47> __new_start 'pointer':'typename _Base::pointer'
| | |     |     |   `-ParenListExpr 0x650f630 <col:22, col:47> 'NULL TYPE'
| | |     |     |     `-CallExpr 0x650f5d0 <col:23, col:46> '<dependent type>'
| | |     |     |       |-CXXDependentScopeMemberExpr 0x650f550 <col:23, col:29> '<dependent type>' lvalue
| | |     |     |       | `-CXXThisExpr 0x650f538 <col:23> 'vector<_Tp, _Alloc> *' this
| | |     |     |       `-DeclRefExpr 0x650f5a8 <col:41> 'const size_type':'const unsigned long' lvalue Var 0x650f2f0 '__len' 'const size_type':'const unsigned long'
| | |     |     |-DeclStmt 0x650f768 <line:652:3, col:36>
| | |     |     | `-VarDecl 0x650f6b0 <col:3, col:35> __new_finish 'pointer':'typename _Base::pointer'
| | |     |     |   `-ParenListExpr 0x650f738 <col:23, col:35> 'NULL TYPE'
| | |     |     |     `-DeclRefExpr 0x650f678 <col:24> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |     |-CXXTryStmt 0x6510380 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:40:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:674:5>
| | |     |     | |-CompoundStmt 0x6510040 <line:654:5, line:667:5>
| | |     |     | | |-BinaryOperator 0x650fa90 <line:655:7, line:658:44> '<dependent type>' '='
| | |     |     | | | |-DeclRefExpr 0x650f780 <line:655:7> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     | | | `-CallExpr 0x650fa48 <line:656:11, line:658:44> '<dependent type>'
| | |     |     | | |   |-UnresolvedLookupExpr 0x650f7c8 <line:656:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| | |     |     | | |   |-CXXDependentScopeMemberExpr 0x650f890 <line:657:10, col:24> '<dependent type>' lvalue
| | |     |     | | |   | `-CXXDependentScopeMemberExpr 0x650f838 <col:10, col:16> '<dependent type>' lvalue
| | |     |     | | |   |   `-CXXThisExpr 0x650f820 <col:10> 'vector<_Tp, _Alloc> *' this
| | |     |     | | |   |-CallExpr 0x650f968 <col:34, col:50> '<dependent type>'
| | |     |     | | |   | `-CXXDependentScopeMemberExpr 0x650f910 <col:34, col:45> '<dependent type>' lvalue
| | |     |     | | |   |   `-DeclRefExpr 0x650f8e8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |     | | |   |-DeclRefExpr 0x650f990 <line:658:10> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |     | | |   `-CallExpr 0x650fa20 <col:23, col:43> '<dependent type>'
| | |     |     | | |     `-UnresolvedMemberExpr 0x650f9b8 <col:23> '<dependent type>' lvalue
| | |     |     | | |-BinaryOperator 0x650fce0 <line:659:7, line:662:32> '<dependent type>' '='
| | |     |     | | | |-DeclRefExpr 0x650fab8 <line:659:7> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     | | | `-CallExpr 0x650fc68 <line:660:11, line:662:32> '<dependent type>'
| | |     |     | | |   |-UnresolvedLookupExpr 0x650fb00 <line:660:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_copy_a' 0x6478f80 0x647a060
| | |     |     | | |   |-DeclRefExpr 0x650fb60 <col:39> '_ForwardIterator' lvalue ParmVar 0x650d010 '__first' '_ForwardIterator'
| | |     |     | | |   |-DeclRefExpr 0x650fb88 <col:48> '_ForwardIterator' lvalue ParmVar 0x650d080 '__last' '_ForwardIterator'
| | |     |     | | |   |-DeclRefExpr 0x650fbb0 <line:661:11> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     | | |   `-CallExpr 0x650fc40 <line:662:11, col:31> '<dependent type>'
| | |     |     | | |     `-UnresolvedMemberExpr 0x650fbd8 <col:11> '<dependent type>' lvalue
| | |     |     | | `-BinaryOperator 0x6510018 <line:663:7, line:666:45> '<dependent type>' '='
| | |     |     | |   |-DeclRefExpr 0x650fd08 <line:663:7> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     | |   `-CallExpr 0x650ffd0 <line:664:11, line:666:45> '<dependent type>'
| | |     |     | |     |-UnresolvedLookupExpr 0x650fd50 <line:664:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__uninitialized_move_if_noexcept_a' 0x647adb0
| | |     |     | |     |-CallExpr 0x650fe28 <line:665:10, col:26> '<dependent type>'
| | |     |     | |     | `-CXXDependentScopeMemberExpr 0x650fdd0 <col:10, col:21> '<dependent type>' lvalue
| | |     |     | |     |   `-DeclRefExpr 0x650fda8 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x650cfa0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
| | |     |     | |     |-CXXDependentScopeMemberExpr 0x650fec0 <col:29, col:43> '<dependent type>' lvalue
| | |     |     | |     | `-CXXDependentScopeMemberExpr 0x650fe68 <col:29, col:35> '<dependent type>' lvalue
| | |     |     | |     |   `-CXXThisExpr 0x650fe50 <col:29> 'vector<_Tp, _Alloc> *' this
| | |     |     | |     |-DeclRefExpr 0x650ff18 <line:666:10> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     | |     `-CallExpr 0x650ffa8 <col:24, col:44> '<dependent type>'
| | |     |     | |       `-UnresolvedMemberExpr 0x650ff40 <col:24> '<dependent type>' lvalue
| | |     |     | `-CXXCatchStmt 0x6510360 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:41:21, /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:674:5>
| | |     |     |   |-<<<NULL>>>
| | |     |     |   `-CompoundStmt 0x6510330 <line:669:5, line:674:5>
| | |     |     |     |-CallExpr 0x65101e0 <line:670:7, line:671:28> '<dependent type>'
| | |     |     |     | |-UnresolvedLookupExpr 0x6510090 <line:670:7, col:12> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |     |     |     | |-DeclRefExpr 0x6510100 <col:21> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |     |     | |-DeclRefExpr 0x6510128 <col:34> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     |     | `-CallExpr 0x65101b8 <line:671:7, col:27> '<dependent type>'
| | |     |     |     |   `-UnresolvedMemberExpr 0x6510150 <col:7> '<dependent type>' lvalue
| | |     |     |     |-CallExpr 0x65102d8 <line:672:7, col:39> '<dependent type>'
| | |     |     |     | |-UnresolvedMemberExpr 0x6510220 <col:7> '<dependent type>' lvalue
| | |     |     |     | |-DeclRefExpr 0x6510288 <col:21> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |     |     | `-DeclRefExpr 0x65102b0 <col:34> 'const size_type':'const unsigned long' lvalue Var 0x650f2f0 '__len' 'const size_type':'const unsigned long'
| | |     |     |     `-CXXThrowExpr 0x6510310 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_defines.h:42:34> 'void'
| | |     |     |-CallExpr 0x6510650 </usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/vector.tcc:675:3, line:676:31> '<dependent type>'
| | |     |     | |-UnresolvedLookupExpr 0x65103c0 <line:675:3, col:8> '<overloaded function type>' lvalue (no ADL) = '_Destroy' 0x646d690 0x6470500 0x6470e10 0x64719f0
| | |     |     | |-CXXDependentScopeMemberExpr 0x65104a0 <col:17, col:31> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6510448 <col:17, col:23> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x6510430 <col:17> 'vector<_Tp, _Alloc> *' this
| | |     |     | |-CXXDependentScopeMemberExpr 0x6510568 <col:41, col:55> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6510510 <col:41, col:47> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x65104f8 <col:41> 'vector<_Tp, _Alloc> *' this
| | |     |     | `-CallExpr 0x6510628 <line:676:10, col:30> '<dependent type>'
| | |     |     |   `-UnresolvedMemberExpr 0x65105c0 <col:10> '<dependent type>' lvalue
| | |     |     |-CallExpr 0x6510a00 <line:677:3, line:679:34> '<dependent type>'
| | |     |     | |-UnresolvedMemberExpr 0x6510690 <line:677:3> '<dependent type>' lvalue
| | |     |     | |-CXXDependentScopeMemberExpr 0x6510768 <col:17, col:31> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6510710 <col:17, col:23> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x65106f8 <col:17> 'vector<_Tp, _Alloc> *' this
| | |     |     | `-CXXOperatorCallExpr 0x65109b8 <line:678:10, line:679:26> '<dependent type>'
| | |     |     |   |-UnresolvedLookupExpr 0x6510950 <col:10> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |     |   |-CXXDependentScopeMemberExpr 0x6510830 <line:678:10, col:24> '<dependent type>' lvalue
| | |     |     |   | `-CXXDependentScopeMemberExpr 0x65107d8 <col:10, col:16> '<dependent type>' lvalue
| | |     |     |   |   `-CXXThisExpr 0x65107c0 <col:10> 'vector<_Tp, _Alloc> *' this
| | |     |     |   `-CXXDependentScopeMemberExpr 0x65108f8 <line:679:12, col:26> '<dependent type>' lvalue
| | |     |     |     `-CXXDependentScopeMemberExpr 0x65108a0 <col:12, col:18> '<dependent type>' lvalue
| | |     |     |       `-CXXThisExpr 0x6510888 <col:12> 'vector<_Tp, _Alloc> *' this
| | |     |     |-BinaryOperator 0x6510b28 <line:680:3, col:28> '<dependent type>' '='
| | |     |     | |-CXXDependentScopeMemberExpr 0x6510aa8 <col:3, col:17> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6510a50 <col:3, col:9> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x6510a38 <col:3> 'vector<_Tp, _Alloc> *' this
| | |     |     | `-DeclRefExpr 0x6510b00 <col:28> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |     |-BinaryOperator 0x6510c40 <line:681:3, col:29> '<dependent type>' '='
| | |     |     | |-CXXDependentScopeMemberExpr 0x6510bc0 <col:3, col:17> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6510b68 <col:3, col:9> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x6510b50 <col:3> 'vector<_Tp, _Alloc> *' this
| | |     |     | `-DeclRefExpr 0x6510c18 <col:29> 'pointer':'typename _Base::pointer' lvalue Var 0x650f6b0 '__new_finish' 'pointer':'typename _Base::pointer'
| | |     |     `-BinaryOperator 0x6510e30 <line:682:3, col:51> '<dependent type>' '='
| | |     |       |-CXXDependentScopeMemberExpr 0x6510cd8 <col:3, col:17> '<dependent type>' lvalue
| | |     |       | `-CXXDependentScopeMemberExpr 0x6510c80 <col:3, col:9> '<dependent type>' lvalue
| | |     |       |   `-CXXThisExpr 0x6510c68 <col:3> 'vector<_Tp, _Alloc> *' this
| | |     |       `-CXXOperatorCallExpr 0x6510de8 <col:37, col:51> '<dependent type>'
| | |     |         |-UnresolvedLookupExpr 0x6510d80 <col:49> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| | |     |         |-DeclRefExpr 0x6510d30 <col:37> 'pointer':'typename _Base::pointer' lvalue Var 0x650f4e0 '__new_start' 'pointer':'typename _Base::pointer'
| | |     |         `-DeclRefExpr 0x6510d58 <col:51> 'const size_type':'const unsigned long' lvalue Var 0x650f2f0 '__len' 'const size_type':'const unsigned long'
| | |     `-<<<NULL>>>
| |-CXXMethodDecl 0x6511300 parent 0x64c09e0 prev 0x64c6ae0 <line:689:3, line:700:5> _M_reallocate 'void (size_type)'
| | |-ParmVarDecl 0x6511280 <line:692:19, col:29> __n 'size_type':'unsigned long'
| | `-CompoundStmt 0x6511df8 <line:693:5, line:700:5>
| |   |-DeclStmt 0x6511520 <line:694:7, col:46>
| |   | `-VarDecl 0x6511400 <col:7, col:45> __q '_Bit_type *'
| |   |   `-CallExpr 0x65114f0 <col:24, col:45> '<dependent type>'
| |   |     |-CXXDependentScopeMemberExpr 0x6511470 <col:24, col:30> '<dependent type>' lvalue
| |   |     | `-CXXThisExpr 0x6511458 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
| |   |     `-DeclRefExpr 0x65114c8 <col:42> 'size_type':'unsigned long' lvalue ParmVar 0x6511280 '__n' 'size_type':'unsigned long'
| |   |-BinaryOperator 0x65118b8 <line:695:7, line:696:23> '<dependent type>' '='
| |   | |-CXXDependentScopeMemberExpr 0x65115a8 <line:695:7, col:21> '<dependent type>' lvalue
| |   | | `-CXXDependentScopeMemberExpr 0x6511550 <col:7, col:13> '<dependent type>' lvalue
| |   | |   `-CXXThisExpr 0x6511538 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
| |   | `-CallExpr 0x6511878 <col:33, line:696:23> '<dependent type>'
| |   |   |-MemberExpr 0x6511618 <line:695:33> '<bound member function type>' ->_M_copy_aligned 0x64c6850
| |   |   | `-CXXThisExpr 0x6511600 <col:33> 'vector<_Bool, type-parameter-0-0> *' this
| |   |   |-CallExpr 0x65116d0 <col:49, col:55> '<dependent type>'
| |   |   | `-UnresolvedMemberExpr 0x6511660 <col:49> '<bound member function type>' lvalue
| |   |   |-CallExpr 0x6511780 <col:58, col:62> '<dependent type>'
| |   |   | `-UnresolvedMemberExpr 0x6511710 <col:58> '<bound member function type>' lvalue
| |   |   `-CXXTemporaryObjectExpr 0x6511830 <line:696:7, col:22> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |   |     |-ImplicitCastExpr 0x6511800 <col:16> '_Bit_type *' <LValueToRValue>
| |   |     | `-DeclRefExpr 0x65117b8 <col:16> '_Bit_type *' lvalue Var 0x6511400 '__q' '_Bit_type *'
| |   |     `-ImplicitCastExpr 0x6511818 <col:21> 'unsigned int' <IntegralCast>
| |   |       `-IntegerLiteral 0x65117e0 <col:21> 'int' 0
| |   |-CallExpr 0x6511950 <line:697:7, col:27> '<dependent type>'
| |   | `-CXXDependentScopeMemberExpr 0x65118f8 <col:7, col:13> '<dependent type>' lvalue
| |   |   `-CXXThisExpr 0x65118e0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
| |   |-BinaryOperator 0x6511b10 <line:698:7, col:47> '<dependent type>' '='
| |   | |-CXXDependentScopeMemberExpr 0x65119e8 <col:7, col:21> '<dependent type>' lvalue
| |   | | `-CXXDependentScopeMemberExpr 0x6511990 <col:7, col:13> '<dependent type>' lvalue
| |   | |   `-CXXThisExpr 0x6511978 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
| |   | `-CXXTemporaryObjectExpr 0x6511ac8 <col:32, col:47> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |   |   |-ImplicitCastExpr 0x6511a98 <col:41> '_Bit_type *' <LValueToRValue>
| |   |   | `-DeclRefExpr 0x6511a50 <col:41> '_Bit_type *' lvalue Var 0x6511400 '__q' '_Bit_type *'
| |   |   `-ImplicitCastExpr 0x6511ab0 <col:46> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x6511a78 <col:46> 'int' 0
| |   `-BinaryOperator 0x6511dd0 <line:699:7, col:59> '<dependent type>' '='
| |     |-CXXDependentScopeMemberExpr 0x6511ba8 <col:7, col:21> '<dependent type>' lvalue
| |     | `-CXXDependentScopeMemberExpr 0x6511b50 <col:7, col:13> '<dependent type>' lvalue
| |     |   `-CXXThisExpr 0x6511b38 <col:7> 'vector<_Bool, type-parameter-0-0> *' this
| |     `-CXXOperatorCallExpr 0x6511d88 <col:41, col:59> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x6511d20 <col:45> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |       |-DeclRefExpr 0x6511c00 <col:41> '_Bit_type *' lvalue Var 0x6511400 '__q' '_Bit_type *'
| |       `-CallExpr 0x6511cf0 <col:47, col:59> '<dependent type>'
| |         |-UnresolvedMemberExpr 0x6511c28 <col:47> '<dependent type>' lvalue
| |         `-DeclRefExpr 0x6511c90 <col:56> 'size_type':'unsigned long' lvalue ParmVar 0x6511280 '__n' 'size_type':'unsigned long'
| |-CXXMethodDecl 0x65122d0 parent 0x64c09e0 prev 0x64d1860 <line:702:3, line:730:5> _M_fill_insert 'void (iterator, size_type, _Bool)'
| | |-ParmVarDecl 0x6512160 <line:705:20, col:29> __position 'iterator':'struct std::_Bit_iterator'
| | |-ParmVarDecl 0x65121d0 <col:41, col:51> __n 'size_type':'unsigned long'
| | |-ParmVarDecl 0x6512240 <col:56, col:61> __x '_Bool'
| | `-CompoundStmt 0x65147a0 <line:706:5, line:730:5>
| |   |-IfStmt 0x6512488 <line:707:7, line:708:2>
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x6512440 <line:707:11, col:18> '_Bool' '=='
| |   | | |-ImplicitCastExpr 0x6512410 <col:11> 'size_type':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x65123c8 <col:11> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |   | | `-ImplicitCastExpr 0x6512428 <col:18> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x65123f0 <col:18> 'int' 0
| |   | |-ReturnStmt 0x6512468 <line:708:2>
| |   | `-<<<NULL>>>
| |   `-IfStmt 0x6514770 <line:709:7, line:729:2>
| |     |-<<<NULL>>>
| |     |-CXXOperatorCallExpr 0x65126e0 <line:709:11, col:34> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x6512670 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630 0x64acd30
| |     | |-CXXOperatorCallExpr 0x6512600 <col:11, col:29> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x6512598 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| |     | | |-CallExpr 0x6512500 <col:11, col:20> '<dependent type>'
| |     | | | `-MemberExpr 0x65124d0 <col:11> '<bound member function type>' ->capacity 0x64c3960
| |     | | |   `-CXXThisExpr 0x65124b8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this
| |     | | `-CallExpr 0x6512570 <col:24, col:29> '<dependent type>'
| |     | |   `-MemberExpr 0x6512540 <col:24> '<bound member function type>' ->size 0x64c37e0
| |     | |     `-CXXThisExpr 0x6512528 <col:24> 'vector<_Bool, type-parameter-0-0> *' this
| |     | `-DeclRefExpr 0x6512648 <col:34> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |     |-CompoundStmt 0x6513438 <line:710:2, line:715:2>
| |     | |-CallExpr 0x6512a80 <line:711:4, line:712:55> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x6512748 <line:711:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
| |     | | |-DeclRefExpr 0x65127a0 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6512160 '__position' 'iterator':'struct std::_Bit_iterator'
| |     | | |-CallExpr 0x6512850 <col:35, col:39> '<dependent type>'
| |     | | | `-UnresolvedMemberExpr 0x65127e0 <col:35> '<bound member function type>' lvalue
| |     | | `-CXXOperatorCallExpr 0x6512a38 <line:712:9, col:54> '<dependent type>'
| |     | |   |-UnresolvedLookupExpr 0x65129d0 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |     | |   |-CXXDependentScopeMemberExpr 0x65128e8 <col:9, col:23> '<dependent type>' lvalue
| |     | |   | `-CXXDependentScopeMemberExpr 0x6512890 <col:9, col:15> '<dependent type>' lvalue
| |     | |   |   `-CXXThisExpr 0x6512878 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
| |     | |   `-CXXFunctionalCastExpr 0x65129a8 <col:35, col:54> 'difference_type':'long' functional cast to difference_type <NoOp>
| |     | |     `-ImplicitCastExpr 0x6512990 <col:51> 'difference_type':'long' <IntegralCast>
| |     | |       `-ImplicitCastExpr 0x6512978 <col:51> 'size_type':'unsigned long' <LValueToRValue>
| |     | |         `-DeclRefExpr 0x6512950 <col:51> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |     | |-CallExpr 0x6513190 <line:713:4, col:64> 'void'
| |     | | |-ImplicitCastExpr 0x6513178 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
| |     | | | `-DeclRefExpr 0x6513110 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x64bc210 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'
| |     | | |-CXXConstructExpr 0x65131e8 <col:14> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |     | | | `-ImplicitCastExpr 0x65131d0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |     | | |   `-DeclRefExpr 0x6512b40 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6512160 '__position' 'iterator':'struct std::_Bit_iterator'
| |     | | |-CXXConstructExpr 0x6513258 <col:26, col:58> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| |     | | | `-MaterializeTemporaryExpr 0x6513238 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
| |     | | |   `-ImplicitCastExpr 0x6513220 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
| |     | | |     `-CXXOperatorCallExpr 0x6512ca8 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
| |     | | |       |-ImplicitCastExpr 0x6512c90 <col:37> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
| |     | | |       | `-DeclRefExpr 0x6512c68 <col:37> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
| |     | | |       |-ImplicitCastExpr 0x6512c50 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |     | | |       | `-DeclRefExpr 0x6512b68 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6512160 '__position' 'iterator':'struct std::_Bit_iterator'
| |     | | |       `-CXXFunctionalCastExpr 0x6512bf8 <col:39, col:58> 'difference_type':'long' functional cast to difference_type <NoOp>
| |     | | |         `-ImplicitCastExpr 0x6512be0 <col:55> 'difference_type':'long' <IntegralCast>
| |     | | |           `-ImplicitCastExpr 0x6512bc8 <col:55> 'size_type':'unsigned long' <LValueToRValue>
| |     | | |             `-DeclRefExpr 0x6512ba0 <col:55> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |     | | `-ImplicitCastExpr 0x6513290 <col:61> 'const _Bool' lvalue <NoOp>
| |     | |   `-DeclRefExpr 0x6512cf0 <col:61> '_Bool' lvalue ParmVar 0x6512240 '__x' '_Bool'
| |     | `-CompoundAssignOperator 0x6513400 <line:714:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| |     |   |-CXXDependentScopeMemberExpr 0x6513318 <col:4, col:18> '<dependent type>' lvalue
| |     |   | `-CXXDependentScopeMemberExpr 0x65132c0 <col:4, col:10> '<dependent type>' lvalue
| |     |   |   `-CXXThisExpr 0x65132a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
| |     |   `-CXXFunctionalCastExpr 0x65133d8 <col:31, col:50> 'difference_type':'long' functional cast to difference_type <NoOp>
| |     |     `-ImplicitCastExpr 0x65133c0 <col:47> 'difference_type':'long' <IntegralCast>
| |     |       `-ImplicitCastExpr 0x65133a8 <col:47> 'size_type':'unsigned long' <LValueToRValue>
| |     |         `-DeclRefExpr 0x6513380 <col:47> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |     `-CompoundStmt 0x6514718 <line:717:2, line:729:2>
| |       |-DeclStmt 0x65135c8 <line:718:4, line:719:55>
| |       | `-VarDecl 0x6513480 <line:718:4, line:719:54> __len 'const size_type':'const unsigned long'
| |       |   `-CallExpr 0x6513590 <col:6, col:54> '<dependent type>'
| |       |     |-MemberExpr 0x65134f0 <col:6> '<bound member function type>' ->_M_check_len 0x64d2590
| |       |     | `-CXXThisExpr 0x65134d8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this
| |       |     |-DeclRefExpr 0x6513520 <col:19> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |       |     `-StringLiteral 0x6513548 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"
| |       |-DeclStmt 0x6513710 <line:720:4, col:46>
| |       | `-VarDecl 0x65135f0 <col:4, col:45> __q '_Bit_type *'
| |       |   `-CallExpr 0x65136e0 <col:22, col:45> '<dependent type>'
| |       |     |-CXXDependentScopeMemberExpr 0x6513660 <col:22, col:28> '<dependent type>' lvalue
| |       |     | `-CXXThisExpr 0x6513648 <col:22> 'vector<_Bool, type-parameter-0-0> *' this
| |       |     `-DeclRefExpr 0x65136b8 <col:40> 'const size_type':'const unsigned long' lvalue Var 0x6513480 '__len' 'const size_type':'const unsigned long'
| |       |-DeclStmt 0x65139c8 <line:721:4, line:722:24>
| |       | `-VarDecl 0x6513740 <line:721:4, line:722:23> __i 'iterator':'struct std::_Bit_iterator'
| |       |   `-CallExpr 0x6513988 <line:721:19, line:722:23> '<dependent type>'
| |       |     |-MemberExpr 0x65137b0 <line:721:19> '<bound member function type>' ->_M_copy_aligned 0x64c6850
| |       |     | `-CXXThisExpr 0x6513798 <col:19> 'vector<_Bool, type-parameter-0-0> *' this
| |       |     |-CallExpr 0x6513868 <col:35, col:41> '<dependent type>'
| |       |     | `-UnresolvedMemberExpr 0x65137f8 <col:35> '<bound member function type>' lvalue
| |       |     |-DeclRefExpr 0x6513890 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6512160 '__position' 'iterator':'struct std::_Bit_iterator'
| |       |     `-CXXTemporaryObjectExpr 0x6513940 <line:722:7, col:22> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |       |       |-ImplicitCastExpr 0x6513910 <col:16> '_Bit_type *' <LValueToRValue>
| |       |       | `-DeclRefExpr 0x65138c8 <col:16> '_Bit_type *' lvalue Var 0x65135f0 '__q' '_Bit_type *'
| |       |       `-ImplicitCastExpr 0x6513928 <col:21> 'unsigned int' <IntegralCast>
| |       |         `-IntegerLiteral 0x65138f0 <col:21> 'int' 0
| |       |-CallExpr 0x6513d18 <line:723:4, col:50> 'void'
| |       | |-ImplicitCastExpr 0x6513d00 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x6513c98 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x64bc210 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'
| |       | |-CXXConstructExpr 0x6513d70 <col:14> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()'
| |       | | `-ImplicitCastExpr 0x6513d58 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       | |   `-DeclRefExpr 0x6513a60 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6513740 '__i' 'iterator':'struct std::_Bit_iterator'
| |       | |-CXXConstructExpr 0x6513de0 <col:19, col:44> 'struct std::_Bit_iterator' 'void (const struct std::_Bit_iterator &) throw()' elidable
| |       | | `-MaterializeTemporaryExpr 0x6513dc0 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
| |       | |   `-ImplicitCastExpr 0x6513da8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
| |       | |     `-CXXOperatorCallExpr 0x6513bc8 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
| |       | |       |-ImplicitCastExpr 0x6513bb0 <col:23> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
| |       | |       | `-DeclRefExpr 0x6513b88 <col:23> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
| |       | |       |-ImplicitCastExpr 0x6513b70 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       | |       | `-DeclRefExpr 0x6513a88 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6513740 '__i' 'iterator':'struct std::_Bit_iterator'
| |       | |       `-CXXFunctionalCastExpr 0x6513b18 <col:25, col:44> 'difference_type':'long' functional cast to difference_type <NoOp>
| |       | |         `-ImplicitCastExpr 0x6513b00 <col:41> 'difference_type':'long' <IntegralCast>
| |       | |           `-ImplicitCastExpr 0x6513ae8 <col:41> 'size_type':'unsigned long' <LValueToRValue>
| |       | |             `-DeclRefExpr 0x6513ac0 <col:41> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |       | `-ImplicitCastExpr 0x6513e18 <col:47> 'const _Bool' lvalue <NoOp>
| |       |   `-DeclRefExpr 0x6513c10 <col:47> '_Bool' lvalue ParmVar 0x6512240 '__x' '_Bool'
| |       |-BinaryOperator 0x6514210 <line:724:4, line:725:38> '<dependent type>' '='
| |       | |-CXXDependentScopeMemberExpr 0x6513ea0 <line:724:4, col:18> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x6513e48 <col:4, col:10> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x6513e30 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
| |       | `-CallExpr 0x65141d0 <col:30, line:725:38> '<dependent type>'
| |       |   |-UnresolvedLookupExpr 0x6513f18 <line:724:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| |       |   |-DeclRefExpr 0x6513f70 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6512160 '__position' 'iterator':'struct std::_Bit_iterator'
| |       |   |-CallExpr 0x6514020 <col:52, col:56> '<dependent type>'
| |       |   | `-UnresolvedMemberExpr 0x6513fb0 <col:52> '<bound member function type>' lvalue
| |       |   `-CXXOperatorCallExpr 0x6514188 <line:725:12, col:37> 'iterator':'struct std::_Bit_iterator'
| |       |     |-ImplicitCastExpr 0x6514170 <col:16> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
| |       |     | `-DeclRefExpr 0x6514148 <col:16> 'iterator (difference_type) const' lvalue CXXMethod 0x64b52f0 'operator+' 'iterator (difference_type) const'
| |       |     |-ImplicitCastExpr 0x6514130 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
| |       |     | `-DeclRefExpr 0x6514048 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6513740 '__i' 'iterator':'struct std::_Bit_iterator'
| |       |     `-CXXFunctionalCastExpr 0x65140d8 <col:18, col:37> 'difference_type':'long' functional cast to difference_type <NoOp>
| |       |       `-ImplicitCastExpr 0x65140c0 <col:34> 'difference_type':'long' <IntegralCast>
| |       |         `-ImplicitCastExpr 0x65140a8 <col:34> 'size_type':'unsigned long' <LValueToRValue>
| |       |           `-DeclRefExpr 0x6514080 <col:34> 'size_type':'unsigned long' lvalue ParmVar 0x65121d0 '__n' 'size_type':'unsigned long'
| |       |-CallExpr 0x65142a8 <line:726:4, col:24> '<dependent type>'
| |       | `-CXXDependentScopeMemberExpr 0x6514250 <col:4, col:10> '<dependent type>' lvalue
| |       |   `-CXXThisExpr 0x6514238 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
| |       |-BinaryOperator 0x6514530 <line:727:4, col:58> '<dependent type>' '='
| |       | |-CXXDependentScopeMemberExpr 0x6514340 <col:4, col:18> '<dependent type>' lvalue
| |       | | `-CXXDependentScopeMemberExpr 0x65142e8 <col:4, col:10> '<dependent type>' lvalue
| |       | |   `-CXXThisExpr 0x65142d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
| |       | `-CXXOperatorCallExpr 0x65144e8 <col:38, col:58> '<dependent type>'
| |       |   |-UnresolvedLookupExpr 0x6514480 <col:42> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| |       |   |-DeclRefExpr 0x6514398 <col:38> '_Bit_type *' lvalue Var 0x65135f0 '__q' '_Bit_type *'
| |       |   `-CallExpr 0x6514450 <col:44, col:58> '<dependent type>'
| |       |     |-UnresolvedMemberExpr 0x65143c0 <col:44> '<dependent type>' lvalue
| |       |     `-DeclRefExpr 0x6514428 <col:53> 'const size_type':'const unsigned long' lvalue Var 0x6513480 '__len' 'const size_type':'const unsigned long'
| |       `-BinaryOperator 0x65146f0 <line:728:4, col:44> '<dependent type>' '='
| |         |-CXXDependentScopeMemberExpr 0x65145c8 <col:4, col:18> '<dependent type>' lvalue
| |         | `-CXXDependentScopeMemberExpr 0x6514570 <col:4, col:10> '<dependent type>' lvalue
| |         |   `-CXXThisExpr 0x6514558 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
| |         `-CXXTemporaryObjectExpr 0x65146a8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| |           |-ImplicitCastExpr 0x6514678 <col:38> '_Bit_type *' <LValueToRValue>
| |           | `-DeclRefExpr 0x6514630 <col:38> '_Bit_type *' lvalue Var 0x65135f0 '__q' '_Bit_type *'
| |           `-ImplicitCastExpr 0x6514690 <col:43> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x6514658 <col:43> 'int' 0
| |-FunctionTemplateDecl 0x6514ed0 parent 0x64c09e0 prev 0x64d2190 <line:733:5, line:764:7> _M_insert_range
| | |-TemplateTypeParmDecl 0x6514850 <line:733:14, col:23> typename _ForwardIterator
| | |-CXXMethodDecl 0x6514df0 parent 0x64c09e0 prev 0x64d20f0 <line:732:3, line:764:7> _M_insert_range 'void (iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag)'
| | | |-ParmVarDecl 0x6514b70 <line:736:23, col:32> __position 'iterator':'struct std::_Bit_iterator'
| | | |-ParmVarDecl 0x6514be0 <col:44, col:61> __first '_ForwardIterator'
| | | |-ParmVarDecl 0x6514c50 <line:737:9, col:26> __last '_ForwardIterator'
| | | |-ParmVarDecl 0x6514d00 <col:34, col:39> 'std::forward_iterator_tag':'struct std::forward_iterator_tag'
| | | `-CompoundStmt 0x6516ac8 <line:738:7, line:764:7>
| | |   `-IfStmt 0x6516a98 <line:739:2, line:763:4>
| | |     |-<<<NULL>>>
| | |     |-CXXOperatorCallExpr 0x6515028 <line:739:6, col:17> '<dependent type>'
| | |     | |-UnresolvedLookupExpr 0x6514fa8 <col:14> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
| | |     | |-DeclRefExpr 0x6514f58 <col:6> '_ForwardIterator' lvalue ParmVar 0x6514be0 '__first' '_ForwardIterator'
| | |     | `-DeclRefExpr 0x6514f80 <col:17> '_ForwardIterator' lvalue ParmVar 0x6514c50 '__last' '_ForwardIterator'
| | |     |-CompoundStmt 0x6516a70 <line:740:4, line:763:4>
| | |     | |-DeclStmt 0x65151d8 <line:741:6, col:52>
| | |     | | `-VarDecl 0x6515080 <col:6, col:51> __n 'size_type':'unsigned long'
| | |     | |   `-CallExpr 0x65151a0 <col:22, col:51> '<dependent type>'
| | |     | |     |-UnresolvedLookupExpr 0x65150f8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x63dbd20
| | |     | |     |-DeclRefExpr 0x6515150 <col:36> '_ForwardIterator' lvalue ParmVar 0x6514be0 '__first' '_ForwardIterator'
| | |     | |     `-DeclRefExpr 0x6515178 <col:45> '_ForwardIterator' lvalue ParmVar 0x6514c50 '__last' '_ForwardIterator'
| | |     | `-IfStmt 0x6516a40 <line:742:6, line:762:8>
| | |     |   |-<<<NULL>>>
| | |     |   |-CXXOperatorCallExpr 0x6515418 <line:742:10, col:33> '<dependent type>'
| | |     |   | |-UnresolvedLookupExpr 0x65153a8 <col:30> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x63caa80 0x63e8580 0x63ec630 0x64acd30
| | |     |   | |-CXXOperatorCallExpr 0x6515338 <col:10, col:28> '<dependent type>'
| | |     |   | | |-UnresolvedLookupExpr 0x65152d0 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x63e8e00 0x63ecf00 0x64b3dd0
| | |     |   | | |-CallExpr 0x6515238 <col:10, col:19> '<dependent type>'
| | |     |   | | | `-MemberExpr 0x6515208 <col:10> '<bound member function type>' ->capacity 0x64c3960
| | |     |   | | |   `-CXXThisExpr 0x65151f0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |   | | `-CallExpr 0x65152a8 <col:23, col:28> '<dependent type>'
| | |     |   | |   `-MemberExpr 0x6515278 <col:23> '<bound member function type>' ->size 0x64c37e0
| | |     |   | |     `-CXXThisExpr 0x6515260 <col:23> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |   | `-DeclRefExpr 0x6515380 <col:33> 'size_type':'unsigned long' lvalue Var 0x6515080 '__n' 'size_type':'unsigned long'
| | |     |   |-CompoundStmt 0x6515ab8 <line:743:8, line:749:8>
| | |     |   | |-CallExpr 0x65157b8 <line:744:3, line:746:30> '<dependent type>'
| | |     |   | | |-UnresolvedLookupExpr 0x6515480 <line:744:3, col:8> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
| | |     |   | | |-DeclRefExpr 0x65154d8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6514b70 '__position' 'iterator':'struct std::_Bit_iterator'
| | |     |   | | |-CallExpr 0x6515588 <col:34, col:38> '<dependent type>'
| | |     |   | | | `-UnresolvedMemberExpr 0x6515518 <col:34> '<bound member function type>' lvalue
| | |     |   | | `-CXXOperatorCallExpr 0x6515770 <line:745:8, line:746:29> '<dependent type>'
| | |     |   | |   |-UnresolvedLookupExpr 0x6515708 <col:8> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| | |     |   | |   |-CXXDependentScopeMemberExpr 0x6515620 <line:745:8, col:22> '<dependent type>' lvalue
| | |     |   | |   | `-CXXDependentScopeMemberExpr 0x65155c8 <col:8, col:14> '<dependent type>' lvalue
| | |     |   | |   |   `-CXXThisExpr 0x65155b0 <col:8> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |   | |   `-CXXFunctionalCastExpr 0x65156e0 <line:746:10, col:29> 'difference_type':'long' functional cast to difference_type <NoOp>
| | |     |   | |     `-ImplicitCastExpr 0x65156c8 <col:26> 'difference_type':'long' <IntegralCast>
| | |     |   | |       `-ImplicitCastExpr 0x65156b0 <col:26> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   | |         `-DeclRefExpr 0x6515688 <col:26> 'size_type':'unsigned long' lvalue Var 0x6515080 '__n' 'size_type':'unsigned long'
| | |     |   | |-CallExpr 0x65158e8 <line:747:3, col:40> '<dependent type>'
| | |     |   | | |-UnresolvedLookupExpr 0x6515818 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |     |   | | |-DeclRefExpr 0x6515870 <col:13> '_ForwardIterator' lvalue ParmVar 0x6514be0 '__first' '_ForwardIterator'
| | |     |   | | |-DeclRefExpr 0x6515898 <col:22> '_ForwardIterator' lvalue ParmVar 0x6514c50 '__last' '_ForwardIterator'
| | |     |   | | `-DeclRefExpr 0x65158c0 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6514b70 '__position' 'iterator':'struct std::_Bit_iterator'
| | |     |   | `-CompoundAssignOperator 0x6515a80 <line:748:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |     |   |   |-CXXDependentScopeMemberExpr 0x6515998 <col:3, col:17> '<dependent type>' lvalue
| | |     |   |   | `-CXXDependentScopeMemberExpr 0x6515940 <col:3, col:9> '<dependent type>' lvalue
| | |     |   |   |   `-CXXThisExpr 0x6515928 <col:3> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |   |   `-CXXFunctionalCastExpr 0x6515a58 <col:30, col:49> 'difference_type':'long' functional cast to difference_type <NoOp>
| | |     |   |     `-ImplicitCastExpr 0x6515a40 <col:46> 'difference_type':'long' <IntegralCast>
| | |     |   |       `-ImplicitCastExpr 0x6515a28 <col:46> 'size_type':'unsigned long' <LValueToRValue>
| | |     |   |         `-DeclRefExpr 0x6515a00 <col:46> 'size_type':'unsigned long' lvalue Var 0x6515080 '__n' 'size_type':'unsigned long'
| | |     |   `-CompoundStmt 0x65169e8 <line:751:8, line:762:8>
| | |     |     |-DeclStmt 0x6515cc8 <line:752:3, line:753:55>
| | |     |     | `-VarDecl 0x6515b00 <line:752:3, line:753:54> __len 'const size_type':'const unsigned long'
| | |     |     |   `-CallExpr 0x6515c90 <col:5, col:54> '<dependent type>'
| | |     |     |     |-MemberExpr 0x6515b70 <col:5> '<bound member function type>' ->_M_check_len 0x64d2590
| | |     |     |     | `-CXXThisExpr 0x6515b58 <col:5> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     |     |-DeclRefExpr 0x6515ba0 <col:18> 'size_type':'unsigned long' lvalue Var 0x6515080 '__n' 'size_type':'unsigned long'
| | |     |     |     `-StringLiteral 0x6515c48 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"
| | |     |     |-DeclStmt 0x6515e10 <line:754:3, col:45>
| | |     |     | `-VarDecl 0x6515cf0 <col:3, col:44> __q '_Bit_type *'
| | |     |     |   `-CallExpr 0x6515de0 <col:21, col:44> '<dependent type>'
| | |     |     |     |-CXXDependentScopeMemberExpr 0x6515d60 <col:21, col:27> '<dependent type>' lvalue
| | |     |     |     | `-CXXThisExpr 0x6515d48 <col:21> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     |     `-DeclRefExpr 0x6515db8 <col:39> 'const size_type':'const unsigned long' lvalue Var 0x6515b00 '__len' 'const size_type':'const unsigned long'
| | |     |     |-DeclStmt 0x65160c8 <line:755:3, line:756:30>
| | |     |     | `-VarDecl 0x6515e40 <line:755:3, line:756:29> __i 'iterator':'struct std::_Bit_iterator'
| | |     |     |   `-CallExpr 0x6516088 <line:755:18, line:756:29> '<dependent type>'
| | |     |     |     |-MemberExpr 0x6515eb0 <line:755:18> '<bound member function type>' ->_M_copy_aligned 0x64c6850
| | |     |     |     | `-CXXThisExpr 0x6515e98 <col:18> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     |     |-CallExpr 0x6515f68 <col:34, col:40> '<dependent type>'
| | |     |     |     | `-UnresolvedMemberExpr 0x6515ef8 <col:34> '<bound member function type>' lvalue
| | |     |     |     |-DeclRefExpr 0x6515f90 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6514b70 '__position' 'iterator':'struct std::_Bit_iterator'
| | |     |     |     `-CXXTemporaryObjectExpr 0x6516040 <line:756:13, col:28> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| | |     |     |       |-ImplicitCastExpr 0x6516010 <col:22> '_Bit_type *' <LValueToRValue>
| | |     |     |       | `-DeclRefExpr 0x6515fc8 <col:22> '_Bit_type *' lvalue Var 0x6515cf0 '__q' '_Bit_type *'
| | |     |     |       `-ImplicitCastExpr 0x6516028 <col:27> 'unsigned int' <IntegralCast>
| | |     |     |         `-IntegerLiteral 0x6515ff0 <col:27> 'int' 0
| | |     |     |-BinaryOperator 0x6516238 <line:757:3, col:39> '<dependent type>' '='
| | |     |     | |-DeclRefExpr 0x65160e0 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6515e40 '__i' 'iterator':'struct std::_Bit_iterator'
| | |     |     | `-CallExpr 0x65161f8 <col:9, col:39> '<dependent type>'
| | |     |     |   |-UnresolvedLookupExpr 0x6516128 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |     |     |   |-DeclRefExpr 0x6516180 <col:19> '_ForwardIterator' lvalue ParmVar 0x6514be0 '__first' '_ForwardIterator'
| | |     |     |   |-DeclRefExpr 0x65161a8 <col:28> '_ForwardIterator' lvalue ParmVar 0x6514c50 '__last' '_ForwardIterator'
| | |     |     |   `-DeclRefExpr 0x65161d0 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6515e40 '__i' 'iterator':'struct std::_Bit_iterator'
| | |     |     |-BinaryOperator 0x65164e0 <line:758:3, col:61> '<dependent type>' '='
| | |     |     | |-CXXDependentScopeMemberExpr 0x65162d0 <col:3, col:17> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x6516278 <col:3, col:9> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x6516260 <col:3> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     | `-CallExpr 0x65164a0 <col:29, col:61> '<dependent type>'
| | |     |     |   |-UnresolvedLookupExpr 0x6516348 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
| | |     |     |   |-DeclRefExpr 0x65163a0 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6514b70 '__position' 'iterator':'struct std::_Bit_iterator'
| | |     |     |   |-CallExpr 0x6516450 <col:51, col:55> '<dependent type>'
| | |     |     |   | `-UnresolvedMemberExpr 0x65163e0 <col:51> '<bound member function type>' lvalue
| | |     |     |   `-DeclRefExpr 0x6516478 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6515e40 '__i' 'iterator':'struct std::_Bit_iterator'
| | |     |     |-CallExpr 0x6516578 <line:759:3, col:23> '<dependent type>'
| | |     |     | `-CXXDependentScopeMemberExpr 0x6516520 <col:3, col:9> '<dependent type>' lvalue
| | |     |     |   `-CXXThisExpr 0x6516508 <col:3> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     |-BinaryOperator 0x6516800 <line:760:3, col:57> '<dependent type>' '='
| | |     |     | |-CXXDependentScopeMemberExpr 0x6516610 <col:3, col:17> '<dependent type>' lvalue
| | |     |     | | `-CXXDependentScopeMemberExpr 0x65165b8 <col:3, col:9> '<dependent type>' lvalue
| | |     |     | |   `-CXXThisExpr 0x65165a0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |     | `-CXXOperatorCallExpr 0x65167b8 <col:37, col:57> '<dependent type>'
| | |     |     |   |-UnresolvedLookupExpr 0x6516750 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
| | |     |     |   |-DeclRefExpr 0x6516668 <col:37> '_Bit_type *' lvalue Var 0x6515cf0 '__q' '_Bit_type *'
| | |     |     |   `-CallExpr 0x6516720 <col:43, col:57> '<dependent type>'
| | |     |     |     |-UnresolvedMemberExpr 0x6516690 <col:43> '<dependent type>' lvalue
| | |     |     |     `-DeclRefExpr 0x65166f8 <col:52> 'const size_type':'const unsigned long' lvalue Var 0x6515b00 '__len' 'const size_type':'const unsigned long'
| | |     |     `-BinaryOperator 0x65169c0 <line:761:3, col:43> '<dependent type>' '='
| | |     |       |-CXXDependentScopeMemberExpr 0x6516898 <col:3, col:17> '<dependent type>' lvalue
| | |     |       | `-CXXDependentScopeMemberExpr 0x6516840 <col:3, col:9> '<dependent type>' lvalue
| | |     |       |   `-CXXThisExpr 0x6516828 <col:3> 'vector<_Bool, type-parameter-0-0> *' this
| | |     |       `-CXXTemporaryObjectExpr 0x6516978 <col:28, col:43> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
| | |     |         |-ImplicitCastExpr 0x6516948 <col:37> '_Bit_type *' <LValueToRValue>
| | |     |         | `-DeclRefExpr 0x6516900 <col:37> '_Bit_type *' lvalue Var 0x6515cf0 '__q' '_Bit_type *'
| | |     |         `-ImplicitCastExpr 0x6516960 <col:42> 'unsigned int' <IntegralCast>
| | |     |           `-IntegerLiteral 0x6516928 <col:42> 'int' 0
| | |     `-<<<NULL>>>
| `-CXXMethodDecl 0x6516f10 parent 0x64c09e0 prev 0x64d2390 <line:766:3, line:791:5> _M_insert_aux 'void (iterator, _Bool)'
|   |-ParmVarDecl 0x6516e10 <line:769:19, col:28> __position 'iterator':'struct std::_Bit_iterator'
|   |-ParmVarDecl 0x6516e80 <col:40, col:45> __x '_Bool'
|   `-CompoundStmt 0x6518998 <line:770:5, line:791:5>
|     `-IfStmt 0x6518968 <line:771:7, line:790:2>
|       |-<<<NULL>>>
|       |-CXXOperatorCallExpr 0x6517268 <line:771:11, col:57> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x65171e8 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x63c9220 0x63e71b0 0x63eb0c0 0x63f3c50 0x63f41f0 0x64ab510
|       | |-CXXDependentScopeMemberExpr 0x65170c8 <col:11, col:35> '<dependent type>' lvalue
|       | | `-CXXDependentScopeMemberExpr 0x6517070 <col:11, col:25> '<dependent type>' lvalue
|       | |   `-CXXDependentScopeMemberExpr 0x6517018 <col:11, col:17> '<dependent type>' lvalue
|       | |     `-CXXThisExpr 0x6517000 <col:11> 'vector<_Bool, type-parameter-0-0> *' this
|       | `-CXXDependentScopeMemberExpr 0x6517190 <col:43, col:57> '<dependent type>' lvalue
|       |   `-CXXDependentScopeMemberExpr 0x6517138 <col:43, col:49> '<dependent type>' lvalue
|       |     `-CXXThisExpr 0x6517120 <col:43> 'vector<_Bool, type-parameter-0-0> *' this
|       |-CompoundStmt 0x6517860 <line:772:2, line:777:2>
|       | |-CallExpr 0x65175b0 <line:773:4, line:774:36> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x65172d0 <line:773:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'copy_backward' 0x641ccc0
|       | | |-DeclRefExpr 0x6517328 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6516e10 '__position' 'iterator':'struct std::_Bit_iterator'
|       | | |-CXXDependentScopeMemberExpr 0x65173c0 <col:35, col:49> '<dependent type>' lvalue
|       | | | `-CXXDependentScopeMemberExpr 0x6517368 <col:35, col:41> '<dependent type>' lvalue
|       | | |   `-CXXThisExpr 0x6517350 <col:35> 'vector<_Bool, type-parameter-0-0> *' this
|       | | `-CXXOperatorCallExpr 0x6517568 <line:774:9, col:35> '<dependent type>'
|       | |   |-UnresolvedLookupExpr 0x6517500 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|       | |   |-CXXDependentScopeMemberExpr 0x6517488 <col:9, col:23> '<dependent type>' lvalue
|       | |   | `-CXXDependentScopeMemberExpr 0x6517430 <col:9, col:15> '<dependent type>' lvalue
|       | |   |   `-CXXThisExpr 0x6517418 <col:9> 'vector<_Bool, type-parameter-0-0> *' this
|       | |   `-IntegerLiteral 0x65174e0 <col:35> 'int' 1
|       | |-CXXOperatorCallExpr 0x6517730 <line:775:4, col:18> 'struct std::_Bit_reference' lvalue
|       | | |-ImplicitCastExpr 0x6517718 <col:16> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x65176f0 <col:16> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x64ae270 'operator=' 'struct std::_Bit_reference &(_Bool)'
|       | | |-CXXOperatorCallExpr 0x6517670 <col:4, col:5> 'reference':'struct std::_Bit_reference'
|       | | | |-ImplicitCastExpr 0x6517658 <col:4> 'reference (*)(void) const' <FunctionToPointerDecay>
|       | | | | `-DeclRefExpr 0x6517630 <col:4> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
|       | | | `-ImplicitCastExpr 0x6517618 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
|       | | |   `-DeclRefExpr 0x65175f0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6516e10 '__position' 'iterator':'struct std::_Bit_iterator'
|       | | `-ImplicitCastExpr 0x65176d8 <col:18> '_Bool' <LValueToRValue>
|       | |   `-DeclRefExpr 0x65176b0 <col:18> '_Bool' lvalue ParmVar 0x6516e80 '__x' '_Bool'
|       | `-UnaryOperator 0x6517840 <line:776:4, col:20> '<dependent type>' prefix '++'
|       |   `-CXXDependentScopeMemberExpr 0x65177e8 <col:6, col:20> '<dependent type>' lvalue
|       |     `-CXXDependentScopeMemberExpr 0x6517790 <col:6, col:12> '<dependent type>' lvalue
|       |       `-CXXThisExpr 0x6517778 <col:6> 'vector<_Bool, type-parameter-0-0> *' this
|       `-CompoundStmt 0x6518910 <line:779:2, line:790:2>
|         |-DeclStmt 0x6517aa8 <line:780:4, line:781:63>
|         | `-VarDecl 0x65178a0 <line:780:4, line:781:62> __len 'const size_type':'const unsigned long'
|         |   `-CallExpr 0x6517a70 <col:6, col:62> '<dependent type>'
|         |     |-MemberExpr 0x6517910 <col:6> '<bound member function type>' ->_M_check_len 0x64d2590
|         |     | `-CXXThisExpr 0x65178f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this
|         |     |-CXXFunctionalCastExpr 0x6517988 <col:19, col:30> 'size_type':'unsigned long' functional cast to size_type <NoOp>
|         |     | `-ImplicitCastExpr 0x6517970 <col:29> 'size_type':'unsigned long' <IntegralCast>
|         |     |   `-IntegerLiteral 0x6517950 <col:29> 'int' 1
|         |     `-StringLiteral 0x6517a28 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"
|         |-DeclStmt 0x6517bf0 <line:782:4, col:46>
|         | `-VarDecl 0x6517ad0 <col:4, col:45> __q '_Bit_type *'
|         |   `-CallExpr 0x6517bc0 <col:22, col:45> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x6517b40 <col:22, col:28> '<dependent type>' lvalue
|         |     | `-CXXThisExpr 0x6517b28 <col:22> 'vector<_Bool, type-parameter-0-0> *' this
|         |     `-DeclRefExpr 0x6517b98 <col:40> 'const size_type':'const unsigned long' lvalue Var 0x65178a0 '__len' 'const size_type':'const unsigned long'
|         |-DeclStmt 0x6517ee0 <line:783:4, line:784:24>
|         | `-VarDecl 0x6517c20 <line:783:4, line:784:23> __i 'iterator':'struct std::_Bit_iterator'
|         |   `-CallExpr 0x6517ea0 <line:783:19, line:784:23> '<dependent type>'
|         |     |-MemberExpr 0x6517c90 <line:783:19> '<bound member function type>' ->_M_copy_aligned 0x64c6850
|         |     | `-CXXThisExpr 0x6517c78 <col:19> 'vector<_Bool, type-parameter-0-0> *' this
|         |     |-CallExpr 0x6517d80 <col:35, col:41> '<dependent type>'
|         |     | `-UnresolvedMemberExpr 0x6517d10 <col:35> '<bound member function type>' lvalue
|         |     |-DeclRefExpr 0x6517da8 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6516e10 '__position' 'iterator':'struct std::_Bit_iterator'
|         |     `-CXXTemporaryObjectExpr 0x6517e58 <line:784:7, col:22> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
|         |       |-ImplicitCastExpr 0x6517e28 <col:16> '_Bit_type *' <LValueToRValue>
|         |       | `-DeclRefExpr 0x6517de0 <col:16> '_Bit_type *' lvalue Var 0x6517ad0 '__q' '_Bit_type *'
|         |       `-ImplicitCastExpr 0x6517e40 <col:21> 'unsigned int' <IntegralCast>
|         |         `-IntegerLiteral 0x6517e08 <col:21> 'int' 0
|         |-CXXOperatorCallExpr 0x6518140 <line:785:4, col:13> 'struct std::_Bit_reference' lvalue
|         | |-ImplicitCastExpr 0x6518128 <col:11> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x6518100 <col:11> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x64ae270 'operator=' 'struct std::_Bit_reference &(_Bool)'
|         | |-CXXOperatorCallExpr 0x6518080 <col:4, col:8> 'reference':'struct std::_Bit_reference'
|         | | |-ImplicitCastExpr 0x6518068 <col:4> 'reference (*)(void) const' <FunctionToPointerDecay>
|         | | | `-DeclRefExpr 0x6518040 <col:4> 'reference (void) const' lvalue CXXMethod 0x64b48a0 'operator*' 'reference (void) const'
|         | | `-ImplicitCastExpr 0x6518028 <col:5, col:8> 'const struct std::_Bit_iterator' <NoOp>
|         | |   `-CXXOperatorCallExpr 0x6517fe0 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
|         | |     |-ImplicitCastExpr 0x6517fc8 <col:8> 'iterator (*)(int)' <FunctionToPointerDecay>
|         | |     | `-DeclRefExpr 0x6517f40 <col:8> 'iterator (int)' lvalue CXXMethod 0x64b4c30 'operator++' 'iterator (int)'
|         | |     |-DeclRefExpr 0x6517ef8 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6517c20 '__i' 'iterator':'struct std::_Bit_iterator'
|         | |     `-IntegerLiteral 0x6517f20 <<invalid sloc>> 'int' 0
|         | `-ImplicitCastExpr 0x65180e8 <col:13> '_Bool' <LValueToRValue>
|         |   `-DeclRefExpr 0x65180c0 <col:13> '_Bool' lvalue ParmVar 0x6516e80 '__x' '_Bool'
|         |-BinaryOperator 0x6518408 <line:786:4, col:62> '<dependent type>' '='
|         | |-CXXDependentScopeMemberExpr 0x65181f8 <col:4, col:18> '<dependent type>' lvalue
|         | | `-CXXDependentScopeMemberExpr 0x65181a0 <col:4, col:10> '<dependent type>' lvalue
|         | |   `-CXXThisExpr 0x6518188 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|         | `-CallExpr 0x65183c8 <col:30, col:62> '<dependent type>'
|         |   |-UnresolvedLookupExpr 0x6518270 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x6416ba0
|         |   |-DeclRefExpr 0x65182c8 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x6516e10 '__position' 'iterator':'struct std::_Bit_iterator'
|         |   |-CallExpr 0x6518378 <col:52, col:56> '<dependent type>'
|         |   | `-UnresolvedMemberExpr 0x6518308 <col:52> '<bound member function type>' lvalue
|         |   `-DeclRefExpr 0x65183a0 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x6517c20 '__i' 'iterator':'struct std::_Bit_iterator'
|         |-CallExpr 0x65184a0 <line:787:4, col:24> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x6518448 <col:4, col:10> '<dependent type>' lvalue
|         |   `-CXXThisExpr 0x6518430 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|         |-BinaryOperator 0x6518728 <line:788:4, col:58> '<dependent type>' '='
|         | |-CXXDependentScopeMemberExpr 0x6518538 <col:4, col:18> '<dependent type>' lvalue
|         | | `-CXXDependentScopeMemberExpr 0x65184e0 <col:4, col:10> '<dependent type>' lvalue
|         | |   `-CXXThisExpr 0x65184c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|         | `-CXXOperatorCallExpr 0x65186e0 <col:38, col:58> '<dependent type>'
|         |   |-UnresolvedLookupExpr 0x6518678 <col:42> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x63e9700 0x64b7e20 0x64bb5c0
|         |   |-DeclRefExpr 0x6518590 <col:38> '_Bit_type *' lvalue Var 0x6517ad0 '__q' '_Bit_type *'
|         |   `-CallExpr 0x6518648 <col:44, col:58> '<dependent type>'
|         |     |-UnresolvedMemberExpr 0x65185b8 <col:44> '<dependent type>' lvalue
|         |     `-DeclRefExpr 0x6518620 <col:53> 'const size_type':'const unsigned long' lvalue Var 0x65178a0 '__len' 'const size_type':'const unsigned long'
|         `-BinaryOperator 0x65188e8 <line:789:4, col:44> '<dependent type>' '='
|           |-CXXDependentScopeMemberExpr 0x65187c0 <col:4, col:18> '<dependent type>' lvalue
|           | `-CXXDependentScopeMemberExpr 0x6518768 <col:4, col:10> '<dependent type>' lvalue
|           |   `-CXXThisExpr 0x6518750 <col:4> 'vector<_Bool, type-parameter-0-0> *' this
|           `-CXXTemporaryObjectExpr 0x65188a0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator' 'void (_Bit_type *, unsigned int)'
|             |-ImplicitCastExpr 0x6518870 <col:38> '_Bit_type *' <LValueToRValue>
|             | `-DeclRefExpr 0x6518828 <col:38> '_Bit_type *' lvalue Var 0x6517ad0 '__q' '_Bit_type *'
|             `-ImplicitCastExpr 0x6518888 <col:43> 'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x6518850 <col:43> 'int' 0
`-FunctionDecl 0x6518a50 <recur.cpp:3:1, line:13:1> fact 'long (long)'
  |-ParmVarDecl 0x65189d0 <line:3:11, col:16> arg 'long'
  `-CompoundStmt 0x652b180 <line:4:1, line:13:1>
    |-DeclStmt 0x652aba8 <line:5:3, col:37>
    | `-VarDecl 0x6518f40 <col:3, col:36> backpos 'std::vector<long long>':'class std::vector<long long, class std::allocator<long long> >'
    |   `-ExprWithCleanups 0x652ab90 <col:26, col:36> 'std::vector<long long>':'class std::vector<long long, class std::allocator<long long> >'
    |     `-CXXConstructExpr 0x652ab48 <col:26, col:36> 'std::vector<long long>':'class std::vector<long long, class std::allocator<long long> >' 'void (size_type, const value_type &, const allocator_type &)'
    |       |-ImplicitCastExpr 0x652a6e0 <col:34> 'size_type':'unsigned long' <IntegralCast>
    |       | `-IntegerLiteral 0x6518f98 <col:34> 'int' 10
    |       |-CXXDefaultArgExpr 0x652a748 <<invalid sloc>> 'const value_type':'const long long' lvalue
    |       `-CXXDefaultArgExpr 0x652ab20 <<invalid sloc>> 'const allocator_type':'const class std::allocator<long long>' lvalue
    |-DeclStmt 0x652ac28 <line:6:3, col:8>
    | `-VarDecl 0x652abd0 <col:3, col:7> j 'int'
    |-IfStmt 0x652ad38 <line:8:3, col:24>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x652acb8 <col:7, col:14> '_Bool' '<='
    | | |-ImplicitCastExpr 0x652ac88 <col:7> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x652ac40 <col:7> 'long' lvalue ParmVar 0x65189d0 'arg' 'long'
    | | `-ImplicitCastExpr 0x652aca0 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x652ac68 <col:14> 'int' 1
    | |-ReturnStmt 0x652ad18 <col:17, col:24>
    | | `-ImplicitCastExpr 0x652ad00 <col:24> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x652ace0 <col:24> 'int' 1
    | `-<<<NULL>>>
    |-BinaryOperator 0x652af38 <line:10:3, col:16> 'int' lvalue '='
    | |-DeclRefExpr 0x652ad68 <col:3> 'int' lvalue Var 0x652abd0 'j' 'int'
    | `-ImplicitCastExpr 0x652af20 <col:7, col:16> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x652af08 <col:7, col:16> 'long long':'long long' <LValueToRValue>
    |     `-CXXOperatorCallExpr 0x652aec0 <col:7, col:16> 'long long':'long long' lvalue
    |       |-ImplicitCastExpr 0x652aea8 <col:14, col:16> 'reference (*)(size_type)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x652ae20 <col:14, col:16> 'reference (size_type)' lvalue CXXMethod 0x6524530 'operator[]' 'reference (size_type)'
    |       |-DeclRefExpr 0x652ad90 <col:7> 'std::vector<long long>':'class std::vector<long long, class std::allocator<long long> >' lvalue Var 0x6518f40 'backpos' 'std::vector<long long>':'class std::vector<long long, class std::allocator<long long> >'
    |       `-ImplicitCastExpr 0x652ae08 <col:15> 'size_type':'unsigned long' <IntegralCast>
    |         `-IntegerLiteral 0x652adb8 <col:15> 'int' 1
    `-ReturnStmt 0x652b160 <line:11:3, col:28>
      `-BinaryOperator 0x652b138 <col:10, col:28> 'long' '*'
        |-ImplicitCastExpr 0x652b120 <col:10> 'long' <LValueToRValue>
        | `-DeclRefExpr 0x652af60 <col:10> 'long' lvalue ParmVar 0x65189d0 'arg' 'long'
        `-CallExpr 0x652b0f0 <col:16, col:28> 'long'
          |-ImplicitCastExpr 0x652b0d8 <col:16> 'long (*)(long)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x652b080 <col:16> 'long (long)' lvalue Function 0x6518a50 'fact' 'long (long)'
          `-BinaryOperator 0x652b058 <col:21, col:27> 'long' '-'
            |-ImplicitCastExpr 0x652b028 <col:21> 'long' <LValueToRValue>
            | `-DeclRefExpr 0x652afe0 <col:21> 'long' lvalue ParmVar 0x65189d0 'arg' 'long'
            `-ImplicitCastExpr 0x652b040 <col:27> 'long' <IntegralCast>
              `-IntegerLiteral 0x652b008 <col:27> 'int' 1
/usr/bin/ld: error: cannot open /tmp/recur-e710de.o: No such file or directory
/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../x86_64-linux-gnu/crt1.o(.text+0x20): error: undefined reference to 'main'
clang-3.5: error: linker command failed with exit code 1 (use -v to see invocation)
