TranslationUnitDecl 0x62f9800 <<invalid sloc>>
|-TypedefDecl 0x62f9d40 <<invalid sloc>> __int128_t '__int128'
|-TypedefDecl 0x62f9da0 <<invalid sloc>> __uint128_t 'unsigned __int128'
|-TypedefDecl 0x62fa160 <<invalid sloc>> __builtin_va_list '__va_list_tag [1]'
|-UsingDirectiveDecl 0x62fa210 <3090510.cpp:6:5, col:21> Namespace 0x62fa1b0 'std'
|-VarDecl 0x62fa350 <line:8:5, col:20> DP 'int [105][106]'
|-VarDecl 0x62fa430 <col:5, col:27> K 'int [105]'
|-VarDecl 0x62fa4d0 <col:5, col:34> C 'int [105]'
|-VarDecl 0x6343a30 <col:5, col:41> P 'int [105]'
|-VarDecl 0x6343ad0 <col:5, col:48> T 'int [105]'
`-FunctionDecl 0x6343bb0 <line:10:5, line:42:5> main 'int (void)'
  `-CompoundStmt 0x634cf88 <line:11:5, line:42:5>
    |-DeclStmt 0x6343f80 <line:12:6, col:22>
    | |-VarDecl 0x6343cc0 <col:6, col:10> Tc 'int'
    | |-VarDecl 0x6343d30 <col:6, col:13> N 'int'
    | |-VarDecl 0x6343da0 <col:6, col:15> W 'int'
    | |-VarDecl 0x6343e10 <col:6, col:17> i 'int'
    | |-VarDecl 0x6343e80 <col:6, col:19> j 'int'
    | `-VarDecl 0x6343ef0 <col:6, col:21> d 'int'
    |-WhileStmt 0x634cf20 <line:14:6, line:40:6>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x6344008 <line:14:12, col:14> '_Bool' <IntegralToBoolean>
    | | `-UnaryOperator 0x6343fe8 <col:12, col:14> 'int' postfix '--'
    | |   `-DeclRefExpr 0x6343fc0 <col:12> 'int' lvalue Var 0x6343cc0 'Tc' 'int'
    | `-CompoundStmt 0x634cee8 <line:15:6, line:40:6>
    |   |-BinaryOperator 0x63442d8 <line:17:7, col:22> 'int' lvalue '='
    |   | |-ArraySubscriptExpr 0x6344100 <col:7, col:10> 'int' lvalue
    |   | | |-ImplicitCastExpr 0x63440e8 <col:7> 'int *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x6344070 <col:7> 'int [105]' lvalue Var 0x62fa4d0 'C' 'int [105]'
    |   | | `-IntegerLiteral 0x6344098 <col:9> 'int' 0
    |   | `-ImplicitCastExpr 0x63442c0 <col:12, col:22> 'int' <LValueToRValue>
    |   |   `-BinaryOperator 0x6344298 <col:12, col:22> 'int' lvalue '='
    |   |     |-ArraySubscriptExpr 0x6344188 <col:12, col:15> 'int' lvalue
    |   |     | |-ImplicitCastExpr 0x6344170 <col:12> 'int *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x6344128 <col:12> 'int [105]' lvalue Var 0x6343a30 'P' 'int [105]'
    |   |     | `-IntegerLiteral 0x6344150 <col:14> 'int' 0
    |   |     `-ImplicitCastExpr 0x6344280 <col:17, col:22> 'int' <LValueToRValue>
    |   |       `-BinaryOperator 0x6344258 <col:17, col:22> 'int' lvalue '='
    |   |         |-ArraySubscriptExpr 0x6344210 <col:17, col:20> 'int' lvalue
    |   |         | |-ImplicitCastExpr 0x63441f8 <col:17> 'int *' <ArrayToPointerDecay>
    |   |         | | `-DeclRefExpr 0x63441b0 <col:17> 'int [105]' lvalue Var 0x6343ad0 'T' 'int [105]'
    |   |         | `-IntegerLiteral 0x63441d8 <col:19> 'int' 0
    |   |         `-IntegerLiteral 0x6344238 <col:22> 'int' 0
    |   |-ForStmt 0x6344968 <line:19:7, line:23:7>
    |   | |-DeclStmt 0x6344388 <line:19:11, col:18>
    |   | | `-VarDecl 0x6344310 <col:11, col:17> i 'int'
    |   | |   `-IntegerLiteral 0x6344368 <col:17> 'int' 1
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x6344468 <col:20, col:24> '_Bool' '<'
    |   | | |-ImplicitCastExpr 0x6344450 <col:20> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x63443a0 <col:20> 'int' lvalue Var 0x6344310 'i' 'int'
    |   | | `-BinaryOperator 0x6344428 <col:22, col:24> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x6344410 <col:22> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x63443c8 <col:22> 'int' lvalue Var 0x6343d30 'N' 'int'
    |   | |   `-IntegerLiteral 0x63443f0 <col:24> 'int' 1
    |   | |-UnaryOperator 0x63444b8 <col:27, col:28> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x6344490 <col:27> 'int' lvalue Var 0x6344310 'i' 'int'
    |   | `-CompoundStmt 0x6344948 <line:20:7, line:23:7>
    |   |   `-BinaryOperator 0x6344920 <line:22:8, col:21> 'int' lvalue '='
    |   |     |-ArraySubscriptExpr 0x6344750 <col:8, col:11> 'int' lvalue
    |   |     | |-ImplicitCastExpr 0x6344720 <col:8> 'int *' <ArrayToPointerDecay>
    |   |     | | `-DeclRefExpr 0x63446d0 <col:8> 'int [105]' lvalue Var 0x62fa430 'K' 'int [105]'
    |   |     | `-ImplicitCastExpr 0x6344738 <col:10> 'int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x63446f8 <col:10> 'int' lvalue Var 0x6344310 'i' 'int'
    |   |     `-BinaryOperator 0x63448f8 <col:13, col:21> 'int' '*'
    |   |       |-ImplicitCastExpr 0x63448c8 <col:13, col:16> 'int' <LValueToRValue>
    |   |       | `-ArraySubscriptExpr 0x63447f8 <col:13, col:16> 'int' lvalue
    |   |       |   |-ImplicitCastExpr 0x63447c8 <col:13> 'int *' <ArrayToPointerDecay>
    |   |       |   | `-DeclRefExpr 0x6344778 <col:13> 'int [105]' lvalue Var 0x6343a30 'P' 'int [105]'
    |   |       |   `-ImplicitCastExpr 0x63447e0 <col:15> 'int' <LValueToRValue>
    |   |       |     `-DeclRefExpr 0x63447a0 <col:15> 'int' lvalue Var 0x6344310 'i' 'int'
    |   |       `-ImplicitCastExpr 0x63448e0 <col:18, col:21> 'int' <LValueToRValue>
    |   |         `-ArraySubscriptExpr 0x63448a0 <col:18, col:21> 'int' lvalue
    |   |           |-ImplicitCastExpr 0x6344870 <col:18> 'int *' <ArrayToPointerDecay>
    |   |           | `-DeclRefExpr 0x6344820 <col:18> 'int [105]' lvalue Var 0x62fa4d0 'C' 'int [105]'
    |   |           `-ImplicitCastExpr 0x6344888 <col:20> 'int' <LValueToRValue>
    |   |             `-DeclRefExpr 0x6344848 <col:20> 'int' lvalue Var 0x6344310 'i' 'int'
    |   |-ForStmt 0x634a410 <line:25:7, line:26:17>
    |   | |-DeclStmt 0x634a148 <line:25:11, col:18>
    |   | | `-VarDecl 0x634a0d0 <col:11, col:17> i 'int'
    |   | |   `-IntegerLiteral 0x634a128 <col:17> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x634a228 <col:20, col:24> '_Bool' '<'
    |   | | |-ImplicitCastExpr 0x634a210 <col:20> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x634a160 <col:20> 'int' lvalue Var 0x634a0d0 'i' 'int'
    |   | | `-BinaryOperator 0x634a1e8 <col:22, col:24> 'int' '+'
    |   | |   |-ImplicitCastExpr 0x634a1d0 <col:22> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x634a188 <col:22> 'int' lvalue Var 0x6343da0 'W' 'int'
    |   | |   `-IntegerLiteral 0x634a1b0 <col:24> 'int' 1
    |   | |-UnaryOperator 0x634a278 <col:27, col:28> 'int' postfix '++'
    |   | | `-DeclRefExpr 0x634a250 <col:27> 'int' lvalue Var 0x634a0d0 'i' 'int'
    |   | `-BinaryOperator 0x634a3e8 <line:26:8, col:17> 'int' lvalue '='
    |   |   |-ArraySubscriptExpr 0x634a3a0 <col:8, col:15> 'int' lvalue
    |   |   | |-ImplicitCastExpr 0x634a370 <col:8, col:12> 'int *' <ArrayToPointerDecay>
    |   |   | | `-ArraySubscriptExpr 0x634a320 <col:8, col:12> 'int [106]' lvalue
    |   |   | |   |-ImplicitCastExpr 0x634a308 <col:8> 'int (*)[106]' <ArrayToPointerDecay>
    |   |   | |   | `-DeclRefExpr 0x634a298 <col:8> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |   |   | |   `-IntegerLiteral 0x634a2c0 <col:11> 'int' 0
    |   |   | `-ImplicitCastExpr 0x634a388 <col:14> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x634a348 <col:14> 'int' lvalue Var 0x634a0d0 'i' 'int'
    |   |   `-IntegerLiteral 0x634a3c8 <col:17> 'int' 0
    |   `-ForStmt 0x634cd80 <line:3:22, line:38:7>
    |     |-BinaryOperator 0x634a498 <line:28:9, col:11> 'int' lvalue '='
    |     | |-DeclRefExpr 0x634a450 <col:9> 'int' lvalue Var 0x6343e10 'i' 'int'
    |     | `-IntegerLiteral 0x634a478 <col:11> 'int' 1
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x634a588 <col:9, col:15> '_Bool' '<'
    |     | |-ImplicitCastExpr 0x634a570 <col:9> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x634a4c0 <col:9> 'int' lvalue Var 0x6343e10 'i' 'int'
    |     | `-BinaryOperator 0x634a548 <col:13, col:15> 'int' '+'
    |     |   |-ImplicitCastExpr 0x634a530 <col:13> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x634a4e8 <col:13> 'int' lvalue Var 0x6343d30 'N' 'int'
    |     |   `-IntegerLiteral 0x634a510 <col:15> 'int' 1
    |     |-UnaryOperator 0x634a5d8 <col:9, line:3:35> 'int' postfix '++'
    |     | `-DeclRefExpr 0x634a5b0 <line:28:9> 'int' lvalue Var 0x6343e10 'i' 'int'
    |     `-CompoundStmt 0x634cd60 <line:29:7, line:38:7>
    |       `-ForStmt 0x634cd20 <line:3:22, line:37:8>
    |         |-BinaryOperator 0x634a640 <line:30:10, col:12> 'int' lvalue '='
    |         | |-DeclRefExpr 0x634a5f8 <col:10> 'int' lvalue Var 0x6343e80 'j' 'int'
    |         | `-IntegerLiteral 0x634a620 <col:12> 'int' 0
    |         |-<<<NULL>>>
    |         |-BinaryOperator 0x634a730 <col:10, col:16> '_Bool' '<'
    |         | |-ImplicitCastExpr 0x634a718 <col:10> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x634a668 <col:10> 'int' lvalue Var 0x6343e80 'j' 'int'
    |         | `-BinaryOperator 0x634a6f0 <col:14, col:16> 'int' '+'
    |         |   |-ImplicitCastExpr 0x634a6d8 <col:14> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x634a690 <col:14> 'int' lvalue Var 0x6343da0 'W' 'int'
    |         |   `-IntegerLiteral 0x634a6b8 <col:16> 'int' 1
    |         |-UnaryOperator 0x634a780 <col:10, line:3:35> 'int' postfix '++'
    |         | `-DeclRefExpr 0x634a758 <line:30:10> 'int' lvalue Var 0x6343e80 'j' 'int'
    |         `-CompoundStmt 0x634ccf8 <line:31:8, line:37:8>
    |           |-BinaryOperator 0x634a8f0 <line:32:9, col:16> 'int' lvalue '='
    |           | |-DeclRefExpr 0x634a7a0 <col:9> 'int' lvalue Var 0x6343ef0 'd' 'int'
    |           | `-BinaryOperator 0x634a8c8 <col:11, col:16> 'int' '-'
    |           |   |-ImplicitCastExpr 0x634a898 <col:11> 'int' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x634a7c8 <col:11> 'int' lvalue Var 0x6343e80 'j' 'int'
    |           |   `-ImplicitCastExpr 0x634a8b0 <col:13, col:16> 'int' <LValueToRValue>
    |           |     `-ArraySubscriptExpr 0x634a870 <col:13, col:16> 'int' lvalue
    |           |       |-ImplicitCastExpr 0x634a840 <col:13> 'int *' <ArrayToPointerDecay>
    |           |       | `-DeclRefExpr 0x634a7f0 <col:13> 'int [105]' lvalue Var 0x6343ad0 'T' 'int [105]'
    |           |       `-ImplicitCastExpr 0x634a858 <col:15> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x634a818 <col:15> 'int' lvalue Var 0x6343e10 'i' 'int'
    |           `-IfStmt 0x634ccc8 <line:33:9, line:36:28>
    |             |-<<<NULL>>>
    |             |-BinaryOperator 0x634a978 <line:33:12, col:15> '_Bool' '>='
    |             | |-ImplicitCastExpr 0x634a960 <col:12> 'int' <LValueToRValue>
    |             | | `-DeclRefExpr 0x634a918 <col:12> 'int' lvalue Var 0x6343ef0 'd' 'int'
    |             | `-IntegerLiteral 0x634a940 <col:15> 'int' 0
    |             |-BinaryOperator 0x634c9c8 <line:34:10, line:4:36> 'int' lvalue '='
    |             | |-ArraySubscriptExpr 0x634aaa0 <line:34:10, col:17> 'int' lvalue
    |             | | |-ImplicitCastExpr 0x634aa70 <col:10, col:14> 'int *' <ArrayToPointerDecay>
    |             | | | `-ArraySubscriptExpr 0x634aa20 <col:10, col:14> 'int [106]' lvalue
    |             | | |   |-ImplicitCastExpr 0x634a9f0 <col:10> 'int (*)[106]' <ArrayToPointerDecay>
    |             | | |   | `-DeclRefExpr 0x634a9a0 <col:10> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |             | | |   `-ImplicitCastExpr 0x634aa08 <col:13> 'int' <LValueToRValue>
    |             | | |     `-DeclRefExpr 0x634a9c8 <col:13> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             | | `-ImplicitCastExpr 0x634aa88 <col:16> 'int' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x634aa48 <col:16> 'int' lvalue Var 0x6343e80 'j' 'int'
    |             | `-ConditionalOperator 0x634c998 <line:4:22, col:36> 'int'
    |             |   |-BinaryOperator 0x634af20 <col:22, col:28> '_Bool' '>'
    |             |   | |-ImplicitCastExpr 0x634af08 <col:22, col:24> 'int' <LValueToRValue>
    |             |   | | `-ParenExpr 0x634ac38 <col:22, col:24> 'int' lvalue
    |             |   | |   `-ArraySubscriptExpr 0x634ac10 <line:34:23, col:32> 'int' lvalue
    |             |   | |     |-ImplicitCastExpr 0x634abe0 <col:23, col:29> 'int *' <ArrayToPointerDecay>
    |             |   | |     | `-ArraySubscriptExpr 0x634ab90 <col:23, col:29> 'int [106]' lvalue
    |             |   | |     |   |-ImplicitCastExpr 0x634ab78 <col:23> 'int (*)[106]' <ArrayToPointerDecay>
    |             |   | |     |   | `-DeclRefExpr 0x634aac8 <col:23> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |             |   | |     |   `-BinaryOperator 0x634ab50 <col:26, col:28> 'int' '-'
    |             |   | |     |     |-ImplicitCastExpr 0x634ab38 <col:26> 'int' <LValueToRValue>
    |             |   | |     |     | `-DeclRefExpr 0x634aaf0 <col:26> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |   | |     |     `-IntegerLiteral 0x634ab18 <col:28> 'int' 1
    |             |   | |     `-ImplicitCastExpr 0x634abf8 <col:31> 'int' <LValueToRValue>
    |             |   | |       `-DeclRefExpr 0x634abb8 <col:31> 'int' lvalue Var 0x6343e80 'j' 'int'
    |             |   | `-ParenExpr 0x634aee8 <line:4:26, col:28> 'int'
    |             |   |   `-ParenExpr 0x634aec8 <line:34:34, col:50> 'int'
    |             |   |     `-BinaryOperator 0x634aea0 <col:35, col:49> 'int' '+'
    |             |   |       |-ImplicitCastExpr 0x634ae70 <col:35, col:38> 'int' <LValueToRValue>
    |             |   |       | `-ArraySubscriptExpr 0x634acd8 <col:35, col:38> 'int' lvalue
    |             |   |       |   |-ImplicitCastExpr 0x634aca8 <col:35> 'int *' <ArrayToPointerDecay>
    |             |   |       |   | `-DeclRefExpr 0x634ac58 <col:35> 'int [105]' lvalue Var 0x62fa430 'K' 'int [105]'
    |             |   |       |   `-ImplicitCastExpr 0x634acc0 <col:37> 'int' <LValueToRValue>
    |             |   |       |     `-DeclRefExpr 0x634ac80 <col:37> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |   |       `-ImplicitCastExpr 0x634ae88 <col:40, col:49> 'int' <LValueToRValue>
    |             |   |         `-ArraySubscriptExpr 0x634ae48 <col:40, col:49> 'int' lvalue
    |             |   |           |-ImplicitCastExpr 0x634ae18 <col:40, col:46> 'int *' <ArrayToPointerDecay>
    |             |   |           | `-ArraySubscriptExpr 0x634adc8 <col:40, col:46> 'int [106]' lvalue
    |             |   |           |   |-ImplicitCastExpr 0x634adb0 <col:40> 'int (*)[106]' <ArrayToPointerDecay>
    |             |   |           |   | `-DeclRefExpr 0x634ad00 <col:40> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |             |   |           |   `-BinaryOperator 0x634ad88 <col:43, col:45> 'int' '-'
    |             |   |           |     |-ImplicitCastExpr 0x634ad70 <col:43> 'int' <LValueToRValue>
    |             |   |           |     | `-DeclRefExpr 0x634ad28 <col:43> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |   |           |     `-IntegerLiteral 0x634ad50 <col:45> 'int' 1
    |             |   |           `-ImplicitCastExpr 0x634ae30 <col:48> 'int' <LValueToRValue>
    |             |   |             `-DeclRefExpr 0x634adf0 <col:48> 'int' lvalue Var 0x6343ef0 'd' 'int'
    |             |   |-ImplicitCastExpr 0x634c980 <line:4:30, col:32> 'int' <LValueToRValue>
    |             |   | `-ParenExpr 0x634c6b0 <col:30, col:32> 'int' lvalue
    |             |   |   `-ArraySubscriptExpr 0x634b090 <line:34:23, col:32> 'int' lvalue
    |             |   |     |-ImplicitCastExpr 0x634b060 <col:23, col:29> 'int *' <ArrayToPointerDecay>
    |             |   |     | `-ArraySubscriptExpr 0x634b010 <col:23, col:29> 'int [106]' lvalue
    |             |   |     |   |-ImplicitCastExpr 0x634aff8 <col:23> 'int (*)[106]' <ArrayToPointerDecay>
    |             |   |     |   | `-DeclRefExpr 0x634af48 <col:23> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |             |   |     |   `-BinaryOperator 0x634afd0 <col:26, col:28> 'int' '-'
    |             |   |     |     |-ImplicitCastExpr 0x634afb8 <col:26> 'int' <LValueToRValue>
    |             |   |     |     | `-DeclRefExpr 0x634af70 <col:26> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |   |     |     `-IntegerLiteral 0x634af98 <col:28> 'int' 1
    |             |   |     `-ImplicitCastExpr 0x634b078 <col:31> 'int' <LValueToRValue>
    |             |   |       `-DeclRefExpr 0x634b038 <col:31> 'int' lvalue Var 0x6343e80 'j' 'int'
    |             |   `-ParenExpr 0x634c960 <line:4:34, col:36> 'int'
    |             |     `-ParenExpr 0x634c940 <line:34:34, col:50> 'int'
    |             |       `-BinaryOperator 0x634c918 <col:35, col:49> 'int' '+'
    |             |         |-ImplicitCastExpr 0x634c8e8 <col:35, col:38> 'int' <LValueToRValue>
    |             |         | `-ArraySubscriptExpr 0x634c750 <col:35, col:38> 'int' lvalue
    |             |         |   |-ImplicitCastExpr 0x634c720 <col:35> 'int *' <ArrayToPointerDecay>
    |             |         |   | `-DeclRefExpr 0x634c6d0 <col:35> 'int [105]' lvalue Var 0x62fa430 'K' 'int [105]'
    |             |         |   `-ImplicitCastExpr 0x634c738 <col:37> 'int' <LValueToRValue>
    |             |         |     `-DeclRefExpr 0x634c6f8 <col:37> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |         `-ImplicitCastExpr 0x634c900 <col:40, col:49> 'int' <LValueToRValue>
    |             |           `-ArraySubscriptExpr 0x634c8c0 <col:40, col:49> 'int' lvalue
    |             |             |-ImplicitCastExpr 0x634c890 <col:40, col:46> 'int *' <ArrayToPointerDecay>
    |             |             | `-ArraySubscriptExpr 0x634c840 <col:40, col:46> 'int [106]' lvalue
    |             |             |   |-ImplicitCastExpr 0x634c828 <col:40> 'int (*)[106]' <ArrayToPointerDecay>
    |             |             |   | `-DeclRefExpr 0x634c778 <col:40> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |             |             |   `-BinaryOperator 0x634c800 <col:43, col:45> 'int' '-'
    |             |             |     |-ImplicitCastExpr 0x634c7e8 <col:43> 'int' <LValueToRValue>
    |             |             |     | `-DeclRefExpr 0x634c7a0 <col:43> 'int' lvalue Var 0x6343e10 'i' 'int'
    |             |             |     `-IntegerLiteral 0x634c7c8 <col:45> 'int' 1
    |             |             `-ImplicitCastExpr 0x634c8a8 <col:48> 'int' <LValueToRValue>
    |             |               `-DeclRefExpr 0x634c868 <col:48> 'int' lvalue Var 0x6343ef0 'd' 'int'
    |             `-BinaryOperator 0x634cca0 <line:36:10, col:28> 'int' lvalue '='
    |               |-ArraySubscriptExpr 0x634caf0 <col:10, col:17> 'int' lvalue
    |               | |-ImplicitCastExpr 0x634cac0 <col:10, col:14> 'int *' <ArrayToPointerDecay>
    |               | | `-ArraySubscriptExpr 0x634ca70 <col:10, col:14> 'int [106]' lvalue
    |               | |   |-ImplicitCastExpr 0x634ca40 <col:10> 'int (*)[106]' <ArrayToPointerDecay>
    |               | |   | `-DeclRefExpr 0x634c9f0 <col:10> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |               | |   `-ImplicitCastExpr 0x634ca58 <col:13> 'int' <LValueToRValue>
    |               | |     `-DeclRefExpr 0x634ca18 <col:13> 'int' lvalue Var 0x6343e10 'i' 'int'
    |               | `-ImplicitCastExpr 0x634cad8 <col:16> 'int' <LValueToRValue>
    |               |   `-DeclRefExpr 0x634ca98 <col:16> 'int' lvalue Var 0x6343e80 'j' 'int'
    |               `-ImplicitCastExpr 0x634cc88 <col:19, col:28> 'int' <LValueToRValue>
    |                 `-ArraySubscriptExpr 0x634cc60 <col:19, col:28> 'int' lvalue
    |                   |-ImplicitCastExpr 0x634cc30 <col:19, col:25> 'int *' <ArrayToPointerDecay>
    |                   | `-ArraySubscriptExpr 0x634cbe0 <col:19, col:25> 'int [106]' lvalue
    |                   |   |-ImplicitCastExpr 0x634cbc8 <col:19> 'int (*)[106]' <ArrayToPointerDecay>
    |                   |   | `-DeclRefExpr 0x634cb18 <col:19> 'int [105][106]' lvalue Var 0x62fa350 'DP' 'int [105][106]'
    |                   |   `-BinaryOperator 0x634cba0 <col:22, col:24> 'int' '-'
    |                   |     |-ImplicitCastExpr 0x634cb88 <col:22> 'int' <LValueToRValue>
    |                   |     | `-DeclRefExpr 0x634cb40 <col:22> 'int' lvalue Var 0x6343e10 'i' 'int'
    |                   |     `-IntegerLiteral 0x634cb68 <col:24> 'int' 1
    |                   `-ImplicitCastExpr 0x634cc48 <col:27> 'int' <LValueToRValue>
    |                     `-DeclRefExpr 0x634cc08 <col:27> 'int' lvalue Var 0x6343e80 'j' 'int'
    `-ReturnStmt 0x634cf68 <line:41:6, col:13>
      `-IntegerLiteral 0x634cf48 <col:13> 'int' 0
