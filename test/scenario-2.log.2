../test/scenario-2.txt
1 threadinit(1)
2 fork(1,2)
3 enq(1,0x11,1)
4 enterloop(1)
5 threadinit(2)
6 enterloop(2)
7 deq(1,0x11)
8 alloc(1,0xa,30)
9 enq(1,0x3,1)
10 enq(1,0x5,1)
11 enq(1,0x2,2)
12 end(1,0x11)
13 deq(2,0x2)
14 write(2,0x14)
15 deq(1,0x3)
16 enq(1,0x4,2)
17 pause(2,0x2,0x100)
18 deq(2,0x4)
19 read(2,0x14)
20 enq(2,0x1,1)
21 reset(2,0x100)
22 end(2,0x4)
23 resume(2,0x2,0x100)
24 end(2,0x2)
25 pause(1,0x3,0x200)
26 deq(1,0x5)
27 write(1,0xa)
28 end(1,0x5)
29 deq(1,0x1)
30 read(1,0xa)
31 reset(1,0x200)
32 end(1,0x1)
33 resume(1,0x3,0x200)
34 free(1,0xa,30)
35 end(1,0x3)
Finished parsing the file
No of ops: 35
No of blocks: 10
No of tasks: 6
No of atomic tasks: 4
No of nesting loops: 2
No of threads: 2
No of alloc ops: 1
No of free ops: 1
No of read ops: 2
No of write ops: 2
No of nodes: 35

Ops: 

Op: 1 - details: threadID 1 taskID  blockID 1 opType threadinit node 1
next-op-in-thread 2 next-op-in-task -1 next-op-in-block 2

Op: 2 - details: threadID 1 taskID  blockID 1 opType fork node 2
next-op-in-thread 3 next-op-in-task -1 next-op-in-block 3

Op: 3 - details: threadID 1 taskID  blockID 1 opType enq node 3
next-op-in-thread 4 next-op-in-task -1 next-op-in-block 4

Op: 4 - details: threadID 1 taskID  blockID 1 opType enterloop node 4
next-op-in-thread 7 next-op-in-task -1 next-op-in-block -1

Op: 5 - details: threadID 2 taskID  blockID 2 opType threadinit node 5
next-op-in-thread 6 next-op-in-task -1 next-op-in-block 6

Op: 6 - details: threadID 2 taskID  blockID 2 opType enterloop node 6
next-op-in-thread 13 next-op-in-task -1 next-op-in-block -1

Op: 7 - details: threadID 1 taskID 0x11 blockID 3 opType deq node 7
next-op-in-thread 8 next-op-in-task 8 next-op-in-block 8

Op: 8 - details: threadID 1 taskID 0x11 blockID 3 opType alloc node 8
next-op-in-thread 9 next-op-in-task 9 next-op-in-block 9

Op: 9 - details: threadID 1 taskID 0x11 blockID 3 opType enq node 9
next-op-in-thread 10 next-op-in-task 10 next-op-in-block 10

Op: 10 - details: threadID 1 taskID 0x11 blockID 3 opType enq node 10
next-op-in-thread 11 next-op-in-task 11 next-op-in-block 11

Op: 11 - details: threadID 1 taskID 0x11 blockID 3 opType enq node 11
next-op-in-thread 12 next-op-in-task 12 next-op-in-block 12

Op: 12 - details: threadID 1 taskID 0x11 blockID 3 opType end node 12
next-op-in-thread 15 next-op-in-task -1 next-op-in-block -1

Op: 13 - details: threadID 2 taskID 0x2 blockID 4 opType deq node 13
next-op-in-thread 14 next-op-in-task 14 next-op-in-block 14

Op: 14 - details: threadID 2 taskID 0x2 blockID 4 opType write node 14
next-op-in-thread 17 next-op-in-task 17 next-op-in-block 17

Op: 15 - details: threadID 1 taskID 0x3 blockID 5 opType deq node 15
next-op-in-thread 16 next-op-in-task 16 next-op-in-block 16

Op: 16 - details: threadID 1 taskID 0x3 blockID 5 opType enq node 16
next-op-in-thread 25 next-op-in-task 25 next-op-in-block 25

Op: 17 - details: threadID 2 taskID 0x2 blockID 4 opType pause node 17
next-op-in-thread 18 next-op-in-task 23 next-op-in-block -1

Op: 18 - details: threadID 2 taskID 0x4 blockID 6 opType deq node 18
next-op-in-thread 19 next-op-in-task 19 next-op-in-block 19

Op: 19 - details: threadID 2 taskID 0x4 blockID 6 opType read node 19
next-op-in-thread 20 next-op-in-task 20 next-op-in-block 20

Op: 20 - details: threadID 2 taskID 0x4 blockID 6 opType enq node 20
next-op-in-thread 21 next-op-in-task 21 next-op-in-block 21

Op: 21 - details: threadID 2 taskID 0x4 blockID 6 opType reset node 21
next-op-in-thread 22 next-op-in-task 22 next-op-in-block 22

Op: 22 - details: threadID 2 taskID 0x4 blockID 6 opType end node 22
next-op-in-thread 23 next-op-in-task -1 next-op-in-block -1

Op: 23 - details: threadID 2 taskID 0x2 blockID 7 opType resume node 23
next-op-in-thread 24 next-op-in-task 24 next-op-in-block 24

Op: 24 - details: threadID 2 taskID 0x2 blockID 7 opType end node 24
next-op-in-thread -1 next-op-in-task -1 next-op-in-block -1

Op: 25 - details: threadID 1 taskID 0x3 blockID 5 opType pause node 25
next-op-in-thread 26 next-op-in-task 33 next-op-in-block -1

Op: 26 - details: threadID 1 taskID 0x5 blockID 8 opType deq node 26
next-op-in-thread 27 next-op-in-task 27 next-op-in-block 27

Op: 27 - details: threadID 1 taskID 0x5 blockID 8 opType write node 27
next-op-in-thread 28 next-op-in-task 28 next-op-in-block 28

Op: 28 - details: threadID 1 taskID 0x5 blockID 8 opType end node 28
next-op-in-thread 29 next-op-in-task -1 next-op-in-block -1

Op: 29 - details: threadID 1 taskID 0x1 blockID 9 opType deq node 29
next-op-in-thread 30 next-op-in-task 30 next-op-in-block 30

Op: 30 - details: threadID 1 taskID 0x1 blockID 9 opType read node 30
next-op-in-thread 31 next-op-in-task 31 next-op-in-block 31

Op: 31 - details: threadID 1 taskID 0x1 blockID 9 opType reset node 31
next-op-in-thread 32 next-op-in-task 32 next-op-in-block 32

Op: 32 - details: threadID 1 taskID 0x1 blockID 9 opType end node 32
next-op-in-thread 33 next-op-in-task -1 next-op-in-block -1

Op: 33 - details: threadID 1 taskID 0x3 blockID 10 opType resume node 33
next-op-in-thread 34 next-op-in-task 34 next-op-in-block 34

Op: 34 - details: threadID 1 taskID 0x3 blockID 10 opType free node 34
next-op-in-thread 35 next-op-in-task 35 next-op-in-block 35

Op: 35 - details: threadID 1 taskID 0x3 blockID 10 opType end node 35
next-op-in-thread -1 next-op-in-task -1 next-op-in-block -1

Tasks:
Task ID: 0x1 - details: first-pause -1 last-resume -1 deq 29 end 32 enq 20 parent task 0x3 atomic true first-block 9 last-block 9
PauseResumeResetSequence: 
Task ID: 0x11 - details: first-pause -1 last-resume -1 deq 7 end 12 enq 3 parent task  atomic true first-block 3 last-block 3
PauseResumeResetSequence: 
Task ID: 0x2 - details: first-pause 17 last-resume 23 deq 13 end 24 enq 11 parent task  atomic false first-block 4 last-block 7
PauseResumeResetSequence: (Pause: 17 Resume: 23 Reset: 21)

Task ID: 0x3 - details: first-pause 25 last-resume 33 deq 15 end 35 enq 9 parent task  atomic false first-block 5 last-block 10
PauseResumeResetSequence: (Pause: 25 Resume: 33 Reset: 31)

Task ID: 0x4 - details: first-pause -1 last-resume -1 deq 18 end 22 enq 16 parent task 0x2 atomic true first-block 6 last-block 6
PauseResumeResetSequence: 
Task ID: 0x5 - details: first-pause -1 last-resume -1 deq 26 end 28 enq 10 parent task 0x3 atomic true first-block 8 last-block 8
PauseResumeResetSequence: 

Threads:
Thread ID: 1 - details: first-op 1 threadinit 1 threadexit -1 enterloop 1 exitloop -1 first-block 1 last-block 10 fork -1 join -1
Thread ID: 2 - details: first-op 5 threadinit 5 threadexit -1 enterloop 2 exitloop -1 first-block 2 last-block 7 fork 2 join -1

Blocks:
Block ID: 1 - details: ThreadID 1 Task ID  First-op 1 Last-op 4 next-block-in-task -1 next-block-in-thread 3 prev-block-in-thread -1
Enqs: 3 
Block ID: 2 - details: ThreadID 2 Task ID  First-op 5 Last-op 6 next-block-in-task -1 next-block-in-thread 4 prev-block-in-thread -1
Enqs: 
Block ID: 3 - details: ThreadID 1 Task ID 0x11 First-op 7 Last-op 12 next-block-in-task -1 next-block-in-thread 5 prev-block-in-thread 1
Enqs: 9 10 11 
Block ID: 4 - details: ThreadID 2 Task ID 0x2 First-op 13 Last-op 17 next-block-in-task 7 next-block-in-thread 6 prev-block-in-thread 2
Enqs: 
Block ID: 5 - details: ThreadID 1 Task ID 0x3 First-op 15 Last-op 25 next-block-in-task 10 next-block-in-thread 8 prev-block-in-thread 3
Enqs: 16 
Block ID: 6 - details: ThreadID 2 Task ID 0x4 First-op 18 Last-op 22 next-block-in-task -1 next-block-in-thread 7 prev-block-in-thread 4
Enqs: 20 
Block ID: 7 - details: ThreadID 2 Task ID 0x2 First-op 23 Last-op 24 next-block-in-task -1 next-block-in-thread -1 prev-block-in-thread 6
Enqs: 
Block ID: 8 - details: ThreadID 1 Task ID 0x5 First-op 26 Last-op 28 next-block-in-task -1 next-block-in-thread 9 prev-block-in-thread 5
Enqs: 
Block ID: 9 - details: ThreadID 1 Task ID 0x1 First-op 29 Last-op 32 next-block-in-task -1 next-block-in-thread 10 prev-block-in-thread 8
Enqs: 
Block ID: 10 - details: ThreadID 1 Task ID 0x3 First-op 33 Last-op 35 next-block-in-task -1 next-block-in-thread -1 prev-block-in-thread 9
Enqs: 

Nesting Loops:
Shared variable: 0x100 - details: Pause-Resume-Reset: Pause: 17 Resume: 23 Reset: 21

Shared variable: 0x200 - details: Pause-Resume-Reset: Pause: 25 Resume: 33 Reset: 31


Pause/Reset/Resume Ops:
Op: 17 shared variable: 0x100
Op: 21 shared variable: 0x100
Op: 23 shared variable: 0x100
Op: 25 shared variable: 0x200
Op: 31 shared variable: 0x200
Op: 33 shared variable: 0x200

Set - enq
Op: 3 - details: Task enqueued 0x11 to target thread 1
Op: 9 - details: Task enqueued 0x3 to target thread 1
Op: 10 - details: Task enqueued 0x5 to target thread 1
Op: 11 - details: Task enqueued 0x2 to target thread 2
Op: 16 - details: Task enqueued 0x4 to target thread 2
Op: 20 - details: Task enqueued 0x1 to target thread 1

Set - alloc
Op: 8 - details :starting address: 0xa range: 30

Set - free
Op: 34 - details :starting address: 0xa range: 30

Set - read
Op: 19 - details :starting address: 0x14 range: -1
Op: 30 - details :starting address: 0xa range: -1

Set - write
Op: 14 - details :starting address: 0x14 range: -1
Op: 27 - details :starting address: 0xa range: -1

Map - alloc
Op: 8
read ops: 19 30 
write ops: 14 27 
free ops: 34 

Map - free
Op: 34
alloc op: 8
read ops: 19 30 
write ops: 14 27 

Map - nodes
Node: 1
1 
Node: 2
2 
Node: 3
3 
Node: 4
4 
Node: 5
5 
Node: 6
6 
Node: 7
7 
Node: 8
8 
Node: 9
9 
Node: 10
10 
Node: 11
11 
Node: 12
12 
Node: 13
13 
Node: 14
14 
Node: 15
15 
Node: 16
16 
Node: 17
17 
Node: 18
18 
Node: 19
19 
Node: 20
20 
Node: 21
21 
Node: 22
22 
Node: 23
23 
Node: 24
24 
Node: 25
25 
Node: 26
26 
Node: 27
27 
Node: 28
28 
Node: 29
29 
Node: 30
30 
Node: 31
31 
Node: 32
32 
Node: 33
33 
Node: 34
34 
Node: 35
35 
map size: 35
DEBUG: Cannot find fork op of thread 1
DEBUG: Skipping FORK-edge for thread 1
DEBUG: Cannot find threadexit op of thread 1
DEBUG: Skipping JOIN-edge for thread 1
LOOP-PO edge (4, 7) -- #op-edges 1 -- #block-edges 1
LOOP-PO edge (4, 15) -- #op-edges 2 -- #block-edges 2
LOOP-PO edge (4, 26) -- #op-edges 3 -- #block-edges 3
LOOP-PO edge (4, 29) -- #op-edges 4 -- #block-edges 4
LOOP-PO edge (4, 33) -- #op-edges 5 -- #block-edges 5
DEBUG: Cannot find exitloop block of thread 1
DEBUG: Skipping LOOP-PO edges for this thread
FORK edge (2, 5) -- #op-edges 6 -- #block-edges 6
DEBUG: Cannot find threadexit op of thread 2
DEBUG: Skipping JOIN-edge for thread 2
LOOP-PO edge (6, 13) -- #op-edges 7 -- #block-edges 7
LOOP-PO edge (6, 18) -- #op-edges 8 -- #block-edges 8
LOOP-PO edge (6, 23) -- #op-edges 9 -- #block-edges 9
DEBUG: Cannot find exitloop block of thread 2
DEBUG: Skipping LOOP-PO edges for this thread
ENQUEUE-ST/MT edge (20, 29) -- #op-edges 10 -- #block-edges 10
DEBUG: Edge (3, 7) already implied in the graph
ENQUEUE-ST/MT edge (11, 13) -- #op-edges 11 -- #block-edges 11
TASK-PO edge (17, 23) -- #op-edges 12 -- #block-edges 12
ENQUEUE-ST/MT edge (9, 15) -- #op-edges 13 -- #block-edges 13
TASK-PO edge (25, 33) -- #op-edges 14 -- #block-edges 14
ENQUEUE-ST/MT edge (16, 18) -- #op-edges 15 -- #block-edges 15
ENQUEUE-ST/MT edge (10, 26) -- #op-edges 16 -- #block-edges 16
PAUSE-ST edge (17, 18) -- #op-edges 17 -- #block-edges 17
RESUME-ST edge (22, 23) -- #op-edges 18 -- #block-edges 18
PAUSE-ST edge (25, 29) -- #op-edges 19 -- #block-edges 19
RESUME-ST edge (32, 33) -- #op-edges 20 -- #block-edges 20

Block Edges:
1: 1 2 3 5 8 9 10 
2: 2 4 6 7 
3: 3 4 5 8 
4: 4 6 7 
5: 5 6 9 10 
6: 6 7 9 
7: 7 
8: 8 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 
3: 
4: 7 15 26 29 33 
5: 
6: 13 18 23 
7: 
8: 
9: 15 
10: 26 
11: 13 
12: 
13: 
14: 
15: 
16: 18 
17: 18 23 
18: 
19: 
20: 29 
21: 
22: 23 
23: 
24: 
25: 29 33 
26: 
27: 
28: 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding Fifo-Atomic/No-Pre edges
FIFO-ATOMIC edge (12, 15) -- #op-edges 21 -- #block-edges 20
FIFO-ATOMIC edge (12, 26) -- #op-edges 22 -- #block-edges 20
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Task 0x2 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task
DEBUG: Task 0x3 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task

Block Edges:
1: 1 2 3 5 8 9 10 
2: 2 4 6 7 
3: 3 4 5 8 
4: 4 6 7 
5: 5 6 9 10 
6: 6 7 9 
7: 7 
8: 8 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 
3: 
4: 7 15 26 29 33 
5: 
6: 13 18 23 
7: 
8: 
9: 15 
10: 26 
11: 13 
12: 15 26 
13: 
14: 
15: 
16: 18 
17: 18 23 
18: 
19: 
20: 29 
21: 
22: 23 
23: 
24: 
25: 29 33 
26: 
27: 
28: 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding Fifo-Nested-1/2/GEN or EnqResetST-1 edges
DEBUG: Edge (17, 18) already implied in the graph
FIFO-NESTED-1 edge (25, 26) -- #op-edges 23 -- #block-edges 21

Block Edges:
1: 1 2 3 5 8 9 10 
2: 2 4 6 7 
3: 3 4 5 8 
4: 4 6 7 
5: 5 6 8 9 10 
6: 6 7 9 
7: 7 
8: 8 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 
3: 
4: 7 15 26 29 33 
5: 
6: 13 18 23 
7: 
8: 
9: 15 
10: 26 
11: 13 
12: 15 26 
13: 
14: 
15: 
16: 18 
17: 18 23 
18: 
19: 
20: 29 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding EnqReset-ST-2/3 edges
Adding Trans-ST/MT edges
DEBUG: TRANS-edge: blockI: 1 blockK: 1
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 2 blockJ: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 4 to any ops in block 2
DEBUG: Did not find any edge from op 3 to any ops in block 2
TRANS-ST/MT Edge (2, 13) -- #opEdges 24 -- #blockEdges 22
DEBUG: Did not find any edge from op 1 to any ops in block 2
DEBUG: Did not find any edge from op 4 to any ops in block 2
DEBUG: Did not find any edge from op 3 to any ops in block 2
TRANS-ST/MT Edge (2, 18) -- #opEdges 25 -- #blockEdges 23
DEBUG: Did not find any edge from op 1 to any ops in block 2
DEBUG: Did not find any edge from op 4 to any ops in block 2
DEBUG: Did not find any edge from op 3 to any ops in block 2
TRANS-ST/MT Edge (2, 23) -- #opEdges 26 -- #blockEdges 24
DEBUG: Did not find any edge from op 1 to any ops in block 2
DEBUG: TRANS-edge: blockI: 1 blockK: 3 blockJ: 3
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (4, 13) -- #opEdges 27 -- #blockEdges 24
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 5 (node 15)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: blockI: 1 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (4, 18) -- #opEdges 28 -- #blockEdges 24
TRANS-ST/MT Edge (4, 23) -- #opEdges 29 -- #blockEdges 24
DEBUG: TRANS-edge: blockI: 1 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: blockI: 2 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
TRANS-ST/MT Edge (6, 29) -- #opEdges 30 -- #blockEdges 25
DEBUG: TRANS-edge: blockI: 2 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (6, 33) -- #opEdges 31 -- #blockEdges 26
DEBUG: TRANS-edge: blockI: 2 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 3
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 12 to any ops in block 4
TRANS-ST/MT Edge (11, 18) -- #opEdges 32 -- #blockEdges 27
DEBUG: Did not find any edge from op 10 to any ops in block 4
DEBUG: Did not find any edge from op 9 to any ops in block 4
DEBUG: Did not find any edge from op 8 to any ops in block 4
DEBUG: Did not find any edge from op 7 to any ops in block 4
DEBUG: Did not find any edge from op 12 to any ops in block 4
TRANS-ST/MT Edge (11, 23) -- #opEdges 33 -- #blockEdges 28
DEBUG: Did not find any edge from op 10 to any ops in block 4
DEBUG: Did not find any edge from op 9 to any ops in block 4
DEBUG: Did not find any edge from op 8 to any ops in block 4
DEBUG: Did not find any edge from op 7 to any ops in block 4
DEBUG: TRANS-edge: blockI: 3 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (12, 18) -- #opEdges 34 -- #blockEdges 28
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 8 (node 26)
TRANS-ST/MT Edge (12, 29) -- #opEdges 35 -- #blockEdges 29
TRANS-ST/MT Edge (12, 33) -- #opEdges 36 -- #blockEdges 30
DEBUG: TRANS-edge: blockI: 3 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (12, 23) -- #opEdges 37 -- #blockEdges 30
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 3 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 7 (node 23)
TRANS-ST/MT Edge (17, 29) -- #opEdges 38 -- #blockEdges 31
DEBUG: TRANS-edge: blockI: 4 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
TRANS-ST/MT Edge (17, 33) -- #opEdges 39 -- #blockEdges 32
DEBUG: TRANS-edge: blockI: 4 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 25 to any ops in block 6
TRANS-ST/MT Edge (16, 23) -- #opEdges 40 -- #blockEdges 33
DEBUG: Did not find any edge from op 15 to any ops in block 6
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 5 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 5 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 22 to any ops in block 9
DEBUG: Did not find any edge from op 21 to any ops in block 9
TRANS-ST/MT Edge (20, 33) -- #opEdges 41 -- #blockEdges 34
DEBUG: Did not find any edge from op 19 to any ops in block 9
DEBUG: Did not find any edge from op 18 to any ops in block 9
DEBUG: TRANS-edge: blockI: 6 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 7 blockK: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 8 blockK: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 10 blockK: 10
DEBUG: TRANS-edge: Inferring edge to same block

Block Edges:
1: 1 2 3 4 5 6 7 8 9 10 
2: 2 4 6 7 9 10 
3: 3 4 5 6 7 8 9 10 
4: 4 6 7 9 10 
5: 5 6 7 8 9 10 
6: 6 7 9 10 
7: 7 
8: 8 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 13 18 23 
3: 
4: 7 13 15 18 23 26 29 33 
5: 
6: 13 18 23 29 33 
7: 
8: 
9: 15 
10: 26 
11: 13 18 23 
12: 15 18 23 26 29 33 
13: 
14: 
15: 
16: 18 23 
17: 18 23 29 33 
18: 
19: 
20: 29 33 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding Fifo-Atomic/No-Pre edges
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Task 0x2 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task
DEBUG: Task 0x3 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task
FIFO-ATOMIC edge (28, 29) -- #op-edges 42 -- #block-edges 35

Block Edges:
1: 1 2 3 4 5 6 7 8 9 10 
2: 2 4 6 7 9 10 
3: 3 4 5 6 7 8 9 10 
4: 4 6 7 9 10 
5: 5 6 7 8 9 10 
6: 6 7 9 10 
7: 7 
8: 8 9 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 13 18 23 
3: 
4: 7 13 15 18 23 26 29 33 
5: 
6: 13 18 23 29 33 
7: 
8: 
9: 15 
10: 26 
11: 13 18 23 
12: 15 18 23 26 29 33 
13: 
14: 
15: 
16: 18 23 
17: 18 23 29 33 
18: 
19: 
20: 29 33 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 29 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding Fifo-Nested-1/2/GEN or EnqResetST-1 edges
DEBUG: Edge (17, 18) already implied in the graph
DEBUG: Edge (25, 26) already implied in the graph
DEBUG: Edge (25, 29) already implied in the graph
ENQRESET-ST-1 edge (28, 33) -- #op-edges 43 -- #block-edges 36

Block Edges:
1: 1 2 3 4 5 6 7 8 9 10 
2: 2 4 6 7 9 10 
3: 3 4 5 6 7 8 9 10 
4: 4 6 7 9 10 
5: 5 6 7 8 9 10 
6: 6 7 9 10 
7: 7 
8: 8 9 10 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 13 18 23 
3: 
4: 7 13 15 18 23 26 29 33 
5: 
6: 13 18 23 29 33 
7: 
8: 
9: 15 
10: 26 
11: 13 18 23 
12: 15 18 23 26 29 33 
13: 
14: 
15: 
16: 18 23 
17: 18 23 29 33 
18: 
19: 
20: 29 33 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 29 33 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding EnqReset-ST-2/3 edges
Adding Trans-ST/MT edges
DEBUG: TRANS-edge: blockI: 1 blockK: 1
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 2 blockJ: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 4 (node 13)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 3 blockJ: 3
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 4 (node 13)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 5 (node 15)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 3
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 3 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 3 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 4 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 4 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 25 to any ops in block 6
DEBUG: Edge (16, 23) already implied in the graph
DEBUG: Did not find any edge from op 15 to any ops in block 6
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 5 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 5 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 5 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 22 to any ops in block 9
DEBUG: Did not find any edge from op 21 to any ops in block 9
DEBUG: Edge (20, 33) already implied in the graph
DEBUG: Did not find any edge from op 19 to any ops in block 9
DEBUG: Did not find any edge from op 18 to any ops in block 9
DEBUG: TRANS-edge: blockI: 6 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 7 blockK: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 8 blockK: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 8 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 8 (node 28) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 8 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 10 blockK: 10
DEBUG: TRANS-edge: Inferring edge to same block

Block Edges:
1: 1 2 3 4 5 6 7 8 9 10 
2: 2 4 6 7 9 10 
3: 3 4 5 6 7 8 9 10 
4: 4 6 7 9 10 
5: 5 6 7 8 9 10 
6: 6 7 9 10 
7: 7 
8: 8 9 10 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 13 18 23 
3: 
4: 7 13 15 18 23 26 29 33 
5: 
6: 13 18 23 29 33 
7: 
8: 
9: 15 
10: 26 
11: 13 18 23 
12: 15 18 23 26 29 33 
13: 
14: 
15: 
16: 18 23 
17: 18 23 29 33 
18: 
19: 
20: 29 33 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 29 33 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Adding Fifo-Atomic/No-Pre edges
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 15) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 26) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Edge (12, 29) already implied in the graph
DEBUG: Task 0x2 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task
DEBUG: Task 0x3 is not atomic
DEBUG: Skipping FIFO-ATOMIC/NO-PRE edges for this task
DEBUG: Edge (28, 29) already implied in the graph
Adding Fifo-Nested-1/2/GEN or EnqResetST-1 edges
DEBUG: Edge (17, 18) already implied in the graph
DEBUG: Edge (25, 26) already implied in the graph
DEBUG: Edge (25, 29) already implied in the graph
DEBUG: Edge (28, 33) already implied in the graph
Adding EnqReset-ST-2/3 edges
Adding Trans-ST/MT edges
DEBUG: TRANS-edge: blockI: 1 blockK: 1
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 2 blockJ: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 4 (node 13)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 3 blockJ: 3
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 4 (node 13)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 5 (node 15)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 1 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 1 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 1 (node 4) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 1 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 2
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 2 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 2 (node 6) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 2 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 3
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 4 blockJ: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 3 blockK: 5 blockJ: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 6 (node 18)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 8 (node 26)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 3 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 3 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 3 (node 12) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 3 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 4
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 7 (node 23)
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 4 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 4 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 4 (node 17) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 4 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 5
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 6 blockJ: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 25 to any ops in block 6
DEBUG: Edge (16, 23) already implied in the graph
DEBUG: Did not find any edge from op 15 to any ops in block 6
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: threadI: 1 threadK: 2 threadJ: 1
DEBUG: TRANS-edge: Violates thread criterion
DEBUG: TRANS-edge: blockI: 5 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 5 blockK: 8 blockJ: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 9 (node 29)
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 5 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 5 (node 25) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 5 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 6
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 7 blockJ: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 6 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: Did not find any edge from op 22 to any ops in block 9
DEBUG: Did not find any edge from op 21 to any ops in block 9
DEBUG: Edge (20, 33) already implied in the graph
DEBUG: Did not find any edge from op 19 to any ops in block 9
DEBUG: Did not find any edge from op 18 to any ops in block 9
DEBUG: TRANS-edge: blockI: 6 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 7 blockK: 7
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 8 blockK: 8
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 8 blockK: 9 blockJ: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: Edge already exists from blockI: 8 (node 28) to blockJ: 10 (node 33)
DEBUG: TRANS-edge: blockI: 8 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 9
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 9 blockK: 10 blockJ: 10
DEBUG: TRANS-edge: Inferring edge to same block
DEBUG: TRANS-edge: blockI: 10 blockK: 10
DEBUG: TRANS-edge: Inferring edge to same block

Block Edges:
1: 1 2 3 4 5 6 7 8 9 10 
2: 2 4 6 7 9 10 
3: 3 4 5 6 7 8 9 10 
4: 4 6 7 9 10 
5: 5 6 7 8 9 10 
6: 6 7 9 10 
7: 7 
8: 8 9 10 
9: 9 10 
10: 10 

Op Edges:
1: 
2: 5 13 18 23 
3: 
4: 7 13 15 18 23 26 29 33 
5: 
6: 13 18 23 29 33 
7: 
8: 
9: 15 
10: 26 
11: 13 18 23 
12: 15 18 23 26 29 33 
13: 
14: 
15: 
16: 18 23 
17: 18 23 29 33 
18: 
19: 
20: 29 33 
21: 
22: 23 
23: 
24: 
25: 26 29 33 
26: 
27: 
28: 29 33 
29: 
30: 
31: 
32: 33 
33: 
34: 
35: 
Total op edges = 43
Total block edges = 36

Finding UAF
No UAF in the trace

Finding data races
No data races in the trace
